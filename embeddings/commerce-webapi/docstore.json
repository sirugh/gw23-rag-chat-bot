[
  [
    [
      "abc997f4-2f2a-4e5e-b38b-f9daf3deb544",
      {
        "pageContent": "# Adobe Commerce Developer Documentation\n\nWelcome! This site contains the latest Adobe Commerce and Magento Open Source developer documentation for ongoing releases of both products. For additional information, see our [Contribution Guide](https://developer.adobe.com/commerce/contributor/).\n\n## Contributors\n\nOur goal is to provide the Adobe Commerce and Magento Open Source communities with comprehensive and quality technical documentation. We believe that to accomplish that goal we need experts from the community to share their knowledge with us and each other. We are thankful to all of our contributors for improving the documentation.\n\n![Commerce contributors](https://raw.githubusercontent.com/wiki/magento/magento2/images/dev_docs_contributors.png)",
        "metadata": {
          "source": "commerce-webapi/README.md",
          "loc": { "lines": { "from": 1, "to": 9 } }
        }
      }
    ],
    [
      "1223ff4d-90e1-4202-bcc6-9ed97a452fd2",
      {
        "pageContent": "## Local development\n\nThis is a [Gatsby](https://www.gatsbyjs.com/) project that uses the [Adobe I/O Theme](https://github.com/adobe/aio-theme).\nEnsure that your local environment matches the prerequisites described in the Adobe I/O Theme README.\n\nTo build the site locally:\n\n1. Clone this repo.\n1. Install project dependencies.\n\n   ```bash\n   yarn install\n   ```\n\n1. Launch the project in development mode.\n\n   ```bash\n   yarn dev\n   ```",
        "metadata": {
          "source": "commerce-webapi/README.md",
          "loc": { "lines": { "from": 11, "to": 29 } }
        }
      }
    ],
    [
      "5d0d990d-ccb7-47fb-9d37-6639f7ee2b77",
      {
        "pageContent": "## Resources\n\nSee the following resources to learn more about using the theme:\n\n- [Arranging content structure](https://github.com/adobe/aio-theme#content-structure)\n- [Linking to pages](https://github.com/adobe/aio-theme#links)\n- [Using assets](https://github.com/adobe/aio-theme#assets)\n- [Configuring global navigation](https://github.com/adobe/aio-theme#global-navigation)\n- [Configuring side navigation](https://github.com/adobe/aio-theme#side-navigation)\n- [Using content blocks](https://github.com/adobe/aio-theme#jsx-blocks)\n- [Writing enhanced Markdown](https://github.com/adobe/aio-theme#writing-enhanced-markdown)\n- [Deploying the site](https://github.com/adobe/aio-theme#deploy-to-azure-storage-static-websites) _(Adobe employees only)_\n\nIf you have questions, open an issue and ask us. We look forward to hearing from you!",
        "metadata": {
          "source": "commerce-webapi/README.md",
          "loc": { "lines": { "from": 31, "to": 44 } }
        }
      }
    ],
    [
      "574625d5-adb7-4743-a552-3c0164fc2b67",
      {
        "pageContent": "## GraphQL API reference generator\n\nThe GraphQL API reference is generated using an open-source tool [SpectaQL](https://github.com/anvilco/spectaql). The data required for the generator is located at the `spectaql` directory:\n\n- `adobe-theme`: [custom theme](https://github.com/anvilco/spectaql/blob/main/examples/themes/README.md).\n- `config.yml`: [configuration file](https://github.com/anvilco/spectaql#yaml-options).\n- `schema.json`: the GraphQL schema extracted from the Adobe Commerce (B2B) instance.\n\nThe resulted GraphQL API reference lives in the `static/graphql-api/` directory.\nIt is embedded into the `/graphql/reference` page using the `frameSrc` feature on the DevSite.\n\nTo rebuild the GraphQL API reference after any updates, run:\n\n```shell\nyarn build:spectaql\n```\n\nTo run SpectaQL in the development mode:\n\n```shell\nyarn dev:spectaql\n```",
        "metadata": {
          "source": "commerce-webapi/README.md",
          "loc": { "lines": { "from": 46, "to": 67 } }
        }
      }
    ],
    [
      "c79e5d0f-451e-4c7d-bdcc-363a9f30d372",
      {
        "pageContent": "### How to get the schema\n\nThe website in the public directory was generated for the Adobe Commerce with B2B instance from GraphQL Schema 'schema.json'. The schema was retrieved using the apollo-cli tool:\n\n```shell\nnpx apollo-cli download-schema $ENDPOINT_URL --output schema.json\n```\n\nwhere `$ENDPOINT_URL` is a placeholder for a URL's endpoint.\n\nFor more information about SpectaQL, refer to <https://github.com/anvilco/spectaql>.",
        "metadata": {
          "source": "commerce-webapi/README.md",
          "loc": { "lines": { "from": 69, "to": 79 } }
        }
      }
    ],
    [
      "b07077be-3e03-4760-9d12-f81a2718d284",
      {
        "pageContent": "The `AttributeMetadataInterface` object contains the following attributes:\n\nAttribute | Type | Description\n--- | --- | ---\n`attribute_labels` | [`StoreLabels`] | An array of attribute labels defined for the current store\n`code` | String | The unique identifier for an attribute code. This value should be lowercase, without spaces\n`data_type` | ObjectDataTypeEnum | The data type of the attribute\n`entity_type` | AttributeEntityTypeEnum | The type of entity that defines the attribute\n`is_system` | Boolean | Indicates whether the attribute is a system attribute\n`label` | String | The label assigned to the attribute\n`sort_order` | Int | The relative position of the attribute\n`uid` | ID | The unique ID of an attribute\n`ui_input` | UiInputTypeInterface | Frontend UI properties of the attribute",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/attribute-metadata.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "f84133be-445b-4447-bef3-4f344208bd1e",
      {
        "pageContent": "### AttributeValueInterface attributes\n\nimport BetaNote from '/src/pages/_includes/graphql/notes/beta.md'\n\n<BetaNote />\n\nThe `AttributeValueInterface` contains the following attributes:",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/attribute-value-interface.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "72a41c30-413f-46d4-a3e9-17953f4389dd",
      {
        "pageContent": "Attribute |  Data Type | Description\n--- | --- | ---\n`code` | ID! | The attribute code\n`is_comparable` | Boolean | Whether a product or category attribute can be compared against another or not\n`is_filterable` | Boolean | Whether a product or category attribute can be filtered or not\n`is_filterable_in_search` | Boolean | Whether a product or category attribute can be filtered in search or not\n`is_html_allowed_on_front` | Boolean | Whether a product or category attribute can use HTML on front or not\n`is_searchable` | Boolean | Whether a product or category attribute can be searched or not\n`is_used_for_price_rules` | Boolean | Whether a product or category attribute can be used for price rules or not\n`is_used_for_promo_rules` | Boolean | Whether a product or category attribute is used for promo rules or not\n`is_visible_in_advanced_search` | Boolean | Whether a product or category attribute is visible in advanced search or not",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/attribute-value-interface.md",
          "loc": { "lines": { "from": 9, "to": 19 } }
        }
      }
    ],
    [
      "9076bde4-ab3b-4198-8ca8-bfa2f407fe10",
      {
        "pageContent": "`is_visible_on_front` | Boolean | Whether a product or category attribute is visible on front or not\n`is_wysiwyg_enabled` | Boolean | Whether a product or category attribute has WYSIWYG enabled or not\n`used_in_product_listing` | Boolean | Whether a product or category attribute is used in product listing or not",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/attribute-value-interface.md",
          "loc": { "lines": { "from": 20, "to": 22 } }
        }
      }
    ],
    [
      "497704f9-b3f1-4314-9949-52949ab3fec3",
      {
        "pageContent": "Currently, `AttributeValueInterface` has two different implementations: `AttributeValue` and `AttributeSelectedOptions`.\n\nIn addition to the attributes described for `AttributeValueInterface`, the `AttributeValue` contains the following:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`value` | String! | The attribute value\n\nThe `AttributeSelectedOptions` object contains the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`selected_options` | [AttributeSelectedOptionInterface!]! | An array containing selected options for a select or multiselect attribute\n\nThe `AttributeSelectedOptionInterface` contains the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`label` | String! | The attribute selected option label\n`value` | String! | The attribute selected option value",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/attribute-value-interface.md",
          "loc": { "lines": { "from": 24, "to": 43 } }
        }
      }
    ],
    [
      "d249a224-879f-43df-b409-b31a26d52b27",
      {
        "pageContent": "The following table lists all the resources that are available to the customers defined with a company. To visualize the resource hierarchy, log in to a store as the Company Admin and select **Roles and Permissions**, then click the **Edit** action next to the Default User role.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/b2b-roles.md",
          "loc": { "lines": { "from": 1, "to": 1 } }
        }
      }
    ],
    [
      "e3d5cc9b-8fd7-4e4e-a669-91ccf24f3d79",
      {
        "pageContent": "Display name | Resource name\n--- | ---\n&emsp; All | Magento_Company::index\n&emsp; &emsp; Sales | Magento_Sales::all\n&emsp; &emsp; &emsp; Allow Checkout | Magento_Sales::place_order\n&emsp; &emsp; &emsp; &emsp; Use Pay On Account method | Magento_Sales::payment_account\n&emsp; &emsp; &emsp; View orders |  Magento_Sales::view_orders\n&emsp; &emsp; &emsp; View orders of subordinate users |  Magento_Sales::view_orders_sub\n&emsp; &emsp; Quotes | Magento_NegotiableQuote::all\n&emsp; &emsp; &emsp; View | Magento_NegotiableQuote::view_quotes\n&emsp; &emsp; &emsp; &emsp; Request, Edit, Delete | Magento_NegotiableQuote::manage\n&emsp; &emsp; &emsp; &emsp; Checkout with Quote | Magento_NegotiableQuote::checkout\n&emsp; &emsp; &emsp; View quotes of subordinate users | Magento_NegotiableQuote::view_quotes_sub\n&emsp; Order Approvals | Magento_PurchaseOrder::all\n&emsp; &emsp; View My Purchase Orders | Magento_PurchaseOrder::view_purchase_orders",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/b2b-roles.md",
          "loc": { "lines": { "from": 3, "to": 17 } }
        }
      }
    ],
    [
      "16e384ce-a715-4ea2-8560-555c2cd7fbce",
      {
        "pageContent": "&emsp; &emsp; &emsp; View for subordinates | Magento_PurchaseOrder::view_purchase_orders_for_subordinates\n&emsp; &emsp; &emsp; View for all company | Magento_PurchaseOrder::view_purchase_orders_for_company\n&emsp; &emsp; Auto-approve POs created within this role | Magento_PurchaseOrder::autoapprove_purchase_order\n&emsp; &emsp; Approve Purchase Orders without other approvals | Magento_PurchaseOrderRule::super_approve_purchase_order\n&emsp; &emsp; View Approval Rules | Magento_PurchaseOrderRule::view_approval_rules\n&emsp; &emsp; &emsp; Create, Edit and Delete | Magento_PurchaseOrderRule::manage_approval_rules\n&emsp; &emsp; Company Profile | Magento_Company::view\n&emsp; &emsp; &emsp; Account Information (View) | Magento_Company::view_account\n&emsp; &emsp; &emsp; &emsp; Edit | Magento_Company::edit_account\n&emsp; &emsp; &emsp; Legal Address (View) | Magento_Company::view_address\n&emsp; &emsp; &emsp; &emsp; Edit | Magento_Company::edit_address",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/b2b-roles.md",
          "loc": { "lines": { "from": 18, "to": 28 } }
        }
      }
    ],
    [
      "7aaaac1f-4ca0-4c76-9cfb-adf5d1c9fafd",
      {
        "pageContent": "&emsp; &emsp; &emsp; Contacts (View) | Magento_Company::contacts\n&emsp; &emsp; &emsp; Payment Information (View) | Magento_Company::payment_information\n&emsp; &emsp; &emsp; Shipping Information (View) | Magento_Company::shipping_information\n&emsp; &emsp; Company User Management | Magento_Company::user_management\n&emsp; &emsp; &emsp; View roles and permissions | Magento_Company::roles_view\n&emsp; &emsp; &emsp; &emsp; Manage roles and permissions | Magento_Company::roles_edit\n&emsp; &emsp; &emsp; View users and teams | Magento_Company::users_view\n&emsp; &emsp; &emsp; &emsp; Manage users and teams | Magento_Company::users_edit\n&emsp; &emsp; Company credit | Magento_Company::credit\n&emsp; &emsp; &emsp; view | Magento_Company::credit_history",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/b2b-roles.md",
          "loc": { "lines": { "from": 29, "to": 38 } }
        }
      }
    ],
    [
      "a78b89ac-f25b-44e1-bc36-8d0ef1a1a72e",
      {
        "pageContent": "The application caches the following queries:\n\n* `categories`\n* `category` (deprecated)\n* `categoryList`\n* `cmsBlocks`\n* `cmsPage`\n* `products`\n* `route`\n* `urlResolver` (deprecated)\n\nThe application explicitly disallows caching the following queries.\n\n* `cart`\n* `country`\n* `countries`\n* `currency`\n* `customAttributeMetadata`\n* `customer`\n* `customerDownloadableProducts`\n* `customerOrders`\n* `customerPaymentTokens`\n* `storeConfig`\n* `wishlist` (deprecated)",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/cache/queries-246.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "12507b8b-5040-40c0-aca7-9a6f668174be",
      {
        "pageContent": "The application caches the following queries:\n\n* `attributesForm`\n* `attributesList`\n* `availableStores`\n* `categories`\n* `category` (deprecated)\n* `categoryList`\n* `cmsBlocks`\n* `cmsPage`\n* `countries`\n* `country`\n* `currency`\n* `customAttributeMetadata`\n* `customAttributeMetadataV2`\n* `products`\n* `route`\n* `storeConfig`\n* `urlResolver` (deprecated)\n\nThe application explicitly disallows caching the following queries.\n\n* `cart`\n* `customer`\n* `customerDownloadableProducts`\n* `customerOrders`\n* `customerPaymentTokens`\n* `wishlist` (deprecated)",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/cache/queries-247beta.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "ce152405-cb75-4364-a1ac-d242573b9534",
      {
        "pageContent": "The following call returns custom attributes for the logged-in customer. Provide the customer's token in the header section of the query.\n\n**Request:**\n\n```graphql\n{\n  customer {\n    firstname\n    lastname\n    suffix\n    email\n    custom_attributes {\n      code\n      ... on AttributeValue {\n        value\n      }\n      ... on AttributeSelectedOptions {\n        selected_options {\n          label\n          value\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/custom-attribute-customer.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "30658aa7-f1f2-4844-9b48-3da45c35ae92",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customer\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"suffix\": null,\n      \"email\": \"jdoe@example.com\",\n      \"custom_attributes\": [\n        {\n          \"code\": \"reward_update_notification\",\n          \"value\": \"0\"\n        },\n        {\n          \"code\": \"studies\",\n          \"selected_options\": [\n            {\n              \"label\": \"BSc\",\n              \"value\": \"501\"\n            },\n            {\n              \"label\": \"MBA\",\n              \"value\": \"502\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/custom-attribute-customer.md",
          "loc": { "lines": { "from": 26, "to": 60 } }
        }
      }
    ],
    [
      "f3fc1a48-e563-418d-8077-0ef501528791",
      {
        "pageContent": "The following query returns `custom_attributes` of a product that have `is_comparable` enabled.\n\n**Request:**\n\n```graphql\n{\n    products(filter: {sku: {eq: \"24-MB02\"}})\n    {\n        items\n        {\n            sku\n            name\n            custom_attributesV2(filters: {is_comparable: true})\n            {\n                items\n                {\n                    code\n                    ... on AttributeValue {\n                        value\n                    }\n                    ... on AttributeSelectedOptions {\n                        selected_options {\n                            label\n                            value\n                        }\n                    }\n                },\n                errors {\n                    type\n                    message\n                }\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/custom-attribute-filter-product.md",
          "loc": { "lines": { "from": 1, "to": 35 } }
        }
      }
    ],
    [
      "4e9445ef-98c9-4b5b-b72d-b4af908cd27a",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/custom-attribute-filter-product.md",
          "loc": { "lines": { "from": 36, "to": 38 } }
        }
      }
    ],
    [
      "3b4c3704-bc99-46c2-bd08-2e33bc07bcc5",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"sku\": \"24-MB02\",\n          \"name\": \"Fusion Backpack\",\n          \"custom_attributesV2\": {\n            \"items\": [\n              {\n                \"code\": \"description\",\n                \"value\": \"<p>With the Fusion Backpack strapped on, every trek is an adventure - even a bus ride to work. That's partly because two large zippered compartments store everything you need, while a front zippered pocket and side mesh pouches are perfect for stashing those little extras, in case you change your mind and take the day off.</p>\\n<ul>\\n<li>Durable nylon construction.</li>\\n<li>2 main zippered compartments.</li>\\n<li>1 exterior zippered pocket.</li>\\n<li>Mesh side pouches.</li>\\n<li>Padded, adjustable straps.</li>\\n<li>Top carry handle.</li>\\n<li>Dimensions: 18\\\" x 10\\\" x 6\\\".</li>\\n</ul>\"\n              },\n              {\n                \"code\": \"activity\",\n                \"selected_options\": [\n                  {",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/custom-attribute-filter-product.md",
          "loc": { "lines": { "from": 40, "to": 57 } }
        }
      }
    ],
    [
      "ef93989a-0cd3-458e-add1-6e23542ba3fd",
      {
        "pageContent": "{\n                    \"label\": \"Yoga\",\n                    \"value\": \"17\"\n                  },\n                  {\n                    \"label\": \"Hiking\",\n                    \"value\": \"27\"\n                  },\n                  {\n                    \"label\": \"School\",\n                    \"value\": \"29\"\n                  }\n                ]\n              }\n            ],\n            \"errors\": []\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/custom-attribute-filter-product.md",
          "loc": { "lines": { "from": 57, "to": 79 } }
        }
      }
    ],
    [
      "53318c7f-8f5e-4fe1-9fa1-971fddcd5346",
      {
        "pageContent": "```graphql\n{\n  products(filter:\n    {sku: {eq: \"24-WG085_Group\"}}\n  )\n  {\n    items {\n      uid\n      name\n      sku\n      __typename\n      ... on GroupedProduct {\n        items{\n          qty\n          position\n          product{\n            sku\n            name\n            __typename\n            url_key\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/grouped-product-sample-24.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "bbb0d78d-29f4-4f1e-8ffe-657ea49215a7",
      {
        "pageContent": "```",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/grouped-product-sample-24.md",
          "loc": { "lines": { "from": 27, "to": 27 } }
        }
      }
    ],
    [
      "57efb2c9-3b04-41e7-a140-ae64776d1dd2",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"uid\": \"NDU=\",\n          \"name\": \"Set of Sprite Yoga Straps\",\n          \"sku\": \"24-WG085_Group\",\n          \"__typename\": \"GroupedProduct\",\n          \"items\": [\n            {\n              \"qty\": 0,\n              \"position\": 0,\n              \"product\": {\n                \"sku\": \"24-WG085\",\n                \"name\": \"Sprite Yoga Strap 6 foot\",\n                \"__typename\": \"SimpleProduct\",\n                \"url_key\": \"sprite-yoga-strap-6-foot\"\n              }\n            },\n            {\n              \"qty\": 0,\n              \"position\": 1,\n              \"product\": {\n                \"sku\": \"24-WG086\",\n                \"name\": \"Sprite Yoga Strap 8 foot\",\n                \"__typename\": \"SimpleProduct\",\n                \"url_key\": \"sprite-yoga-strap-8-foot\"\n              }\n            },\n            {\n              \"qty\": 0,\n              \"position\": 2,\n              \"product\": {\n                \"sku\": \"24-WG087\",",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/grouped-product-sample-24.md",
          "loc": { "lines": { "from": 29, "to": 64 } }
        }
      }
    ],
    [
      "736bdb5d-bf88-4fe5-ad55-6cb661617f1c",
      {
        "pageContent": "\"name\": \"Sprite Yoga Strap 10 foot\",\n                \"__typename\": \"SimpleProduct\",\n                \"url_key\": \"sprite-yoga-strap-10-foot\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/examples/grouped-product-sample-24.md",
          "loc": { "lines": { "from": 65, "to": 76 } }
        }
      }
    ],
    [
      "72e2fd02-c029-4a0e-9743-d62fb3e50e0d",
      {
        "pageContent": "<InlineAlert variant=\"info\" slots=\"text\" />\n\nAvailable in [2.4.7-beta](https://experienceleague.adobe.com/docs/commerce-operations/release/notes/adobe-commerce/2-4-7.html) and PWA Metapackage for Magento Open Source Extensions only.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/notes/beta-pwa.md",
          "loc": { "lines": { "from": 1, "to": 3 } }
        }
      }
    ],
    [
      "8dc2591d-267d-4a90-abb8-42751bece361",
      {
        "pageContent": "<InlineAlert variant=\"info\" slots=\"text\" />\n\nAvailable in [2.4.7-beta](https://experienceleague.adobe.com/docs/commerce-operations/release/notes/adobe-commerce/2-4-7.html) only.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/notes/beta.md",
          "loc": { "lines": { "from": 1, "to": 3 } }
        }
      }
    ],
    [
      "f49fa38d-3623-4073-b429-550f8a03c9b5",
      {
        "pageContent": "Attribute |  Data Type | Description\n--- | --- | ---\n`cancel_url` | String! | The relative URL of the page that PayPal will redirect to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is `https://www.example.com/paypal/action/cancel.html`, the relative URL is `paypal/action/cancel.html`\n`return_url` | String! | The relative URL of the final confirmation page that PayPal will redirect to upon payment success. If the full URL to this page is `https://www.example.com/paypal/action/return.html`, the relative URL is `paypal/action/return.html`",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/hosted-pro-attributes.md",
          "loc": { "lines": { "from": 1, "to": 4 } }
        }
      }
    ],
    [
      "21ac613a-9cb5-4e1e-aad6-0f16c340abd9",
      {
        "pageContent": "1. The PWA client uses the [`setPaymentMethodOnCart`](/src/pages/graphql/schema/cart/mutations/set-payment-method.md) mutation to set the payment method.\n\n1. The mutation returns a `Cart` object.\n\n1. The client runs the [`placeOrder`](/src/pages/graphql/schema/cart/mutations/place-order.md) mutation, which creates an order and begins the authorization process.\n\n1. The application sends information about the order to PayPal and requests a secure URL that the PWA client will later use to connect to PayPal.\n\n1. PayPal's response includes the secure URL.\n\n1. The `placeOrder` mutation returns an order ID. The order has the status `payment pending`.\n\n1. The client runs the [`getHostedProUrl`](/src/pages/graphql/schema/checkout/queries/get-hosted-pro-url.md) query to retrieve the secure URL.\n\n1. The application returns the secure URL in the `secure_form_url` attribute.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/hosted-pro-workflow.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "4c164c76-ab7e-4be3-bb23-1f9616b202fc",
      {
        "pageContent": "1. The PWA client displays a payment form in an iframe rendered from the secure URL. When the customer completes the form, the client sends the payment information directly to the PayPal gateway, bypassing the application server.\n\n1. After PayPal processes the payment, the gateway runs a silent post request against the application server. As a result, the application sets the order status to processing, and the order is ready to be invoiced.\n\n1. The PayPal gateway returns control of the customer's browser to the client.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/hosted-pro-workflow.md",
          "loc": { "lines": { "from": 17, "to": 21 } }
        }
      }
    ],
    [
      "3714cfb8-0374-4bdc-ab71-9f99ef4ed7bd",
      {
        "pageContent": "Attribute |  Data Type | Description\n--- | --- | ---\n`cancel_url` | String! | The relative URL of the page that PayPal will redirect to when the buyer cancels the transaction in order to choose a different payment method. If the full URL to this page is `https://www.example.com/paypal/action/cancel.html`, the relative URL is `paypal/action/cancel.html`\n`error_url` | String! | The relative URL of the transaction error page that PayPal will redirect to upon payment error. If the full URL to this page is `https://www.example.com/paypal/action/error.html`, the relative URL is `paypal/action/error.html`\n`return_url` | String! | The relative URL of the final confirmation page that PayPal will redirect to upon payment success. If the full URL to this page is `https://www.example.com/paypal/action/return.html`, the relative URL is `paypal/action/return.html`",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/payflow-link-attributes.md",
          "loc": { "lines": { "from": 1, "to": 5 } }
        }
      }
    ],
    [
      "c59dbcd6-63d0-460d-bbb4-bcb8b721106c",
      {
        "pageContent": "1. The PWA client uses the [`setPaymentMethodOnCart`](/src/pages/graphql/schema/cart/mutations/set-payment-method.md) mutation to set the payment method.\n\n1. The mutation returns a `Cart` object.\n\n1. The client runs the [`placeOrder`](/src/pages/graphql/schema/cart/mutations/place-order.md) mutation, which creates an order and begins the authorization process.\n\n1. The application requests a secure token from the Paypal gateway.\n\n1. The gateway response includes a secure token, a secure token ID, and the URL to use for requesting the form in step 9. This token secures the data for a one-time transaction and is valid for 30 minutes.\n\n1. The `placeOrder` mutation returns an order ID. The application does not return secure token information. The order has the status `payment pending`.\n\n1. The client runs the [`getPayflowLinkToken`](/src/pages/graphql/schema/checkout/queries/get-payflow-link-token.md) mutation to retrieve the secure token information.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/payflow-link-workflow.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "51d737a6-0138-432b-9a10-f971da51a3ba",
      {
        "pageContent": "1. The application returns the token information.\n\n1. The client displays a payment form in an iframe rendered from the URL specified by the `paypal_url` from the `getPayflowLinkToken` mutation response. When the customer completes the form, the client sends the payment information directly to the PayPal gateway, bypassing the application server.\n\n1. After PayPal processes the payment, the gateway runs a silent post request against the application server. As a result, the application sets the order status to processing, and the order is ready to be invoiced.\n\n1. The PayPal gateway returns control of the customer's browser to the client.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/payflow-link-workflow.md",
          "loc": { "lines": { "from": 15, "to": 21 } }
        }
      }
    ],
    [
      "3799a6f3-d41d-4305-9a94-1cdfbe085c96",
      {
        "pageContent": "### payflowpro object\n\nThe `payflowpro` object must contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cc_details` | CreditCardDetailsInput! | Required input for credit card related information",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/payflow-pro-attributes.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "4260404b-0466-4abe-89f2-fff8d25b757a",
      {
        "pageContent": "### CreditCardDetailsInput object\n\nAdobe Commerce and Magento Open Source support the following values for the `cc_type` attribute. The merchant's payment processor might support only a subset of these values.\n\n*  `AE` - American Express\n*  `AU` - Aura\n*  `DI` - Discover\n*  `DN` - Diners Club\n*  `ELO` - Elo\n*  `HC` - Hipercard\n*  `JCB` - JCB\n*  `MC` - MasterCard\n*  `MD` - Maestro Domestic\n*  `MI` - Maestro International\n*  `UN` - UnionPay\n*  `VI` - Visa\n\nThe `CreditCardDetailsInput` object must contain all of the attributes listed below.\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cc_exp_month` | Int! | Credit card expiration month\n`cc_exp_year` | Int! | Credit card expiration year\n`cc_last_4` | Int! | Last four digits of the credit card\n`cc_type` | String! | Credit card type",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/payflow-pro-attributes.md",
          "loc": { "lines": { "from": 9, "to": 33 } }
        }
      }
    ],
    [
      "12fa7309-2988-4e46-9e7a-7b426f12e1ef",
      {
        "pageContent": "1. On the checkout page, the customer selects **Credit Card** as the payment method and enters the credit card information as well as the billing and shipping addresses. When the customer clicks **Place Order**, the PWA client uses the [`setPaymentMethodOnCart`](/src/pages/graphql/schema/cart/mutations/set-payment-method.md) mutation to set the payment method to `payflowpro`.\n\n1. The mutation returns a `Cart` object.\n\n1. The client runs the [`createPayflowProToken`](/src/pages/graphql/schema/checkout/mutations/create-payflow-pro-token.md) mutation to initiate a transaction.\n\n1. The application requests a secure token from the PayPal gateway. The request also contains billing and shipping information, which the application extracts from the `Cart` object.\n\n1. The gateway response includes a secure token, a secure token ID, and result codes and descriptions.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/payflow-pro-workflow.md",
          "loc": { "lines": { "from": 1, "to": 9 } }
        }
      }
    ],
    [
      "e77dba2f-78a0-491f-b7c7-2951e4e5fa26",
      {
        "pageContent": "1. The application returns the secure token, a secure token ID, and result codes and descriptions in response to the `createPayflowProToken` mutation.\n\n1. The client uses a hidden iframe to send a silent post request directly to the PayPal gateway for account verification. For live requests, send the silent post to `https://payflowlink.paypal.com`. Send test requests to `https://pilot-payflowlink.paypal.com`.\n\n1. The gateway responds directly to the client. The response contains a payload that includes secure token information and billing and shipping information.\n\n1. The client uses the [`handlePayflowProResponse`](/src/pages/graphql/schema/checkout/mutations/handle-payflow-pro-response.md) mutation to send the payload to the applicaion. The application stores this information without modifying the cart.\n\n1. The mutation returns a `Cart` object.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/payflow-pro-workflow.md",
          "loc": { "lines": { "from": 11, "to": 19 } }
        }
      }
    ],
    [
      "44359acf-752a-4976-a032-198383bf8799",
      {
        "pageContent": "1. The client runs the [`placeOrder`](/src/pages/graphql/schema/cart/mutations/place-order.md) mutation, which creates an order and begins the authorization process.\n\n1. The application sends an authorization request to the gateway.\n\n1. The gateway sends the response to Magento.\n\n1. The application creates an order and sends an order ID in response to the `placeOrder` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/payflow-pro-workflow.md",
          "loc": { "lines": { "from": 21, "to": 27 } }
        }
      }
    ],
    [
      "c65ae491-93b0-423a-aab2-1b1b71bb17e2",
      {
        "pageContent": "Attribute |  Data Type | Description\n--- | --- | ---\n`payer_id` | String! | The unique ID of the PayPal customer\n`token` | String! | The token returned by the `createPaypalExpressToken` mutation",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/paypal-express-checkout-attributes.md",
          "loc": { "lines": { "from": 1, "to": 4 } }
        }
      }
    ],
    [
      "2566857e-b7d4-4578-b424-bbc7bcf527aa",
      {
        "pageContent": "1. When the buyer clicks a PayPal button, the frontend executes the [`createPaypalExpressToken`](/src/pages/graphql/schema/checkout/mutations/create-paypal-express-token.md) mutation.\n\n1. The application requests a secure token from PayPal. The application gathers information in the specified cart and sends this information to PayPal as part of a request for a secure token.\n\n1. If the token request succeeds, PayPal returns a token. You must include this token in subsequent steps.\n\n1. The application sends the token to the client. The `createPaypalExpressToken` response includes the token and the PayPal URLs to be used in the next step.\n\n1. Redirect the customer to PayPal for approval. Depending on your implementation, the customer is either redirected to the PayPal login screen, or the customer enters their credentials in-context.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/paypal-express-checkout-workflow.md",
          "loc": { "lines": { "from": 1, "to": 9 } }
        }
      }
    ],
    [
      "a71f11bc-ba2a-4e83-8f77-24cacfd7db83",
      {
        "pageContent": "1. If the customer approves the payment, PayPal redirects the customer back to the payment confirmation page. The response includes the secure token and payer ID as GET parameters.\n\n1. Set the payment method. The frontend runs the [`setPaymentMethodOnCart`](/src/pages/graphql/schema/cart/mutations/set-payment-method.md) mutation. The payload includes the PayPal token, the payer ID, and the cart ID. The cart may have been updated since the token was requested, as shipping costs, taxes, and other adjustments might have been applied to the cart. The application submits the updated cart to PayPal.\n\n1. The application returns a `Cart` object.\n\n1. Place the order with the [`placeOrder`](/src/pages/graphql/schema/cart/mutations/place-order.md) mutation.\n\n1. The application sends the secure token, payer ID, and final cart information to PayPal.\n\n1. PayPal captures the payment by transferring the funds from the customer account to the appropriate merchant account.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/paypal-express-checkout-workflow.md",
          "loc": { "lines": { "from": 11, "to": 21 } }
        }
      }
    ],
    [
      "acf470fe-3437-4650-999e-980d28895751",
      {
        "pageContent": "1. The application creates an order, ready for fulfillment.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/graphql/payment-methods/paypal-express-checkout-workflow.md",
          "loc": { "lines": { "from": 23, "to": 23 } }
        }
      }
    ],
    [
      "82baaee7-8036-4cb5-baeb-8c50df2ade12",
      {
        "pageContent": "The schemas documented here are autogenerated from an instance of Adobe Commerce with B2B. Each schema represents a specific user role (Admin, Customer, and Guest) and determines which endpoints are accessible. Use the version switcher to select an Adobe Commerce version and corresponding API.\n\nYou can also <a href=\"https://developer.adobe.com/commerce/webapi/rest/quick-reference/generate-local\" target=\"_blank\">generate a local API reference</a> based on your own Adobe Commerce configuration, which allows you to see API documentation for your specific Adobe Commerce modules, third-party modules, and extension attributes.",
        "metadata": {
          "source": "commerce-webapi/src/_includes/redocly-intro.md",
          "loc": { "lines": { "from": 1, "to": 3 } }
        }
      }
    ],
    [
      "94d2c551-f1b6-4a5a-9f4a-4d8dcd36f946",
      {
        "pageContent": "---\ntitle: Input limiting\ndescription: Explains input limiting and other API security safeguards against denial-of-service (DoS) attacks.\nkeywords:\n  - REST\n  - Security\n---\n\n# Input limiting\n\nThis topic describes best practices for [API security](https://owasp.org/www-project-api-security/).\n\nImposing restrictions on the size and number of resources that a user can request through an API can help mitigate denial-of-service (DoS) vulnerabilities. By default, the following built-in API rate limiting is available:\n\n-  REST requests containing inputs that represent a list of entities. When enabled, the default maximum is 20 for synchronous requests and 5,000 for asynchronous requests.\n-  REST and GraphQL queries that allow paginated results can be limited to a maximum number of items per page. When enabled, the default maximum is 300.\n-  REST queries that allow paginated results can have a default number of items per page imposed. When enabled, the default maximum is 20.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "a097385e-dea7-4519-a1b3-f53fddd7ba55",
      {
        "pageContent": "By default, these input limits are disabled, but you can use the following methods to enable them:\n\n-  Set the values in the [Admin](https://docs.magento.com/user-guide/configuration/services/magento-web-api.html).\n-  Run the [`bin/magento config:set` command](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/configuration-management/set-configuration-values.html).\n-  Add entries to the [`env.php` file](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/files/config-reference-configphp.html#system).\n-  Set [environment variables](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/deployment/examples/example-environment-variables.html).\n\nWhen input limiting has been enabled, the system uses the default value for each limitation listed above. You can also configure custom values.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 19, "to": 26 } }
        }
      }
    ],
    [
      "d044bb0a-aa62-47ac-9d42-f61433a9c12e",
      {
        "pageContent": "Although some simple examples for configuring these values from the CLI are provided below, all of the values can be [configured per website and per store view](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/configuration-management/set-configuration-values.html) in addition to being configurable globally. In addition, these values can also be configured [via `env.php`](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/files/config-reference-configphp.html#system)\nas well as via [environment variables](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/deployment/examples/example-environment-variables.html).\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nIn addition, the Admin provides a configuration setting for limiting session sizes for Admin users and storefront visitors.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 28, "to": 33 } }
        }
      }
    ],
    [
      "af4abfd3-b58b-4879-96c4-5718bb3222a8",
      {
        "pageContent": "## Enable the input limiting system\n\nTo enable these input limiting features from the Admin, go to **Stores** > Settings > **Configuration** > **Services** > **Web Api Limits** or **GraphQL Input Limits** and set **Enable Input Limits** to **Yes**.\n\nTo enable with the CLI, run one or both of the following commands:\n\n```bash\nbin/magento config:set webapi/validation/input_limit_enabled 1\n```\n\n```bash\nbin/magento config:set graphql/validation/input_limit_enabled 1\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 35, "to": 47 } }
        }
      }
    ],
    [
      "7b6cfb91-b5d7-438d-9a7b-89f9cf6e61b1",
      {
        "pageContent": "## Maximum parameter inputs\n\nThe `EntityArrayValidator` class constructor limits the number of objects that can be given to inputs that represent arrays of objects. For example, the `PUT /V1/guest-carts/{cartId}/collect-totals` endpoint contains the input parameter `additionalData->extension_attributes->gift_messages`, which represents a list of gift message information objects.\n\nThere are four possible input arrays:\n\n-  `additional_data`\n-  `agreement_ids`\n-  `gift_messages`\n-  `custom_attributes`",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 49, "to": 58 } }
        }
      }
    ],
    [
      "d29d65d0-0b46-4aba-b797-0bcd83823a6c",
      {
        "pageContent": "```json\n{\n  \"paymentMethod\": {\n    \"po_number\": \"string\",\n    \"method\": \"string\",\n    \"additional_data\": [\n      \"string\"\n    ],\n    \"extension_attributes\": {\n      \"agreement_ids\": [\n        \"string\"\n      ]\n    }\n  },\n  \"shippingCarrierCode\": \"string\",\n  \"shippingMethodCode\": \"string\",\n  \"additionalData\": {\n    \"extension_attributes\": {\n      \"gift_messages\": [\n        {\n          \"gift_message_id\": 0,\n          \"customer_id\": 0,\n          \"sender\": \"string\",\n          \"recipient\": \"string\",\n          \"message\": \"string\",\n          \"extension_attributes\": {\n            \"entity_id\": \"string\",\n            \"entity_type\": \"string\",\n            \"wrapping_id\": 0,\n            \"wrapping_allow_gift_receipt\": true,\n            \"wrapping_add_printed_card\": true\n          }\n        }\n      ]\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"string\",\n        \"value\": \"string\"\n      }\n    ]\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 60, "to": 102 } }
        }
      }
    ],
    [
      "adc2db75-ee0d-4ceb-97ad-6d92ab7ab171",
      {
        "pageContent": "```\n\nBy default, any one of these arrays can include up to 20 items, but you can change this value in the configuration UI via **Stores** > Settings > **Configuration** > **Services** > **Web API Input Limits** > **Input List Limit** or via CLI using the `webapi/validation/complex_array_limit` configuration path.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 103, "to": 105 } }
        }
      }
    ],
    [
      "02ba3399-5d20-4967-90e9-0e44feca72c4",
      {
        "pageContent": "## Input limit for REST endpoints\n\nSome REST endpoints can contain a high number of elements, and developers need a way to set the limit for each endpoint. The limit for a specific REST endpoint can be set in the `webapi.xml` configuration file for synchronous requests and `webapi_async.xml` for asynchronous requests.\nTo do this, assign a value for the `<data input-array-size-limit/>` attribute within a `<route>` definition. The value for `input-array-size-limit` must be a non-negative integer.\n\nThe following example sets the input limit for the `/V1/some-custom-route` route.\nIf the route works synchronously, open the `<module_dir>/etc/webapi.xml` configuration file. Otherwise, open `<module_dir>/etc/webapi_async.xml`.\nAdd the `data` tag with the `input-array-size-limit` attribute to the route configuration.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 107, "to": 114 } }
        }
      }
    ],
    [
      "15ca1e47-7c15-4b4a-ab30-7b8629b6c0e0",
      {
        "pageContent": "```xml\n<?xml version=\"1.0\"?>\n<!--\nSome custom module\n-->    \n<routes xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Webapi:etc/webapi.xsd\">\n    <route url=\"/V1/some-custom-route\" method=\"POST\">\n        <service class=\"Vendor\\Module\\Api\\EntityRepositoryInterface\" method=\"save\"/>\n        <resources>\n            <resource ref=\"Vendor_Entity::entities\" />\n        </resources>\n        <data input-array-size-limit=\"5\" /> <!--  limit only for route `/V1/some-custom-route`  -->\n    </route>\n</routes>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 116, "to": 130 } }
        }
      }
    ],
    [
      "706584d2-d4a4-44d1-ad6f-616f90ba83b0",
      {
        "pageContent": "```\n\nClear the configuration cache for the changes to take effect.\n\n```bash\nbin/magento cache:clean config\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 131, "to": 137 } }
        }
      }
    ],
    [
      "7100d070-1acb-44c1-bff6-3232c90727b1",
      {
        "pageContent": "## Values by default for REST endpoints\n\nIf you need to change the default limits for REST endpoints, then edit the `webapi` section of the `<magento_root>/app/etc/env.php` file as follows:\n\n```php\n[\n//...\n    'webapi' => [\n        'sync' => [\n            'default_input_array_size_limit' => <non-negative value>, //overrides values for synchronous REST endpoints\n        ],\n        'async' => [\n            'default_input_array_size_limit' => <non-negative value>, //overrides values for asynchronous REST endpoints\n        ],\n    ]\n//...\n];\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 139, "to": 156 } }
        }
      }
    ],
    [
      "b2466a36-15b9-44b0-bd9a-15064dd76043",
      {
        "pageContent": "## Maximum page size\n\nThe maximum page size setting controls the pagination of various web API responses. By default, the maximum value is `300`. You can change the default in the Admin by selecting **Stores** > Settings > **Configuration** > **Services** > **Web API Input Limits** or **GraphQl Input Limits** >  **Maximum Page Size** field.\n\n[GraphQL security configuration](../graphql/usage/security-configuration.md describes how to set the maximum page size in GraphQL.\n\n## Default page size\n\nThe Default Page Size setting controls the pagination of various web API responses. You can change the default value of `20` in the Admin by selecting **Stores** > Settings > **Configuration** > **Services** > **Web API Input Limits** > **Default Page Size**. To change the value from the CLI, run the following command:\n\n```bash\nbin/magento config:set webapi/validation/default_page_size 30\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/api-security.md",
          "loc": { "lines": { "from": 158, "to": 170 } }
        }
      }
    ],
    [
      "e7dbbca9-685f-454b-b76c-d99738849268",
      {
        "pageContent": "---\ntitle: OAuth-Based Authentication\ndescription: How to use OAuth authentication and token passing in the web APIs.\nkeywords:\n  - REST\n  - Security\n---\n\n# OAuth-based authentication\n\nOAuth authentication with Adobe Commerce and Magento Open Source is based on [OAuth 1.0a](https://tools.ietf.org/html/rfc5849), an open standard for secure API authentication. OAuth is a token-passing mechanism that allows a system to control which third-party applications have access to internal data without revealing or storing any user IDs or passwords.\n\nIn Commerce, a third-party application that uses OAuth for authentication is called an [_integration_](../create-integration.md). An integration defines which resources the application can access. The application can be granted access to all resources or a customized subset of resources.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "aae3b721-a7fd-49af-a542-189d0f21bf47",
      {
        "pageContent": "As the process of registering the integration proceeds, Commerce creates the tokens that the application needs for authentication. It first creates a request token. This token is short-lived and must be exchanged for an access token. Access tokens are long-lived and will not expire unless the merchant revokes access from the application.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 15, "to": 15 } }
        }
      }
    ],
    [
      "bffafa35-d46d-4c26-ab4f-e0f91086dbdb",
      {
        "pageContent": "## OAuth overview\n\nThe following diagram shows the OAuth authentication process. Each step is described further.\n![OAuth flow](../../_images/oauthflow.png)\n\n1. **Create an integration**.  The merchant creates an integration from Admin. Commerce generates a consumer key and a consumer secret.\n\n1. **Activate the integration**. The OAuth process begins when the merchant activates the integration. Magento sends the OAuth consumer key and secret, an OAuth verifier, and the store URL to the external application via HTTPS post to the page defined in the **Callback Link** field in Admin. See [Activate an integration](#activate-an-integration) for more information.\n\n1. **Process activation information**. The integrator must store the activation information received in step 2. These parameters will be used to ask for  tokens.\n\n1. **Call the application's login page**. Commerce calls the page defined in the **Identity Link** field in Admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 17, "to": 28 } }
        }
      }
    ],
    [
      "f7e0756f-4e4a-47be-9ec5-f89c430265ca",
      {
        "pageContent": "1. **Merchant logs in to the external application.** If the login is successful, the application returns to the location specified in the call. The login page is dismissed.\n\n1. **Ask for a request token**. The application uses the `POST /oauth/token/request` REST API to ask for a request token. The `Authorization` header includes the consumer key and other information. See [Get a request token](#get-a-request-token) for details about this token request.\n\n1. **Send the request token**. Commerce returns a request token and request token secret.\n\n1. **Ask for an access token**. The application uses the `POST /oauth/token/access` REST API to ask for an access token. The `Authorization` header includes the request token and other information. See [Get an access token](#get-an-access-token) for details about this token request.\n\n1. **Commerce sends the access token**. If this request is successful, Magento returns an access token and access token secret.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 30, "to": 38 } }
        }
      }
    ],
    [
      "b749862f-d0a0-4339-82b7-be07546b4339",
      {
        "pageContent": "1. **The application can access Magento resources.** All requests sent to Commerce must use the full set of request parameters in `Authorization` header. See [Access the web APIs](#access-the-web-apis) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 40, "to": 40 } }
        }
      }
    ],
    [
      "16dfa56f-31fd-40df-8bdf-95567d6babac",
      {
        "pageContent": "## Activate an integration\n\nThe integration must be configured from the Admin (**System > Extensions > Integrations**).  The configuration includes a callback URL and an identity link URL.  The callback URL specifies where OAuth credentials can be sent when using OAuth for token exchange. The identity link points to the login page of the third-party application that is integrating with Commerce.\n\nA merchant can choose to select **Save and Activate** when the integration is created. Alternatively, the merchant can click on **Activate** against a previously saved integration from the Integration grid.\n\nWhen the integration is created, Commerce generates a consumer key and a consumer secret.\n\nActivating the integration submits the credentials to the endpoint specified when creating the Integration. An HTTP POST from Commerce to the Integration endpoint will contain these attributes:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 42, "to": 50 } }
        }
      }
    ],
    [
      "455d9dad-9dcc-4ebe-beaf-c77feef43b89",
      {
        "pageContent": "*  `store_base_url` For example, `http://my-store.com/`.\n*  `oauth_verifier`\n*  `oauth_consumer_key`\n*  `oauth_consumer_secret`\n\nIntegrations use the `oauth_consumer_key` key to get a request token and the `oauth_verifier` to get an access token.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 52, "to": 57 } }
        }
      }
    ],
    [
      "f5e5f030-f999-42ff-89fa-e395abdd5062",
      {
        "pageContent": "## OAuth handshake details\n\nThe process of completing the OAuth handshake requires that you\n\n*  [Get a request token](#get-a-request-token)\n*  [Get an access token](#get-an-access-token)\n\nThis process is known as a 2-legged OAuth handshake.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 59, "to": 66 } }
        }
      }
    ],
    [
      "5e09133a-19b5-48a8-945b-2f411d435ddf",
      {
        "pageContent": "### Get a request token\n\nA request token is a temporary token that the user exchanges for an access token. Use the following API to get a request token from Commerce:\n\n`POST /oauth/token/request`\n\nYou must include these request parameters in the `Authorization`  header in the call:\n\nParameter | Description\n--- | ---\n`oauth_consumer_key` | The consumer key is generated when you create the integration.\n`oauth_signature_method` | The name of the signature method used to sign the request. Must be the value `HMAC-SHA256`.\n`oauth_signature` | A generated value (signature)\n`oauth_nonce` | A random value that is uniquely generated by the application.\n`oauth_timestamp` | A positive integer, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\n`oauth_version` | The OAuth version.\n\nThe response contains these fields:\n\n*  `oauth_token`. The token to be used when requesting an access token.\n*  `oauth_token_secret`.  A secret value that establishes ownership of the token.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 68, "to": 88 } }
        }
      }
    ],
    [
      "f9f7e318-00cf-4366-8a71-ecd3f78050ee",
      {
        "pageContent": "A valid response looks like this:\n\n`oauth_token=4cqw0r7vo0s5goyyqnjb72sqj3vxwr0h&oauth_token_secret=rig3x3j5a9z5j6d4ubjwyf9f1l21itrr`",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 90, "to": 92 } }
        }
      }
    ],
    [
      "7150fee1-9cc2-4cba-9436-e204663b3089",
      {
        "pageContent": "### Get an access token\n\nThe request token must be exchanged for an access token. Use the following API to get an access token from Commerce:\n\n`POST /oauth/token/access`\n\nYou must include these request parameters in the `Authorization`  header in the call:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 94, "to": 100 } }
        }
      }
    ],
    [
      "d193075a-9cd8-462b-9a4c-9dc876d8ea2d",
      {
        "pageContent": "Parameter | Description\n--- | ---\n`oauth_consumer_key` | The consumer key value that you retrieve after you register the integration.\n`oauth_nonce` | A random value that is uniquely generated by the application.\n`oauth_signature` | A generated value (signature)\n`oauth_signature_method` | The name of the signature method used to sign the request. Must be the value `HMAC-SHA256`.\n`oauth_timestamp` | A positive integer, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\n`oauth_version` | The OAuth version.\n`oauth_token` | The `oauth_token` value, or request token, obtained in [Get a request token](#get-a-request-token).\n`oauth_verifier` | The verification code that is tied to the consumer and request token. It is sent as part of the initial POST operation when the integration is activated.\n\nA valid response looks like this:\n`oauth_token=0lnuajnuzeei2o8xcddii5us77xnb6v0&oauth_token_secret=1c6d2hycnir5ygf39fycs6zhtaagx8pd`\n\nThe response contains these fields:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 102, "to": 116 } }
        }
      }
    ],
    [
      "824f589a-8566-48de-80de-84d693f93b91",
      {
        "pageContent": "*  `oauth_token`. The access token that provides access to protected resources.\n*  `oauth_token_secret`. The secret that is associated with the access token.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 118, "to": 119 } }
        }
      }
    ],
    [
      "317a113f-427b-45d0-b152-0d3cf915fbae",
      {
        "pageContent": "## Access the web APIs\n\nAfter the integration is authorized to make API calls, third-party applications (registered as integrations) can invoke web APIs by using the access token.\n\nTo use the access token to make web API calls:\n\n`GET /rest/V1/products/1234`\n\nYou must include these request parameters in the `Authorization` request header in the call:\n\n*  `oauth_consumer_key`. The customer key value provided after the registration of the application.\n*  `oauth_nonce`. A random value, uniquely generated by the application.\n*  `oauth_signature_method`. The name of the signature method used to sign the request. Valid values are: `HMAC-SHA256`.\n*  `oauth_signature`. A generated value (signature).\n*  `oauth_timestamp`. A positive integer, expressed in the number of seconds since January 1, 1970 00:00:00 GMT.\n*  `oauth_token`. The `oauth_token`, or access token, value obtained in [Get an access token](#get-an-access-token).",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 121, "to": 136 } }
        }
      }
    ],
    [
      "97f21760-220b-4ac2-bad0-0de80ec74d2e",
      {
        "pageContent": "## The OAuth signature\n\nAll OAuth handshake requests and Web Api requests include the signature as part of Authorization header. Its generated as follows:\n\nYou concatenate a set of URL-encoded attributes and parameters to construct the signature base string.\n\nUse the ampersand (`&`) character to concatenate these attributes and parameters:\n\n1. HTTP method\n1. URL\n1. `oauth_nonce`\n1. `oauth_signature_method`\n1. `oauth_timestamp`\n1. `oauth_version`\n1. `oauth_consumer_key`\n1. `oauth_token`\n\nTo generate the signature, you must use the HMAC-SHA256 signature method. The signing key is the concatenated values of the consumer secret and token secret separated by the ampersand (`&`) character (ASCII code 38), even if empty. You must use parameter encoding to encode each value.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 138, "to": 155 } }
        }
      }
    ],
    [
      "5f3c20c2-51b5-4a9e-a7da-777df62cea7b",
      {
        "pageContent": "## OAuth token exchange example\n\nThe scripts provided in this document simulate the Commerce [OAuth 1.0a](https://tools.ietf.org/html/rfc5849) token exchange flow. You can drop these scripts under the document root directory of your installation so that they can be exposed as endpoints that your system can interact with to mimic the token exchange.\n\nThe OAuth client is extended from and attributed to [PHPoAuthLib](https://github.com/Lusitanian/PHPoAuthLib), which is the same lib used in the [OAuth client](https://github.com/magento/magento2/tree/2.4/dev/tests/api-functional/framework/Magento/TestFramework/Authentication/Rest/OauthClient.php).\n\nTo simulate the OAuth 1.0a token exchange flow:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 157, "to": 163 } }
        }
      }
    ],
    [
      "5b80638f-a31a-4016-b038-b6caee39a345",
      {
        "pageContent": "1. Login to your Admin and navigate to **System > Extensions > Integrations**\n1. Click on **Add New Integration**.\n1. Complete all details in the Integration Info tab:\n   *  **Name** : SomeUniqueIntegrationName\n   *  **Callback URL** : http://your_app_host/endpoint.php\n   *  **Identity link URL** : http://your_app_host/login.php\n   *  Add permissions as desired on the **API** tab\n1. Select the **Save and Activate** option from the drop down menu.\n1. A pop-up window displays, confirming API permissions. Click **Allow**. (Make sure your browser allows pop-up windows.) The credentials are posted to `endpoint.php`. You should also see another pop-up for the identity linking step that opens the script from `login.php`.\n1. Click **Login**. (There is no actual login check since this is a simulation.). The `checklogin.php` script is called. It uses the posted credentials to complete the token exchange.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 165, "to": 174 } }
        }
      }
    ],
    [
      "049937be-26ad-4f86-afa8-0d44b9679268",
      {
        "pageContent": "1. When the token exchange completes successfully, the user is redirected back to the Integrations grid. The newly-created integration should be in the Active state.\n1. Click on the edit icon of the integration and check the Integration Details on the Integration Info tab. It should show all the credentials that can be used to make an authenticated API request using OAuth 1.0.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 175, "to": 176 } }
        }
      }
    ],
    [
      "685b735a-3792-4722-84db-b5f7e3b44d45",
      {
        "pageContent": "<p></p>\n\n<details>\n      <summary><b>checklogin.php</b></summary>\n\n```php\n<\\?php\nrequire './vendor/autoload.php';\n\n$consumerKey = $_REQUEST['oauth_consumer_key'];\n$callback = $_REQUEST['callback_url'];\n\nsession_id('test');\nsession_start();\n\n/** Use $consumerKey to retrieve the following data in case it was stored in DB when received at \"endpoint.php\" */\nif ($consumerKey !== $_SESSION['oauth_consumer_key']) {\n    throw new \\Exception(\"Consumer keys received on different requests do not match.\");\n}\n\n$consumerSecret = $_SESSION['oauth_consumer_secret'];\n$magentoBaseUrl = rtrim($_SESSION['store_base_url'], '/');\n$oauthVerifier = $_SESSION['oauth_verifier'];\n\ndefine('TESTS_BASE_URL', $magentoBaseUrl);",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 178, "to": 202 } }
        }
      }
    ],
    [
      "2c9bc250-e98c-4dee-ac17-baf71fe8e69a",
      {
        "pageContent": "$credentials = new \\OAuth\\Common\\Consumer\\Credentials($consumerKey, $consumerSecret, $magentoBaseUrl);\n$oAuthClient = new OauthClient($credentials);\n$requestToken = $oAuthClient->requestRequestToken();\n$accessToken = $oAuthClient->requestAccessToken(\n    $requestToken->getRequestToken(),\n    $oauthVerifier,\n    $requestToken->getRequestTokenSecret()\n);\n\nheader(\"location: $callback\");",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 204, "to": 213 } }
        }
      }
    ],
    [
      "e4101e07-ea03-4e17-b9e6-a4b8b8634ac2",
      {
        "pageContent": "```\n\n</details>\n\n<details>\n      <summary><b>endpoint.php</b></summary>\n\n```php\n<?php\nsession_id('test');\nsession_start();\n\n// If this data is stored in the DB, oauth_consumer_key can be used as ID to retrieve this data later in \"checklogin.php\"\n// For simplicity of this sample, it is stored in session\n$_SESSION['oauth_consumer_key'] = $_POST['oauth_consumer_key'];\n\n$_SESSION['oauth_consumer_secret'] = $_POST['oauth_consumer_secret'];\n$_SESSION['store_base_url'] = $_POST['store_base_url'];\n$_SESSION['oauth_verifier'] = $_POST['oauth_verifier'];\n\nsession_write_close();\n\nheader(\"HTTP/1.0 200 OK\");\necho \"Response\";",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 214, "to": 237 } }
        }
      }
    ],
    [
      "7c3d3f7a-acea-45aa-a089-63a3316ccf18",
      {
        "pageContent": "```\n\n</details>\n\n<details>\n      <summary><b>login.php</b></summary>\n\n```php\n<?php\n$consumerKey = $_REQUEST['oauth_consumer_key'];\n$callbackUrl = urlencode(urldecode($_REQUEST['success_call_back']));",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 238, "to": 248 } }
        }
      }
    ],
    [
      "26ad89c9-8684-4b83-a5cb-6a9430a45c51",
      {
        "pageContent": "echo <<<HTML\n<table width=\"300\" border=\"0\" align=\"center\" cellpadding=\"0\" cellspacing=\"1\" bgcolor=\"#CCCCCC\">\n    <tr>\n        <form name=\"form1\" method=\"post\" action=\"checklogin.php?oauth_consumer_key={$consumerKey}&callback_url={$callbackUrl}\">\n            <td>\n                <table width=\"100%\" border=\"0\" cellpadding=\"3\" cellspacing=\"1\" bgcolor=\"#FFFFFF\">\n                    <tr>\n                        <td colspan=\"3\"><strong>Integrations Login</strong></td>\n                    </tr>\n                    <tr>\n                        <td width=\"78\">Username</td>\n                        <td width=\"6\">:</td>\n                        <td width=\"294\"><input name=\"myusername\" type=\"text\" id=\"myusername\"></td>\n                    </tr>\n                    <tr>\n                        <td>Password</td>\n                        <td>:</td>\n                        <td><input name=\"mypassword\" type=\"text\" id=\"mypassword\"></td>\n                    </tr>\n                    <tr>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 250, "to": 269 } }
        }
      }
    ],
    [
      "8d0a9265-65ff-455d-b6e3-a06dcd6e65d1",
      {
        "pageContent": "<td>&nbsp;</td>\n                        <td>&nbsp;</td>\n                        <td><input type=\"submit\" name=\"Submit\" value=\"Login\"></td>\n                    </tr>\n                </table>\n            </td>\n        </form>\n    </tr>\n</table>\nHTML;",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 270, "to": 279 } }
        }
      }
    ],
    [
      "e357a304-049c-43b9-a0d7-4e8575493bdc",
      {
        "pageContent": "```\n\n</details>\n\n<details>\n      <summary><b>OauthClient.php </b></summary>\n\nChange the instances of `http://my.host` in this example to a valid base URL.\n\n```php\n<?php\n\nuse OAuth\\Common\\Consumer\\Credentials;\nuse OAuth\\Common\\Http\\Client\\ClientInterface;\nuse OAuth\\Common\\Http\\Exception\\TokenResponseException;\nuse OAuth\\Common\\Http\\Uri\\Uri;\nuse OAuth\\Common\\Http\\Uri\\UriInterface;\nuse OAuth\\Common\\Storage\\TokenStorageInterface;\nuse OAuth\\OAuth1\\Service\\AbstractService;\nuse OAuth\\OAuth1\\Signature\\SignatureInterface;\nuse OAuth\\OAuth1\\Token\\StdOAuth1Token;\nuse OAuth\\OAuth1\\Token\\TokenInterface;\n\nclass OauthClient extends AbstractService\n{\n    /** @var string|null */\n    protected $_oauthVerifier = null;",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 280, "to": 306 } }
        }
      }
    ],
    [
      "a562f051-99d2-487d-be45-e0954e4c73d5",
      {
        "pageContent": "public function __construct(\n        Credentials $credentials,\n        ClientInterface $httpClient = null,\n        TokenStorageInterface $storage = null,\n        SignatureInterface $signature = null,\n        UriInterface $baseApiUri = null\n    ) {\n        if (!isset($httpClient)) {\n            $httpClient = new \\OAuth\\Common\\Http\\Client\\StreamClient();\n        }\n        if (!isset($storage)) {\n            $storage = new \\OAuth\\Common\\Storage\\Session();\n        }\n        if (!isset($signature)) {\n            $signature = new \\OAuth\\OAuth1\\Signature\\Signature($credentials);\n        }\n        parent::__construct($credentials, $httpClient, $storage, $signature, $baseApiUri);\n    }\n\n    /**\n     * @return UriInterface\n     */\n    public function getRequestTokenEndpoint()\n    {\n        return new Uri('http://my.host/oauth/token/request');\n    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 308, "to": 333 } }
        }
      }
    ],
    [
      "e07dc0b9-f765-4938-a54d-7def73c394bf",
      {
        "pageContent": "/**\n     * Returns the authorization API endpoint.\n     *\n     * @throws \\OAuth\\Common\\Exception\\Exception\n     */\n    public function getAuthorizationEndpoint()\n    {\n        throw new \\OAuth\\Common\\Exception\\Exception(\n            'The REST API is 2-legged. Current operation is not available.'\n        );\n    }\n\n    /**\n     * Returns the access token API endpoint.\n     *\n     * @return UriInterface\n     */\n    public function getAccessTokenEndpoint()\n    {\n        return new Uri('http://magento.host/oauth/token/access');\n    }\n\n    /**\n     * Parses the access token response and returns a TokenInterface.\n     *\n     * @param string $responseBody\n     * @return TokenInterface\n     */\n    protected function parseAccessTokenResponse($responseBody)\n    {\n        return $this->_parseToken($responseBody);\n    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 335, "to": 366 } }
        }
      }
    ],
    [
      "f3812feb-b6b6-4594-ab2e-4ed5c37432b8",
      {
        "pageContent": "/**\n     * Parses the request token response and returns a TokenInterface.\n     *\n     * @param string $responseBody\n     * @return TokenInterface\n     * @throws TokenResponseException\n     */\n    protected function parseRequestTokenResponse($responseBody)\n    {\n        $data = $this->_parseResponseBody($responseBody);\n        if (isset($data['oauth_verifier'])) {\n            $this->_oauthVerifier = $data['oauth_verifier'];\n        }\n        return $this->_parseToken($responseBody);\n    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 368, "to": 382 } }
        }
      }
    ],
    [
      "2d871851-826a-4a89-95a7-de334bd33635",
      {
        "pageContent": "/**\n     * Parse response body and create oAuth token object based on parameters provided.\n     *\n     * @param string $responseBody\n     * @return StdOAuth1Token\n     * @throws TokenResponseException\n     */\n    protected function _parseToken($responseBody)\n    {\n        $data = $this->_parseResponseBody($responseBody);\n        $token = new StdOAuth1Token();\n        $token->setRequestToken($data['oauth_token']);\n        $token->setRequestTokenSecret($data['oauth_token_secret']);\n        $token->setAccessToken($data['oauth_token']);\n        $token->setAccessTokenSecret($data['oauth_token_secret']);\n        $token->setEndOfLife(StdOAuth1Token::EOL_NEVER_EXPIRES);\n        unset($data['oauth_token'], $data['oauth_token_secret']);\n        $token->setExtraParams($data);\n        return $token;\n    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 384, "to": 403 } }
        }
      }
    ],
    [
      "dd205013-bc44-4e34-b392-5c052bb00998",
      {
        "pageContent": "/**\n     * Parse response body and return data in array.\n     *\n     * @param string $responseBody\n     * @return array\n     * @throws \\OAuth\\Common\\Http\\Exception\\TokenResponseException\n     */\n    protected function _parseResponseBody($responseBody)\n    {\n        if (!is_string($responseBody)) {\n            throw new TokenResponseException(\"Response body is expected to be a string.\");\n        }\n        parse_str($responseBody, $data);\n        if (null === $data || !is_array($data)) {\n            throw new TokenResponseException('Unable to parse response.');\n        } elseif (isset($data['error'])) {\n            throw new TokenResponseException(\"Error occurred: '{$data['error']}'\");\n        }\n        return $data;\n    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 405, "to": 424 } }
        }
      }
    ],
    [
      "eb4d988b-64e1-4e9b-b4cd-ba1cf20a3287",
      {
        "pageContent": "/**\n     * @override to fix since parent implementation from lib not sending the oauth_verifier when requesting access token\n     * Builds the authorization header for an authenticated API request\n     *\n     * @param string $method\n     * @param UriInterface $uri the uri the request is headed\n     * @param \\OAuth\\OAuth1\\Token\\TokenInterface $token\n     * @param $bodyParams array\n     * @return string\n     */\n    protected function buildAuthorizationHeaderForAPIRequest(\n        $method,\n        UriInterface $uri,\n        TokenInterface $token,\n        $bodyParams = null\n    ) {\n        $this->signature->setTokenSecret($token->getAccessTokenSecret());\n        $parameters = $this->getBasicAuthorizationHeaderInfo();\n        if (isset($parameters['oauth_callback'])) {\n            unset($parameters['oauth_callback']);\n        }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 426, "to": 446 } }
        }
      }
    ],
    [
      "ae07161b-7e6b-42d5-80c5-9941487738d8",
      {
        "pageContent": "$parameters = array_merge($parameters, ['oauth_token' => $token->getAccessToken()]);\n        $parameters = array_merge($parameters, $bodyParams);\n        $parameters['oauth_signature'] = $this->signature->getSignature($uri, $parameters, $method);\n\n        $authorizationHeader = 'OAuth ';\n        $delimiter = '';\n\n        foreach ($parameters as $key => $value) {\n            $authorizationHeader .= $delimiter . rawurlencode($key) . '=\"' . rawurlencode($value) . '\"';\n            $delimiter = ', ';\n        }\n\n        return $authorizationHeader;\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 448, "to": 462 } }
        }
      }
    ],
    [
      "feebd26d-c34c-4e75-95a2-7e8801005d24",
      {
        "pageContent": "```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 463, "to": 465 } }
        }
      }
    ],
    [
      "32a5d1e8-c9ed-4fdb-b9e8-0fed941cb251",
      {
        "pageContent": "#### Related topics\n\n[Create an integration](../create-integration.md)\n\n[OAuth error codes](./oauth-errors.md)\n\n[Construct a request](../gs-web-api-request.md)\n\n[Configure services as web APIs](https://developer.adobe.com/commerce/php/development/components/web-api/services/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-oauth.md",
          "loc": { "lines": { "from": 467, "to": 475 } }
        }
      }
    ],
    [
      "242445a0-ca1f-493f-87c7-0c715148113c",
      {
        "pageContent": "---\ntitle: Session-Based Authentication\ndescription: How to use session-based authentication in the web APIs.\nkeywords:\n  - REST\n  - Security\n---\n\n# Session-based authentication\n\nAs a customer, you log in to the storefront with your customer credentials. As an admin, you log in to the Admin with your admin credentials.\n\nThe web API framework uses your logged-in session information to verify your identity and authorize access to the requested resource.\n\nCustomers can access resources that are configured with `anonymous` or `self`  permission in the `webapi.xml` configuration file.\n\nAdmins can access resources that are assigned to their Admin profile.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nThe web API framework enables guest users to access resources that are configured with `anonymous` permission. Any user that the framework cannot authenticate through existing authentication mechanisms is considered a guest user.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-session.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "bb99a969-dc7c-43e5-93fa-ab564926f634",
      {
        "pageContent": "For example, if a customer is logged in to the storefront and the JavaScript widget invokes the `self` API, details for the logged-in customer are fetched:\n\n`GET /rest/V1/customers/me`\n\nSimilarly, if an admin is logged in to the Admin and the JavaScript widget invokes the `Magento_Customer::group` API, details for the logged-in admin are fetched. The web API framework establishes the identity of the admin user based on logged-in session information and authorizes access to the `Magento_Customer::group` resource.\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nAdmin session-based authentication is not currently possible for API endpoints.\n\nThe session based authentication functionality is restricted to AJAX calls. Direct browser requests cannot be made due to security vulnerabilities. A developer can create a custom storefront widget that can issue requests without additional authentication steps.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-session.md",
          "loc": { "lines": { "from": 23, "to": 33 } }
        }
      }
    ],
    [
      "f6618b94-4cfe-47f2-8d35-403a1c271ac7",
      {
        "pageContent": "## Related topic\n\n[Configure services as web APIs](https://developer.adobe.com/commerce/php/development/components/web-api/services/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-session.md",
          "loc": { "lines": { "from": 35, "to": 37 } }
        }
      }
    ],
    [
      "59716f16-9e8b-444c-a7b3-0e5d3ea5d9c0",
      {
        "pageContent": "---\ntitle: Token-Based Authentication\ndescription: How to use token-based authentication in web APIs.\nkeywords:\n  - REST\n  - Security\n---\n\n# Token-based authentication\n\nTo make a web API call from a client such as a mobile application, you must supply an *access token* on the call. The token acts like an electronic key that lets you access the API.\n\nAdobe Commerce and Magento Open Source issue the following types of access tokens:\n\nToken type | Description | Default lifetime\n--- | --- | ---\nIntegration | The merchant determines which Commerce resources the integration can access. | Indefinite. It lasts until it is manually revoked.\nAdmin | The merchant determines which Commerce resources an admin user has access to. | 4 hours\nCustomer | Commerce grants access to resources with the `anonymous` or `self` permission. Merchants cannot edit these settings. | 1 hour",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "f6358e87-0d13-4f9c-9417-d10178a92f4c",
      {
        "pageContent": "## Integration tokens\n\nWhen a merchant creates and activates an integration, Commerce generates a consumer key, consumer secret, access token, and access token secret. All of these entities are used for [OAuth-based authentication](./gs-authentication-oauth.md).\n\nIn previous versions of Commerce, the access token could be used on its own for token-based authentication. This behavior has been disabled by default due to the security implications of a never-expiring access token. Namely, if the access token is compromised it provides undetected persistent access to a store.\n\nHowever, while it is not recommended, this behavior can be restored in the Admin by setting the **Stores** > **Configuration** > **Services** > **OAuth** > **Consumer Settings** > **Allow OAuth Access Tokens to be used as standalone Bearer tokens** option to **Yes**. You can also enable this setting from the CLI by running the following command:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 21, "to": 27 } }
        }
      }
    ],
    [
      "00387d6b-f619-47f5-89e4-740a7f48b50e",
      {
        "pageContent": "```bash\nbin/magento config:set oauth/consumer/enable_integration_as_bearer 1",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 29, "to": 30 } }
        }
      }
    ],
    [
      "be020c28-82b1-4e2c-b8eb-b9b36c8a39fd",
      {
        "pageContent": "```\n\nIf you are trying to upgrade from a previous version and need to update your integration implementation to properly utilize the OAuth workflow, review [OAuth-based Authentication](./gs-authentication-oauth.md). Otherwise, you can partially update your integration to simply store and utilize all four credentials to sign your requests.\n\nThere is a comprehensive guide for this on the OAuth-based authentication page, but can also be done in isolation without supporting the entire OAuth workflow. For example, in the following script the four credentials are used to create a new CMS page without using external libraries or implementing the full OAuth handshake.\n<p></p>\n<details>\n      <summary><b>standalone-oauth.php </b></summary>\n\n```php\n<?php\nconst CONSUMER_KEY = '<placeholder>';\nconst CONSUMER_SECRET = '<placeholder>';\nconst ACCESS_TOKEN = '<placeholder>';\nconst ACCESS_TOKEN_SECRET = '<placeholder>';",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 31, "to": 45 } }
        }
      }
    ],
    [
      "ee30962a-49fb-4f5d-9fe9-9cd4bab54c4f",
      {
        "pageContent": "class RequestDTO {\n    public function __construct(\n        public string $url,\n        public string $method = 'GET',\n        public ?string $body = null,\n        public array $headers = [],\n    ) {}\n}\nclass OAuthCredentialsDTO {\n    public function __construct(\n        public string $consumerKey,\n        public string $consumerSecret,\n        public string $accessToken,\n        public string $accessTokenSecret\n    ) {}\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 47, "to": 62 } }
        }
      }
    ],
    [
      "2c208737-3d93-421c-8ca6-1c7c298074e5",
      {
        "pageContent": "class OAuthRequestSigner\n{\n    public function sign(\n        RequestDTO $request,\n        OAuthCredentialsDTO $credentials\n    ): string {\n        $urlParts = parse_url($request->url);\n        // Normalize the OAuth params for the base string\n        $normalizedHeaders = $request->headers;\n        sort($normalizedHeaders);\n        $oauthParams = [\n            'oauth_consumer_key' => $credentials->consumerKey,\n            'oauth_nonce' => base64_encode(random_bytes(32)),\n            'oauth_signature_method' => 'HMAC-SHA256',\n            'oauth_timestamp' => time(),\n            'oauth_token' => $credentials->accessToken\n        ];\n        // Create the base string\n        $signingUrl = $urlParts['scheme'] . '://' . $urlParts['host'] . $urlParts['path'];\n        $paramString = $this->createParamString($urlParts['query'] ?? null, $oauthParams);\n        $baseString = strtoupper($request->method) . '&' . rawurlencode($signingUrl) . '&' . rawurlencode($paramString);",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 64, "to": 84 } }
        }
      }
    ],
    [
      "7f1c3ffa-2007-4d7f-8f94-75d9bda4b8b6",
      {
        "pageContent": "// Create the signature\n        $signatureKey = $credentials->consumerSecret . '&' . $credentials->accessTokenSecret;\n        $signature = base64_encode(hash_hmac('sha256', $baseString, $signatureKey, true));\n        return $this->createOAuthHeader($oauthParams, $signature);\n    }\n    private function createParamString(?string $query, array $oauthParams): string\n    {\n        // Create the params string\n        $params = array_merge([], $oauthParams);\n        if (!empty($query)) {\n            foreach (explode('&', $query) as $paramToValue) {\n                $paramData = explode('=', $paramToValue);\n                if (count($paramData) === 2) {\n                    $params[rawurldecode($paramData[0])] = rawurldecode($paramData[1]);\n                }\n            }\n        }\n        ksort($params);\n        $paramString = '';\n        foreach ($params as $param => $value) {\n            $paramString .= rawurlencode($param) . '=' . rawurlencode($value) . '&';\n        }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 85, "to": 106 } }
        }
      }
    ],
    [
      "34ff6fdb-39de-4579-857d-e9511142893d",
      {
        "pageContent": "}\n        return rtrim($paramString, '&');\n    }\n    private function createOAuthHeader(array $oauthParams, string $signature): string\n    {\n        // Create the OAuth header\n        $oauthHeader = \"Authorization: Oauth \";\n        foreach ($oauthParams as $param => $value) {\n            $oauthHeader .= \"$param=\\\"$value\\\",\";\n        }\n        return $oauthHeader . \"oauth_signature=\\\"$signature\\\"\";\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 106, "to": 118 } }
        }
      }
    ],
    [
      "a7d945eb-4ee2-48dc-910b-6170309e71f5",
      {
        "pageContent": "function send(RequestDTO $request): string\n{\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $request->url);\n    curl_setopt($ch, CURLOPT_HEADER, false);\n    curl_setopt($ch, CURLOPT_HTTPHEADER, $request->headers);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, $request->method);\n    curl_setopt($ch, CURLOPT_POSTFIELDS, $request->body ?? '');\n    return (string)curl_exec($ch);\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 120, "to": 130 } }
        }
      }
    ],
    [
      "c67f8c20-9ac6-4518-94ac-5d7597b708bd",
      {
        "pageContent": "$oauthSigner = new OAuthRequestSigner();\n$request = new RequestDTO(\n    'https://example.com/rest/V1/cmsPage',\n    'POST',\n    '{\n          \"page\": {\n            \"identifier\": \"test-page\",\n            \"title\": \"my-page\",\n            \"content\": \"<h1>hello</h1>\",\n            \"active\": true\n          }\n        }',\n    ['Content-Type: application/json']\n);\n$request->headers[] = $oauthSigner->sign(\n    $request,\n    new OAuthCredentialsDTO(\n        CONSUMER_KEY,\n        CONSUMER_SECRET,\n        ACCESS_TOKEN,\n        ACCESS_TOKEN_SECRET\n    )\n);\necho send($request);",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 132, "to": 155 } }
        }
      }
    ],
    [
      "d5d80a22-de24-416d-a73b-4127c7d65c99",
      {
        "pageContent": "```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 156, "to": 158 } }
        }
      }
    ],
    [
      "6e04c0ca-7910-400e-9524-d606c7a6e84c",
      {
        "pageContent": "## Admin and customer access tokens\n\nCommerce provides a separate token service for administrators and customers. When you request a token from one of these services, the service returns a unique access token in exchange for an account's username and password.\n\nThe web API framework allows *guest users* to access resources that are configured with the permission level of anonymous. Guest users are users who the framework cannot authenticate through existing authentication mechanisms. As a guest user, you do not need to, but you can, specify a token in a web API call for a resource with anonymous permission. [Restricting access to anonymous web APIs](https://developer.adobe.com/commerce/webapi/rest/use-rest/anonymous-api-security/) contains a list of APIs that do not require a token.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 160, "to": 164 } }
        }
      }
    ],
    [
      "ee88d995-3aac-445f-b067-036d35cc2536",
      {
        "pageContent": "The following table lists endpoints and services that can be used to get an authentication token. Admin accounts must be authenticated with a [two factor authentication](https://developer.adobe.com/commerce/testing/functional-testing-framework/two-factor-authentication/) provider. Some providers may require multiple calls.\n\nToken type |REST| SOAP\n---|---|---\nAdmin with Google Authenticator | `POST /V1/tfa/provider/google/authenticate` | `twoFactorAuthGoogleAuthenticateV1`\nAdmin with Duo Security | `POST /V1/tfa/provider/duo-security/authenticate` | `twoFactorAuthDuoAuthenticateV1`\nAdmin with Authy | `POST /V1/tfa/provider/authy/authenticate` | `twoFactorAuthAuthyAuthenticateV1`\nAdmin with U2F | `POST /V1/tfa/provider/u2fkey/verify` | `twoFactorAuthU2fKeyAuthenticateV1`\nCustomer | `POST /V1/integration/customer/token` | `integrationCustomerTokenServiceV1`",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 166, "to": 174 } }
        }
      }
    ],
    [
      "7fde4851-6dc0-4512-9acf-f447adee0443",
      {
        "pageContent": "For most web API calls, you supply this token in the `Authorization` request header with the `Bearer` HTTP authorization scheme to prove your identity. By default, an admin token is valid for 4 hours, while a customer token is valid for 1 hour. You can change these values from Admin by selecting **Stores** > **Settings** > **Configuration** > **Services** > **OAuth** > **Access Token Expiration**.\n\nA cron job that runs hourly removes all expired tokens.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 176, "to": 178 } }
        }
      }
    ],
    [
      "1fa58303-18d4-4777-9b60-eaadf28761cf",
      {
        "pageContent": "## IMS access tokens for web API calls\n\nWeb API services and events need access tokens to provide authentication credentials to protected resources once the Commerce Admin is integrated with the IMS authentication workflow.\n\n### IMS access tokens and the admin_adobe_ims_webapi table\n\nEach IMS access token is defined by an `access_token_hash` entry in the `admin_adobe_ims_webapi` table. This table keeps a record of all validated access tokens. When a token is validated or invalidated, a record of its status is preserved here.\n\n### Access token expiration\n\nNo dependency exists between IMS access token lifetime and Commerce session lifetime. Access token life is set by the Adobe IMS service and has a default value of 24 hours. Each access token's expiration time is saved in an `expires_in` value in the `admin_adobe_ims_webapi` table.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 180, "to": 190 } }
        }
      }
    ],
    [
      "b2906248-6766-4c6f-930a-f31e42b39fc5",
      {
        "pageContent": "### Commerce session management and Adobe IMS access tokens\n\nAccess tokens hold both user credentials and login session information. Once a user has been authenticated and a session has begun, these two variables are added to the user's session:\n\n`token_last_check_time`. Identifies the current time and is used by the `\\Magento\\AdminAdobeIms\\Plugin\\BackendAuthSessionPlugin` plugin.\n\n`adobe_access_token` — Identifies  the `ACCESS_TOKEN` value received during authorization.\n\nThe `\\Magento\\AdminAdobeIms\\Plugin\\BackendAuthSessionPlugin` plugin checks if the `token_last_check_time` was updated 10 min ago. If the `token_last_check_time` was checked ten minutes ago, then the authentication workflow makes an API call to IMS to validate the access token, and the session continues. If the access token is valid, then the `token_last_check_time` value is updated to the current time. If the token is not valid, the session is terminated.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 192, "to": 200 } }
        }
      }
    ],
    [
      "789f0de4-d899-4a8c-9291-f26b4988322d",
      {
        "pageContent": "## Request a token\n\nA access token request contains three basic elements:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 202, "to": 204 } }
        }
      }
    ],
    [
      "347f7ce4-00c5-4510-9e07-d2989e3dc635",
      {
        "pageContent": "Component | Specifies\n--- | ---\nEndpoint |  A combination of the *server* that fulfills the request, the web service, and the `resource` against which the request is being made.<br/><br/>For example, in the `POST <host>/rest/<store_code>/V1/integration/customer/token` endpoint:<br/>The server is `magento.host/index.php/`,<br/> the web service is `rest`.<br/> and the resource is `/V1/integration/customer/token`.\nContent type | The content type of the request body. Set this value to either `\"Content-Type:application/json\"` or `\"Content-Type:application/xml\"`.\nCredentials | The username and password for a Commerce account.<br/><br/>To specify these credentials in a JSON request body, include code similar to the following in the call: <br/><br/>`{\"username\":\"<USER-NAME>\", \"password\":\"<PASSWORD>\"}`<br/><br/>To specify these credentials in XML, include code similar to the following in the call:<br/><br/>`<login><username>customer1</username><password>customer1pw</password></login>`",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 206, "to": 210 } }
        }
      }
    ],
    [
      "2c533791-86ce-4367-8782-539c2c5e9a1c",
      {
        "pageContent": "### Examples\n\nThe following image shows a token request for the admin account using a REST client:\n\n![REST client](../../_images/gs_auth_token1.png)\n\nThe following example uses the `curl` command to request a token for a customer account:\n\n```bash\ncurl -X POST \"https://<host>/rest/default/V1/integration/customer/token\" \\\n     -H \"Content-Type:application/json\" \\\n     -d '{\"username\":\"customer@example.com\", \"password\":\"customer_password\"}'\n```\n\nThe following example makes the same request with XML for a customer account token:\n\n```bash\ncurl -X POST \"http://<host>/rest/default/V1/integration/customer/token\" \\\n     -H \"Content-Type:application/xml\"  \\\n     -d \"<login><username>customer1</username><password>customer1pw</password></login>\"\n```\n\nFor more information about the `curl` command, see [Use cURL to run the request](../gs-curl.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 212, "to": 234 } }
        }
      }
    ],
    [
      "a7b3cf4d-a956-4d92-be74-2284e10a7dca",
      {
        "pageContent": "## Authentication token response\n\nA successful request returns a response body with the token, as follows:\n\n`asdf3hjklp5iuytre`",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 236, "to": 240 } }
        }
      }
    ],
    [
      "b3f00fec-3fda-41d8-83d9-352f0f868af2",
      {
        "pageContent": "## Use the token in a Web API request\n\nAny web API call that accesses a resource that requires a permission level higher than anonymous must contain the authentication token in the header To do this, specify a HTTP header in the following format:\n\n`Authorization: Bearer <authentication token>`\n\n### Admin access\n\nAdmins can access any resources for which they are authorized.\n\nFor example, to make a web API call with an admin token:\n\n`curl -X GET \"http://<host>/rest/default/V1/customers/2\" -H \"Authorization: Bearer vbnf3hjklp5iuytre\"`",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 242, "to": 254 } }
        }
      }
    ],
    [
      "9f29cd0f-ba92-4808-b4c5-fca996031f40",
      {
        "pageContent": "### Customer access\n\nCustomers can access only resources with `self` permissions.\n\nFor example, to make a web API call with a customer token:\n`curl -X GET \"http://<host>/rest/default/V1/customers/me\" -H \"Authorization: Bearer asdf3hjklp5iuytre\"`\n\n#### Related topics\n\n[Construct a request](../gs-web-api-request.md)\n\n[Configure services as web APIs](https://developer.adobe.com/commerce/php/development/components/web-api/services/)\n\n[Restricting access to anonymous web APIs](https://developer.adobe.com/commerce/webapi/rest/use-rest/anonymous-api-security/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/gs-authentication-token.md",
          "loc": { "lines": { "from": 256, "to": 269 } }
        }
      }
    ],
    [
      "515e06b4-05e4-4f83-9106-b50e45766b04",
      {
        "pageContent": "---\ntitle: Authentication\ndescription: Overview of authentication methods in web APIs.\nkeywords:\n  - REST\n  - Security\n---\n\n# Authentication\n\nAdobe Commerce and Magento Open Source allow developers to define web API resources and their permissions in the `webapi.xml` configuration file. See [Services as Web APIs](https://developer.adobe.com/commerce/php/development/components/web-api/services/).\n\nBefore you can make web API calls, you must authenticate your identity and have necessary permissions (authorization) to access the API resource. Authentication allows the application to identify the caller's user type. A user's (administrator, integration, customer, or guest) access rights determine an API call's resource accessibility.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "d7f05463-d239-4a74-8685-60cfb8052bd2",
      {
        "pageContent": "## Accessible resources\n\nThe list of resources that you can access depends on your user type. All customers have the same permissions, and as a result the same resources accessible. The preceding statement is true for guest users as well.\nEach administrator or integration user can have a unique set of permissions which is configured in the Admin.\nPermissions required to access particular resource are configured in the `webapi.xml` file. This table lists the resources that each user type can access:\n\nUser type | Accessible resources (defined in webapi.xml)\n--- | ---\nAdministrator or Integration | Resources for which administrators or integrators are authorized. For example, if administrators are authorized for the `Magento_Customer::group` resource, they can make a `GET /V1/customerGroups/:id` call.\nCustomer | Resources with `anonymous` or `self` permission\nGuest user | Resources with `anonymous` permission",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 15, "to": 25 } }
        }
      }
    ],
    [
      "2f63726c-88f4-46e5-b845-ec90963353f6",
      {
        "pageContent": "## Relationship between acl.xml and webapi.xml\n\nThe `acl.xml` file defines the access control list (ACL) for a given module. It defines the available set of permissions to access resources.\n\nAll `acl.xml` files across all modules are consolidated to build an ACL tree, which is used to select allowed Admin role resources or third-party integration access (**System** > **Extension** > **Integration** > **Add New Integration** > **Available APIs**).\n\n### Sample customer acl.xml\n\nFor example, account management, customer configuration, and customer group resource permissions are defined in the Customer module's [`acl.xml`](https://github.com/magento/magento2/tree/2.4/app/code/Magento/Customer/etc/acl.xml).\n\nWhen a developer creates the Web API configuration file (`webapi.xml`), the permissions defined in acl.xml are referenced to create access rights for each API resource.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 27, "to": 37 } }
        }
      }
    ],
    [
      "5baa5d27-9f15-455c-9dfa-83782f8d0789",
      {
        "pageContent": "### Sample (truncated) customer webapi.xml",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 39, "to": 39 } }
        }
      }
    ],
    [
      "7781b9d5-be10-4aea-8b81-dc2d1279d914",
      {
        "pageContent": "```xml\n<routes xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Webapi:etc/webapi.xsd\">\n    <!-- Customer Group -->\n    <route url=\"/V1/customerGroups/:id\" method=\"GET\">\n        <service class=\"Magento\\Customer\\Api\\GroupRepositoryInterface\" method=\"getById\"/>\n        <resources>\n            <resource ref=\"Magento_Customer::group\"/>\n        </resources>\n    </route>\n............\n.......\n.....\n    <!-- Customer Account -->\n    <route url=\"/V1/customers/:customerId\" method=\"GET\">\n        <service class=\"Magento\\Customer\\Api\\CustomerRepositoryInterface\" method=\"getById\"/>\n        <resources>\n            <resource ref=\"Magento_Customer::customer\"/>\n        </resources>\n    </route>\n    <route url=\"/V1/customers\" method=\"POST\">\n        <service class=\"Magento\\Customer\\Api\\AccountManagementInterface\" method=\"createAccount\"/>\n        <resources>\n            <resource ref=\"anonymous\"/>\n        </resources>\n    </route>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 41, "to": 66 } }
        }
      }
    ],
    [
      "8698484b-c05d-4762-b5ce-770fa990fa53",
      {
        "pageContent": "</route>\n    <route url=\"/V1/customers/:customerId\" method=\"PUT\">\n        <service class=\"Magento\\Customer\\Api\\CustomerRepositoryInterface\" method=\"save\"/>\n        <resources>\n            <resource ref=\"Magento_Customer::manage\"/>\n        </resources>\n    </route>\n    <route url=\"/V1/customers/me\" method=\"PUT\">\n        <service class=\"Magento\\Customer\\Api\\CustomerRepositoryInterface\" method=\"save\"/>\n        <resources>\n            <resource ref=\"self\"/>\n        </resources>\n        <data>\n            <parameter name=\"customer.id\" force=\"true\">%customer_id%</parameter>\n        </data>\n    </route>\n..........\n.....\n...",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 66, "to": 84 } }
        }
      }
    ],
    [
      "464c88b9-6951-4418-ae36-085da6b4a93a",
      {
        "pageContent": "```\n\nFor example, in the preceding `webapi.xml` for the customerGroups resource, only a user with `Magento_Customer::group` authorization can `GET /V1/customerGroups/:id`. On the other hand, you can create a customer using `POST /V1/customers` anonymously (or by a guest).\n\nAuthorization is granted to either an administrator (or an integration) defined in the Admin with the customer group selected as one of the resources in the ACL tree.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\n<div>\n\nA guest or anonymous is a special permission that doesn't need to be defined in `acl.xml` (and will not show up in the permissions tree in the Admin). It just indicates that the current resource in `webapi.xml` can be accessed without the need for authentication.\n\n<br></br>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 85, "to": 97 } }
        }
      }
    ],
    [
      "8449f724-d214-4f1e-b1ab-27409d469493",
      {
        "pageContent": "<br></br>\n\nSimilarly, self is a special access used if you already have an authenticated session with the system. Self access enables a user to access resources they own. For example, `GET /V1/customers/me` fetches the logged-in customer's details. This is typically useful for JavaScript-based widgets.\n\n</div>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 97, "to": 101 } }
        }
      }
    ],
    [
      "4fbfac88-da76-48d6-b8a2-d95430bc872d",
      {
        "pageContent": "## Web API clients and authentication methods\n\nYou must use a client, such as a mobile application or an external batch job, to access services using web APIs.\n\nEach type of client has a preferred authentication method. To authenticate, use the authentication method for your preferred client:\n\n### Mobile application authentication\n\nRegistered users use [token-based authentication](gs-authentication-token.md) to make web API calls using a mobile application. The token acts like an electronic key that provides access to the API(s).\n\n1. As a registered account user, you request a token from the Magento token service at the endpoint that is defined for your user type.\n\n1. The token service returns a unique authentication token in exchange for a username and password for an admin or customer account.\n\n1. To prove your identity, specify this token in the `Authorization` request header on web API calls.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 103, "to": 117 } }
        }
      }
    ],
    [
      "a8b16c5a-8dc6-47bf-abeb-00a3d8a522fb",
      {
        "pageContent": "### Third-party application authentication\n\nThird-party applications use [OAuth-based authentication](gs-authentication-oauth.md) to access the web APIs.\n\n1. The third-party Integration registers with Adobe Commerce.\n\n1. Merchants authorize extensions and applications to access or update store data.\n\n### JavaScript widget authentication (storefront or Admin)\n\nRegistered users use [session-based authentication](gs-authentication-session.md) to log in to the storefront or Admin.\n\nA session is identified by a cookie and time out after a period of inactivity. Additionally, you can have a session as a guest user without logging in.\n\n1. As a customer, you log in to the storefront with your customer credentials. As an administrator, you log in to the Admin with your administrator credentials.\n\n1. The web API framework identifies you and controls access to the requested resource.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 119, "to": 135 } }
        }
      }
    ],
    [
      "ca034559-196f-4379-a1ae-a285800b2b91",
      {
        "pageContent": "## Authentication types\n\nThe following sections describe tips about which type of authentication method you should use depending on your use case.\n\n### Token based (Bearer Authentication)\n\nThis method is a good choice for authenticating customers and Admin users in third-party applications that need to make authorized API calls to the store.\n\n*  **Customer Token**—Use this token in applications to authorize specific customer and query data related to that customer (for example, customer details, cart, and orders).\n*  **Admin Token**—Use this token in applications to authorize an Admin user and access Admin-related APIs.\n\n[Request a token](./gs-authentication-token.md#request-a-token) and then include it in [future requests](./gs-authentication-token.md#use-the-token-in-a-web-api-request).\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nYou should use this type of authentication mechanism over HTTPS.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 137, "to": 152 } }
        }
      }
    ],
    [
      "fda3d065-e5a7-483d-8de5-59062e2639a1",
      {
        "pageContent": "### Integration (Oauth)\n\nThis method is a good choice for integrating with a third-party system that supports OAuth 1.0a.\n\nAfter activating an integration (self activated), you can use the generated consumer key, consumer secret, access token, and access token secret to provide third-party systems access to Commerce Store resources. You do not need to make calls to the `/oauth/token/request` or `/oauth/token/access` endpoints to exchange tokens.\n\nIf a third-party system provides endpoints, you can use them to [activate an integration](./gs-authentication-oauth.md#activate-an-integration) and link your account. After completing the activation process, a third-party service can use the consumer key, consumer secret, access token, and access token secret provided by Commerce during activation to make API calls.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 154, "to": 160 } }
        }
      }
    ],
    [
      "23d742f3-5179-4aee-8023-a7d2d78a5811",
      {
        "pageContent": "#### Related topics\n\nProceed to the authentication method for your preferred client:\n\n*  Mobile application. [Token-based authentication](./gs-authentication-token.md).\n\n*  Third-party application. [OAuth-based authentication](./gs-authentication-oauth.md).\n\n*  JavaScript widget on the Admin or storefront. [Session-based authentication](./gs-authentication-session.md).\n\n*  [Extension attribute authentication](https://developer.adobe.com/commerce/php/development/components/attributes/)\n\n*  [Configure services as web APIs](https://developer.adobe.com/commerce/php/development/components/web-api/services/)\n\n*  [Create an ACL rule](https://developer.adobe.com/commerce/php/tutorials/backend/create-access-control-list-rule/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/index.md",
          "loc": { "lines": { "from": 162, "to": 176 } }
        }
      }
    ],
    [
      "1e57ede9-6fa3-4502-bf84-1986d239bc4c",
      {
        "pageContent": "---\ntitle: OAuth Error Codes\ndescription: A list of possible OAuth error codes and their meanings.\nkeywords:\n  - REST\n  - Security\n---\n\n# OAuth error codes\n\nWhen the third-party application makes an invalid request, the following OAuth-related errors can occur:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/oauth-errors.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "413d6db3-fb1f-4ac6-a46b-405b44e4c9eb",
      {
        "pageContent": "HTTP code | Error code | Text representation | Description\n--- | --- | --- | ---\n400 | 1 | `version_rejected` | The `oauth_version` parameter does not correspond to the \"1.0\" value.\n400 | 2 | `parameter_absent`  | A required parameter is missing in the request. The name of the missing parameter is specified additionally in the response.\n400 | 3 | `parameter_rejected` | The type of the parameter or its value do not meet the protocol requirements (for example,  array is passed instead of the string).\n400 | 4 | `timestamp_refused` | The timestamp value in the oauth_timestamp parameter is incorrect.\n401 | 5 | `nonce_used` | The nonce-timestamp combination has already been used.\n400 | 6 | `signature_method_rejected`| The signature method is not supported. The following methods are supported: HMAC-SHA1.\n401 | 7 | `signature_invalid` | The signature is invalid.\n401 | 8 | `consumer_key_rejected` | The Consumer Key has incorrect length or does not exist.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/oauth-errors.md",
          "loc": { "lines": { "from": 13, "to": 22 } }
        }
      }
    ],
    [
      "31755c68-4574-4a80-a649-1f09c7fae0e8",
      {
        "pageContent": "401 | 9 | `token_used` | An attempt of authorization of an already authorized token or an attempt to exchange a not temporary token for a permanent one.\n401 | 10 | `token_expired` | The temporary token has expired. At the moment, the mechanism of expiration of temporary tokens is not implemented and the current error is not used.\n401 | 11 | `token_revoke` | The token is revoked by the user who authorized it.\n401 | 12 | `token_rejected` | The token is not valid, or does not exist, or is not valid for using in the current type of request.\n401 | 13 | `verifier_invalid` |The confirmation string does not correspond to the token.\n403 | 14 | `permission_unknown` |The consumer permission is unknown.\n403 | 15 | `permission_denied` |The consumer does not authorized to access the resource.\n405 | 16 | `method_not_allowed` |The method is not supported or not allowed.\n403 | 17 | `consumer_key_invalid` |The Consumer Key is invalid.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/oauth-errors.md",
          "loc": { "lines": { "from": 23, "to": 31 } }
        }
      }
    ],
    [
      "3d550d1e-d125-4a36-88fb-af696a1b1cbc",
      {
        "pageContent": "## Related topic\n\n[OAuth-based authentication](./gs-authentication-oauth.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/authentication/oauth-errors.md",
          "loc": { "lines": { "from": 33, "to": 35 } }
        }
      }
    ],
    [
      "6c73a9eb-6b4a-4b58-b6d2-7610bea02fab",
      {
        "pageContent": "---\ntitle: Create an Integration\ndescription: Explains how to create an integration.\nkeywords:\n  - Integration\n  - REST\n---\n\n# Create an integration\n\nAn **integration** enables third-party services to call the Adobe Commerce and Magento Open Source web APIs. The APIs currently support external software, such as Accounting, Enterprise Resource Planning (ERP), Customer Relationship Management (CRM), Product Information Management (PIM), and marketing automation systems out of the box.\n\nImplementing a simple integration requires little knowledge of PHP or Commerce internal processes. However, you will need a working knowledge of\n\n*  [Commerce REST or SOAP Web APIs](../get-started/)\n*  [Web API authentication](./authentication/)\n*  [OAuth-based authentication](./authentication/gs-authentication-oauth.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "7afabe0f-7325-4b14-940a-fd5f3dba3673",
      {
        "pageContent": "Before you begin creating a module, make sure that you have a working installation that meets the [System Requirements](https://experienceleague.adobe.com/docs/commerce-operations/installation-guide/system-requirements.html).\n\nTo create an integration, follow these general steps:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 19, "to": 21 } }
        }
      }
    ],
    [
      "d836c263-05a8-46d9-8bd8-509e793a8e9b",
      {
        "pageContent": "## Create a skeletal module\n\nTo develop a module, you must:\n\n1. **Create the module file structure.** The module for an integration, like any other of your custom modules, should be placed under `<base_dir>/app/code/app/code/<vendor_name>/<module_name>`. E.g. `<base_dir>/app/code/Vendor1/Module1`\n\n   Also create  `etc`, `etc/integration`, and `Setup` subdirectories under `<base_dir>/app/code/<vendor_name>/<module_name>`, as shown in the following example:\n\n   ```bash\n   cd <base_dir>\n   ```\n\n   ```bash\n   mkdir -p app/code/<vendor_name>/<module_name>/etc/integration\n   ```\n\n   ```bash\n   mkdir -p app/code/<vendor_name>/<module_name>/Setup",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 23, "to": 40 } }
        }
      }
    ],
    [
      "fccce62d-02ea-4031-bc0e-ca2b6c2b653f",
      {
        "pageContent": "```\n\n   For more detailed information, see [Create your component file structure](https://developer.adobe.com/commerce/php/development/build/component-file-structure/).\n\n1. **Define your module configuration file.** The `etc/module.xml` file provides basic information about the module. Change directories to the `etc` directory and create the `module.xml` file. You must specify values for the following attributes:\n\n   <table>\n   <tr>\n   <th>Attribute</th><th>Description</th>\n   </tr>\n   <tr>\n   <td>name</td>\n   <td>A string that uniquely identifies the module.</td>\n   </tr>\n   <tr>\n   <td>setup_version</td>\n   <td>The version of Commerce the component uses</td>\n   </tr>\n   </table>\n   The following example shows an example `etc/module.xml` file.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 41, "to": 60 } }
        }
      }
    ],
    [
      "80366301-09a4-4bd0-9928-4d1860a918fb",
      {
        "pageContent": "```xml\n   <?xml version=\"1.0\"?>\n      <config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Module/etc/module.xsd\">\n          <module name=\"Vendor1_Module1\" setup_version=\"2.0.0\">\n               <sequence>\n                   <module name=\"Magento_Integration\"/>\n               </sequence>\n          </module>\n        </config>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 62, "to": 70 } }
        }
      }
    ],
    [
      "75f6c595-f156-41d1-846d-8be75f240a25",
      {
        "pageContent": "```\n\n   Module `Magento_Integration` is added to \"sequence\" to be loaded first. It helps to avoid the issue, when a module with integration config loaded, that leads to a malfunction.\n\n1. **Add your module's `composer.json` file.** Composer is a dependency manager for PHP. You must create a `composer.json` file for your module so that Composer can install and update the libraries your module relies on. Place the `composer.json` file in the `module-<module_name>` directory.\n\n   The following example demonstrates a minimal `composer.json` file.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 71, "to": 77 } }
        }
      }
    ],
    [
      "f3e203fa-3430-46e6-912d-2b33e1f67aa6",
      {
        "pageContent": "```json\n     {\n        \"name\": \"Vendor1_Module1\",\n        \"description\": \"create integration from config\",\n        \"require\": {\n           \"php\": \"~7.2.0|~7.3.0\",\n           \"magento/framework\": \"2.0.0\",\n           \"magento/module-integration\": \"2.0.0\"\n        },\n        \"type\": \"magento2-module\",\n        \"version\": \"1.0\",\n        \"autoload\": {\n           \"files\": [ \"registration.php\" ],\n           \"psr-4\": {\n              \"Vendor1\\\\Module1\\\\\": \"\"\n           }\n        }\n     }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 79, "to": 96 } }
        }
      }
    ],
    [
      "f24b63af-bd2d-4112-9956-bd7775ac174f",
      {
        "pageContent": "```\n\n    For more information, see [Create a component](https://developer.adobe.com/commerce/php/development/build/component-name/).\n\n1. **Create a `registration.php` file** The `registration.php` registers the module with the system. It must be placed in the module's root directory.\n\n   ```php\n   <?php\n   \\Magento\\Framework\\Component\\ComponentRegistrar::register(\n   \\Magento\\Framework\\Component\\ComponentRegistrar::MODULE,\n   'Vendor1_Module1',\n   __DIR__\n   );",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 98, "to": 110 } }
        }
      }
    ],
    [
      "34bb6c46-4ab9-47ea-97de-04e6ebd6673d",
      {
        "pageContent": "```\n\n1. **Create an install class.** Change directories to your `Setup` directory. Create a `InstallData.php` file that installs the integration configuration data into the Commerce integration table.\n\n   The following sample is boilerplate and requires minor changes to make your integration work.\n\n   ```php\n   <?php\n   namespace Vendor1\\Module1\\Setup;\n\n   use Magento\\Framework\\Setup\\ModuleContextInterface;\n   use Magento\\Framework\\Setup\\ModuleDataSetupInterface;\n   use Magento\\Integration\\Model\\ConfigBasedIntegrationManager;\n   use Magento\\Framework\\Setup\\InstallDataInterface;\n\n   class InstallData implements InstallDataInterface\n   {\n       /**\n        * @var ConfigBasedIntegrationManager\n        */\n\n       private $integrationManager;\n\n       /**\n        * @param ConfigBasedIntegrationManager $integrationManager\n        */",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 111, "to": 136 } }
        }
      }
    ],
    [
      "9d1285b1-eaca-49f9-b918-36e57d188044",
      {
        "pageContent": "public function __construct(ConfigBasedIntegrationManager $integrationManager)\n       {\n           $this->integrationManager = $integrationManager;\n       }\n\n       /**\n        * {@inheritdoc}\n        */\n\n       public function install(ModuleDataSetupInterface $setup, ModuleContextInterface $context)\n       {\n           $this->integrationManager->processIntegrationConfig(['TestIntegration']);\n       }\n   }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 138, "to": 151 } }
        }
      }
    ],
    [
      "60c60ddc-9281-4851-8a6a-0b34136fa7ec",
      {
        "pageContent": "```\n\n    In the following line\n\n    `$this->integrationManager->processIntegrationConfig(['testIntegration']);`\n\n    `testIntegration` must refer to your `etc/integration/config.xml` file, and the integration name value must be the same.\n\n    The following example demonstrates a minimal `config.xml` file.\n\n    ```xml\n    <integrations>\n       <integration name=\"TestIntegration\">\n          <email>someone@example.com</email>\n          <endpoint_url>https://example.com</endpoint_url>\n          <identity_link_url>https://example.com/identity_link_url</identity_link_url>\n       </integration>\n    </integrations>\n    ```\n\n    Also, be sure to change the path after `namespace` for your vendor and module names.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 152, "to": 172 } }
        }
      }
    ],
    [
      "4e353903-d253-439f-9954-0d9764dabf20",
      {
        "pageContent": "## Create integration files\n\nThe Integration module simplifies the process of defining your integration. This module automatically performs functions such as:\n\n*  Managing the third-party account that connects to Commerce.\n*  Maintaining OAuth authorizations and user data.\n*  Managing security tokens and requests.\n\nTo customize your module, you must create multiple XML files and read through other files to determine what resources existing modules have access to.\n\nThe process for customizing your module includes\n\n*  [Define the required resources](#define-the-required-resources)\n*  [Pre-configure the integration](#pre-configure-the-integration)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 174, "to": 187 } }
        }
      }
    ],
    [
      "a24665ba-aa52-4456-bbcc-d481649f6227",
      {
        "pageContent": "### Define the required resources\n\nThe `etc/integration/api.xml` file defines which API resources the integration has access to.\n\nTo determine which resources an integration needs access to, review the permissions defined in each module's `etc/acl.xml` file.\n\nIn the following example, the test integration requires access to the following resources in the Sales module:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 189, "to": 195 } }
        }
      }
    ],
    [
      "97474730-6c5d-46c2-a76d-b326e8910af9",
      {
        "pageContent": "```xml\n<integrations>\n    <integration name=\"TestIntegration\">\n        <resources>\n            <!-- To grant permission to Magento_Log::online, its parent Magento_Customer::customer needs to be declared as well-->\n            <resource name=\"Magento_Customer::customer\" />\n            <resource name=\"Magento_Log::online\" />\n            <!-- To grant permission to Magento_Sales::reorder, all its parent resources need to be declared-->    \n            <resource name=\"Magento_Sales::sales\" />\n            <resource name=\"Magento_Sales::sales_operation\" />\n            <resource name=\"Magento_Sales::sales_order\" />\n            <resource name=\"Magento_Sales::actions\" />\n            <resource name=\"Magento_Sales::reorder\" />\n        </resources>\n    </integration>\n</integrations>\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 197, "to": 213 } }
        }
      }
    ],
    [
      "84e66d7b-9942-4d1d-bccf-d0a639592e97",
      {
        "pageContent": "### Pre-configure the integration\n\nYour module can optionally provide values in configuration file `config.xml`, so that the integration can be automatically pre-configured with default values. To enable this feature, update the `config.xml` file in the `etc/integration` directory.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nIf you pre-configure the integration, the values cannot be edited from the admin panel.\n\nThe file defines which API resources the integration has access to.\n\n```xml\n<integrations>\n   <integration name=\"TestIntegration\">\n       <email></email>\n       <endpoint_url></endpoint_url>\n       <identity_link_url></identity_link_url>\n   </integration>\n</integrations>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 215, "to": 232 } }
        }
      }
    ],
    [
      "497a73ef-7653-4c59-9e1e-9e3de022c7f3",
      {
        "pageContent": "```\n\n<table>\n<tr>\n<th>Element</th>\n<th>Description</th>\n</tr>\n<tr>\n<td>integrations</td>\n<td>Contains one or more integration definitions.</td>\n</tr>\n<tr>\n<td>integration name=\"\"</td>\n<td>Defines an integration. The <inlineCode class=\"spectrum-Body--sizeS\">name</inlineCode> must be specified.</td>\n</tr>\n<tr>\n<td>email</td>\n<td>An email to associate with this integration.</td>\n</tr>\n<tr>\n<td>endpoint_url</td>\n<td><p>Optional. The URL where OAuth credentials can be sent when using OAuth for token exchange. We strongly recommend using <inlineCode class=\"spectrum-Body--sizeS\">https://</inlineCode>.</p>\n<p>See <a href=\"./authentication/gs-authentication-oauth\">OAuth-based authentication</a> for details.</p></td>\n</tr>\n<tr>\n<td>identity_link_url</td>\n<td>Optional. The URL that redirects the user to link their 3rd party account with the Commerce integration.</td>\n</tr>\n</table>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 233, "to": 261 } }
        }
      }
    ],
    [
      "2771d465-4f7d-45a2-986a-0c07ec95125b",
      {
        "pageContent": "## Install your module\n\nUse the following steps to install your module:\n\n1. Run the following command to update the database schema and data.\n\n   ```bash\n   bin/magento setup:upgrade\n   ```\n\n1. Run the following command to generate the new code.\n\n   **Note:** In Production mode, you may receive a message to 'Please rerun Magento compile command'.  Enter the command below. You are not prompted to run the compile command in Developer mode.\n\n   ```bash\n   bin/magento setup:di:compile\n   ```\n\n1. Run the following command to clean the cache.\n\n   ```bash\n   bin/magento cache:clean\n   ```\n\n## Check your integration\n\nLog in to the Admin and navigate to **System > Extensions > Integrations**. The integration should be displayed in the grid.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 263, "to": 289 } }
        }
      }
    ],
    [
      "31269a08-4676-4318-8a1b-c81af54f1e24",
      {
        "pageContent": "## Integrate with your application\n\nBefore you can activate your integration, you must create two pages on your application to handle OAuth communications.\n\n*  The location specified in the `identity_link_url` parameter must point to a page that can handle login requests.\n\n*  The location specified in the `endpoint_url` parameter (**Callback URL** in Admin) must be able to process OAuth token exchanges.\n\n### Login page\n\nWhen a merchant clicks the **Activate** button in Admin, a pop-up login page for the third-party application displays. Commerce sends values for `oauth_consumer_key` and `success_call_back` parameters. The application must store the value for `oauth_consumer_key` to tie it to the login ID. Use the `success_call_back` parameter to return control back to Commerce.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 291, "to": 301 } }
        }
      }
    ],
    [
      "96e59277-086b-43cb-b986-7dc1a45f42d6",
      {
        "pageContent": "### Callback page\n\nThe callback page must be able to perform the following tasks:\n\n*  Receive an initial HTTPS POST that Commerce sends when the merchant activates integration. This post contains the Commerce store URL, an `oauth_verifier`, the OAuth consumer key, and the OAuth consumer secret. The consumer key and secret are generated when the integration is created.\n\n*  Ask for a request token. A request token is a temporary token that the user exchanges for an access token. Use the following API to get a request token:\n\n   `POST /oauth/token/request`\n\n   See [Get a request token](./authentication/gs-authentication-oauth.md#get-a-request-token) for more details about this call.\n\n*  Parse the request token response. The response contains an `oauth_token` and `oauth_token_secret`.\n\n*  Ask for an access token. The request token must be exchanged for an access token. Use the following API to get a request token:\n\n   `POST /oauth/token/access`",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 303, "to": 319 } }
        }
      }
    ],
    [
      "bf5b69c4-12e9-40d5-9286-8b414619f3e4",
      {
        "pageContent": "See [Get an access token](./authentication/gs-authentication-oauth.md#get-an-access-token/) for more details about this call.\n\n*  Parse the access token response. The response contains an `oauth_token` and `oauth_token_secret`. These values will be different than those provided in the request token response.\n\n*  Save the access token and other OAuth parameters. The access token and OAuth parameters must be specified in the `Authorization` header in each call to Commerce.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 321, "to": 325 } }
        }
      }
    ],
    [
      "a2ad07f4-d001-48c6-9f02-8a41fc4fee7f",
      {
        "pageContent": "## Related Topics\n\n*  [Web API authentication](./authentication/)\n*  [OAuth-based authentication](./authentication/gs-authentication-oauth.md)\n*  [System Requirements](https://experienceleague.adobe.com/docs/commerce-operations/installation-guide/system-requirements.html)\n*  [Create the module file structure](https://developer.adobe.com/commerce/php/development/build/component-file-structure/)\n*  [Create a component](https://developer.adobe.com/commerce/php/development/build/component-name/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/create-integration.md",
          "loc": { "lines": { "from": 327, "to": 333 } }
        }
      }
    ],
    [
      "d05f988f-1c2b-4bcf-9264-ef87d5f3d6dd",
      {
        "pageContent": "---\ntitle: Use cURL to Run the Request\ndescription: Explains how to use cURL.\nkeywords:\n  - REST\n---\n\n# Using cURL to run requests\n\n['cURL'](https://curl.haxx.se/) is a command-line tool that lets you transmit HTTP requests and receive responses from the command line or a shell script. It is available for Linux distributions, Mac OS X, and Windows.\n\nTo use cURL to run your REST web API call, use the cURL command syntax to construct the command.\n\nTo create the endpoint in the call, append the REST URI that you constructed in [Construct a request](./gs-web-api-request.md) to this URL:\n\n`https://<HOST_OR_IP>/<BASE_INSTALL_DIR>/rest/`\n\nTo pass the customer data object in the POST call payload, specify a JSON or XML request body on the call.\n\nFor a complete list of cURL command options, see [curl.1 the man page](http://curl.haxx.se/docs/manpage.html).\n\nThe cURL examples in this guide use the following command-line options:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "880dec18-bd22-40ec-b91a-69e5a2331932",
      {
        "pageContent": "Option | Description\n--- | ---\n`-d` `-data` | Sends the specified data in a POST request to the HTTP server. Use this option to send a JSON or XML request body to the server.\n`-H` `-header` | Specifies an extra HTTP header in the request. Precede each header with the `-H` option. You can specify any number of extra headers. For a list of common headers used in web API requests, see [HTTP headers](./gs-web-api-request.md#http-headers)\n`-i` `-input` | Includes the HTTP header in the output.\n`-s` `-silent` | Specifies silent or quiet mode, which makes cURL mute. Progress and error messages are suppressed.\n`-T` `-upload-file` | Transfers the specified local file to the remote URL.\n`-X` `-request` | Specifies the request method to use when communicating with the HTTP server. The specified request method is used instead of the default GET method.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 24, "to": 31 } }
        }
      }
    ],
    [
      "171bf2fc-05e7-479f-ba20-e47f0874d7f4",
      {
        "pageContent": "## Using cUrl\n\nAdobe Commerce and Magento Open Source provide a service-wrapper for using cURL instead of using the default PHP cURL. The class ``Magento\\Framework\\HTTP\\Client\\Curl`` may be used to work with HTTP protocol using cURL library.\nFirst, create an instance of `Magento\\Framework\\HTTP\\Client\\Curl`.\n\n```php\n/**\n* Constructor.\n*\n* @param Magento\\Framework\\HTTP\\Client\\Curl $curl\n*/\npublic function __construct(\n   Magento\\Framework\\HTTP\\Client\\Curl $curl\n) {\n   $this->curl = $curl;\n}\n```\n\n### Make GET request using cURL\n\n```php\n// get method\n$this->curl->get($url);\n\n// output of curl request\n$result = $this->curl->getBody();\n```\n\nwhere `$url` is the endpoint URL.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 33, "to": 61 } }
        }
      }
    ],
    [
      "c5292ec6-91df-40c1-ad41-b271e9ce88ee",
      {
        "pageContent": "### Make POST request using cURL\n\n```php\n// post method\n$this->curl->post($url, $params);\n\n// output of curl requestt\n$result = $this->curl->getBody();\n```\n\nwhere  `$url` is the endpoint URL, `$params` is an array of data that is being sent via the POST request. Other parameters may be added in the URL directly.\nA `$params` example:\n\n```php\n$params = [\n  'user[email]' => $user->getEmail(),\n  'user[cellphone]' => $providerInfo['phone_number'],\n  'user[country_code]' => $providerInfo['country_code'],\n]\n```\n\nThe cURL client can also add headers, basic authorization, additional cURL options, and cookies in the cURL request. The cURL client provides these methods before using `get` or `post` method.\n\n### Set cURL header using addHeader method\n\nThe `addHeader` method accepts two parameters. The cURL header name and a cURL header value.\n\n```php\n$this->curl->addHeader(\"Content-Type\", \"application/json\");\n$this->curl->addHeader(\"Content-Length\", 200);\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 63, "to": 93 } }
        }
      }
    ],
    [
      "c1c25e05-0fd2-4087-8508-85716ff9a3b8",
      {
        "pageContent": "### Set cURL header using setHeaders method\n\nThe `setHeaders` method accepts an array as a parameter.\n\n```php\n$headers = [\"Content-Type\" => \"application/json\", \"Content-Length\" => \"200\"];\n$this->curl->setHeaders($headers);\n```\n\n### Set basic authorization in cURL\n\nSet the basic authorization using the `setCredentials` method.\n\n```php\n$userName = \"User_Name\";\n$password = \"User_Password\";\n\n$this->curl->setCredentials($userName, $password);\n```\n\nIt is equivalent to setting CURLOPT_HTTPHEADER value:\n\n```php\n\"Authorization : \" . \"Basic \" . base64_encode($userName . \":\" . $password)\n```\n\n### Set cURL option using setOption method\n\nThe `setOption` method accepts two parameters. The cURL option name and the cURL option value.\n\n```php\n$this->curl->setOption(CURLOPT_RETURNTRANSFER, true);\n$this->curl->setOption(CURLOPT_PORT, 8080);\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 95, "to": 128 } }
        }
      }
    ],
    [
      "ee836d76-4a4d-4797-8020-2531a14b138d",
      {
        "pageContent": "### Set cURL option using setOptions method\n\nThe `setOptions` method accepts an array as a parameter.\n\n```php\n$options = [CURLOPT_RETURNTRANSFER => true, CURLOPT_PORT => 8080];\n\n$this->curl->setOptions($options);\n```\n\n### Set cURL cookies using addCookie method\n\nThe `addCookie` method accepts an array as a parameter. The cookie name and the cookie value.\n\n```php\n$this->curl->addCookie(\"cookie-name\", \"cookie-value\");\n```\n\n### Set cURL cookies using setCookies method\n\nThe ``setCookies`` method accepts an array as a parameter.\n\n```php\n$cookies = [\"cookie-name-1\" => \"cookie-value-1\", \"cookie-name-2\" => \"cookie-value-2\"];\n$this->curl->setCookies($cookies);\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 130, "to": 155 } }
        }
      }
    ],
    [
      "c0028268-6d3b-4e1f-8d7b-dbbb0085c6a3",
      {
        "pageContent": "### Example usage\n\nFor example, the `Magento\\Marketplace\\Model\\Partners` class gets partners info using cURL from the api of Magento connect.\n\n```php\nnamespace Magento\\Marketplace\\Model;\n\nuse Magento\\Framework\\HTTP\\Client\\Curl;\nuse Magento\\Marketplace\\Helper\\Cache;\nuse Magento\\Backend\\Model\\UrlInterface;\n\n/**\n * @api\n * @since 100.0.2\n */\nclass Partners\n{\n    /**\n     * @var Curl\n     */\n    protected $curlClient;\n\n    /**\n     * @var string\n     */\n    protected $urlPrefix = 'https://';\n\n    /**\n     * @var string\n     */\n    protected $apiUrl = 'magento.com/magento-connect/platinumpartners/list';\n\n    /**\n     * @var \\Magento\\Marketplace\\Helper\\Cache\n     */\n    protected $cache;\n\n    /**\n     * @var UrlInterface\n     */\n    private $backendUrl;",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 157, "to": 197 } }
        }
      }
    ],
    [
      "125d01f2-d66f-4ee4-989b-560aece042ff",
      {
        "pageContent": "/**\n     * @param Curl $curl\n     * @param Cache $cache\n     * @param UrlInterface $backendUrl\n     */\n    public function __construct(Curl $curl, Cache $cache, UrlInterface $backendUrl)\n    {\n        $this->curlClient = $curl;\n        $this->cache = $cache;\n        $this->backendUrl = $backendUrl;\n    }\n\n    /**\n     * @return string\n     */\n    public function getApiUrl()\n    {\n        return $this->urlPrefix . $this->apiUrl;\n    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 199, "to": 217 } }
        }
      }
    ],
    [
      "c2fc7b65-8d42-4832-91f3-530fc12450dd",
      {
        "pageContent": "/**\n     * Gets partners json\n     *\n     * @return array\n     */\n    public function getPartners()\n    {\n        $apiUrl = $this->getApiUrl();\n        try {\n            $this->getCurlClient()->post($apiUrl, []);\n            $this->getCurlClient()->setOptions(\n                [\n                    CURLOPT_REFERER => $this->getReferer()\n                ]\n            );\n            $response = json_decode($this->getCurlClient()->getBody(), true);\n            if ($response['partners']) {\n                $this->getCache()->savePartnersToCache($response['partners']);\n                return $response['partners'];\n            } else {\n                return $this->getCache()->loadPartnersFromCache();\n            }\n        } catch (\\Exception $e) {\n            return $this->getCache()->loadPartnersFromCache();\n        }\n    }\n\n    /**\n     * @return Curl\n     */\n    public function getCurlClient()\n    {\n        return $this->curlClient;\n    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 219, "to": 252 } }
        }
      }
    ],
    [
      "f3bd1e29-1e41-4deb-afd8-df5b8dbb9b26",
      {
        "pageContent": "/**\n     * @return cache\n     */\n    public function getCache()\n    {\n        return $this->cache;\n    }\n\n    /**\n     * @return string\n     */\n    public function getReferer()\n    {\n        return \\Magento\\Framework\\App\\Request\\Http::getUrlNoScript($this->backendUrl->getBaseUrl())\n        . 'admin/marketplace/index/index';\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 254, "to": 270 } }
        }
      }
    ],
    [
      "d60eccee-706f-44d0-a135-593fe2773be9",
      {
        "pageContent": "```\n\nFirst off all the cURL client instance is created in `__construct`.\nMethod `getPartners` uses the cURL client makes POST request using cURL, the `post` method takes the first parameter the URL to the api of `magento-connect`, second parameter is empty array, then the option `CURLOPT_REFERER` added by `setOptions` method of the cURL client.\nAs result the script call `getBody` method of the cURL client.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 271, "to": 275 } }
        }
      }
    ],
    [
      "766f3a88-e831-455d-ba7c-75c4c63892b7",
      {
        "pageContent": "#### Related topics\n\n[Status codes and responses](./gs-web-api-response.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-curl.md",
          "loc": { "lines": { "from": 277, "to": 279 } }
        }
      }
    ],
    [
      "f4b07adf-2534-4764-9bbc-30fc8d8f2076",
      {
        "pageContent": "---\ntitle: Construct a Request\ndescription: Explains how to construct and format an API request for Magento web APIs.\nkeywords:\n  - GraphQL\n  - REST\n---\n\n# Construct a request\n\nTo configure a web API, developers define some of the elements of each API call in the `<module root dir>/vendor/<vendor-name>/<module-name>/etc/webapi.xml` file, where `<vendor-name>` is your vendor name (for example, `sample`) and `<module-name>` is your module name (which exactly matches its definition in `composer.json`). For example, the web API for the Customer service is defined in the `<root>/vendor/sample/module-customer/etc/webapi.xml` configuration file. Service data interfaces and builders define the required and optional parameters and the return values for the API calls.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "fc8a5d9a-a9e2-408e-bbe7-df7cdd5ab7dd",
      {
        "pageContent": "## Overview\n\nThe following table and the sections that follow the table describe web API call elements:\n\nElement | Specifies\n--- | ---\n[HTTP verb](#http-verb) | The action to perform against the endpoint.\n[Endpoint](#endpoint) | A combination of the _server_ that fulfills a request, the web service, and the _resource_ against which the request is being made.\n[HTTP headers](#http-headers) | The authentication token, the call request and response formats, and other information.\n[Call payload](#call-payload) | A set of input parameters and attributes that you supply with the request. API operations have both **required** and **optional** inputs. You specify input parameters in the URI and input attributes in a request body. You can specify a JSON- or XML-formatted request body.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 13, "to": 22 } }
        }
      }
    ],
    [
      "d8337117-4f95-49f2-827f-c24b980c3a89",
      {
        "pageContent": "### HTTP verb\n\nSpecify one of these HTTP verbs in the request:\n\n*  `GET`. Requests transfer of a current representation of the target resource. If you omit the verb, `GET` is the default.\n*  `PUT`. Requests that the state of the target resource be created or replaced with the state defined by the representation enclosed in the request message payload.\n*  `POST`. Requests that the origin server accept the representation enclosed in the request as data to be processed by the target resource.\n*  `DELETE`. Requests that the origin server delete the target resource.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 24, "to": 31 } }
        }
      }
    ],
    [
      "0d9410c1-6d96-42d0-99ad-08abfec3f639",
      {
        "pageContent": "### Endpoint\n\nAn endpoint is a combination of the _server_ that fulfills a request, the web service, the store code, the resource against which the request is being made, and any template parameters.\n\nFor example, in the `https://example.com/rest/default/V1/customerGroups/:id` endpoint, the server is `example.com`, the web service is `rest`, the resource is `/V1/customerGroups`, and the template parameter is `id`.\n\nA store code can have one of the following values.\n\n*  The store's assigned store code.\n*  `default`. This is the default value when no store code is provided.\n*  `all`. This value only applies to endpoints defined in the CMS and Product modules. If this value is specified, the API call affects all of the merchant's stores.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 33, "to": 43 } }
        }
      }
    ],
    [
      "3f61bd3e-e90f-463a-8ec6-041c58f5223b",
      {
        "pageContent": "### HTTP headers\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nTo specify an HTTP header in a cURL command, use the `-H` option.\n\nSpecify one or more of the following HTTP headers in your web API calls:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 45, "to": 51 } }
        }
      }
    ],
    [
      "aca1f6db-a6e2-4ce1-8156-c2e363d594ae",
      {
        "pageContent": "HTTP header | Description | Syntax\n--- | --- | ---\n`Authorization` | Required, except for calls made on behalf of a guest. Specifies the authentication token that proves you as the owner of a customer, admin, or integration account. You specify the token in the `Authorization` request header with the `Bearer` HTTP authorization scheme. | `Authorization: Bearer <TOKEN>` <br/><br/>`<TOKEN>` is the authentication token returned by the token service. See [Authentication](./authentication/).\n`Accept` | Optional. Specifies the format of the response body. Default is `JSON`. | `Accept: application/<FORMAT>` <br/><br/>`<FORMAT>` is either `JSON` or `XML`.\n`Content-Type` | Required for operations with a request body. Specifies the format of the request body. | `Content-Type:application/<FORMAT>` <br/><br/>`<FORMAT>` is either `JSON` or `XML`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 53, "to": 57 } }
        }
      }
    ],
    [
      "dea39251-b7ca-4696-83d9-245b3f2e8d4d",
      {
        "pageContent": "`X-Captcha` | A shopper-entered CAPTCHA value. It is required when a shopper enters a CAPTCHA value on the frontend, unless an integration token is provided. Forms requiring CAPTCHA values are configured at **Stores** > **Configuration** > **Customers** > **Customer Configuration** > **CAPTCHA** > **Forms**. | String\n`X-ReCaptcha` | A value generated by the Google reCAPTCHA API. It is required when reCAPTCHA is enabled for certain forms, unless an integration token is provided. Forms requiring reCAPTCHA values are configured at **Stores** > **Security** > **Google reCAPTCHA Storefront** > **Storefront**. | String",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 58, "to": 59 } }
        }
      }
    ],
    [
      "fcdfa4e3-7ead-42b4-96bc-f4d2e944d2cc",
      {
        "pageContent": "### Call payload\n\nThe call payload is a set of input <i>parameters</i> and <i>attributes</i> that you supply with the request. API operations have both _required_ and _optional_ inputs.\n\nYou specify input parameters in the URI. For example, in the `GET /V1/customers/:customerId` URI, you must specify the `customerId` template parameter. This parameter filters the response by the specified customer ID.\n\nYou specify input attributes in a JSON- or XML-formatted request body. For example, in the `POST /V1/customers` call, you must specify a request body like this:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 61, "to": 67 } }
        }
      }
    ],
    [
      "3e574742-f4fb-4382-b7a2-a96fe2e54490",
      {
        "pageContent": "```json\n{\n    \"customer\": {\n        \"email\": \"user@example.com\",\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\"\n    },\n    \"addresses\": [\n        {\n            \"defaultShipping\": true,\n            \"defaultBilling\": true,\n            \"firstname\": \"John\",\n            \"lastname\": \"Doe\",\n            \"region\": {\n                \"regionCode\": \"CA\",\n                \"region\": \"California\",\n                \"regionId\": 12\n            },\n            \"postcode\": \"90001\",\n            \"street\": [\"Zoe Ave\"],\n            \"city\": \"Los Angeles\",\n            \"telephone\": \"555-000-00-00\",\n            \"countryId\": \"US\"\n        }\n    ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 69, "to": 94 } }
        }
      }
    ],
    [
      "8d611b98-eed0-47f1-a0f4-1dc2cd9bd3a0",
      {
        "pageContent": "```\n\nThis JSON-formatted request body includes a `customer` object with the customer email, first name, and last name, and customer address information. The information in this request body is used to populate the new customer account.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 95, "to": 97 } }
        }
      }
    ],
    [
      "5cd16549-45af-4ed4-be66-e18563a63faf",
      {
        "pageContent": "## Construct a request\n\nThis example shows you how to construct a REST web API call to create an account.\n\n1. Open the [Magento/Customer/etc/webapi.xml](https://github.com/magento/magento2/tree/2.4/app/code/Magento/Customer/etc/webapi.xml)\n\n1. Find the route element that defines the `createAccount` call:\n\n   ```xml\n   <route url=\"/V1/customers\" method=\"POST\">\n      <service class=\"Magento\\Customer\\Api\\AccountManagementInterface\" method=\"createAccount\"/>\n      <resources>\n         <resource ref=\"anonymous\"/>\n      </resources>\n   </route>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 99, "to": 113 } }
        }
      }
    ],
    [
      "0b7082f7-a464-4a46-b15e-ed9cf8c87635",
      {
        "pageContent": "```\n\n1. Use the `method` and `url` values on the `route` element to construct the URI. In this example, the URI is POST `/V1/customers`.\n\n1. Use the `class` attribute on the `service` element to identify the service interface. In this example, the service interface is the `AccountManagementInterface` PHP file.\n\n   Open the [AccountManagementInterface.php](https://github.com/magento/magento2/tree/2.4/app/code/Magento/Customer/Api/AccountManagementInterface.php) file and find the `createAccount` method, as follows:\n\n   ```php?start_inline=1\n   public function createAccount(\n        \\Magento\\Customer\\Api\\Data\\CustomerInterface $customer,\n        $password = null,\n        $redirectUrl = ''\n    )",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 114, "to": 127 } }
        }
      }
    ],
    [
      "2e950180-c873-4dee-9de2-17ad7f3f4df0",
      {
        "pageContent": "```\n\n    The `createAccount` call requires a `customer` data object. The `password` and `redirectUrl` values are optional. The default `password` value is `null` and the default `redirectUrl` value is blank.\n\n1. To pass the `customer` data object in the POST call payload, specify [JSON](http://www.json.com/) or XML request body on the call.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 128, "to": 132 } }
        }
      }
    ],
    [
      "461f8ee3-5ad3-489f-bdc6-922fbb75ca0f",
      {
        "pageContent": "### Customers Search API request example\n\nThe following example builds a Customers Search request based on search criteria. It returns a list of customers that match given search criteria.\n\n1. Prepare `Authorization`, `Accept` and `Content-Type` headers to be passed to a request object. Use the Authorization token returned by the token service.\n\n   ```php?start_inline=1\n   $token = 'token';\n   $httpHeaders = new \\Zend\\Http\\Headers();\n   $httpHeaders->addHeaders([\n      'Authorization' => 'Bearer ' . $token,\n      'Accept' => 'application/json',\n      'Content-Type' => 'application/json'\n   ]);",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 134, "to": 147 } }
        }
      }
    ],
    [
      "502b3080-d9a8-4055-b97b-93bfa9b47984",
      {
        "pageContent": "```\n\n1. Open the [Magento/Customer/etc/webapi.xml](https://github.com/magento/magento2/tree/2.4/app/code/Magento/Customer/etc/webapi.xml)  configuration file and find the [CustomerRepositoryInterface](https://github.com/magento/magento2/tree/2.4/app/code/Magento/Customer/Api/CustomerRepositoryInterface.php) interface with the `getList` method.\n\n1. Set the headers, URI and method to a request object. Use URI `/V1/customers/search` and method `GET` values. Use the `searchCriteria` parameter to complete the Customer Search query. See [searchCriteria usage](https://developer.adobe.com/commerce/webapi/rest/use-rest/performing-searches/).\n\n   The following example finds customers whose first name contains \"ver\" or whose last name contains \"Costello\".\n\n    ```php?start_inline=1\n    $request = new \\Zend\\Http\\Request();\n    $request->setHeaders($httpHeaders);\n    $request->setUri('http://magento.ll/rest/V1/customers/search');\n    $request->setMethod(\\Zend\\Http\\Request::METHOD_GET);",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 148, "to": 160 } }
        }
      }
    ],
    [
      "39344732-d4e5-431e-b8d8-2f57a71a52aa",
      {
        "pageContent": "$params = new \\Zend\\Stdlib\\Parameters([\n        'searchCriteria' => [\n            'filterGroups' => [\n                0 => [\n                    'filters' => [\n                        0 => [\n                            'field' => 'firstname',\n                            'value' => '%ver%',\n                            'condition_type' => 'like'\n                        ],\n                        1 => [\n                            'field' => 'lastname',\n                            'value' => '%Costello%',\n                            'condition_type' => 'like'\n                        ]\n                    ]\n                ]\n            ],\n            'current_page' => 1,\n            'page_size' => 10\n        ],\n    ]);\n\n    $request->setQuery($params);",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 162, "to": 185 } }
        }
      }
    ],
    [
      "1ab21c68-b385-45e0-88c1-b8be7317b54f",
      {
        "pageContent": "```\n\n1. Prepare a HTTP Curl client object and pass the request object to `Client::send()` method.\n\n   ```php?start_inline=1\n   $client = new \\Zend\\Http\\Client();\n   $options = [\n      'adapter'   => 'Zend\\Http\\Client\\Adapter\\Curl',\n      'curloptions' => [CURLOPT_FOLLOWLOCATION => true],\n      'maxredirects' => 0,\n      'timeout' => 30\n    ];\n    $client->setOptions($options);\n\n    $response = $client->send($request);",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 186, "to": 200 } }
        }
      }
    ],
    [
      "6e800875-4336-4d80-9b16-25616cee7165",
      {
        "pageContent": "```\n\nThis request returns a list of all customers in JSON format, as shown below. You can also specify XML format by changing `Accept` header of the request.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 201, "to": 203 } }
        }
      }
    ],
    [
      "aafb1a0f-51de-4cb3-9106-10c628ba54b7",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"id\": 1,\n            \"group_id\": 1,\n            \"default_billing\": \"1\",\n            \"default_shipping\": \"1\",\n            \"created_at\": \"2017-12-05 09:50:11\",\n            \"updated_at\": \"2018-09-22 06:32:50\",\n            \"created_in\": \"Default Store View\",\n            \"dob\": \"1973-12-15\",\n            \"email\": \"roni_cost@example.com\",\n            \"firstname\": \"Veronica\",\n            \"lastname\": \"Costello\",\n            \"gender\": 2,\n            \"store_id\": 1,\n            \"website_id\": 1,\n            \"addresses\": [\n                {\n                    \"id\": 1,\n                    \"customer_id\": 1,\n                    \"region\": {\n                        \"region_code\": \"MI\",\n                        \"region\": \"Michigan\",\n                        \"region_id\": 33\n                    },\n                    \"region_id\": 33,\n                    \"country_id\": \"US\",\n                    \"street\": [\n                        \"6146 Honey Bluff Parkway\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 205, "to": 235 } }
        }
      }
    ],
    [
      "cbfdb46f-8c3a-476b-adc3-d6e501a3df7b",
      {
        "pageContent": "],\n                    \"telephone\": \"(555) 229-3326\",\n                    \"postcode\": \"49628-7978\",\n                    \"city\": \"Calder\",\n                    \"firstname\": \"Veronica\",\n                    \"lastname\": \"Costello\",\n                    \"default_shipping\": true,\n                    \"default_billing\": true\n                },\n                {\n                    \"id\": 19,\n                    \"customer_id\": 1,\n                    \"region\": {\n                        \"region_code\": \"London \",\n                        \"region\": \"London \",\n                        \"region_id\": 0\n                    },\n                    \"region_id\": 0,\n                    \"country_id\": \"GB\",\n                    \"street\": [\n                        \"1 Studio 103 The Business Centre 61\"\n                    ],\n                    \"telephone\": \"1234567890\",\n                    \"postcode\": \"CF24 3DG\",\n                    \"city\": \"Tottenham \",",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 236, "to": 260 } }
        }
      }
    ],
    [
      "e15a710b-c656-4f8f-950d-6ab1b036fc15",
      {
        "pageContent": "\"firstname\": \"Veronica\",\n                    \"lastname\": \"Costello\"\n                }\n            ],\n            \"disable_auto_group_change\": 0\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"firstname\",\n                        \"value\": \"%ver%\",\n                        \"condition_type\": \"like\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 1\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 261, "to": 283 } }
        }
      }
    ],
    [
      "b2d04996-b8cc-48e2-8c45-f821e65db1dd",
      {
        "pageContent": "#### Related topics\n\nRun the web API call through a [cURL command](./gs-curl.md) or a REST client.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-request.md",
          "loc": { "lines": { "from": 285, "to": 287 } }
        }
      }
    ],
    [
      "e0c1676a-3056-46a2-b6d1-b952a253ad59",
      {
        "pageContent": "---\ntitle: Status Codes and Responses\ndescription: A list of status codes and REST responses that can be returned from the APIs.\nkeywords:\n  - GraphQL\n  - REST\n---\n\n# Status codes and REST responses\n\nEach web API call returns a HTTP status code and a response payload. When an error occurs, the response body also returns an error message.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-response.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "ebb05db9-a3f0-412b-b5f0-6070a95f4490",
      {
        "pageContent": "### HTTP status codes\n\nEach web API call returns an HTTP status code that reflects the result of a request:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-response.md",
          "loc": { "lines": { "from": 13, "to": 15 } }
        }
      }
    ],
    [
      "4eb86201-a24d-4d51-8171-46806e10c02c",
      {
        "pageContent": "HTTP code | Meaning | Description\n--- | --- | ---\n200 | Success | The framework returns HTTP 200 to the caller upon success.\n400 | Bad Request | If service implementation throws either `Magento_Service_Exception` or its derivative, the framework returns a HTTP 400 with a error response including the service-specific error code and message. This error code could indicate a problem such as a missing required parameter or the supplied data didn't pass validation.\n401 | Unauthorized | The caller was not authorized to perform the request. For example, the request included an invalid token or a user with customer permissions attempted to access an object that requires administrator permissions.\n403 | Forbidden | Access is not allowed for reasons that are not covered by error code 401.\n404 | Not found | The specified REST endpoint does not exist. The caller can try again.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-response.md",
          "loc": { "lines": { "from": 17, "to": 23 } }
        }
      }
    ],
    [
      "57369b24-fc75-42ee-a703-dca430c5f1d1",
      {
        "pageContent": "405 | Not allowed | A request was made of a resource using a method that is not supported by that resource. For example, using GET on a form which requires data to be presented via POST, or using PUT on a read-only resource.\n406 | Not acceptable | The requested resource is only capable of generating content that is not acceptable according to the Accept headers sent in the request.\n500 | System Errors | If service implementation throws any other exception  like network errors, database communication, framework returns HTTP 500.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-response.md",
          "loc": { "lines": { "from": 24, "to": 26 } }
        }
      }
    ],
    [
      "cde05795-124c-41be-88d7-bd1af349db94",
      {
        "pageContent": "### Response payload\n\nPOST, PUT, and GET web API calls return a response payload. This payload is a JSON- or XML-formatted response body. The `Accept: application/<FORMAT>` header in the request determines the format of the response body, where `FORMAT` is either `json` or `xml`.\n\nA successful DELETE call returns `true`. An unsuccessful DELETE call returns a payload similar to the other calls.\n\nThe response payload depends on the call.\nFor example, a `GET /V1/customers/:customerId` call returns the following payload:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-response.md",
          "loc": { "lines": { "from": 28, "to": 35 } }
        }
      }
    ],
    [
      "71a66658-a2d6-4eac-8d66-930218393d62",
      {
        "pageContent": "```json\n{\n    \"customers\": {\n        \"customer\": {\n            \"email\": \"user@example.com\",\n            \"firstname\": \"John\",\n            \"lastname\": \"Doe\"\n        },\n        \"addresses\": [\n            {\n                \"defaultShipping\": true,\n                \"defaultBilling\": true,\n                \"firstname\": \"John\",\n                \"lastname\": \"Doe\",\n                \"region\": {\n                    \"regionCode\": \"CA\",\n                    \"region\": \"California\",\n                    \"regionId\": 12\n                },\n                \"postcode\": \"90001\",\n                \"street\": [\"Zoe Ave\"],\n                \"city\": \"Los Angeles\",\n                \"telephone\": \"555-000-00-00\",\n                \"countryId\": \"US\"\n            }\n        ]\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-response.md",
          "loc": { "lines": { "from": 37, "to": 64 } }
        }
      }
    ],
    [
      "e5a50027-cb98-4280-aaa4-2954f7e2d5cd",
      {
        "pageContent": "```\n\nThis JSON-formatted response body includes a `customer` object with the customer email, first name, and last name, and customer address information. The information in this response body shows account information for the specified customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-response.md",
          "loc": { "lines": { "from": 65, "to": 67 } }
        }
      }
    ],
    [
      "42360731-a1cd-46ca-b93c-e0e178ff9a16",
      {
        "pageContent": "### Error format\n\nWhen an error occurs, the response body contains an error code, error message, and optional parameters.\n\nPart | Description\n--- | --- | ---\n`code` | The status code representing the error.\n`message` | The message explaining the error.\n`parameters` | Optional. An array of attributes used to generate a different and/or localized error message for the client.\n\nAs an example, the application returns a `code` of `400` and the following `message` when an invalid `sku` value is specified in the call `PUT V1/products/:sku`.\n\n```json\n{\n  \"message\": \"Invalid product data: %1\",\n  \"parameters\": [\n    \"Invalid attribute set entity type\"\n  ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/gs-web-api-response.md",
          "loc": { "lines": { "from": 69, "to": 88 } }
        }
      }
    ],
    [
      "31a50b0a-01c3-4320-b058-ea2896244d46",
      {
        "pageContent": "---\ntitle: Getting Started with Adobe Commerce Web APIs\ndescription: A high-level overview of Magento web APIs.\nkeywords:\n  - GraphQL\n  - REST\n---\n\n# Getting started with Adobe Commerce web APIs\n\nThe Adobe Commerce and Magento Open Source web API framework provides integrators and developers the means to use web services that communicate with the application. Key features include:\n\n*  Support for [GraphQL](../graphql/), [REST](https://developer.adobe.com/commerce/webapi/rest/) (Representational State Transfer) and [SOAP](soap-web-api-calls.md) (Simple Object Access Protocol).\n\n*  Three types of [authentication](./authentication/index.md):\n   *  Third-party applications authenticate with [OAuth 1.0a](./authentication/gs-authentication-oauth.md).\n   *  Mobile applications authenticate using [tokens](./authentication/gs-authentication-token.md).\n   *  Administrators and customers are authenticated with [login credentials](./authentication/gs-authentication-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/index.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "cd60c08b-6556-4b24-95bc-fde25dd36b18",
      {
        "pageContent": "*  All accounts and integrations are assigned resources that they have access to. The API framework checks that any call has the authorization to perform the request.\n\n*  Any native or third-party service can be [configured as a web API](https://developer.adobe.com/commerce/php/development/components/web-api/services/) with a few lines of xml. To configure a web API, you define XML elements and attributes in a `webapi.xml` configuration file. If a service is not defined in a configuration file, it will not be exposed at all.\n\n*  The framework is based on the CRUD (create, read, update, delete) & search model. The system does not currently support webhooks.\n\n*  The framework supports field filtering of web API responses to conserve mobile bandwidth.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/index.md",
          "loc": { "lines": { "from": 20, "to": 26 } }
        }
      }
    ],
    [
      "7c925912-ca50-48cf-92f5-3cef0d321050",
      {
        "pageContent": "*  Integration style web APIs enable a single web API call to run multiple services at once for a more efficient integration.  An example of this behavior can be seen in the Catalog where one web API call can create a product. If your payload includes the `stock_item` and `media_gallery_entries` objects, then the framework will also create the product's inventory & media in that one API call.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/index.md",
          "loc": { "lines": { "from": 28, "to": 28 } }
        }
      }
    ],
    [
      "4ed49749-0006-497d-8a79-4b4409fd03a8",
      {
        "pageContent": "## What can I do with the web APIs?\n\nThe APIs can be used to perform a wide array of tasks. For example:\n\n*  Create a shopping app. This can be a traditional app that a user downloads on a mobile device. You could also create an app that an employee uses on a showroom floor to help customers make purchases.\n\n*  Integrate with CRM (Customer Relationship Management) or ERP (Enterprise Resource Planning) backend systems, such as Salesforce or Xero.\n\n*  Integrate with a CMS (Content Management System). Currently, content tagging is not supported.\n\n*  Create JavaScript widgets in the storefront or on the Admin panel. The widget makes AJAX calls to access services.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/index.md",
          "loc": { "lines": { "from": 30, "to": 40 } }
        }
      }
    ],
    [
      "2d5e87fa-e3ae-4bbf-ac88-dd29911e81bf",
      {
        "pageContent": "## How do I get started?\n\nYou must register a web service on Admin. Use the following general steps to set up Magento to enable web services.\n\n1. If you are using token-based authentication, create a web services user on Admin by selecting **System** > Permission > **All Users** > Add New User. (If you are using session-based or OAuth authentication, you do not need to create the new user in the Admin.)\n1. Create a new integration on Admin. To create an integration, click **System** > Extensions > **Integration** > Add New Integration**. Be sure to restrict which resources the integration can access.\n1. Use a REST or SOAP client to configure authentication.\n\nSee the User Guide for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/index.md",
          "loc": { "lines": { "from": 42, "to": 50 } }
        }
      }
    ],
    [
      "83748935-0661-4e8e-a1d6-1253dcfc1d64",
      {
        "pageContent": "---\ntitle: Rate limiting\ndescription: Explains how to limit attacks that attempt to brute force credit card details.\nkeywords:\n  - REST\n  - Security\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n# Rate limiting\n\n<BetaNote />\n\nIn a carding attack, an attacker tries to determine which credit card numbers are valid, usually in batches of thousands. Attackers can use similar techniques to brute force missing details, such as the expiration date. Adobe Commerce merchants can be targeted by this attack type through their shops and integrations with 3rd-party payment gateways.\n\nAs of Adobe Commerce 2.4.7, you can configure rate limiting for the payment information transmitted using REST and GraphQL. This added layer of protection allows merchants to prevent and decrease the volume of carding attacks that test many credit card numbers at once.\n\nThe rate limiting functionality affects the following entry points:\n\nREST:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "8ce5b2fe-a0b2-471f-aa26-c0ce1ea04c0b",
      {
        "pageContent": "REST:\n\n- `<base_url>/rest/V1/<store_code>/guest-carts/<cart_id>/payment-information`\n- `<base_url>/rest/V1/<store_code>/guest-carts/<cart_id>/order`\n- `<base_url>/rest/V1/<store_code>/carts/mine/payment-information`\n- `<base_url>/rest/V1/<store_code>/carts/mine/order`\n\nGraphQL:\n\n- `<base_url>/graphql`\n\nInstantPurchase module:\n\n- `magento/module-instant-purchase`\n\nSetting up rate limiting has two discrete steps:\n\n1. Add a configuration that connects to the service where the request logs will be stored. By default, the connection is configured for a Redis server. Most merchants must configure a cloud or local installation of Redis to implement the rate limiting feature. However, merchants who have [instances hosted on Amazon EC2](#use-aws-elasticache-with-your-ec2-instance) use an AWS ElastiCache instead of a cloud or local Redis instance.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 21, "to": 38 } }
        }
      }
    ],
    [
      "2492b066-2e18-4533-b715-17e932fa83a8",
      {
        "pageContent": "**Note:** The data, including request time and identifier, is temporarily stored in Redis. Registered users are identified by their user ID. Non-registered users are identified by their external IP address.\n\n1. Configure Commerce to set restrictions on guest users and authenticated customers. This step is the same for all merchants.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 40, "to": 42 } }
        }
      }
    ],
    [
      "9927cfd9-d165-4137-810c-7d8eaf0e57b0",
      {
        "pageContent": "## Set the Redis service connection (most merchants)\n\nThe [Configure Redis](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cache/redis/config-redis.html) topic in the _Commerce Configuration Guide_ describes basic installation and configuration information.\n\nCommerce provides command-line options to configure the connection to the backpressure logger. Although you can configure the backpressure logger by editing the `<Commerce-install-dir>/app/etc/env.php` file, using the command line is the recommended method, especially for initial configurations. The command line provides validation, ensuring the configuration is syntactically correct.\n\nBy default, the connection is configured for a Redis server. Use the following `bin/magento setup:config:set` commands to configure the Redis service connection:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 44, "to": 50 } }
        }
      }
    ],
    [
      "a073a7cf-334d-49d1-a843-20b8ea3103f1",
      {
        "pageContent": "Command line parameter | Value | Description | Default\n--- | --- | --- | ---\n`--backpressure-logger` | `redis` | Specifies the backpressure logger handler | This value must be set to `redis`.\n`--backpressure-logger-id-prefix` | String | ID prefix for keys | None\n`--backpressure-logger-redis-db` | Database number | Required if you use Redis for both the default and full-page cache. You must specify the database number of one of the caches; the other cache uses 0 by default.<br/><br/>**Important**: If you use Redis for more than one type of caching, the database numbers must be different. It is recommended that you assign the default caching database number to 0, the page-caching database number to 1, and the session storage database number to 2. And as a result, the number of the database for storing the backpressure log is 3. | `3`",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 52, "to": 56 } }
        }
      }
    ],
    [
      "6d7e7d41-3bd7-4165-b408-81b4c64c4283",
      {
        "pageContent": "`--backpressure-logger-redis-password` | Password | Configuring a Redis password enables one of its built-in security features: the `auth` command, which requires clients to authenticate to access the database. The password is configured directly in Redis' configuration file: `/etc/redis/redis.conf` | None\n`--backpressure-logger-redis-persistent` | String | Unique string to enable persistent connections | None\n`--backpressure-logger-redis-port` | Port | Redis server listen port | `6379`\n`--backpressure-logger-redis-server` | Server | Fully qualified hostname, IP address, or an absolute path to a UNIX socket. The default value of 127.0.0.1 indicates Redis is installed on the Commerce server. | `127.0.0.1`\n`--backpressure-logger-redis-timeout` | Timeout | Redis server timeout, in seconds | 2.5\n`--backpressure-logger-redis-user` | User ID | Redis server user | None",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 57, "to": 62 } }
        }
      }
    ],
    [
      "70f68574-4b52-4516-b75d-81b4bb6c0133",
      {
        "pageContent": "The following example creates a new connection to a Redis server with the following properties:\n\n- Host: 195.34.23.5\n- Port: 9345\n- Password: s0M3StR0NgP@SsW0Rd\n- User: SomeUser\n\n```bash\n$ bin/magento setup:config:set \\\n    --backpressure-logger=redis \\\n    --backpressure-logger-redis-server=195.34.23.5 \\\n    --backpressure-logger-redis-port=9345 \\\n    --backpressure-logger-redis-timeout=1 \\\n    --backpressure-logger-redis-persistent=persistent \\\n    --backpressure-logger-redis-db=3 \\\n    --backpressure-logger-redis-password=s0M3StR0NgP@SsW0Rd\\\n    --backpressure-logger-redis-user=SomeUser \\\n    --backpressure-logger-id-prefix=some_pref",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 64, "to": 81 } }
        }
      }
    ],
    [
      "eb58d2ea-8ec2-44e7-9f57-3f5558733103",
      {
        "pageContent": "```\n\nAfter the command is executed, the following configuration is added to the `app/etc/env.php` file.\n\n```php\n[\n//...\n    'backpressure' => [\n        'logger' => [\n            'type' => 'redis',\n            'options' => [\n                'server' => '195.34.23.5',\n                'port' => 9345,\n                'timeout' => 1,\n                'persistent' => 'persistent',\n                'db' => '3',\n                'password' => 's0meStr0ngPassw0rd',\n                'user' => 'SomeUser'\n            ],\n            'id-prefix' => 'some_pref'\n        ]\n    ]\n//...\n];\n```\n\nContinue to [Configure rate limiting](#configure-rate-limiting)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 82, "to": 108 } }
        }
      }
    ],
    [
      "56b1e035-2685-4334-acd2-d9542d5429a0",
      {
        "pageContent": "## Use AWS ElastiCache with your EC2 instance\n\nAs of Commerce 2.4.3, instances hosted on Amazon EC2 can use an AWS ElastiCache in place of a local Redis instance.\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nThis section applies to Commerce instances running on Amazon EC2 VPCs. It does not work for standard cloud or on-premises installations.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 110, "to": 116 } }
        }
      }
    ],
    [
      "eecc79da-44c2-4431-94cd-64233416caf2",
      {
        "pageContent": "### Configure a Redis cluster\n\nAfter [setting up a Redis cluster on AWS](https://aws.amazon.com/getting-started/hands-on/setting-up-a-redis-cluster-with-amazon-elasticache/), configure the EC2 instance to use the ElastiCache.\n\n1. [Create an ElastiCache Cluster](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/set-up.html) in the same region and VPC of the EC2 instance.\n\n1. Verify the connection.\n\n    - Open an SSH connection to your EC2 instance.\n\n    - On the EC2 instance, install the Redis client:\n\n       ```bash\n       sudo apt-get install redis\n       ```\n\n    - Add an inbound rule to the EC2 security group: Type `- Custom TCP, port - 6379, Source - 0.0.0.0/0`\n\n    - Add an inbound rule to the ElastiCache Cluster security group: Type `- Custom TCP, port - 6379, Source - 0.0.0.0/0`\n\n    - Connect to the Redis CLI:\n\n       ```bash\n       redis-cli -h <ElastiCache Primary Endpoint host> -p <ElastiCache Primary Endpoint port>\n       ```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 118, "to": 142 } }
        }
      }
    ],
    [
      "748c729f-3ee0-458b-9616-a8bac9247cdf",
      {
        "pageContent": "### Configure Commerce to use the cluster\n\nRun `setup` commands to specify the Redis endpoints.\nTo configure Commerce for the backpressure logger connection:\n\n```bash\nbin/magento setup:config:set --backpressure-logger=redis --backpressure-logger-redis-server=<ElastiCache Primary Endpoint host> --backpressure-logger-redis-port=<ElastiCache Primary Endpoint port> --backpressure-logger-redis-db=3\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 144, "to": 151 } }
        }
      }
    ],
    [
      "ae3fee8e-62fd-4d0d-a68f-ee005b884b5d",
      {
        "pageContent": "## Configure rate limiting\n\nAfter the Redis server connection has been configured, you can run several `bin/magento config:set` commands that define how rate limiting is implemented for guest users and authenticated customers. Rate limiting is disabled by default.\n\n| Parameter                      | Description                               |\n|--------------------------------|-------------------------------------------|\n| sales/backpressure/enabled     | Enable rate limiting for placing orders.  |\n| sales/backpressure/disabled    | Disable the rate limiting feature.        |\n| sales/backpressure/guest_limit | Requests limit per guest.                 |\n| sales/backpressure/limit       | Requests limit per authenticated customer.|\n| sales/backpressure/period      | The number of seconds to wait until resetting the counter. |\n\nYou can also enable and configure rate limiting from the Admin by selecting **Stores** > **Configuration** > **Sales** > **Sales** > **Rate Limiting**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 153, "to": 165 } }
        }
      }
    ],
    [
      "a43e9bea-8d8f-4bc7-931e-abe81fc1ea43",
      {
        "pageContent": "![Rate limiting section](../_images/api-security-rate-limiting.png)\n\nUse the following commands to enable and configure rate limiting:\n\n1. Enable (`1`) or disable (`0`) rate limiting for placing orders:\n\n    ```bash\n    $ bin/magento config:set sales/backpressure/enabled 1",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 167, "to": 174 } }
        }
      }
    ],
    [
      "f488065f-5357-425e-9eca-a678923c35af",
      {
        "pageContent": "```\n\n1. Set the request limit per guest (IP address).\n\n    ```bash\n    $ bin/magento config:set sales/backpressure/guest_limit 50\n    ```\n  \n1. Set the request limit for authenticated customers:\n\n    ```bash\n    $ bin/magento config:set sales/backpressure/limit 10\n    ```\n\n1. Set the period of time (in seconds) for the request limit. Supported values `60`, `3600`, `86400` seconds. This time period is multiplied by three to calculate the timeout period:\n\n    ```bash\n    $ bin/magento config:set sales/backpressure/period 60",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 175, "to": 192 } }
        }
      }
    ],
    [
      "74774d80-b0c5-4306-ad88-99667961cb53",
      {
        "pageContent": "```\n\nThe following scenario describes how rate limiting can be configured.\n\n- Anonymous users are limited to 50 orders (`sales/backpressure/guest_limit` = `50`) from a single IP address within one minute (`sales/backpressure/period` = `60`).  If they exceed the order limit, then they will have to wait three times the specified `period` of time (`180` seconds) from their last request.\n- If an authorized customers attempts to place more than `10` orders (`sales/backpressure/limit` = `10`) within the `period` of `60` seconds, then the user will not be able to place an order for a period of `180` seconds.\n\nIf you need to check a configuration, use the following CLI command:\n\nExample:\n\n```bash\n$ bin/magento config:show | grep backpressure\n```\n\nResponse:\n\n```terminal\nsales/backpressure/limit - 10\nsales/backpressure/guest_limit - 50\nsales/backpressure/period - 60\nsales/backpressure/enabled - 1\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 193, "to": 215 } }
        }
      }
    ],
    [
      "33b216f3-adfe-4ea7-92f9-2c12bc4e7253",
      {
        "pageContent": "## Log contents\n\nIf rate limiting has been enabled for the payment information endpoint and the GraphQl mutation via the UI/CLI, but the Redis service connection for store log requests has not been configured in the `app/etc/env.php` file, then the rate-limiting will not apply. The behavior will be the same if this option is disabled, but the application logs (`<magento-root>/var/log/system.log`) will contain the following message:\n\n```text\n...\n[2022-11-11T15:46:32.716679+00:00] main.ERROR: Backpressure sliding window not applied. Invalid request logger type:  [] []\n...\n[2022-11-11T15:46:37.730863+00:00] main.ERROR: Backpressure sliding window not applied. Invalid request logger type:  [] []\n...\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 217, "to": 227 } }
        }
      }
    ],
    [
      "d9fd5cee-c2e5-430f-8005-d0a70ef633bc",
      {
        "pageContent": "## Example HTTP Responses\n\nIf rate limiting is applied to a REST request, then a response with HTTP status code `429 - Too Many Requests` will be generated.\n\nExample:\n\n```text\nHTTP/1.1 429 Too Many Requests\n...\nPragma: no-cache\nCache-Control: no-store\n...\n{\"message\":\"Too Many Requests\",\"trace\":null}\n```\n\nIf rate limiting is applied to a GraphQl request, then a response with HTTP status code `200 - Ok` will be generated and all relevant information will be present in the response body.\n\nExample:\n\n```text\nHTTP/1.1 200 OK\n...\nPragma: no-cache\nCache-Control: max-age=0, must-revalidate, no-cache, no-store\n ...\n{\n    \"errors\":[\n        {\n            \"message\":\"Too Many Requests\",\n            \"extensions\":{\"category\":\"graphql-too-many-requests\"},\n             \"locations\":[\n                 {\"line\":2,\"column\":3}\n             ],\n             \"path\":[\"placeOrder\"]\n        }\n    ],\n    \"data\":{\"placeOrder\":null}\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rate-limiting.md",
          "loc": { "lines": { "from": 229, "to": 267 } }
        }
      }
    ],
    [
      "9d704cee-7f77-4f89-8c4b-33ab9905ff39",
      {
        "pageContent": "---\ntitle: Use REST APIs\ndescription: Overview of basic Magento REST API information.\nkeywords:\n  - REST\n---\n\n# Using REST APIs\n\nThe Magento REST API defines a set of functions that a developer can use to perform requests and receive responses. These interactions are performed using the HTTP protocol.\n\nThe caller issues an HTTP request, which contains the following elements:\n\n*  An HTTP header that provides authentication and other instructions\n*  A verb, which can be one of GET, POST, PUT, or DELETE.\n*  An endpoint, which is a Uniform Resource Indicator (URI) that identifies the server, the web service, and the resource being acted on.\n*  The call payload, which is set of input parameters and attributes that you supply with the request.\n\nMagento returns a response payload as well as an HTTP status code.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rest_front.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "0d4050e3-6cd9-4691-8ea4-f915320db694",
      {
        "pageContent": "This guide introduces web API, REST, and cURL command concepts. It shows you how to authenticate and construct and run REST web API calls. You run REST web API calls through <a href=\"./gs-curl\">cURL commands</a> or a REST client.\n\nRead the following sections to get up and running with the Magento web APIs:\n\n<ul>\n   <li>\n      <p>\n         <a href=\"./authentication/\"> Authentication</a>\n      </p>\n   </li>\n   <li>\n      <p>\n         <a href=\"./gs-web-api-request\">Construct a request</a>\n      </p>\n   </li>\n   <li>\n      <p>\n         <a href=\"./gs-curl\">Use cURL to run the request</a>\n      </p>\n   </li>\n   <li>\n      <p>\n         <a href=\"./gs-web-api-response\">Review the response</a>\n      </p>\n   </li>\n</ul>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/rest_front.md",
          "loc": { "lines": { "from": 21, "to": 46 } }
        }
      }
    ],
    [
      "950d5137-b12b-499c-bafd-1190264734f3",
      {
        "pageContent": "---\ntitle: Use SOAP Services\ndescription: A description of available SOAP services and their conventions\n---\n\n# Using SOAP services",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/soap-web-api-calls.md",
          "loc": { "lines": { "from": 1, "to": 6 } }
        }
      }
    ],
    [
      "af27200b-ffff-4321-9c8c-0c2ebfff7bdb",
      {
        "pageContent": "## WSDL File\n\nA WSDL file is generated only for services that you request. This means that different clients may use different services and therefore use different WSDLs.\n\nThe Adobe Commerce and Magento Open Source web API uses WSDL 1.2, which complies with WS-I 2.0 Basic Profile.\n\nEach service interface that is part of a service contract is represented as a separate service in the WSDL.\n\nTo consume several services, you must specify them in the WSDL endpoint URL.\n\n| Service | WSDL endpoint URL | Available services |\n| --------- | ---------- | ------------------------------------------ |\n| customer | http://magentohost/soap?wsdl&services=customerCustomerRepositoryV1 | \\Magento\\Customer\\Api\\Data\\CustomerInterface |\n| customer, catalogProduct | http://magentohost/soap/custom_store?wsdl&services=customerCustomerRepositoryV1,catalogProductRepositoryV1 | \\Magento\\Customer\\Api\\Data\\CustomerInterface, \\Magento\\Catalog\\Api\\Data\\ProductInterface |\n\nThe WSDL URL follows the following pattern:",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/soap-web-api-calls.md",
          "loc": { "lines": { "from": 8, "to": 23 } }
        }
      }
    ],
    [
      "efdea1b1-b1d3-47e6-b507-1dd5cded6496",
      {
        "pageContent": "`http://<host>/soap/<optional_store_code>?wsdl&services=<service_name_1>,<service_name_2>`\n\nYou must specify each service version in the endpoint URL.\n\nThis way, you can have a strict contract between your application and the service provider.\n\nIf you want an overview to all the available Web Services, use the following URL format to get a list of all SOAP Services:\n\n`http://<host>/soap/all?wsdl_list=1`\n\n```xml\n<response>\n    ...\n    <storeStoreRepositoryV1>\n        <wsdl_endpoint>http://<host>/soap/all?wsdl&services=storeStoreRepositoryV1</wsdl_endpoint>\n    </storeStoreRepositoryV1>\n    <storeGroupRepositoryV1>\n        <wsdl_endpoint>http://<host>/soap/all?wsdl&services=storeGroupRepositoryV1</wsdl_endpoint>\n    </storeGroupRepositoryV1>\n    <storeWebsiteRepositoryV1>\n        <wsdl_endpoint>http://<host>/soap/all?wsdl&services=storeWebsiteRepositoryV1</wsdl_endpoint>\n    </storeWebsiteRepositoryV1>\n    ...\n</response>\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/soap-web-api-calls.md",
          "loc": { "lines": { "from": 25, "to": 49 } }
        }
      }
    ],
    [
      "ee329c38-807b-4896-93e2-d7e2fc40c0b7",
      {
        "pageContent": "### Service class-to-service name conversion rules\n\nService names use the following conventions:\n\n*  CamelCase is used for service naming.\n*  The string `Service` is omitted.\n*  The `Magento` prefix is omitted.\n*  The `Interface` suffix is omitted.\n*  If the service name is the same as the module name, the module name is omitted. For example, if there is a customer service interface in the customer module, the word `customer` will be used in the service name only once.\n\n| Original Service Interface Name | Service Name |\n| --- | --- |\n| \\Magento\\Customer\\Api\\Data\\CustomerInterface | customerCustomerRepositoryV1 |\n| \\Magento\\Customer\\Api\\AccountManagementInterface | customerAccountManagementV1 |\n| \\Enterprise\\Customer\\Service\\V3\\Customer\\AddressInterface | enterpriseCustomerAddressV3 |",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/soap-web-api-calls.md",
          "loc": { "lines": { "from": 51, "to": 65 } }
        }
      }
    ],
    [
      "354919f2-d4f8-4eed-a10c-d61564328413",
      {
        "pageContent": "## Authentication\n\nProtected SOAP resources can be accessed using bearer tokens (OAuth access tokens) over HTTP. Access tokens are strings representing an access authorization issued to the client. For more information, see [OAuth-based authentication](./authentication/gs-authentication-oauth.md)\n\nThe following PHP script illustrates how to get an access token:\n\n```php\n<?php\n$opts = [\n            'http'=> [\n                'header' => 'Authorization: Bearer 36849300bca4fbff758d93a3379f1b8e'\n            ]\n        ];\n$wsdlUrl = 'http://magento.ll/soap/default?wsdl=1&services=testModule1AllSoapAndRestV1';\n$serviceArgs = [\"id\" => 1];\n\n$context = stream_context_create($opts);\n$soapClient = new SoapClient($wsdlUrl, ['version' => SOAP_1_2, 'stream_context' => $context]);\n\n$soapResponse = $soapClient->testModule1AllSoapAndRestV1Item($serviceArgs); ?>\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/soap-web-api-calls.md",
          "loc": { "lines": { "from": 67, "to": 87 } }
        }
      }
    ],
    [
      "d65346a8-d0f4-4ad1-b46b-71eff6d57324",
      {
        "pageContent": "#### Related topics\n\n*  [OAuth-based authentication](./authentication/gs-authentication-oauth.md)\n*  [Service contracts](https://developer.adobe.com/commerce/php/development/components/service-contracts/)\n*  [SOAP Reference](soap-web-api-calls.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/soap-web-api-calls.md",
          "loc": { "lines": { "from": 89, "to": 93 } }
        }
      }
    ],
    [
      "890ef7b3-1c16-4e7f-b123-ef6fa5db29a1",
      {
        "pageContent": "---\ntitle: Web API Functional Testing\ndescription: How to implement and run functional tests on Web APIs.\nkeywords:\n  - GraphQL\n  - REST\n---\n\n# Web API Functional Testing\n\nThe Web API testing framework allows you to test Web APIs from the client application point of view. The tests can be used with either REST or SOAP. The REST or SOAP adapter that runs the tests is specified in PHPUnit configuration. See [How to Run the Tests](#how-to-run-the-tests) for more information.\n\nTo run Web API tests for GraphQl, see [GraphQL functional testing](../graphql/develop/functional-testing.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "c05a5a17-02af-4392-ab64-4b16c7c39b40",
      {
        "pageContent": "## Implementation Details\n\nThe Web API functional testing framework depends on the integration testing framework and reuses most of classes implemented there.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 15, "to": 17 } }
        }
      }
    ],
    [
      "d7857a10-7842-46ed-bb4f-d5b032b0af3a",
      {
        "pageContent": "### Custom Annotations for Data Fixtures\n\nIn the Web API functional tests only, the custom annotation  `@magentoApiDataFixture` is available for declaring fixtures. The difference of this annotation from `@magentoDataFixture` is that the fixture will be committed and accessible during HTTP requests made within the test body. The usage rules of `@magentoApiDataFixture` are the same as `@magentoDataFixture` usage rules.\n\n<InlineAlert variant=\"success\" slots=\"text\"/>\n\nIf data was added to the DB using `@magentoApiDataFixture`, it will not be automatically cleared after test execution. The data is cleared when `@magentoDataFixture` is used.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 19, "to": 25 } }
        }
      }
    ],
    [
      "fc300417-4a14-4bd9-8dee-4728374cad5c",
      {
        "pageContent": "Do not define fixtures in `dev/tests/api-functional`. Instead, they must be taken from `dev/tests/integration`. The integration framework defines most necessary fixtures, and they should be reused during Web API functional testing. If the existing set of fixtures is insufficient, add new fixtures under `dev/tests/integration`. The fixtures will then be available for both testing frameworks.\n\nTo keep your test environment clean, clear all entities created in fixture files or within tests itself from the DB after test execution. This can be done either directly in tearDown or by a corresponding rollback for the fixture file. This file should be named the same as a fixture, but with `_rollback` suffix.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 27, "to": 29 } }
        }
      }
    ],
    [
      "1710b787-5952-41a3-ba3b-ebf6aea2fba1",
      {
        "pageContent": "## How to Create a New Test\n\nAll Web API functional tests should inherit from the generic test case `Magento\\TestFramework\\TestCase\\WebapiAbstract`. It defines the `_webApiCall()` method, which should be used to perform Web API calls from tests. Clients of `_webApiCall()` are unaware of which adapter will be used to perform the remote call.\n\n```php\nnamespace Magento\\Webapi\\Routing;",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 31, "to": 36 } }
        }
      }
    ],
    [
      "828d9043-7ad5-45a6-96fc-f6ab6e9bfb56",
      {
        "pageContent": "class CoreRoutingTest extends \\Magento\\TestFramework\\TestCase\\WebapiAbstract\n{\n    public function testBasicRoutingExplicitPath()\n    {\n        $itemId = 1;\n        $serviceInfo = [\n            'rest' => [\n                'resourcePath' => '/V1/testmodule1/' . $itemId,\n                'httpMethod' => \\Magento\\Framework\\Webapi\\Rest\\Request::HTTP_METHOD_GET,\n            ],\n            'soap' => [\n                'service' => 'testModule1AllSoapAndRestV1',\n                'operation' => 'testModule1AllSoapAndRestV1Item',\n            ],\n        ];\n        $requestData = ['itemId' => $itemId];\n        $item = $this->_webApiCall($serviceInfo, $requestData);\n        $this->assertEquals('testProduct1', $item['name'], \"Item was retrieved unsuccessfully\");\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 38, "to": 57 } }
        }
      }
    ],
    [
      "933a9601-91db-430c-bd03-91e08f2746c7",
      {
        "pageContent": "```\n\nThe test above should be able to test SOAP and REST, depending on what adapter is currently used by the testing framework. The format of `$serviceInfo` is defined by the Web API client adapter interface:\n\n```php\nnamespace Magento\\TestFramework\\TestCase\\Webapi;",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 58, "to": 63 } }
        }
      }
    ],
    [
      "f408b390-8d7e-487f-a701-0cb7b3629b70",
      {
        "pageContent": "interface AdapterInterface\n{\n    /**\n     * Perform call to the specified service method.\n     *\n     * @param array $serviceInfo <pre>\n     * array(\n     *     'rest' => array(\n     *         'resourcePath' => $resourcePath, // e.g. /products/:id\n     *         'httpMethod' => $httpMethod,     // e.g. GET\n     *         'token' => '21hasbtlaqy8t3mj73kjh71cxxkqj4aq'    // optional : for token based Authentication. Will\n     *                                                             override default OAuth based authentication provided\n     *                                                             by test framework\n     *     ),\n     *     'soap' => array(\n     *         'service' => $soapService,    // soap service name with Version suffix e.g. catalogProductV1, customerV2\n     *         'operation' => $operation     // soap operation name e.g. catalogProductCreate\n     *     )\n     * );\n     * </pre>\n     * @param array $arguments",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 65, "to": 85 } }
        }
      }
    ],
    [
      "1d59526f-cf32-4b17-81bf-8f97fdfe60d8",
      {
        "pageContent": "* @param string|null $storeCode if store code not provided, default store code will be used\n     * @param \\Magento\\Integration\\Model\\Integration|null $integration\n     * @return array|string|int|float|bool\n     */\n    public function call($serviceInfo, $arguments = [], $storeCode = null, $integration = null);\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 86, "to": 92 } }
        }
      }
    ],
    [
      "96b4b6fb-6980-4917-ab0d-70f6b05ba678",
      {
        "pageContent": "## How to Run the Tests\n\n### Prerequisites\n\n1. Install the PHP Soap extension.\n\n   Copy `php_soap.dll` or `php_soap.so` to your PHP extensions directory. Edit your `php.ini` file and enable the PHP Soap extension. Usually this means deleting the leading semi-colon in front of the extension. Then restart Apache.\n\n   `extension=php_soap.dll`\n\n1. Before running the functional tests you need to clear your cache. Now you are ready to run the tests.",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 94, "to": 104 } }
        }
      }
    ],
    [
      "9c144548-3611-4409-9531-4193ec07e46a",
      {
        "pageContent": "### Running the Tests\n\n1. Copy `dev/tests/api-functional/phpunit_rest.xml.dist` and `phpunit_soap.xml.dist` to `dev/tests/api-functional/phpunit_rest.xml` and `phpunit_soap.xml`.\n\n1. Define the Commerce instance URL as a value of `TESTS_BASE_URL`, Test Webservice User as value of `TESTS_WEBSERVICE_USER` and Test Webservice API key as value of `TESTS_WEBSERVICE_APIKEY` in copied file i.e. `phpunit_rest.xml` or `phpunit_soap.xml`.\n\n1. Copy `dev/tests/api-functional/config/install-config-mysql.php.dist` to `dev/tests/api-functional/config/install-config-mysql.php`.\n\n1. Configure your DB connection and install settings in `dev/tests/api-functional/config/install-config-mysql.php`. Specify the Commerce database. The base URL to access this instance must be the same specified in the `phpunit_rest.xml` or `phpunit_soap.xml` file.\n\n1. Run `phpunit` using the `dev/tests/api-functional/phpunit_rest.xml` or `dev/tests/api-functional/phpunit_soap.xml` configuration file::",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 106, "to": 116 } }
        }
      }
    ],
    [
      "0edf94a9-add2-4d13-bcfe-1feb1dd0479c",
      {
        "pageContent": "```bash\n   vendor/bin/phpunit --configuration <full xml file path>",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 118, "to": 119 } }
        }
      }
    ],
    [
      "95eba243-a02a-45ce-904c-f267f29c23f0",
      {
        "pageContent": "```\n\n   or\n\n   ```bash\n   vendor/bin/phpunit -c <full xml file path>\n   ```",
        "metadata": {
          "source": "commerce-webapi/src/pages/get-started/web-api-functional-testing.md",
          "loc": { "lines": { "from": 120, "to": 126 } }
        }
      }
    ],
    [
      "e716ce60-611a-4698-8762-bd004a21e60b",
      {
        "pageContent": "---\ntitle: Create a custom GraphQL urlResolver service\ndescription: Learn how to save and delete records in the url_rewrite database table.\nkeywords:\n  - GraphQL\n---\n\n# Create a custom GraphQL urlResolver service\n\nThe `Magento\\UrlRewrite` module converts URL rewrite requests to canonical URLs. As a result, your custom `urlResolver` module does not require its own class for performing these actions, but it must be able to save and delete entries in the `url_rewrite` table.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/create-custom-url-resolver.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "d75765a5-5002-49c7-b44b-dffce33f65ee",
      {
        "pageContent": "## Create observers\n\nYou can use the `Magento\\CmsUrlRewrite\\Observer\\ProcessUrlRewriteSavingObserver` class as the basis for saving URL rewrites. For deleting entries, create a `ProcessUrlRewriteDeleteObserver` class similar to the following:\n\n```php\n/**\n * Generate urls for UrlRewrite and save it in storage\n *\n * @param \\Magento\\Framework\\Event\\Observer $observer\n * @return void\n */\npublic function execute(EventObserver $observer)\n{\n    /** @var \\Magento\\MyModule\\Model\\Page $myEntityPage  */\n    $page = $observer->getEvent()->getObject();\n\n    if ($page->isDeleted()) {\n        $this->urlPersist->deleteByData(\n            [\n                UrlRewrite::ENTITY_ID => $page->getId(),\n                UrlRewrite::ENTITY_TYPE => MyEntityPageUrlRewriteGenerator::ENTITY_TYPE,\n            ]\n        );\n    }\n}\n```\n\nSee [Events and observers](https://developer.adobe.com/commerce/php/development/components/events-and-observers/) for more information about creating an observer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/create-custom-url-resolver.md",
          "loc": { "lines": { "from": 12, "to": 39 } }
        }
      }
    ],
    [
      "6e4cf5ea-55dd-4f3e-b2a8-e1be191945c6",
      {
        "pageContent": "## Configure the custom module\n\nUpdate the `graphql.xml` and `events.xml` file in your module's `etc` directory to configure your custom GraphQL `urlResolver` service:\n\n*  Add lines similar to the following in your module's `graphql.xml` file to define the enumeration. The `UrlRewriteGraphQl` module defines `UrlRewriteEntityTypeEnum`.\n\n ```xml\n  <config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_GraphQl:etc/graphql.xsd\">\n    <type xsi:type=\"Enum\" name=\"UrlRewriteEntityTypeEnum\">\n      <item name=\"my_entity\">MY_ENTITY</item>\n    </type>\n  </config>",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/create-custom-url-resolver.md",
          "loc": { "lines": { "from": 41, "to": 52 } }
        }
      }
    ],
    [
      "e6565bab-e5de-4f83-b56a-83c16eae66bf",
      {
        "pageContent": "```\n\n*  Define two events similar to the following in your module's `events.xml` file.\n\n ```xml\n  <event name=\"mymodule_page_save_after\">\n    <observer name=\"process_url_rewrite_saving\" instance=\"Magento\\MyModuleRewrite\\Observer\\ProcessUrlRewriteSavingObserver\" />\n  </event>\n  <event name=\"mymodule_page_delete_after\">\n    <observer name=\"process_url_rewrite_delete\" instance=\"Magento\\MyModuleRewrite\\Observer\\ProcessUrlRewriteDeleteObserver\" />\n  </event>\n ```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/create-custom-url-resolver.md",
          "loc": { "lines": { "from": 53, "to": 64 } }
        }
      }
    ],
    [
      "e05d9d28-9792-43f0-b0d7-72d3053dc0d2",
      {
        "pageContent": "## Related Topics\n\n*  [Events and observers](https://developer.adobe.com/commerce/php/development/components/events-and-observers/)\n*  [urlResolver endpoint](../schema/products/queries/url-resolver.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/create-custom-url-resolver.md",
          "loc": { "lines": { "from": 66, "to": 69 } }
        }
      }
    ],
    [
      "d5dd45b1-af7f-4d8f-aafc-ab3a4ddc6c42",
      {
        "pageContent": "---\ntitle: Debugging GraphQL queries\ndescription: Learn how to use PhpStorm and Xdebug to debug GraphQL API queries.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n---\n\n# Debugging GraphQL queries\n\nThis topic provides recommendations on how to debug GraphQL requests.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/debugging.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "e94f2207-4fae-4d9f-a9ca-d944239865eb",
      {
        "pageContent": "## Debugging with PHPStorm and Xdebug\n\nWhen [using GraphiQL](../index.md#how-to-access-graphql) or any other client for testing GraphQL queries, you might need to debug the request processing.\nYou can use Xdebug for debugging the PHP execution of a GraphQL query just as you would for other HTTP requests.\nTo start debugging, add the `?XDEBUG_SESSION_START=PHPSTORM` parameter to the endpoint URL.\nThe following example shows how to establish a connection between Xdebug and PHPStorm IDE.\n\n```http\nhttp://<magento2-3-server>/graphql?XDEBUG_SESSION_START=PHPSTORM\n```\n\nYou can also enable an Xdebug connection for a particular request by setting the corresponding header parameter.\n\n```text\nCookie: XDEBUG_SESSION=PHPSTORM\n```\n\nAs a result, Xdebug within the PHP execution attempts to make a connection to an IDE. If the IDE is listening, it will give the instructions to Xdebug about breakpoints and other relevant information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/debugging.md",
          "loc": { "lines": { "from": 14, "to": 31 } }
        }
      }
    ],
    [
      "20a512c1-08f9-4c7f-8f2d-bd2451d31be2",
      {
        "pageContent": "## Related Topics\n\n*  [GraphQL request headers](../usage/headers.md)\n*  [Exception handling](exceptions.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/debugging.md",
          "loc": { "lines": { "from": 33, "to": 36 } }
        }
      }
    ],
    [
      "b9a3f3e6-518a-4276-94ae-9d83b9457709",
      {
        "pageContent": "---\ntitle: Exception handling\ndescription: Learn how to implement the \\GraphQL\\Error\\ClientAware interface to handle errors in your Adobe Commerce and Magento Open Soure modules.\nkeywords:\n  - GraphQL\n---\n\n# Exception handling\n\nThe WebApi module has an implementation to \"mask\" `LocalizedExceptions` so they aren't exposed to the client. GraphQL accomplishes this by restricting verbose output to only those exceptions implementing `\\GraphQL\\Error\\ClientAware`, and only if the system is in developer mode. In these circumstances, the application returns a full stack trace. Otherwise, the application writes these exceptions to the system `exception.log` file while returning an \"internal server error\" to the client.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/exceptions.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "cb3dd487-2b4e-4315-b7b6-164c514b3aa4",
      {
        "pageContent": "You should implement the `\\GraphQL\\Error\\ClientAware` interface to handle errors in your module that are directly related to a GraphQL field having an anticipated exception. If you don't, the client will not receive useful messages. However, you should ensure that you don't implement the `ClientAware` interface for too many exceptions. Doing this risks exposing sensitive data to the client.\n\nAdobe Commerce and Magento Open Source provide the following exception classes in `Magento\\Framework\\GraphQl\\Exception`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/exceptions.md",
          "loc": { "lines": { "from": 12, "to": 14 } }
        }
      }
    ],
    [
      "22cbca9a-8a79-48d4-9304-c85feed34acd",
      {
        "pageContent": "Class | Exception category | Description\n--- | --- | ---\n`GraphQlAlreadyExistsException` | `graphql-already-exists` | Thrown when data already exists\n`GraphQlAuthenticationException` | `graphql-authentication` | Thrown when an authentication fails\n`GraphQlAuthorizationException` | `graphql-authorization` | Thrown when an authorization error occurs\n`GraphQlInputException` | `graphql-input` | Thrown when a query contains invalid input\n`GraphQlNoSuchEntityException` | `graphql-no-such-entity` | Thrown when an expected resource doesn't exist",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/exceptions.md",
          "loc": { "lines": { "from": 16, "to": 22 } }
        }
      }
    ],
    [
      "db2e1090-67aa-4b9c-96fe-a201f1ea9ad4",
      {
        "pageContent": "---\ntitle: Extend an existing GraphQL schema\ndescription: Learn how to add attributes and data types, modify resolver behavior, and add features using extension points.\ncontributor_name: Adarsh Manickam\ncontributor_link: https://github.com/drpayyne\nkeywords:\n  - GraphQL\n---\n\n# Extend an existing GraphQL schema\n\nYou can extend the default GraphQL schema to add attributes and data types, modify existing resolver behavior, and add features using other extension points. GraphQL uses _stitching_ to assemble a single unified schema out of the many schemas defined in individual modules. All `schema.graphqls` files are stitched together to a single schema. In this process, all nodes with the same type (such as type, interface, and enum) and name are stitched together and recursively extended/overridden. This process is similar to how XML merging works.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "43feba62-4c85-4c81-8afd-aeaaea939421",
      {
        "pageContent": "## Extend the schema\n\nThe first step to retrieve a custom field in an existing query is to extend the appropriate schema object.\n\nIn the following example, we will change the description of an existing field (`attribute_set_id`) and add a new field (`attribute_set_name`) to the GraphQL schema for the `products` query. Common use cases require adding fields to the database. [Declarative Schema](https://developer.adobe.com/commerce/php/development/components/declarative-schema/) describes how to add a custom field to the database.\n\nThe simplified structure of the query schema to get products is:\n\n```graphql\nschema {\n    query: Query\n    ...\n}\n\ntype Query {\n    products (...): Products\n    ...\n}\n\ntype Products {\n    items: [ProductInterface]\n    ...\n}\n\ninterface ProductInterface {\n    id: Int\n    name: String\n    sku: String\n    ...\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 14, "to": 43 } }
        }
      }
    ],
    [
      "32629d1a-6300-487a-9008-efd7f8075605",
      {
        "pageContent": "```\n\nWe need to extend the `ProductInterface`, since that is the schema object for a product. We can do this by creating a `schema.graphqls` file in our custom module's (`ExampleCorp/CustomGQL`) `etc` directory.\n\n`ExampleCorp_CustomGQL/etc/schema.graphqls`\n\n```graphql\ninterface ProductInterface {\n    attribute_set_id: Int\n        @doc(description: \"ID of the attribute set assigned to the product\")\n    attribute_set_name: String\n        @doc(description: \"Name of attribute set assigned to the product\")\n        @resolver(class: \"\\\\ExampleCorp\\\\CustomGQL\\\\Model\\\\Resolver\\\\ProductAttributeSetNameResolver\")\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 44, "to": 57 } }
        }
      }
    ],
    [
      "a18e4664-bdf7-43ae-913d-15c1c33b8c9c",
      {
        "pageContent": "```\n\nThe above schema file is merged with the schema present at `Magento_CatalogGraphQl/etc/schema.graphqls` which contains the original `ProductInterface` object. Our schema file contains the following fields:\n\n-  The `attribute_set_id` field is already present in the original schema, so the field described in our new schema will override the field present in the `ProductInterface` object. This example only changes the `@doc` annotation content to demonstrate how the process works.\n\n-  The `attribute_set_name` field is not present in the orignal schema, so the field is added to the `ProductInterface` object by extending it. For our new field, we set a description and a resolver class to resolve the data to be returned.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 58, "to": 64 } }
        }
      }
    ],
    [
      "fc164e47-503f-4192-8d4b-9d2f144b3010",
      {
        "pageContent": "## Resolve the field value\n\nIn the resolver, we get the relevant data based on the `$value` and `$args` passed to the `resolve` method. This can be done using a repository interface or a resource model of the custom field.\n\nIn our example scenario, we use `Magento\\Catalog\\Api\\AttributeSetRepositoryInterface` to get the attribute set name for a given attribute set ID obtained from the `$value` argument and return that as the resolution for the field.\n\n`ExampleCorp_CustomGQL/Model/Resolver/ProductAttributeSetNameResolver.php`\n\n```php\n<?php\n\nnamespace ExampleCorp\\CustomGQL\\Model\\Resolver;\n\nuse Magento\\Catalog\\Api\\AttributeSetRepositoryInterface;\nuse Magento\\Framework\\GraphQl\\Config\\Element\\Field;\nuse Magento\\Framework\\GraphQl\\Query\\ResolverInterface;\nuse Magento\\Framework\\GraphQl\\Schema\\Type\\ResolveInfo;",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 66, "to": 82 } }
        }
      }
    ],
    [
      "65313ecf-a256-4b23-bd76-3bcf00f3b460",
      {
        "pageContent": "/**\n * Class to resolve custom attribute_set_name field in product GraphQL query\n */\nclass ProductAttributeSetNameResolver implements ResolverInterface\n{\n    /**\n     * @var AttributeSetRepositoryInterface\n     */\n    private $setRepository;\n\n    public function __construct(AttributeSetRepositoryInterface $setRepository)\n    {\n        $this->setRepository = $setRepository;\n    }\n\n    public function resolve(Field $field, $context, ResolveInfo $info, array $value = null, array $args = null)\n    {\n        return $this->setRepository->get($value['attribute_set_id'])->getAttributeSetName();\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 84, "to": 104 } }
        }
      }
    ],
    [
      "769383b7-81c8-4d7d-96e6-4721e7f58a7b",
      {
        "pageContent": "## Extend configuration data\n\nYou can add your own configuration to the `storeConfig` query within your own module.\n\nTo do this, configure the constructor argument `extendedConfigData` in the `argument` node in your area-specific `etc/graphql/di.xml` file.\n\nThe following example adds an array-item to the `extendedConfigData` array within the construct of the `StoreConfigDataProvider`.\n\n```xml\n<?xml version=\"1.0\" ?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n  <type name=\"Magento\\StoreGraphQl\\Model\\Resolver\\Store\\StoreConfigDataProvider\">\n    <arguments>\n      <argument name=\"extendedConfigData\" xsi:type=\"array\">\n        <item name=\"section_group_field\" xsi:type=\"string\">section/group/field</item>\n      </argument>\n    </arguments>\n  </type>\n</config>",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 106, "to": 124 } }
        }
      }
    ],
    [
      "42895818-c26f-462f-8750-d4be70712b11",
      {
        "pageContent": "```\n\nYou must also extend the type `storeConfig` within in the `etc/schema.graphqls` file, as shown below:\n\n```graphql\ntype StoreConfig {\n    section_group_field : String  @doc(description: \"Extended Config Data - section/group/field\")\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 125, "to": 133 } }
        }
      }
    ],
    [
      "1d961ad3-77ec-4e3d-9b5e-ae2636f08d87",
      {
        "pageContent": "## Related topics\n\n-  [Define the GraphQL schema for a module](index.md)\n-  [Resolvers](resolvers.md)\n-  [Declarative schema](https://developer.adobe.com/commerce/php/development/components/declarative-schema/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/extend-existing-schema.md",
          "loc": { "lines": { "from": 135, "to": 139 } }
        }
      }
    ],
    [
      "73fd5017-f3ed-49db-88ce-f00b81621c09",
      {
        "pageContent": "---\ntitle: GraphQL functional testing\ndescription: Learn how to use the Adobe Commerce and Magento Open Source test framework to create fixtures, define exceptions, and run finctional tests.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n---\n\n# GraphQL functional testing\n\nAdobe Commerce and Magento Open Source provide API functional tests that can verify extension points in GraphQL. These tests serve as an example for exposing new queries via GraphQL.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "37cf8057-58a8-4e67-bc9b-d97e0e41a0fb",
      {
        "pageContent": "## Creating a new GraphQL functional test\n\nAll GraphQL functional tests should be located in the `dev/tests/api-functional/testsuite/Magento/GraphQl/` directory and inherit from the generic test case `Magento\\TestFramework\\TestCase\\GraphQlAbstract`. It defines the `graphQlQuery()` and `graphQlMutation()` methods, which should be used to perform Web API calls from tests.\n\nThe following test verifies that the schema returns the correct attribute type, given the `attribute_code` and corresponding `entity_type`.\n\n```php\nnamespace Magento\\GraphQl\\Catalog;\n\nuse Magento\\TestFramework\\TestCase\\GraphQlAbstract;",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 14, "to": 23 } }
        }
      }
    ],
    [
      "d0588656-a0e1-4a06-a845-3dd8e0280727",
      {
        "pageContent": "class ProductAttributeTypeTest extends GraphQlAbstract\n{\n    public function testAttributeTypeResolver()\n    {\n        $query\n            = <<<QUERY\n{\n  customAttributeMetadata(attributes:\n  [\n    {\n      attribute_code:\"description\",\n      entity_type:\"catalog_product\"\n    },\n    {\n      attribute_code:\"status\",\n      entity_type:\"catalog_product\"\n    },\n    {\n      attribute_code:\"special_price\",\n      entity_type:\"catalog_product\"\n    },\n    {\n      attribute_code:\"disable_auto_group_change\",\n      entity_type:\"customer\"\n    }\n    {\n      attribute_code:\"special_price\",\n      entity_type:\"Magento\\\\\\\\Catalog\\\\\\\\Api\\\\\\\\Data\\\\\\\\ProductInterface\"\n    }\n  ]\n  )\n  {\n    items\n    {\n      attribute_code\n      attribute_type\n      entity_type\n      input_type\n    }\n  }\n }\nQUERY;\n        $response = $this->graphQlQuery($query);\n        $expectedAttributeCodes = [\n            'description',\n            'status',\n            'special_price',\n            'disable_auto_group_change',",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 25, "to": 72 } }
        }
      }
    ],
    [
      "c003173b-5398-49e1-ac4d-4c4cdc8abe72",
      {
        "pageContent": "'special_price'\n        ];\n        $entityType = [\n            'catalog_product',\n            'catalog_product',\n            'catalog_product',\n            'customer',\n            \\Magento\\Catalog\\Api\\Data\\ProductInterface::class\n        ];\n        $attributeTypes = ['String', 'Int', 'Float','Boolean', 'Float'];\n        $inputTypes = ['textarea', 'select', 'price', 'boolean', 'price'];\n        $this->assertAttributeType($attributeTypes, $expectedAttributeCodes, $entityType, $inputTypes, $response);\n    }\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 73, "to": 86 } }
        }
      }
    ],
    [
      "cb955866-40e0-4098-9858-ee1bdce0d36f",
      {
        "pageContent": "## Using the default GraphQlQueryTest\n\nThe `\\Magento\\GraphQl\\TestModule\\GraphQlQueryTest.php` test case uses two test modules to determine whether the mechanisms for GraphQL extensibility work as expected. It illustrates best practices for extending an existing GraphQL endpoint.\n\n*  `TestModuleGraphQlQuery` - This bare-bones module defines a `testItem` endpoint with the queryable attributes `item_id` and `name`. It's located at `<installdir>/dev/tests/api-functional/_files/TestModuleGraphQlQuery`.\n*  `TestModuleGraphQlQueryExtension` - This module extends `TestModuleGraphQlQuery`, adding the `integer_list` extension attribute. It's located at `<installdir>/dev/tests/api-functional/_files/TestModuleGraphQlQueryExtension`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 88, "to": 93 } }
        }
      }
    ],
    [
      "678bd2e9-17d4-4f2c-88d7-adf34807ba06",
      {
        "pageContent": "## Creating fixtures\n\nFixtures, which are part of the testing framework, prepare preconditions in the system for further testing. For example, when you test the ability to add a product to the shopping cart, the precondition is that a product must be available for testing.\n\nA fixture consists of two files:\n\n*  The fixture file, which defines the test\n*  A rollback file, which reverts the system to the state before the test was run\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nEach fixture should have a corresponding rollback file.\n\nAdobe Commerce and Magento Open Source provide fixtures in the `dev/tests/integration/testsuite/Magento/<ModuleName>/_files` directory. Use these fixtures whenever possible. When you create your own fixture, also create a proper rollback.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 95, "to": 108 } }
        }
      }
    ],
    [
      "ffd535f5-27c1-452b-afb3-8564464007f3",
      {
        "pageContent": "### Fixture files\n\nThe following fixture creates a simple product with predefined attributes.\n\n```php\n<?php\nuse Magento\\Catalog\\Model\\ProductFactory;\nuse Magento\\TestFramework\\Helper\\Bootstrap;\nuse Magento\\Catalog\\Model\\ResourceModel\\Product as ProductResource;",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 110, "to": 118 } }
        }
      }
    ],
    [
      "87a9c1d7-9c2d-486f-9143-45350eb7dffa",
      {
        "pageContent": "$productFactory = Bootstrap::getObjectManager()->get(ProductFactory::class);\n$product = $productFactory->create();\n$product->setTypeId(\\Magento\\Catalog\\Model\\Product\\Type::TYPE_VIRTUAL)\n    ->setId(21)\n    ->setAttributeSetId(4)\n    ->setWebsiteIds([1])\n    ->setName('Virtual Product')\n    ->setSku('virtual-product')\n    ->setPrice(10)\n    ->setTaxClassId(0)\n    ->setVisibility(\\Magento\\Catalog\\Model\\Product\\Visibility::VISIBILITY_BOTH)\n    ->setStatus(\\Magento\\Catalog\\Model\\Product\\Attribute\\Source\\Status::STATUS_ENABLED)\n    ->setStockData(\n        [\n            'qty' => 100,\n            'is_in_stock' => 1,\n            'manage_stock' => 1,\n        ]\n    );\n/** @var ProductResource $productResource */\n$productResource = Bootstrap::getObjectManager()->create(ProductResource::class);\n$productResource->save($product);",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 120, "to": 141 } }
        }
      }
    ],
    [
      "d20666ca-1122-4cb3-b2dc-c00963141afc",
      {
        "pageContent": "```\n\nTo use this fixture in a test, add it to the test's annotation in the following manner:\n\n```php\n    /**\n     * @magentoApiDataFixture Magento/Catalog/_files/product_virtual.php\n     */\n    public function testAddVirtualProductToShoppingCart()\n    {\n      // Test body\n    }\n```\n\nYou can also invoke multiple fixtures:\n\n```php\n    /**\n     * @magentoApiDataFixture Magento/Checkout/_files/quote_with_simple_product_saved.php\n     * @magentoApiDataFixture Magento/Customer/_files/customer.php\n     */\n    public function testSetNewBillingAddressByRegisteredCustomer()\n    {\n      // Test body\n    }\n```\n\nThe specified fixtures will now execute on every test run.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 142, "to": 169 } }
        }
      }
    ],
    [
      "0b8606b9-df1b-462b-9186-e6618d4957bf",
      {
        "pageContent": "### Rollback files\n\nEvery fixture should have a rollback file. A rollback is a set of operations that remove changes introduced by the fixture from the system once the test is completed.\n\nThe rollback filename should correspond to the original fixture filename postfixed by `_rollback` keyword. For example, if the fixture file name is `virtual_product.php`, name the rollback file `virtual_product_rollback.php`.\n\nThe following fixture rollback removes the newly-created product from the database.\n\n```php\n<?php\nuse Magento\\Catalog\\Api\\ProductRepositoryInterface;\nuse Magento\\Framework\\Exception\\NoSuchEntityException;\nuse Magento\\Framework\\Exception\\StateException;\nuse Magento\\TestFramework\\Helper\\Bootstrap;\n\n$registry = Bootstrap::getObjectManager()->get(\\Magento\\Framework\\Registry::class);\n\n$registry->unregister('isSecureArea');\n$registry->register('isSecureArea', true);\n\n$productRepository = Bootstrap::getObjectManager()\n    ->create(ProductRepositoryInterface::class);",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 171, "to": 192 } }
        }
      }
    ],
    [
      "8a358f0f-8a7f-4840-832c-c3e318bb7b8f",
      {
        "pageContent": "try {\n    $product = $productRepository->get('virtual-product', false, null, true);\n    $productRepository->delete($product);\n} catch (NoSuchEntityException $exception) {\n    //Product already removed\n} catch (StateException $exception) {\n}\n\n$registry->unregister('isSecureArea');\n$registry->register('isSecureArea', false);\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 194, "to": 204 } }
        }
      }
    ],
    [
      "9a3524eb-0fb0-42ef-9826-2ea4e3be9c35",
      {
        "pageContent": "### Fixture configs\n\nUse the `@magentoConfigFixture` annotation to set a custom config value. It supports a `store` scope only.\n\n#### Syntax\n\n```php\n/**\n * @magentoConfigFixture <store_code>_store <config_key> <config_value>\n */\n```\n\nwhere\n\n*  `<store_code>` - Store code. See the `store`.`code` database field value.\n*  `<config_key>` - Config key. See `core_config_data`.`path`\n*  `<config_value>` - Config value. See `core_config_data`.`value`\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\n`@magentoConfigFixture` does not require a roll-back.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 206, "to": 226 } }
        }
      }
    ],
    [
      "bf01e197-26dc-4fa1-847f-b709e615e4fb",
      {
        "pageContent": "#### Example usage\n\nThe following example sets a store-scoped value `1` for the config key `checkout/options/enable_agreements` for the `default` store in the `GetActiveAgreement()` test:\n\n```php\n    /**\n     * @magentoConfigFixture default_store checkout/options/enable_agreements 1\n     */\n    public function testGetActiveAgreement()\n    {\n        ...\n    }\n```\n\n`@magentoConfigFixture` performs the following action as a background process before test execution:\n\n```sql\nINSERT INTO `core_config_data` (scope`, `scope_id`, `path`, `value`)\nVALUES\n  ('stores', 1, 'checkout/options/enable_agreements', '1');\n```\n\nThe fixture automatically removes the `checkout/options/enable_agreements` config key from the database after the test has been completed.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 228, "to": 250 } }
        }
      }
    ],
    [
      "b78ac3c2-d988-4967-8569-e955610b66f1",
      {
        "pageContent": "## Defining expected exceptions\n\nYour functional tests should include events that cause exceptions. Since your tests expect an exception to occur, set up your tests so that they elicit the proper responses. You can define expected exception messages either in:\n\n*  The body of the test\n*  The test function annotation\n\n<InlineAlert variant=\"success\" slots=\"text\" />\n\nWe recommend that you declare expected exceptions in the test method body, as declaring expected exceptions with annotations has been deprecated in PHPUnit 8. Existing tests that use annotations will have to be updated when Adobe Commerce or Magento Open Source require that version of PHPUnit or higher.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 252, "to": 261 } }
        }
      }
    ],
    [
      "d73e2082-d637-4a77-bbc3-752080b5cc7b",
      {
        "pageContent": "### Exception messages in the body of a test\n\nThe following examples show two ways you can use the `expectExceptionMessage` function to define an expected exception message.\n\n```php\npublic function testMyExceptionTest()\n{\n    ...\n\n    self::expectExceptionMessage(\"Expected exception message goes here...\");\n\n    ...\n}\n\n```\n\nor\n\n```php\npublic function testMyExceptionTest()\n{\n    ...\n\n    $this->expectExceptionMessage(\"Expected exception message goes here...\");\n\n    ...\n}\n```\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nDefine the exception message before invoking logic that generates the exception.\n\nAs an example, consider the case where Customer A tries to retrieve information about Customer B's cart. In this situation, Customer A gets this error:\n\n```terminal\nThe current user cannot perform operations on cart \"XXXXX\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 263, "to": 299 } }
        }
      }
    ],
    [
      "0c1c6e7a-e813-4508-bf6b-1780b3e06b56",
      {
        "pageContent": "```\n\n`XXXXX` is the unique ID of Customer B's cart.\n\nThe following sample shows how to cover this scenario using an `expectExceptionMessage` function:\n\n```php\n    /**\n     * @magentoApiDataFixture Magento/Checkout/_files/quote_with_items_saved.php\n     */\n    public function testGetCartFromAnotherCustomer()\n    {\n        $reservedOrderId = 'test_order_item_with_items';\n        $this->quoteResource->load(\n            $this->quote,\n            $reservedOrderId,\n            'reserved_order_id'\n        );\n        $maskedQuoteId = $this->quoteIdToMaskedId->execute((int)$this->quote->getId());\n        $query = $this->prepareGetCartQuery($maskedQuoteId);\n        self::expectExceptionMessage(\"The current user cannot perform operations on cart \\\"$maskedQuoteId\\\"\");\n        $this->graphQlQuery($query);\n    }\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 300, "to": 323 } }
        }
      }
    ],
    [
      "7a767504-c6ab-42ea-899c-aa75e758e7cb",
      {
        "pageContent": "### Exception messages in the annotation of a test function\n\nYou can also use a predefined directive such as `@expectedExceptionMessage` as an alternative way to call the `expectExceptionMessage` method:\n\n```php\n    /**\n     * @expectedException \\Exception\n     * @expectedExceptionMessage Expected exception message goes here...\n     */\n```\n\nIn the following query, a customer provides an incorrect cart ID while trying to retrieve information about his own cart.\n\n**Query:**\n\n```text\n{\n  cart(cart_id: \"YYYYY\") {\n    items {\n      __typename\n      id\n      qty\n    }\n  }\n}\n```\n\n**Result:**\n\n```json\n{\n  \"errors\": [\n    {\n      \"message\": \"Could not find a cart with ID \\\"YYYYY\\\"\",\n      \"category\": \"graphql-no-such-entity\",\n      \"locations\": [\n        {\n          \"line\": 2,\n          \"column\": 3\n        }\n      ],\n      \"path\": [\n        \"cart\"\n      ]\n    }\n  ],\n  \"data\": {\n    \"cart\": null\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 325, "to": 374 } }
        }
      }
    ],
    [
      "99cd0e44-1e37-42b3-a790-1a73a13e2a72",
      {
        "pageContent": "```\n\nThe `@expectExceptionMessage` annotation provides the text for the exception in this test.\n\n```php\n    /**\n     * @expectedException \\Exception\n     * @expectedExceptionMessage Could not find a cart with ID \"non_existent_masked_id\"\n     */\n    public function testGetNonExistentCart()\n    {\n        $maskedQuoteId = 'non_existent_masked_id';\n        $query = $this->prepareGetCartQuery($maskedQuoteId);\n\n        $this->graphQlQuery($query);\n    }\n```\n\nUse the following functions to cover expected exceptions:\n\n*  `expectException`\n*  `expectExceptionCode`\n*  `expectExceptionMessage`\n*  `expectExceptionMessageRegExp`\n*  `expectExceptionObject`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 375, "to": 399 } }
        }
      }
    ],
    [
      "60cc71f7-627f-4900-82f3-ccba7ebbc6b5",
      {
        "pageContent": "## Run functional tests\n\n### Configure your instance\n\n1. Change directories to `dev/tests/api-functional/` and copy the `phpunit_graphql.xml.dist` file to `phpunit_graphql.xml`.\n\n   ```bash\n   cp phpunit_graphql.xml.dist phpunit_graphql.xml\n   ```\n\n1. Edit `phpunit_graphql.xml` to set values for the TESTS_BASE_URL, TESTS_WEBSERVICE_USER, TESTS_WEBSERVICE_APIKEY options:\n\n   ```xml\n   ...\n   <!-- Webserver URL -->\n   <const name=\"TESTS_BASE_URL\" value=\"http://magento.url\"/>\n   <!-- Webserver API user -->\n   <const name=\"TESTS_WEBSERVICE_USER\" value=\"admin\"/>\n   <!-- Webserver API key -->\n   <const name=\"TESTS_WEBSERVICE_APIKEY\" value=\"123123q\"/>\n   ...\n   ```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 401, "to": 422 } }
        }
      }
    ],
    [
      "d6a77203-cf39-40ba-9dda-407a31ce1a87",
      {
        "pageContent": "### Run all tests in a API functional test suite\n\n**Syntax:**\n\n```bash\nvendor/bin/phpunit -c dev/tests/api-functional/phpunit_graphql.xml dev/tests/api-functional/testsuite/<Vendor>/<Module>/<TestFile>.php\n```\n\n**Example:**\n\nTo run all tests from [dev/tests/api-functional/testsuite/Magento/GraphQl/Customer/GenerateCustomerTokenTest.php](https://github.com/magento/magento2/blob/2.3.1/dev/tests/api-functional/testsuite/Magento/GraphQl/Customer/GenerateCustomerTokenTest.php), run the following command:\n\n```bash\nvendor/bin/phpunit -c dev/tests/api-functional/phpunit_graphql.xml dev/tests/api-functional/testsuite/Magento/GraphQl/Customer/GenerateCustomerTokenTest.php\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 424, "to": 438 } }
        }
      }
    ],
    [
      "b6eb1e0a-bdc6-4447-9c8e-379c0dfc5cee",
      {
        "pageContent": "### Run a single test in a API functional test suite\n\n**Syntax:**\n\n```bash\nvendor/bin/phpunit -c dev/tests/api-functional/phpunit_graphql.xml --filter <testFunctionName> dev/tests/api-functional/testsuite/<Vendor>/<Module>/<TestFile>.php\n```\n\n**Example:**\n\nTo run `testGenerateCustomerValidToken` test from [dev/tests/api-functional/testsuite/Magento/GraphQl/Customer/GenerateCustomerTokenTest.php](https://github.com/magento/magento2/blob/2.3.1/dev/tests/api-functional/testsuite/Magento/GraphQl/Customer/GenerateCustomerTokenTest.php), run the following command:\n\n```bash\nvendor/bin/phpunit -c dev/tests/api-functional/phpunit_graphql.xml --filter testGenerateCustomerValidToken dev/tests/api-functional/testsuite/Magento/GraphQl/Customer/GenerateCustomerTokenTest.php\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 440, "to": 454 } }
        }
      }
    ],
    [
      "dcdc90b6-ef17-4296-8d66-d30e736dec40",
      {
        "pageContent": "### Run a selected group of tests in an API functional test suite\n\nUse the `@group` directive in the test annotation to add the ability to run a group tests.\n\n**Syntax:**\n\n```bash\nvendor/bin/phpunit -c dev/tests/api-functional/phpunit_graphql.xml --group <TEST_GROUP_ALIAS> dev/tests/api-functional/testsuite/<Vendor>/<Module>/<TestFile>.php\n```\n\n**Example:**\n\nThe `testGetCartTotalsWithNoAddressSet` test is marked with `@group recent`:\n\n```php\n<?php\n\nnamespace Magento\\GraphQl;\n\nclass MyTest extends \\Magento\\TestFramework\\TestCase\\GraphQlAbstract\n\n    /**\n     * @group my_test_group\n     */\n    public function testFunction1()\n    {\n        ...\n    }\n\n    /**\n     * @group my_test_group\n     */\n    public function testFunction2()\n    {\n        ...\n    }\n\n    /**\n     *\n     */\n    public function testFunction3()\n    {\n        ...\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 456, "to": 500 } }
        }
      }
    ],
    [
      "7d9137d0-c2cb-48ed-98d7-fd7375668f3e",
      {
        "pageContent": "```\n\nTo run the `testFunction1` and `testFunction2` tests, which are part of the `my_test_group` group, use the following command:\n\n```bash\nvendor/bin/phpunit -c dev/tests/api-functional/phpunit_graphql.xml --group my_test_group dev/tests/api-functional/testsuite/Magento/GraphQl/MyTest.php\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/functional-testing.md",
          "loc": { "lines": { "from": 501, "to": 507 } }
        }
      }
    ],
    [
      "d977ffa3-dfcf-4164-9dcc-2fc8a178ffb1",
      {
        "pageContent": "---\ntitle: Identity class\ndescription: Learn how to implement an identity class for cacheable GraphQL API queries in your Adobe Commerce and Magento Open Source modules.\nkeywords:\n  - GraphQL\n---\n\n# Identity class\n\nIf you create a cacheable query (similar to those for product, category, and CMS data), then you must create an `Identity` class for the module. The class must return unique identifiers for cache tags that can be invalidated when an entity changes. Place this class in your module's `Model/Resolver` directory.\n\nAn Identity class implements `Magento\\Framework\\GraphQl\\Query\\Resolver\\IdentityInterface`. Your Identity class must contain the following elements:\n\n*  Choose a cache tag prefix for the entity.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/identity-class.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "e6978e61-8660-48ee-ad79-af3d246a7024",
      {
        "pageContent": "*  Your implementation of the `getIdentities(array $resolvedData)` method. The method maps the array of entities data to an array of cache tags, one for each entity. Generally, this method takes an array of query results and creates a cache tag for each entity based on the original string and the unique identifier for each item to be cached. For example, the `getIdentities` method for the `CatalogGraphQl` component appends the product ID to the `cat_p` cache tag prefix, such as `cat_p_1`, `cat_p_2`, and so on. Usually the method also adds the cache tag without an appended ID to the result array, so all cache records can be removed at once, and not only cache records for specific entities.\n\nUse following example as the basis for your custom `Identity` class:\n\n```php\n<?php\ndeclare(strict_types=1);\n\nnamespace PathToModule\\Model\\Resolver\\MyModule;\n\nuse Magento\\Framework\\GraphQl\\Query\\Resolver\\IdentityInterface;",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/identity-class.md",
          "loc": { "lines": { "from": 16, "to": 26 } }
        }
      }
    ],
    [
      "3ba5f0ff-0266-49e1-af53-ebe1733fb30c",
      {
        "pageContent": "/**\n * Get identities from resolved data\n */\nclass MyIdentity implements IdentityInterface\n{\n    private $cacheTag = \\PathToModule\\Model\\MyEntity::CACHE_TAG;\n\n    /**\n     * Get identity tags from resolved data\n     *\n     * @param array $resolvedData\n     * @return string[]\n     */\n    public function getIdentities(array $resolvedData): array\n    {\n        $ids = [];\n        $items = $resolvedData['items'] ?? [];\n        foreach ($items as $item) {\n            $ids[] = sprintf('%s_%s', $this->cacheTag, $item['entity_id']);\n        }\n        if (!empty($ids)) {\n            $ids[] = $this->cacheTag;\n        }\n        return $ids;\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/identity-class.md",
          "loc": { "lines": { "from": 28, "to": 53 } }
        }
      }
    ],
    [
      "7bd4b26e-fa06-48e6-b635-fc05e85e13f3",
      {
        "pageContent": "```\n\nUse the `@cache` directive in your module's [`graphqls` file](index.md) to specify the location to your `Identity` class. Your module's `graphqls` file must point to your `Identity` class, as shown below:\n\n```text\ncategoryList(\n    filters: CategoryFilterInput @doc(description: \"Identifies which Category filter inputs to search for and return.\")\n): [CategoryTree] @doc(description: \"Returns an array of categories based on the specified filters.\") @resolver(class: \"Magento\\\\CatalogGraphQl\\\\Model\\\\Resolver\\\\CategoryList\") @cache(cacheIdentity: \"Magento\\\\CatalogGraphQl\\\\Model\\\\Resolver\\\\Category\\\\CategoriesIdentity\")\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/identity-class.md",
          "loc": { "lines": { "from": 54, "to": 62 } }
        }
      }
    ],
    [
      "8adbb147-ceca-4515-b266-8f5ee0af8ef3",
      {
        "pageContent": "---\ntitle: Define the GraphQL schema for a module\ndescription: Learn how to define queries, input/output attributes and interfaces, mutations, enumerations, and annotations.\nkeywords:\n  - GraphQL\n---\n\n# Define the GraphQL schema for a module\n\nEach module that adds to or extends from a GraphQL schema can do so by placing a `schema.graphqls` file in its `etc` directory. Adobe Commerce and Magento Open Source Core adds [`GraphQl`](https://github.com/magento/magento2/blob/2.4/app/code/Magento/GraphQl) modules based on the purpose of the schema being extended/added and the core modules they depend on. For example, the `CustomerGraphQl` module adds a query and multiple mutations to the `graphql` endpoint to view and modify customer data. The `CustomerGraphQl` module relies on the `Customer` core module.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "83f4b9b0-2e2d-475b-b27b-251f8a4a4944",
      {
        "pageContent": "A GraphQL module's `schema.graphqls` file defines how the attributes defined in the module can be used in GraphQL queries and mutations. If your module's attributes are completely self-contained, then the `schema.graphqls` file defines the queries, mutations, the interfaces used, the data types of all the attributes, and any enumerations that restrict the possible attribute contents. If your module extends another module, then you must define those attributes and ensure that the other module can load your attributes. For example, the `CatalogGraphQl` module defines the `PriceAdjustmentCodesEnum`, but the `TaxGraphQl` and `WeeeGraphQl` modules define the enumeration values.\n\nThe `<module_name>/etc/schema.graphqls` file:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 12, "to": 14 } }
        }
      }
    ],
    [
      "e93c829d-a1d6-4952-8d44-541ab65ba050",
      {
        "pageContent": "*  Defines the structure of queries and mutations.\n*  Determines which attributes can be used for input and output in GraphQL queries and mutations. Requests and responses contain separate lists of valid attributes.\n*  Points to the resolvers that verify and process the input data and response.\n*  Serves as the source for displaying the schema in a GraphQL browser.\n*  Defines which objects are cached.\n\nThe base `schema.graphqls` file, located in the `app/code/Magento/GraphQl/etc/` directory, defines the basic structure of GraphQL queries and mutations. It also includes definitions for comparison operators and paging information for search results. The `webonyx/graphql-php` library enforces the syntax of all `schema.graphqls` files.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 16, "to": 22 } }
        }
      }
    ],
    [
      "fd1663fa-90a6-4fe8-b09f-ac40620296e3",
      {
        "pageContent": "## Define queries\n\nA query definition can be one line, or it can be complex. If your module's query implements `searchCriteria`, then you must define arguments that define filters and pagination information, all of which adds complexity. However, if you expect a single result from your query, then its definition can be simple.\n\nThe following example shows the `products` query. The `type` is defined as a `Query`. The `products` definitions define the keywords that are used to construct a query, as shown in [Using queries](../usage/index.md#queries). The parameter definitions will be discussed in [Specify output attributes](#specify-output-attributes).\n\n```php\ntype Query {\n    products (\n        search: String\n        filter: ProductAttributeFilterInput\n        pageSize: Int = 20\n        currentPage: Int = 1\n        sort: ProductAttributeSortInput\n    ): Products @resolver(class: \"Magento\\\\CatalogGraphQl\\\\Model\\\\Resolver\\\\Products\")\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 24, "to": 39 } }
        }
      }
    ],
    [
      "403c2b4c-aec4-4a51-8009-db62875f0672",
      {
        "pageContent": "```\n\nIn contrast, the `customer` query returns the `Customer` object associated with the current user. There is no need to define pagination information.\n\n```php\ntype Query {\n    customer: Customer @resolver(class: \"Magento\\\\CustomerGraphQl\\\\Model\\\\Resolver\\\\Customer\")\n}\n```\n\nIf all your module's attributes are extension attributes for existing modules, then no query definition is required. In this case, the attributes point to the other module's query definition.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 40, "to": 50 } }
        }
      }
    ],
    [
      "9c4c933c-6396-4e20-a40f-ad180f6e2280",
      {
        "pageContent": "### Declare input attributes\n\nYou must explicitly define each attribute that can be used as input in a GraphQL query. In the simplest cases, you can create a single `type` definition that includes all the input, output, and sorting attributes for an object. This might not be possible if your module performs calculations, or otherwise has attributes that aren't available at the time of the query.\n\nThe following example shows the `products` query, which has multiple optional attributes:\n\n```graphql\nproducts(\n  search: String\n  filter: ProductAttributeFilterInput\n  pageSize: Int\n  currentPage: Int\n  sort: ProductAttributeSortInput\n): Products",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 52, "to": 65 } }
        }
      }
    ],
    [
      "6ea6a771-2ebe-4920-9602-431125c7bc93",
      {
        "pageContent": "```\n\nThe `ProductAttributeFilterInput` object used in the `filter` attribute is a custom input type that determines which attributes can be used to narrow the results in a `products` query. The attributes of this object are of type `FilterEqualTypeInput`. (These entities are defined in the `etc/schema.graphqls` files of the `GraphQl` and `CatalogGraphQl` modules). In other use cases, you would be required to create your own input type in the `<magento_root>/app/code/<vendor_name>/<module_name>/etc/schema.graphqls` file.\n\nThe following attributes can be used as filters using the `ProductAttributeFilterInput` object.\n\n```graphql\ninput ProductAttributeFilterInput {\n    category_id: FilterEqualTypeInput\n}\n```\n\nThe `FilterEqualTypeInput` type defines a filter that matches the input exactly.\n\n```graphql\ninput FilterEqualTypeInput {\n    in: [String]\n    eq: String\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 66, "to": 84 } }
        }
      }
    ],
    [
      "2382fa6f-fdfc-4629-bd4c-561616751878",
      {
        "pageContent": "```\n\nThe following example filter searches for products whose `category_id` equals 1.\n\n```graphql\n{\n  products(filter: {category_id: {eq: \"1\"}}) {\n    total_count\n    items {\n      name\n    }\n  }\n}\n```\n\nThe search returns products whose `category_id` equals 1.\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"total_count\": 2,\n      \"items\": [\n        {\n          \"name\": \"Josie Yoga Jacket\"\n        },\n        {\n          \"name\": \"Selene Yoga Hoodie\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 85, "to": 118 } }
        }
      }
    ],
    [
      "4f848c3d-2593-4171-838b-47f0b3a67fe1",
      {
        "pageContent": "### Specify output attributes\n\nYou must know the data type of each attribute, whether it is scalar or an object, and whether it can be part of an array. In addition, each attribute within an object must be defined in the same manner.\n\nIn a `schema.graphqls` file, the output `Interface` defines top-level attributes. Each object returned is defined in a `type` definition.\n\nThe following example shows the `products` query. The query returns a `Products` object containing the attributes of the specified data types.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 120, "to": 126 } }
        }
      }
    ],
    [
      "099a9253-81f6-409e-9dab-2d94de0c604f",
      {
        "pageContent": "Attribute | Data type | Description\n--- | --- | ---\n`aggregations` | [Aggregation] | Layered navigation aggregations\n`items` | [ProductInterface] | An array of products that match the specified search criteria\n`page_info` | SearchResultPageInfo | An object that includes the `page_info` and `currentPage` values specified in the query\n`sort_fields` |  SortFields | An object that includes the default sort field and all available sort fields\n`total_count` | Int | The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 128, "to": 134 } }
        }
      }
    ],
    [
      "48706377-58a5-4588-bd0c-a3ef9a527ae6",
      {
        "pageContent": "### Define the output interface\n\nIn many cases, the response contains data that was either not available as input, or was transformed in some manner from the input. For example, when you specify a price in an input filter, the application evaluates it as a Float value. However, `Price` output objects contain a Float value, a currency value, and possibly minimum/maximum values and tax adjustments. You can define a `typeResolver` to point to the Resolver object, which interprets the GraphQL query. If your module contains only attributes that extend another module, then this parameter is optional. Otherwise, it is required. See [Resolvers](resolvers.md) for more information.\n\nOutput types that represent entities that can be manipulated (created, updated, or removed) and/or can be cached on the client MUST have `id` field. The type of the field SHOULD be `ID`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 136, "to": 140 } }
        }
      }
    ],
    [
      "fe018da5-c696-4b39-947a-ecff85d15c18",
      {
        "pageContent": "The following example shows the `products` query. The `page_info` attribute contains the `SearchResultPageInfo` data type which is defined in the `schema.graphqls` file under `ModuleGraphQl`. In other use cases, you would be required to create your own output type in the `<magento_root>/app/code/<vendor_name>/<module_name>/etc/schema.graphqls` file.\n\nThe SearchResultPageInfo provides navigation for the query response.\n\n```text\ntype SearchResultPageInfo {\n    page_size: Int\n    current_page: Int\n    total_pages: Int\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 142, "to": 151 } }
        }
      }
    ],
    [
      "49aa48b4-4320-4395-834c-adb1f43e2e20",
      {
        "pageContent": "```\n\nThe following example uses the `page_info` output attribute which is of `SearchResultPageInfo` type to get all the information related to the page.\n\n```graphql\n{\n  products(search: \"Yoga pants\", pageSize: 2) {\n    total_count\n    items {\n      name\n    }\n    page_info {\n      page_size\n      current_page\n    }\n  }\n}\n```\n\nThe search returns 45 items, but only the first two items are returned on the current page and all the information regarding the page is returned.\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"total_count\": 45,\n      \"items\": [\n        {\n          \"name\": \"Josie Yoga Jacket\"\n        },\n        {\n          \"name\": \"Selene Yoga Hoodie\"\n        }\n      ],\n      \"page_info\": {\n        \"page_size\": 2,\n        \"current_page\": 1\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 152, "to": 193 } }
        }
      }
    ],
    [
      "8957ec09-a66f-4b76-b8fa-21fd43ffc9dd",
      {
        "pageContent": "## Define mutations\n\nA mutation definition contains the following information:\n\n*  The mutation name\n*  The input attributes and objects\n*  The attributes and objects that can be returned in the output\n*  The path to the resolver\n\nThe following mutation creates a customer.\n\n```text\ntype Mutation {\n    createCustomer (input: CustomerInput!): CustomerOutput @resolver(class: \"\\\\Magento\\\\CustomerGraphQl\\\\Model\\\\Resolver\\\\CreateCustomer\") @doc(description:\"Create customer account\")\n}\n```\n\nThis mutation requires the `CustomerInput` object, which defines the customers name, email, password, and other attributes, as input.\n\nInput parameters can be optional when the context is provided in a header or other mechanism.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 195, "to": 214 } }
        }
      }
    ],
    [
      "83fa25f3-8b82-4ecb-a0ef-cd1736f0602c",
      {
        "pageContent": "## Define enumerations\n\nYou can optionally define enumerations to help prevent input errors. Adobe Commerce and Magento Open Source capitalize all enumerated responses. If a value contains a dash (-), the system converts it to an underscore (_). This is done to maintain compliance with the GraphQL specification.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 216, "to": 218 } }
        }
      }
    ],
    [
      "2a767a40-4ca7-46d4-8562-595519072272",
      {
        "pageContent": "## Annotations\n\nYou can describe any attribute, type definition, or other entity within a `schema.graphqls` file by appending the following to the line:\n\n`@doc(description: \"<Text>\")`\n\nFor example:\n\n```text\nsku: FilterTypeInput @doc(description: \"A number or code assigned to a product to identify the product, options, price, and manufacturer\")\nurl_key: String @doc(description: \"The url key assigned to the product\")\nproduct_count: Int @doc(description: \"The number of products in the category that are marked as visible. By default, in complex products, parent products are visible, but their child products are not\")",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 220, "to": 231 } }
        }
      }
    ],
    [
      "765027ce-bf04-4589-905f-9995203b305c",
      {
        "pageContent": "```\n\nUse the `@deprecated` directive to deprecate attributes and enum values. The GraphQL specification does not permit deprecating input values or arguments. The `reason` keyword allows you to specify which attribute/field or enum value should be used instead.\n\nFor example:\n\n```text\ntype Query {\n    cmsPage (\n        id: Int @doc(description: \"Id of the CMS page\") @deprecated(reason: \"Use `identifier`\") @doc(description: \"The CMS page ...\")\n        identifier: String @doc(description: \"Identifier of the CMS page\")\n...\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 232, "to": 244 } }
        }
      }
    ],
    [
      "042787b9-f4ff-4ad5-8630-5bb3217ef106",
      {
        "pageContent": "## Query caching\n\nThe `@cache` directive defines whether the results of certain queries can be cached. Queries relating to products, categories, and CMS may be cached.\n\nDefine cacheable queries in the following manner:\n\n```text\n@cache(cacheIdentity: \"Magento\\\\CmsGraphQl\\\\Model\\\\Resolver\\\\Block\\\\Identity\")",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 246, "to": 253 } }
        }
      }
    ],
    [
      "131a0df2-5dfd-4fe2-8e83-adaed2196559",
      {
        "pageContent": "```\n\nThe `cacheIdentity` value points to the [class](identity-class.md) responsible for retrieving cache tags.\n\nA query without a `cacheIdentity` will not be cached.\n\nTo disable caching for queries declared in another module with a `cacheIdentity` class, the `@cache(cacheable: false)` directive can be used.\nThis `cacheable` argument is intended to disable caching for queries that are defined in another module.\n\n`@cache(cacheable: false)`\n\nSpecifying `@cache(cacheable: false)` or `@cache(cacheable: true)` on a query without a `cacheIdentity` class has no effect: the query will not be cached.\nIf a query should **not** be cached, do not specify the `@cache` directive. Specifying `@cache(cacheable: false)`  is superfluous when no `cacheIdentity` is present.\n\nSee [Create a cache type](https://developer.adobe.com/commerce/php/development/cache/partial/cache-type/) for information about enabling caching for custom modules.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/index.md",
          "loc": { "lines": { "from": 254, "to": 268 } }
        }
      }
    ],
    [
      "0a3eff66-bbc0-43b8-8a6d-5e32ef7b386b",
      {
        "pageContent": "---\ntitle: GraphQL resolvers\ndescription: Learn how to create query resolvers.\nkeywords:\n  - GraphQL\n---\n\n# GraphQL resolvers\n\nA resolver performs GraphQL request processing. In general, it is responsible for constructing a query, fetching data and performing any calculations, then transforming the fetched and calculated data into a GraphQL array format. Finally, it returns the results wrapped by a callable function.\n\nA GraphQL request is represented by the following arguments, which will be processed by a resolver:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "616c5973-f182-4f10-86ce-08eaa0213885",
      {
        "pageContent": "Field | Type | Description\n--- | --- | ---\n$field | [`Magento\\Framework\\GraphQl\\Config\\Element\\Field`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Config/Element/Field.php) | Fields are used to describe possible values for a type/interface\n$context | [`Magento\\Framework\\GraphQl\\Query\\Resolver\\ContextInterface`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/Resolver/ContextInterface.php) | Resolver context is used as a shared data extensible object in all resolvers that implement [`ResolverInterface`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/ResolverInterface.php).\n$info | [`Magento\\Framework\\GraphQl\\Schema\\Type\\ResolveInfo`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Schema/Type/ResolveInfo.php) | Structure containing information useful for field resolution process.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 14, "to": 18 } }
        }
      }
    ],
    [
      "67ddcfe6-5f55-4060-83be-e608768b3d5c",
      {
        "pageContent": "$value | array | Contains additional query parameters. `Null` in most cases.\n$args | array | Contains input arguments of query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 19, "to": 20 } }
        }
      }
    ],
    [
      "ef415d5d-aea7-41ae-a940-034d7420553e",
      {
        "pageContent": "A GraphQL resolver must implement one of the following interfaces:\n\n-  [`\\Magento\\Framework\\GraphQl\\Query\\Resolver\\BatchResolverInterface`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/Resolver/BatchResolverInterface.php)\n\n-  [`\\Magento\\Framework\\GraphQl\\Query\\Resolver\\BatchServiceContractResolverInterface`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/Resolver/BatchServiceContractResolverInterface.php)\n\n-  [`\\Magento\\Framework\\GraphQl\\Query\\ResolverInterface`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/ResolverInterface.php)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 22, "to": 28 } }
        }
      }
    ],
    [
      "a593a3ff-1bdf-40ee-a510-68fed152bee5",
      {
        "pageContent": "The first two interfaces provide a way to resolve multiple branches/leaves at once (known as batching), while the last one resolves one request at a time. We recommend using batch resolvers for queries because they improve performance by fetching information required to resolve multiple GraphQL requests with a single operation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 30, "to": 30 } }
        }
      }
    ],
    [
      "0b1730a9-4977-4cba-b6e5-e0a85bee58cc",
      {
        "pageContent": "## Query resolvers",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 32, "to": 32 } }
        }
      }
    ],
    [
      "f669f025-3c3a-43dc-9f30-cca8a61d97a6",
      {
        "pageContent": "### BatchResolverInterface\n\nBatch resolvers gather GraphQL requests for the same field until there is no way to process the tree further without resolving previous requests.\n\nConsider the following example:\n\n```graphql\nquery ($filter: ProductAttributeFilterInput!) {\n  products (filter: $filter) {\n    items {\n      id\n      sku\n      related_products {\n        sku\n        related_products {\n          sku\n        }\n      }\n    }\n    total_count\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 34, "to": 55 } }
        }
      }
    ],
    [
      "396b312b-3bd8-42d4-b1ed-f29e5756c715",
      {
        "pageContent": "```\n\nThe query loads a list of products, the SKUs of their related products, and then any secondary related product SKUs.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 56, "to": 58 } }
        }
      }
    ],
    [
      "a9fdeeb4-2632-4390-a310-804e15278551",
      {
        "pageContent": "Loading a list of related products individually for each product would be expensive performance-wise. With batch resolvers, you can load linked products for all products that were initially found, then group them by root products. After the `items` branch is resolved, a batch resolver for `related_products` will be called for the first product found. Instead of resolving the list right away, it will just add the first product to the list of products that require loading additional related products. After all the products from the `items` branch have been loaded, the lists of related products must be loaded. Then, `BatchResolverInterface::resolve()` executes with a gathered list of previous requests to `related_products` branches. At this point, the resolver is able to extract product DTOs from each GraphQL request, load all the product links, sort them by root products, and generate GraphQL values for each branch. After this is done, the same batching will take place when resolving",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 60, "to": 60 } }
        }
      }
    ],
    [
      "fe39503b-3b69-4c3f-b8b8-be21e662d8ec",
      {
        "pageContent": "when resolving child `related_products` branches.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 60, "to": 60 } }
        }
      }
    ],
    [
      "faac10ca-cb2e-4742-a5d2-720b43e10a24",
      {
        "pageContent": "The following pseudo-code shows a `related_products` branch resolver:\n\n```php\nclass RelatedProducts implements BatchResolverInterface\n{\n    ...\n\n    public function resolve(ContextInterface $context, Field $field, array $requests): BatchResponse\n    {\n        //Get the list of products we need to load related products for\n        $rootProductIds = array_map(function ($request) { return $request->getValue()['model']->getId(); }, $requests);\n\n        //Load the links\n        $productLinks = $this->service->getRelatedProductLinks($rootProductIds);\n\n        //Sort the links\n        $response = new BatchResponse();\n        foreach ($requests as $request) {\n            $response->addResponse($request, $productLinks[$request->getValue()['model']->getId()]);\n        }\n\n        return $response;\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 62, "to": 85 } }
        }
      }
    ],
    [
      "d642431f-476f-451a-b59b-8e1e209ccb34",
      {
        "pageContent": "```\n\nEach GraphQL request object must be assigned a [`\\Magento\\Framework\\GraphQl\\Query\\Resolver\\Value`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/Resolver/Value.php) result type or any type of data (mixed). This value takes in a callable function to its constructor that will be invoked at the latest possible time for the resolver to acquire its data. As a result, a list of items being resolved can be retrieved all at once by establishing a buffer that contains all relevant parent data to filter and fetch for the children list data.\n\n[`\\Magento\\RelatedProductGraphQl\\Model\\Resolver\\Batch\\AbstractLinkedProducts`](https://github.com/magento/magento2/blob/2.4/app/code/Magento/RelatedProductGraphQl/Model/Resolver/Batch/AbstractLikedProducts.php) contains an example of batch resolver implementation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 86, "to": 90 } }
        }
      }
    ],
    [
      "9f8876d4-416d-4e63-a838-61010d4dd002",
      {
        "pageContent": "### BatchServiceContractResolverInterface\n\nRequests for this interface to resolve are gathered into batches in the same way as for `BatchResolverInterface`, except that the actual resolving is delegated to a batch service contract. The job of the `BatchServiceContractResolverInterface` resolver is to convert GraphQL requests into DTOs acceptable by the service contract, and then convert results returned by the contract into a GraphQL response.\n\nConsider the same example query:\n\n```graphql\nquery ($filter: ProductAttributeFilterInput!) {\n  products (filter: $filter) {\n    items {\n      id\n      sku\n      related_products {\n        sku\n        related_products {\n          sku\n        }\n      }\n    }\n    total_count\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 92, "to": 113 } }
        }
      }
    ],
    [
      "63802710-bba6-4057-863f-c28f1271c833",
      {
        "pageContent": "```\n\nHere, we will delegate loading all related products to a service that accepts a list of root product IDs, and then returns individual lists for each.\n\nPseudo-code for a GraphQL resolver delegating the work to a service contract may look like this:\n\n```php\nclass RelatedProductsResolver implements BatchServiceContractResolverInterface\n{\n    ...\n\n    public function getServiceContract(): array\n    {\n        return [ProductLinksRetriever::class, 'getRelatedProducts'];\n    }\n\n    public function convertToServiceArgument(ResolveRequestInterface $request)\n    {\n        return new RootProductCriteria($request->getValue()['model']->getId());\n    }\n\n    public function convertFromServiceResult($result, ResolveRequestInterface $request)\n    {\n        return $result->getLinkedProducts();\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 114, "to": 139 } }
        }
      }
    ],
    [
      "d89c286d-8e36-4fa0-bd47-9e06888de2fa",
      {
        "pageContent": "```\n\nThe `getServiceContract()` method points to the service contract to be used.\n\nThe `convertToServiceArgument()` method converts GraphQL requests to a criteria item to be passed in a list as the argument to the contract. Remember that batch service contract methods must accept a single argument: a list (array) of criteria objects.\n\nThe `convertFromServiceResult()` method converts one of the result items into a GraphQL response (a [`\\Magento\\Framework\\GraphQl\\Query\\Resolver\\Value`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/Resolver/Value.php) instance or an array). Remember that batch service contracts must return result items in the same order as were the criteria items passed as the method's list argument.\n\nThe batch service contract used in the example would look something like this:\n\n```php\nclass ProductLinksRetriever\n{\n    ...",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 140, "to": 153 } }
        }
      }
    ],
    [
      "12993535-fdfa-4b1c-bcc7-9d7ae90f454c",
      {
        "pageContent": "/**\n     * @param RootProductCriteria[] $criteriaList\n     * @return RelatedProductsFound[]\n     */\n    public function getRelatedProducts(array $criteriaList): array\n    {\n        ....\n    }\n}\n\nclass RootProductCriteria\n{\n    ....\n\n    public function __construct(int $rootProductId)\n    {\n        $this->productId = $rootProductId;\n    }\n\n    public function getRootProductId(): int\n    {\n        return $this->productId;\n    }\n}\n\nclass RelatedProductsFound\n{\n    ....\n\n    public function getLinkedProducts(): array\n    {\n        ....\n    }\n\n    public function getRootProductId(): int\n    {\n        ....\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 155, "to": 193 } }
        }
      }
    ],
    [
      "192de12b-3877-42c1-85b1-ed13df00c53b",
      {
        "pageContent": "```\n\nA real example can be found at [\\Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\BatchProductLinks](https://github.com/magento/magento2/blob/2.4/app/code/Magento/CatalogGraphQl/Model/Resolver/Product/BatchProductLinks.php)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 194, "to": 196 } }
        }
      }
    ],
    [
      "d0f5e3e9-74c5-4022-aebe-b5b601756f67",
      {
        "pageContent": "### ResolverInterface\n\nThis interface resolves one branch or leaf at a time. It returns [`\\Magento\\Framework\\GraphQl\\Query\\Resolver\\Value`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/Resolver/Value.php) or any type of data (mixed). This value takes in a callable function to its constructor that will be invoked at the latest possible time for the resolver to acquire its data. As a result, a list of items being resolved can be retrieved all at once by establishing a buffer that contains all relevant parent data to filter and fetch for the children list data.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 198, "to": 200 } }
        }
      }
    ],
    [
      "7f3f240b-a059-4e2f-96cc-a0952e264a0a",
      {
        "pageContent": "You can view an example inside the [`\\Magento\\BundleGraphQl\\Model\\Resolver\\BundleItemLinks`](https://github.com/magento/magento2/blob/2.4/app/code/Magento/BundleGraphQl/Model/Resolver/BundleItemLinks.php) resolver. This resolver takes each bundle option ID and its corresponding parent product ID and stores them in a collection's filter buffer (in this case, using the [`\\Magento\\BundleGraphQl\\Model\\Resolver\\Links\\Collection::addIdFilters()`](https://github.com/magento/magento2/blob/2.4/app/code/Magento/BundleGraphQl/Model/Resolver/Links/Collection.php#L62-L70) function). Each resolver then returns a callable that invokes this collection. The collection caches the result of all link entities it fetched for all the option_id/parent_id combinations. This fetch only needs to occur once for the whole `BundleItemLink` list, and each resulting callable that is invoked for every link in the list returns an item from the collections cached result.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 202, "to": 202 } }
        }
      }
    ],
    [
      "d976f37d-a460-4bdc-9a03-c85c2a230bcc",
      {
        "pageContent": "A `Value` object wraps a callable object, and you can use [`\\Magento\\Framework\\GraphQl\\Query\\Resolver\\ValueFactory`](https://github.com/magento/magento2/blob/2.4/lib/internal/Magento/Framework/GraphQl/Query/Resolver/ValueFactory.php) to create a value.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 204, "to": 204 } }
        }
      }
    ],
    [
      "efb3f967-257c-4eeb-92fe-9824df2ee722",
      {
        "pageContent": "## Mutation requirements\n\nLike queries, mutations are also defined within the `<module_name>/etc/schema.graphqls` file.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 206, "to": 208 } }
        }
      }
    ],
    [
      "9eedbfb7-7784-4d09-8ea5-c3cc28f9c2c8",
      {
        "pageContent": "### Mutation syntax\n\n```text\ntype Mutation {\n    mutationQueryName(inputParamName: MutationQueryInputType, inputParamName2: MutationQueryInputType2, ...): MutationQueryOutput @resolver(class: \"Magento\\\\<module_name>\\\\Model\\\\Resolver\\\\MutationResolverModel\") @doc(description:\"Mutation query description\")\n}\n```\n\nSyntax option | Description\n--- | ---\n`mutationQueryName` | The name of mutation\n`inputParamName` | Input parameters for the mutation (optional)\n`MutationQueryInputType` | The type of input parameter, such as `String`, `Int`, or a custom type, like `MyCustomInput`\n`MutationQueryOutput` | The mutation's result type, such as  `String`, `Int`, or a custom type, like `MyCustomOutput`\n`@resolver(class)` | The class of the resolver\n`@doc(description)` | Describes the purpose of the mutation\n`@deprecated(reason: \"description\")` | Use `@deprecated` to mark a query, mutation, or attribute as deprecated",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 210, "to": 226 } }
        }
      }
    ],
    [
      "44cdb650-deb7-4bd1-b857-3eb17a0dad32",
      {
        "pageContent": "### Resolver class\n\nUse the following sample code as a template for the GraphQL resolver mutation class:\n\n```php\n<?php\n/**\n * Copyright &copy; Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndeclare(strict_types=1);\n\nnamespace Magento\\<module_name>\\Model\\Resolver;\n\nuse Magento\\Framework\\GraphQl\\Config\\Element\\Field;\nuse Magento\\Framework\\GraphQl\\Query\\ResolverInterface;\nuse Magento\\Framework\\GraphQl\\Schema\\Type\\ResolveInfo;\n\n/**\n * @inheritdoc\n */\nclass MutationResolverModel implements ResolverInterface\n{\n    /**\n     * @inheritdoc\n     */\n    public function resolve(Field $field, $context, ResolveInfo $info, array $value = null, array $args = null)\n    {\n        // resolver functionality ...\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 228, "to": 259 } }
        }
      }
    ],
    [
      "9ec82527-8c50-4132-b53d-7ee79dbfd7a5",
      {
        "pageContent": "### Example usage\n\nThe mutation query below creates an empty cart and returns a cart unique identifier\n\n```text\ntype Mutation {\n    createEmptyCart: String @resolver(class: \"\\\\Magento\\\\QuoteGraphQl\\\\Model\\\\Resolver\\\\CreateEmptyCart\") @doc(description:\"Creates an empty shopping cart for a guest or logged in user\")\n}\n```\n\nNotice that a `MutationQueryInput` parameter is not specified here and `MutationQueryOutput` is defined as `String` type.\n\nThe mutation to create a customer's account is more complex:\n\n```text\ntype Mutation {\n    createCustomer (input: CustomerInput!): CustomerOutput @resolver(class: \"\\\\Magento\\\\CustomerGraphQl\\\\Model\\\\Resolver\\\\CreateCustomer\") @doc(description:\"Create customer account\")\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 261, "to": 278 } }
        }
      }
    ],
    [
      "4d708752-cbec-400b-b45e-fdcd92fa65db",
      {
        "pageContent": "```\n\nThe `!` character indicates `CustomerInput` is a required input parameter. `CustomerInput` is defined as follows:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 279, "to": 281 } }
        }
      }
    ],
    [
      "e6f39ecd-9f41-49d4-b132-fb32963e88cb",
      {
        "pageContent": "```text\ninput CustomerInput {\n    prefix: String @doc(description: \"An honorific, such as Dr., Mr., or Mrs.\")\n    firstname: String @doc(description: \"The customer's first name\")\n    middlename: String @doc(description: \"The customer's middle name\")\n    lastname: String @doc(description: \"The customer's family name\")\n    suffix: String @doc(description: \"A value such as Sr., Jr., or III\")\n    email: String @doc(description: \"The customer's email address. Required\")\n    date_of_birth: String @doc(description: \"The customer's date of birth.\")\n    taxvat: String @doc(description: \"The customer's Tax/VAT number (for corporate customers)\")\n    gender: Int @doc(description: \"The customer's gender(Male - 1, Female - 2)\")\n    password: String @doc(description: \"The customer's password\")\n    is_subscribed: Boolean @doc(description: \"Indicates whether the customer is subscribed to the company's newsletter\")\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 283, "to": 296 } }
        }
      }
    ],
    [
      "646fc76f-2736-4e88-be3d-b39a3725cf84",
      {
        "pageContent": "```\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nIn keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers' full date of birth (month, day, year) along with other personal identifiers, such as full name, before collecting or processing such data.\n\nThe `createCustomer` mutation returns `CustomerOutput` object\n\n```text\ntype CustomerOutput {\n    customer: Customer!\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 297, "to": 308 } }
        }
      }
    ],
    [
      "220ddeb0-77d4-4cee-80f3-c6e1c8973e89",
      {
        "pageContent": "```\n\nThe `customer` parameter of the `CustomerOutput` object is a type of `Customer` object:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 309, "to": 311 } }
        }
      }
    ],
    [
      "7e135c1e-c1c7-44c3-a9a5-fe1e91da7551",
      {
        "pageContent": "```text\ntype Customer @doc(description: \"Customer defines the customer name and address and other details\") {\n    created_at: String @doc(description: \"Timestamp indicating when the account was created\")\n    prefix: String @doc(description: \"An honorific, such as Dr., Mr., or Mrs.\")\n    firstname: String @doc(description: \"The customer's first name\")\n    middlename: String @doc(description: \"The customer's middle name\")\n    lastname: String @doc(description: \"The customer's family name\")\n    suffix: String @doc(description: \"A value such as Sr., Jr., or III\")\n    email: String @doc(description: \"The customer's email address. Required\")\n    default_billing: String @doc(description: \"The ID assigned to the billing address\")\n    default_shipping: String @doc(description: \"The ID assigned to the shipping address\")\n    date_of_birth: String @doc(description: \"The customer's date of birth\")\n    taxvat: String @doc(description: \"The customer's Tax/VAT number (for corporate customers)\")",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 313, "to": 325 } }
        }
      }
    ],
    [
      "d662bc40-8e08-4bcd-8aee-94048a60df58",
      {
        "pageContent": "is_subscribed: Boolean @doc(description: \"Indicates whether the customer is subscribed to the company's newsletter\") @resolver(class: \"\\\\Magento\\\\CustomerGraphQl\\\\Model\\\\Resolver\\\\IsSubscribed\")\n    addresses: [CustomerAddress] @doc(description: \"An array containing the customer's shipping and billing addresses\")\n    gender: Int @doc(description: \"The customer's gender (Male - 1, Female - 2)\")\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 326, "to": 329 } }
        }
      }
    ],
    [
      "7c4d9eb3-747f-47c1-bd77-bd01044ff68d",
      {
        "pageContent": "```\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nIn keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers' full date of birth (month, day, year) along with other personal identifiers, such as full name, before collecting or processing such data.\n\nThe following example shows the `createCustomer` mutation in action:\n\n```text\nmutation {\n    createCustomer(\n        input: {\n            firstname: \"John\"\n            lastname: \"Doe\"\n            email: \"j.doe@example.com\"\n            password: \"1w2E3R456\"\n            is_subscribed: true\n        }\n    ) {\n        customer {\n            firstname\n            lastname\n            email\n            is_subscribed\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 330, "to": 356 } }
        }
      }
    ],
    [
      "01e38bd8-2c70-4cb9-b532-c67299428d32",
      {
        "pageContent": "```\n\nA sample response:\n\n```json\n{\n  \"data\": {\n    \"createCustomer\": {\n      \"customer\": {\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\",\n        \"email\": \"j.doe@example.com\",\n        \"is_subscribed\": true\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/develop/resolvers.md",
          "loc": { "lines": { "from": 357, "to": 374 } }
        }
      }
    ],
    [
      "6e5658d1-13db-422a-9760-8a0ea0ca096d",
      {
        "pageContent": "---\ntitle: GraphQL overview\ndescription: Review high-level concepts about the Adobe Commerce and Magento Open Source GraphQL API.\nkeywords:\n  - GraphQL\n---\n\n# GraphQL overview\n\n[GraphQL](https://graphql.org/) is a data query language developed internally by Facebook in 2012 before being publicly released in 2015. Adobe Commerce and Magento Open Source implement GraphQL to provide an alternative to REST and SOAP web APIs for frontend development.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/index.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "3da26ecb-5327-49a9-a9f4-45362f9485c1",
      {
        "pageContent": "## How to access GraphQL\n\nUse a GraphQL IDE such as [GraphiQL](https://github.com/graphql/graphiql) or a browser extension to run the code samples and tutorials. If you install a browser extension, make sure it has the ability to set request headers. On Google Chrome, [Altair GraphQL Client](https://chrome.google.com/webstore/detail/altair-graphql-client/flnheeellpciglgpaodhkhmapeljopja) is one extension that can do the job.\n\nTo begin exploring GraphQL, set the GraphQL endpoint by entering `http://<magento2-server>/graphql` in the URL bar of your IDE or extension. You can use the browser in the right column to determine how to set up a query or mutation. Examples are also available throughout the GraphQL documentation.\n\nThe following image shows a sample query, its response, and the GraphQL browser:\n\n![GraphiQL browser](../_images/graphql/graphql-browser.png)\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/index.md",
          "loc": { "lines": { "from": 12, "to": 22 } }
        }
      }
    ],
    [
      "7a5388bc-9757-45bf-a384-75aad52dd27b",
      {
        "pageContent": "The Catalog Service, Live Search, and Product Recommendations services have schemas that are independent from the core schema for Adobe Commerce and Magento Open Source. You can find the schema reference documentation and examples for these services in [Storefront Services GraphQL](https://developer.adobe.com/commerce/services/graphql/).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/index.md",
          "loc": { "lines": { "from": 24, "to": 24 } }
        }
      }
    ],
    [
      "1bea1802-a5f3-4c93-8afe-fb28f2aaec68",
      {
        "pageContent": "---\ntitle: Braintree Vault payment method\ndescription: Learn how to use the GraphQL API mutation for the Braintree Vault payment solution.\ncontributor_name: Something Digital\ncontributor_link: https://www.somethingdigital.com/\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Braintree Vault payment method\n\nBraintree Vault is a payment gateway that processes debit and credit card payments from the Magento_Vault.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree-vault.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "88a55208-ec26-40ba-8308-3a91ef5940f6",
      {
        "pageContent": "## Braintree Vault workflow\n\nThe following diagram shows the workflow for placing an order when Braintree Vault is the selected payment method.\n\n![Braintree sequence diagram](../../_images/graphql/braintree-vault.svg)\n\n1. Use the [`customerPaymentTokens`](../schema/checkout/queries/customer-payment-tokens.md) query to retrieve\n   the payment tokens the customer has stored in the vault.\n\n1. The application returns an array of payment tokens.\n\n1. The client renders the token information, and the customer selects a payment method.\n\n   When the customer selects a stored payment method, the PWA uses the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation to set the payment method to [`braintree_cc_vault`](#braintree_cc_vault-object). The vaulted public hash is passed with other optional properties in the `braintree_cc_vault`.\n\n1. The application returns a `Cart` object.\n\n1. The client runs the [`placeOrder`](../schema/cart/mutations/place-order.md) mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree-vault.md",
          "loc": { "lines": { "from": 15, "to": 32 } }
        }
      }
    ],
    [
      "718b19ec-7337-414c-8661-4f8d26367f4d",
      {
        "pageContent": "1. The application sends an authorization request to the gateway.\n\n1. The gateway sends the response to Magento.\n\n1. The application creates an order and sends an order ID in response to the `placeOrder` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree-vault.md",
          "loc": { "lines": { "from": 34, "to": 38 } }
        }
      }
    ],
    [
      "aa7f500c-4e57-4e64-a169-7f490f64ae63",
      {
        "pageContent": "## `setPaymentMethodOnCart` mutation\n\nWhen you set the payment method to Braintree in the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md)\nmutation, the `payment_method` object must contain a [`braintree_cc_vault`](#braintree_cc_vault-object) object.\n\n### braintree_cc_vault object\n\nThe `braintree_cc_vault` object must contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`public_hash` | String! | Required input for Magento_Vault public hash for the selected stored payment method\n`device_data` | String | Optional. JSON-encoded device data for Kount integration",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree-vault.md",
          "loc": { "lines": { "from": 40, "to": 52 } }
        }
      }
    ],
    [
      "53cb308d-d30e-498b-91a3-82f9aa8ff835",
      {
        "pageContent": "### Example Usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Braintree Vault payment method.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(\n    input: {\n      cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n      payment_method: {\n        code: \"braintree_cc_vault\"\n        braintree_cc_vault: { public_hash: \"fake-public-hash\" }\n      }\n    }\n  ) {\n    cart {\n      selected_payment_method {\n        code\n        title\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"braintree_cc_vault\"\n          \"title\": \"Stored Cards\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree-vault.md",
          "loc": { "lines": { "from": 54, "to": 96 } }
        }
      }
    ],
    [
      "56cf8bb8-5b1a-4442-807b-7b294e04031e",
      {
        "pageContent": "---\ntitle: Braintree payment method\ndescription: Learn how to use the GraphQL API mutation for the Braintree payment solution.\ncontributor_name: Something Digital\ncontributor_link: https://www.somethingdigital.com/\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Braintree payment method\n\nBraintree is a payment gateway that processes debit and credit card payments.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "ff70d7a9-1ec6-4257-b979-de4a95cd212e",
      {
        "pageContent": "## Braintree workflow\n\nThe following diagram shows the workflow for placing an order when Braintree is the selected payment method.\n\n![Braintree sequence diagram](../../_images/graphql/braintree.svg)\n\n1. The PWA client calls the [`createBraintreeClientToken`](../schema/checkout/mutations/create-braintree-client-token.md) mutation to generate the client token.\n\n1. The application forwards the request to Braintree.\n\n1. Braintree returns the token to Adobe Commerce.\n\n1. The application forwards the token to the client.\n\n1. The PWA client uses the token to initialize the [Braintree hosted fields](https://developers.braintreepayments.com/guides/hosted-fields/overview/javascript/v3). These fields collect and tokenize payment information via a secure iframe. This process occurs over several steps.\n\n   -  On the checkout page, the customer selects **Credit Card** as the payment method and enters payment information using the Braintree hosted fields. Then the customer clicks **Place Order**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree.md",
          "loc": { "lines": { "from": 15, "to": 31 } }
        }
      }
    ],
    [
      "69bf455d-2017-40fa-9c51-b977453af25c",
      {
        "pageContent": "-  The client requests the Braintree SDK tokenize the user-input payment information.\n\n1. The Braintree SDK submits the payment information to Braintree client-side and returns a [payment token](https://braintree.github.io/braintree-web/3.46.0/HostedFields.html#tokenize) (nonce) to the client.\n\n1. The client extracts the payment nonce from the [Tokenized Payload](https://braintree.github.io/braintree-web/3.46.0/HostedFields.html#~tokenizePayload).\n\n   The client uses the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation to set the payment method to `braintree`. The payment method nonce is passed with other required and optional properties in the [`braintree`](#braintree-object) object.\n\n1. The application returns a `Cart` object.\n\n1. The client uses the [`placeOrder`](../schema/cart/mutations/place-order.md) mutation.\n\n1. The application sends an authorization request to Braintree.\n\n1. Braintree sends the response to Adobe Commerce.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree.md",
          "loc": { "lines": { "from": 33, "to": 47 } }
        }
      }
    ],
    [
      "e3d751ae-57ca-44e1-96f3-8ddc117dc3c3",
      {
        "pageContent": "1. The application creates an order and sends an order ID in response to the `placeOrder` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree.md",
          "loc": { "lines": { "from": 49, "to": 49 } }
        }
      }
    ],
    [
      "7c816094-63d8-4e63-8829-81095ef2755c",
      {
        "pageContent": "## `setPaymentMethodOnCart` mutation\n\nWhen you set the payment method to Braintree in the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation, the `payment_method` object must contain a `braintree` object.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree.md",
          "loc": { "lines": { "from": 51, "to": 53 } }
        }
      }
    ],
    [
      "f81482a2-c8b0-4ad9-a541-30ecc002a225",
      {
        "pageContent": "### braintree object\n\nThe `braintree` object must contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`payment_method_nonce` | String! | The one-time payment token generated by Braintree payment gateway based on card details. Required field for sale transactions\n`is_active_payment_token_enabler` | Boolean! | States whether a customer-entered credit/debit card should be tokenized for later usage. Required only if Vault is enabled for Braintree payment integration\n`device_data` | String | Optional. Contains a fingerprint provided by the Braintree JS SDK. It should be sent with sale transaction details to the Braintree payment gateway. Specify a value only if Kount (advanced fraud protection) is enabled for Braintree payment integration",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree.md",
          "loc": { "lines": { "from": 55, "to": 63 } }
        }
      }
    ],
    [
      "5385221a-ac6c-4692-b790-b42b20919dcd",
      {
        "pageContent": "## Example Usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Braintree payment method.\n\n**Request:**\n\n```text\nmutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n    payment_method: {\n      code: \"braintree\"\n      braintree: {\n        payment_method_nonce: \"fake-nonce\"\n        is_active_payment_token_enabler: false\n      }\n    }\n  }) {\n  cart {\n    selected_payment_method {\n      code\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"braintree\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/braintree.md",
          "loc": { "lines": { "from": 65, "to": 105 } }
        }
      }
    ],
    [
      "7bcffe2f-b504-4521-b45c-015339c4cf10",
      {
        "pageContent": "---\ntitle: PayPal Website Payments Pro Hosted Solution payment method\ndescription: Learn how to use the GraphQL API mutation for the PayPal Website Payments Pro Hosted payment solution.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# PayPal Website Payments Pro Hosted Solution payment method\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nPayPal has designated Website Payments Pro Hosted Solution as a legacy product.\n\nPayPal's [Website Payments Pro Hosted Solution](https://developer.paypal.com/api/nvp-soap/payflow/website-payments-pro-hosted-solution/) allows merchants to accept credit cards, debit cards, and PayPal payments directly on their websites. The merchant must be based in the United Kingdom to create a new integration with this payment method. PayPal continues to support merchants with existing integrations outside the UK.\n\nThis payment method is applicable to Direct Payment and Express Checkout implementations of the Website Payments Pro Hosted Solution.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/hosted-pro.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "09c3956d-aa7d-4ebf-9a84-179169b4dd22",
      {
        "pageContent": "PayPal's product name for this payment method varies from country to country. [PayPal Website Payments\nPro Hosted Solution Integration Guide](https://www.paypalobjects.com/webstatic/en_GB/developer/docs/pdf/hostedsolution_uk.pdf) provides more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/hosted-pro.md",
          "loc": { "lines": { "from": 19, "to": 20 } }
        }
      }
    ],
    [
      "4c0bc657-faf1-401a-b34f-68a79d8fdfa7",
      {
        "pageContent": "## Website Payments Pro Hosted Solution workflow\n\nThe following diagram shows the workflow for placing an order when Website Payments Pro Hosted Solution is the selected payment method.\n\n![PayPal Website Payments Pro Hosted Solution sequence diagram](../../_images/graphql/paypal-hosted-pro.svg)\n\nimport HostedProWorkflow from '/src/_includes/graphql/payment-methods/hosted-pro-workflow.md'\n\n<HostedProWorkflow />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/hosted-pro.md",
          "loc": { "lines": { "from": 22, "to": 30 } }
        }
      }
    ],
    [
      "161e22f2-3f84-4e93-92b7-ad8651e9ff61",
      {
        "pageContent": "## `setPaymentMethodOnCart` mutation\n\nWhen you set the payment method for a Website Payments Pro Hosted Solution, you must set the `code` attribute to `hosted_pro`. In addition, the payload must contain a `hosted_pro` object, which defines the following attributes:\n\nimport HostedProAttributes from '/src/_includes/graphql/payment-methods/hosted-pro-attributes.md'\n\n<HostedProAttributes />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/hosted-pro.md",
          "loc": { "lines": { "from": 32, "to": 38 } }
        }
      }
    ],
    [
      "d07f4242-d96d-4d36-8247-292dae58f934",
      {
        "pageContent": "### Example usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Website Payments Pro Hosted Solution payment method.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"H87OmEkvusP7ZPkd2634pQFxY4dKI3a4\"\n    payment_method: {\n      code: \"hosted_pro\"\n      hosted_pro: {\n        cancel_url: \"paypal/hostedpro/cancel\"\n        return_url: \"paypal/hostedpro/return\"\n      }\n    }\n  })\n  {\n    cart {\n      selected_payment_method {\n        code\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"hosted_pro\",\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/hosted-pro.md",
          "loc": { "lines": { "from": 40, "to": 82 } }
        }
      }
    ],
    [
      "c5eb1925-3153-4cd8-8050-8500166eaef6",
      {
        "pageContent": "---\ntitle: Core GraphQL payment methods\ndescription: Learn about the workflows for third-party payment methods.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Core GraphQL payment methods\n\nThe Adobe Commerce and Magento Open Source GraphQL API provides several mutations for third-party payment providers.\n\nSupported payment providers include:\n\n- Braintree\n- Klarna (deprecated)\n- PayPal\n\n[Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 and higher provides enhanced payment method capabilities. See [Payment Services Payment Methods](../payment-services/index.md) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/index.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "b6569807-7b23-425a-9f6e-2f640aa6d96a",
      {
        "pageContent": "---\ntitle: Klarna payment method\ndescription: Learn how to use the GraphQL API mutation for the Klarna payment solution.\ncontributor_name: Klarna\ncontributor_link: https://www.klarna.com/\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Klarna payment method\n\nKlarna Payments enables your consumers to try before they buy, finance purchases on your store with Klarna, or let them pay directly. Klarna offers these payment methods through a widget that you can add inline on your checkout page.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "296c4a84-a6e0-4e21-8fc4-7f4740a6908d",
      {
        "pageContent": "## Klarna payments workflow\n\nThe following diagram shows the workflow for placing an order when Klarna is the selected payment method.\n\nKlarna payments require cart information to initiate the session. For this reason, the following steps can be executed only after a cart has been created.\n\n![Klarna payments sequence diagram](../../_images/graphql/klarna-payments.svg)\n\n1. The PWA client calls the [`createKlarnaPaymentsSession`](../schema/checkout/mutations/create-klarna-payments-session.md) mutation to generate the `client_token` and retrieve a list of `payment_categories`.\n\n   This step can be executed at any time after the cart is created. However, we recommend that you add products to the cart and set the billing address, shipping address, and shipping method on the cart before you perform this step.\n\n1. The application forwards the request to Klarna.\n\n1. Klarna returns the `client_token` and the `payment_categories` available to the shopper.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 15, "to": 29 } }
        }
      }
    ],
    [
      "742c7d25-8224-4c21-bedf-aa3866440ff0",
      {
        "pageContent": "1. The application forwards the token to the client.\n\n1. The client sends the `cart` query to retrieve the available payment methods.\n\n1. The application must always retrieve the latest status information from Klarna before returning the Klarna payments method as an option to the shopper. This is important to ensure that the shopper is always shown the latest available payment options.\n\n1. Klarna returns an updated list of `payment_categories`.\n\n1. The application returns all available payment methods, including Klarna payment methods.\n\n1. The PWA client renders the Klarna payment widget.\n\n   The PWA client uses the `client_token` and `payment_categories` to initialize the [Klarna Payments JS SDK](https://developers.klarna.com/documentation/klarna-payments/javascript-sdk/).\n\n1. The PWA client sends the [authorization](https://developers.klarna.com/documentation/klarna-payments/single-call-descriptions/authorize-the-purchase/) directly to Klarna.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 31, "to": 45 } }
        }
      }
    ],
    [
      "63e380e9-3d55-4623-a12b-6c4b8a22f298",
      {
        "pageContent": "On the checkout page, the shopper selects Klarna as the payment method and clicks **Place Order**. When this happens, the PWA client must send the `authorize()` call to Klarna. Then the shopper follows the authorization steps on the Klarna inline modal. During this phase, the communication between the PWA client and Klarna is handled directly by the Klarna Payments JS SDK.\n\n1. Klarna returns the `authorization_token` in response to the authorize call.\n\n1. Set the Payment Method providing the `authorization_token` as part of the `setPaymentMethodOnCart` mutation.\n\n   The client uses the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation to set the payment method to `klarna_<identifier-value>`. The `authorization_token` is passed in the `klarna` object.\n\n1. The application returns an updated `cart` object.\n\n1. The PWA client runs the `placeOrder` mutation.\n\n1. The application sends the place order request to Klarna.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 47, "to": 59 } }
        }
      }
    ],
    [
      "c50c5c20-b8b1-4d70-b45a-e4d9a873e88f",
      {
        "pageContent": "1. Klarna sends the response to Magento.\n\n1. The application creates an order and sends an order ID in response to the `placeOrder` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 61, "to": 63 } }
        }
      }
    ],
    [
      "30f3a994-54a7-469c-8cdc-1a695008db62",
      {
        "pageContent": "## How to handle cart updates\n\nDuring the purchase flow, the cart can be updated by adding additional products, applying coupons, and changing the billing or shipping address. All these events might cause a change in Klarna options for the specific shopper.\n\nIn order to always present shoppers with the latest available payment options provided by Klarna, the PWA client must:\n\n1. Perform a cart update.\n\n1. The application returns an updated `cart` object.\n\n1. Send the `cart` query to retrieve the latest available payment methods.\n\n1. The application sends another request to Klarna with the latest information available from the cart.\n\n1. Klarna returns new list of payment methods. Note that the list might contain different options for the shopper.\n\n1. The application returns an updated `cart` object.\n\n1. [Reload the widget](https://developers.klarna.com/documentation/klarna-payments/single-call-descriptions/load-klarna-payments/) on the client side.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 65, "to": 83 } }
        }
      }
    ],
    [
      "4a7dd3a4-f4d8-4c32-b141-b1b627956f5a",
      {
        "pageContent": "The following diagram describes the workflow:\n\n![Klarna payments cart updates sequence diagram](../../_images/graphql/klarna-payments-cart-updates.svg)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 85, "to": 87 } }
        }
      }
    ],
    [
      "0e2d889c-364e-4770-9950-da3c18d1b356",
      {
        "pageContent": "## setPaymentMethodOnCart mutation\n\nWhen you set the payment method to Klarna in the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation, the `payment_method` object must contain a `klarna` object.\n\n### klarna object\n\nThe `klarna` object must contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`authorization_token` | String! | The one-time authorization token generated by the Klarna payment gateway based on shopper details collected during the purchase flow",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 89, "to": 99 } }
        }
      }
    ],
    [
      "01e44977-1f48-4527-8747-b3441d2d81b0",
      {
        "pageContent": "## Example usage\n\nThe following example shows the  `setPaymentMethodOnCart` mutation constructed for the Klarna payment method.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"3WxC8gQn4Fbo55yqVLSiUFJ9fmEwnlxG\"\n    payment_method: {\n      code: \"klarna_pay_later\"\n      klarna: {\n        authorization_token: \"e9abc610-6748-256f-a506-355626551326\"\n      }\n    }\n  }) {\n  cart {\n    selected_payment_method {\n      code\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n     \"cart\": {\n       \"selected_payment_method\": {\n         \"code\": \"klarna_pay_later\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/klarna.md",
          "loc": { "lines": { "from": 101, "to": 140 } }
        }
      }
    ],
    [
      "6021a963-fdc9-4bbe-8c15-0432c8166188",
      {
        "pageContent": "---\ntitle: Express Checkout for other PayPal solutions\ndescription: Learn how to use the GraphQL API mutation for the Express Checkout for other PayPal payment solutions.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Express Checkout for other PayPal solutions\n\nSet the payment method code to `payflow_express` to process Express Checkout transactions when the payment method is set to any of the following:\n\n-  Payflow Link\n-  Payflow Pro\n-  Payments Advanced\n-  Payments Pro\n\nPayPal Express Checkout enables customers to pay by credit card or from the security of their personal PayPal accounts. During checkout, the customer is redirected to the secure PayPal site to complete the payment information. The customer is then returned to the store to complete the remainder of the checkout process.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-express.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "656f948e-9d8d-4fc3-9aac-fdab828485af",
      {
        "pageContent": "From a GraphQL integration standpoint, this payment method is identical to the [PayPal Express Checkout](payflow-link.md) payment method, with the exception that in the `setPaymentMethodOnCart` mutation, the payment method `code` is set to `payflow_express`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-express.md",
          "loc": { "lines": { "from": 20, "to": 20 } }
        }
      }
    ],
    [
      "71a730c0-9b85-4d37-b826-6f79170eee22",
      {
        "pageContent": "## PayPal Express Checkout workflow\n\nThe following diagram shows the workflow for placing an order when `payflow_express` is the specified payment method.\n\n![PayPal Express Checkout sequence diagram](../../_images/graphql/paypal-express-checkout.svg)\n\nThe following steps describe the flow of calls required to complete a typical PayPal Express Checkout authorization. A successful purchase requires that you send three mutations to PayPal, and the buyer must approve the purchase by logging in to PayPal.\n\nimport PaypalExpressCheckoutWorkflow from '/src/_includes/graphql/payment-methods/paypal-express-checkout-workflow.md'\n\n<PaypalExpressCheckoutWorkflow />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-express.md",
          "loc": { "lines": { "from": 22, "to": 32 } }
        }
      }
    ],
    [
      "c2b985d2-359b-4b3d-bb7a-fdf481b489ba",
      {
        "pageContent": "## `setPaymentMethodOnCart` mutation\n\nWhen you set the payment method to one of the Express Checkout payment solutions discussed in this topic, you must set the `code` attribute to `payflow_express`. In addition, the payload must contain a `payflow_express` object, which defines the following attributes:\n\nimport PaypalExpressCheckoutAttributes from '/src/_includes/graphql/payment-methods/paypal-express-checkout-attributes.md'\n\n<PaypalExpressCheckoutAttributes />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-express.md",
          "loc": { "lines": { "from": 34, "to": 40 } }
        }
      }
    ],
    [
      "7a431d1d-2c58-49c0-b74b-9dc0086e0081",
      {
        "pageContent": "### Example usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation with the `code` set to `payflow_express`.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"rMQdWEecBZr4SVWZwj2AF6y0dNCKQ8uH\"\n    payment_method: {\n        code: \"payflow_express\"\n        payflow_express: {\n          payer_id: \"<PayPal_PayerID>\"\n          token: \"<PayPal_Token>\"\n        }\n      }\n  }) {\n    cart {\n      selected_payment_method {\n        code\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"payflow_express\",\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-express.md",
          "loc": { "lines": { "from": 42, "to": 83 } }
        }
      }
    ],
    [
      "c897f40b-78b3-4f1d-896c-f63493b729b8",
      {
        "pageContent": "## Related topics\n\n-  [`createPaypalExpressToken` mutation](../schema/checkout/mutations/create-paypal-express-token.md)\n-  [`placeOrder` mutation](../schema/cart/mutations/place-order.md)\n-  [`setPaymentMethodOnCart` mutation](../schema/cart/mutations/set-payment-method.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-express.md",
          "loc": { "lines": { "from": 85, "to": 89 } }
        }
      }
    ],
    [
      "0d058a32-9beb-42f8-b08e-a632a43824a5",
      {
        "pageContent": "---\ntitle: PayPal Payflow Link payment method\ndescription: Learn how to use the GraphQL API mutation for the PayPal Payflow Link payment solution.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# PayPal Payflow Link payment method\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nPayPal has designated PayFlow Link as a legacy product.\n\nPayPal [PayFlow Link](https://developer.paypal.com/api/nvp-soap/payflow/payflow-gateway/) is available for merchants in the United States and Canada only. Customers are not required to have a personal PayPal account. Instead, customers enter their credit card information in a form that is hosted by PayPal.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-link.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "e7bbc481-785f-4da3-af17-99717b6f2764",
      {
        "pageContent": "The Payflow gateway uses a secure token to send non-credit card transaction data to the Payflow server for storage in a way that cannot be intercepted and manipulated maliciously. This token secures the data for a one-time transaction and is valid for 30 minutes. When the PWA client runs the `placeOrder` mutation, the application requests a secure token. The Payflow server returns the token as a string of up to 32 alphanumeric characters.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-link.md",
          "loc": { "lines": { "from": 17, "to": 17 } }
        }
      }
    ],
    [
      "03b68e03-fd3a-4b2f-9f78-3ed1f1960ee7",
      {
        "pageContent": "## Payflow Link workflow\n\nThe following diagram shows the workflow for placing an order when Payflow Link is the selected payment method.\n\n![PayPal Payflow Link sequence diagram](../../_images/graphql/paypal-payflow-link.svg)\n\nimport PayflowLinkWorkflow from '/src/_includes/graphql/payment-methods/payflow-link-workflow.md'\n\n<PayflowLinkWorkflow />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-link.md",
          "loc": { "lines": { "from": 19, "to": 27 } }
        }
      }
    ],
    [
      "86785bb5-6a9c-4e82-bdc7-cb9f9c740482",
      {
        "pageContent": "## Additional Payment information\n\nWhen you set the payment method to Payflow Link in the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation, the `payment_method` object must contain a `payflow_link` object, which defines the following objects:\n\nimport PayflowLinkAttributes from '/src/_includes/graphql/payment-methods/payflow-link-attributes.md'\n\n<PayflowLinkAttributes />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-link.md",
          "loc": { "lines": { "from": 29, "to": 35 } }
        }
      }
    ],
    [
      "d50184e9-4ad9-4ffb-8459-01f72c498ba6",
      {
        "pageContent": "### Example usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Payflow Link payment method.\n\n**Request:**\n\n```graphql\nmutation {\n    setPaymentMethodOnCart(input: {\n        payment_method: {\n            code: \"payflow_link\"\n            payflow_link: {\n                return_url: \"paypal/action/return.html\"\n                error_url: \"paypal/action/error.html\"\n                cancel_url: \"paypal/action/cancel.html\"\n            }\n        }\n        cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n    }) {\n        cart {\n            selected_payment_method {\n                code\n                title\n            }\n        }\n    }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"payflow_link\",\n          \"title\": \"PayPal Payflow Link\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-link.md",
          "loc": { "lines": { "from": 37, "to": 81 } }
        }
      }
    ],
    [
      "7e406a37-aa40-42f4-a261-def28066619b",
      {
        "pageContent": "---\ntitle: PayPal Payflow Pro Vault payment method\ndescription: Learn how to use the GraphQL API mutation for the PayPal Payflow Pro Vault payment solution.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# PayPal Payflow Pro Vault payment method\n\nPayPal Payflow Pro Vault payment method processes credit and debit card payments using information stored in the vault. This payment method is available for customers of the United States, Canada, Australia, and New Zealand.\n\nThe following conditions must be true to use this payment method:\n\n-  The shopper must be a logged-in customer.\n\n-  The customer must have previously saved their payment information in the vault.\n\nYou cannot use this payment method if the customer decides to use a credit or debit card that is not stored in the vault.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro-vault.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "5ca723bf-fe72-4a22-a403-50bc983ad861",
      {
        "pageContent": "If the customer's stored payment information becomes outdated, use the [deletePaymentToken mutation](../schema/checkout/mutations/delete-payment-token.md) to remove the token. Then perform the actions described in the [PayPal Payflow Pro payment method](../payment-methods/payflow-pro.md) to generate a new token and process the order.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [`storeConfig` query](../schema/store/queries/store-config.md) and specify the `payment_payflowpro_cc_vault_active` attribute to determine whether the Vault feature is enabled for Payflow Pro.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro-vault.md",
          "loc": { "lines": { "from": 21, "to": 25 } }
        }
      }
    ],
    [
      "425685f7-ff6f-42c3-b4c3-6d46a70e2d4e",
      {
        "pageContent": "## Payflow Pro workflow\n\nThe following diagram shows the workflow for placing an order when Payflow Pro Vault is the selected payment method.\n\n![PayPal Payflow Pro Vault sequence diagram](../../_images/graphql/paypal-payflow-pro-vault.svg)\n\n1. Use the [`customerPaymentTokens`](../schema/checkout/queries/customer-payment-tokens.md) query to retrieve the payment tokens the customer has stored in the vault.\n\n1. The application returns an array of payment tokens.\n\n1. The client renders the token information, and the customer selects a payment method.\n\n   When the customer selects a stored payment method, the PWA uses the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation to set the payment method to `payflowpro_cc_vault`. The vaulted public hash is passed in the [`payflowpro_cc_vault`](#payflowpro_cc_vault-attributes) object.\n\n1. The application returns a `Cart` object.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro-vault.md",
          "loc": { "lines": { "from": 27, "to": 41 } }
        }
      }
    ],
    [
      "1bb479d2-ea12-4716-bc13-ce830ed92402",
      {
        "pageContent": "1. The client runs the [`placeOrder`](../schema/cart/mutations/place-order.md) mutation.\n\n1. The application sends an authorization request to the gateway.\n\n1. The gateway sends the response to Magento.\n\n1. The application creates an order and sends an order ID in response to the `placeOrder` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro-vault.md",
          "loc": { "lines": { "from": 43, "to": 49 } }
        }
      }
    ],
    [
      "90bb7449-f405-46c4-9c00-65aff34efaa5",
      {
        "pageContent": "## Additional Payment information\n\nWhen you set the payment method to Payflow Pro Vault in the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation, the `payment_method` object must contain a `payflowpro_cc_vault` object, which contains the customer's public hash.\n\n### payflowpro_cc_vault attributes\n\nThe `payflowpro_cc_vault` object must contain the following attribute:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`public_hash` | String! | The public hash of the payment token",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro-vault.md",
          "loc": { "lines": { "from": 51, "to": 61 } }
        }
      }
    ],
    [
      "0703383b-677e-4f2b-830b-946f2958cef9",
      {
        "pageContent": "### Example usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Payflow Pro payment method.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n    payment_method: {\n      code: \"payflowpro_cc_vault\"\n      payflowpro_cc_vault: {\n          public_hash: \"<public-hash-value>\"\n        }\n      }\n    }\n  })\n  {\n    cart {\n      selected_payment_method {\n        code\n      }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"payflowpro_cc_vault\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro-vault.md",
          "loc": { "lines": { "from": 63, "to": 104 } }
        }
      }
    ],
    [
      "28fbeb88-23a1-48db-9255-4baddab50cd3",
      {
        "pageContent": "---\ntitle: PayPal Payflow Pro payment method\ndescription: Learn how to use the GraphQL API mutation for the PayPal Payflow Pro payment solution.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# PayPal Payflow Pro payment method\n\nPayflow Pro is a payment gateway that processes debit and credit card payments. It is available for customers of the United States, Canada, Australia, and New Zealand.\n\nOther PayPal solutions have the same GraphQL workflow as Payflow Pro. The information in this topic also applies to the following PayPal solution:\n\n-  Payments Pro\n\nIf Payflow Pro has been configured to implement Express Checkout, use the [PayPal Express Checkout for Payflow payment method](payflow-express.md) instead.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nIf the `is_active_payment_token_enabler` attribute is set to `1` (true), in future orders, the logged-in customer can use the [Payflow Pro Vault payment method](payflow-pro-vault.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "d6482cda-d51e-4127-af53-82db29e6288f",
      {
        "pageContent": "## Payflow Pro workflow\n\nThe following diagram shows the workflow for placing an order when Payflow Pro is the selected payment method.\n\n![PayPal Payflow Pro sequence diagram](../../_images/graphql/paypal-payflow-pro.svg)\n\n1. On the checkout page, the customer selects **Credit Card** as the payment method and enters the credit card information as well as the billing and shipping addresses. When the customer clicks **Place Order**, the PWA client uses the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation to set the payment method to `payflowpro`.\n\n1. The mutation returns a `Cart` object.\n\n1. The client runs the [`createPayflowProToken`](../schema/checkout/mutations/create-payflow-pro-token.md) mutation to initiate a transaction.\n\n1. The application requests a secure token from the PayPal gateway. The request also contains billing and shipping information, which the application extracts from the `Cart` object.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro.md",
          "loc": { "lines": { "from": 23, "to": 35 } }
        }
      }
    ],
    [
      "d132669d-d78e-4694-b0ff-31278f42b76c",
      {
        "pageContent": "1. The gateway response includes a secure token, a secure token ID, and result codes and descriptions.\n\n1. The application returns the secure token, a secure token ID, and result codes and descriptions in response to the `createPayflowProToken` mutation.\n\n1. The client uses a hidden iframe to send a silent post request directly to the PayPal gateway for account verification. For live requests, send the silent post to `https://payflowlink.paypal.com`. Send test requests to `https://pilot-payflowlink.paypal.com`.\n\n1. The gateway responds directly to the client. The response contains a payload that includes secure token information and billing and shipping information.\n\n1. The client uses the [`handlePayflowProResponse`](../schema/checkout/mutations/handle-payflow-pro-response.md) mutation to send the payload to the application. The application stores this information without modifying the cart.\n\n1. The mutation returns a `Cart` object.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro.md",
          "loc": { "lines": { "from": 37, "to": 47 } }
        }
      }
    ],
    [
      "9ee6fb24-4671-4a75-a868-af699852096e",
      {
        "pageContent": "1. The client runs the [`placeOrder`](../schema/cart/mutations/place-order.md) mutation, which creates an order and begins the authorization process.\n\n1. The application sends an authorization request to the gateway.\n\n1. The gateway sends the response to Magento.\n\n1. The application creates an order and sends an order ID in response to the `placeOrder` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro.md",
          "loc": { "lines": { "from": 49, "to": 55 } }
        }
      }
    ],
    [
      "571cc07c-852a-4dea-b359-1d0e9856acd1",
      {
        "pageContent": "## Additional Payment information\n\nWhen you set the payment method to Payflow Pro in the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation, the `payment_method` object must contain a `payflowpro` object and a `CreditCardDetailsInput` object.\n\n### payflowpro object\n\nThe `payflowpro` object must contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cc_details` | CreditCardDetailsInput! | Required input for credit card related information\n`is_active_payment_token_enabler` | Boolean | States whether details about the customer's credit/debit card should be tokenized for later use. Required only if Vault is enabled for PayPal Payflow Pro payment integration.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro.md",
          "loc": { "lines": { "from": 57, "to": 68 } }
        }
      }
    ],
    [
      "20989a47-88e0-4359-a5aa-e4a8d04e86ab",
      {
        "pageContent": "### CreditCardDetailsInput object\n\nThe `CreditCardDetailsInput` object must contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cc_exp_month` | Int! | Credit card expiration month\n`cc_exp_year` | Int! | Credit card expiration year\n`cc_last_4` | Int! | Last four digits of the credit card\n`cc_type` | String! | Credit card type",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro.md",
          "loc": { "lines": { "from": 70, "to": 79 } }
        }
      }
    ],
    [
      "962f4add-49e8-4ade-9fea-0f44df5a2a92",
      {
        "pageContent": "### Example usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Payflow Pro payment method.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n    payment_method: {\n      code: \"payflowpro\"\n      payflowpro: {\n        cc_details: {\n          cc_exp_month: 12\n          cc_exp_year: 2023\n          cc_last_4: 1111\n          cc_type: \"VI\"\n        }\n        is_active_payment_token_enabler: 1\n      }\n    }\n  })\n  {\n    cart {\n      selected_payment_method {\n        code\n      }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"payflowpro\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payflow-pro.md",
          "loc": { "lines": { "from": 81, "to": 127 } }
        }
      }
    ],
    [
      "b5d64d9a-0cca-4d40-b767-a811686266f5",
      {
        "pageContent": "---\ntitle: PayPal Payments Advanced payment method\ndescription: Learn how to use the GraphQL API mutation for the PayPal Payments Advanced payment solution.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# PayPal Payments Advanced payment method\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nPayPal has designated Payments Advanced as a legacy product.\n\nThe PayPal Payments Advanced payment solution allows merchants to enable their online stores to collect payments directly via credit card or from the PayPal Credit service. If Payments Advanced has been configured to implement Express Checkout, use the [PayPal Express Checkout for Payflow payment method](payflow-express.md) instead.\n\nFrom a GraphQL integration standpoint, PayPal Payments Advanced payment method is identical to the PayPal [Payflow Link](payflow-link.md) payment method, with the exception of the payment method `code`.\n\nPayPal Payments Advanced is available in the US and Canada only.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payments-advanced.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "309228b2-be27-45aa-83ac-14efb9a7eccf",
      {
        "pageContent": "## PayPal Payments Advanced workflow\n\nThe following diagram shows the workflow for placing an order when Payments Advanced is the selected payment method.\n\n![PayPal Payments Advanced sequence diagram](../../_images/graphql/paypal-payflow-link.svg)\n\nimport PayflowLinkWorkflow from '/src/_includes/graphql/payment-methods/payflow-link-workflow.md'\n\n<PayflowLinkWorkflow />\n\n## Additional Payment information",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payments-advanced.md",
          "loc": { "lines": { "from": 21, "to": 31 } }
        }
      }
    ],
    [
      "4e8648cc-bb9f-4330-94a7-713ce4f36f15",
      {
        "pageContent": "## `setPaymentMethodOnCart` mutation\n\nWhen you set the payment method to PayPal Payments Advanced, you must set the `code` attribute to `payflow_advanced`. In addition, the payload must contain a `payflow_link` object, which defines the following attributes:\n\nimport PayflowLinkAttributes from '/src/_includes/graphql/payment-methods/payflow-link-attributes.md'\n\n<PayflowLinkAttributes />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payments-advanced.md",
          "loc": { "lines": { "from": 33, "to": 39 } }
        }
      }
    ],
    [
      "e9e57af2-9ec9-40b4-a4ed-0ae550da08ef",
      {
        "pageContent": "### Example usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Payments Advanced payment method.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n    payment_method: {\n      code: \"payflow_advanced\"\n      payflow_link: {\n        return_url: \"paypal/action/return.html\"\n        error_url: \"paypal/action/error.html\"\n        cancel_url: \"paypal/action/cancel.html\"\n        }\n      }\n    cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n    }) {\n        cart {\n          selected_payment_method {\n            code\n            title\n          }\n        }\n    }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"payflow_advanced\",\n          \"title\": \"Credit Card\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/payments-advanced.md",
          "loc": { "lines": { "from": 41, "to": 85 } }
        }
      }
    ],
    [
      "af3e0cda-dd48-4759-8663-57e3d5d5fb79",
      {
        "pageContent": "---\ntitle: PayPal Express Checkout payment method\ndescription: Learn how to use the GraphQL API mutation for the PayPal Express Checkout payment solution.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# PayPal Express Checkout payment method\n\nThe PayPal Express Checkout payment method enables customers to pay by credit card or from the security of their personal PayPal accounts. During checkout, the customer is redirected to the secure PayPal site to complete the payment information. The customer is then returned to the store to complete the remainder of the checkout process.\n\nSome alternate PayPal solutions have the same GraphQL workflow when Express Checkout is enabled. The information in this topic also applies to the following PayPal solutions:\n\n-  Payments Standard\n-  Website Payments Standard",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/paypal-express-checkout.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "78023edc-6e0e-49f2-9426-ee0511993cec",
      {
        "pageContent": "## PayPal Express Checkout workflow\n\nThe following diagram shows the workflow for placing an order when PayPal Express Checkout is the selected payment method.\n\n![PayPal Express Checkout sequence diagram](../../_images/graphql/paypal-express-checkout.svg)\n\nThe following steps describe the flow of calls required to complete a typical PayPal Express Checkout authorization. A successful purchase requires that you send three mutations to PayPal, and the buyer must approve the purchase by logging in to PayPal.\n\nimport PaypalExpressCheckoutWorkflow from '/src/_includes/graphql/payment-methods/paypal-express-checkout-workflow.md'\n\n<PaypalExpressCheckoutWorkflow />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/paypal-express-checkout.md",
          "loc": { "lines": { "from": 18, "to": 28 } }
        }
      }
    ],
    [
      "92c8bddd-8553-4080-86cc-934f3c08ad0a",
      {
        "pageContent": "## `setPaymentMethodOnCart` mutation\n\nWhen you set the payment method to Express Checkout, you must set the `code` attribute to `paypal_express`. In addition, the payload must contain a `paypal_express` object, which defines the following attributes:\n\nimport PaypalExpressCheckoutAttributes from '/src/_includes/graphql/payment-methods/paypal-express-checkout-attributes.md'\n\n<PaypalExpressCheckoutAttributes />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/paypal-express-checkout.md",
          "loc": { "lines": { "from": 30, "to": 36 } }
        }
      }
    ],
    [
      "c6233afa-7969-4780-8893-ceb02815ab0e",
      {
        "pageContent": "### Example usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the PayPal Express payment method.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"rMQdWEecBZr4SVWZwj2AF6y0dNCKQ8uH\"\n    payment_method: {\n      code: \"paypal_express\"\n      paypal_express: {\n        payer_id: \"<PayPal_PayerID>\"\n        token: \"<PayPal_Token>\"\n      }\n    }\n  }) {\n    cart {\n      selected_payment_method {\n        code\n        title\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"paypal_express\",\n          \"title\": \"PayPal Express Checkout\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/paypal-express-checkout.md",
          "loc": { "lines": { "from": 38, "to": 81 } }
        }
      }
    ],
    [
      "51240d9a-f5c1-4dcc-8566-e0c85db0ff2e",
      {
        "pageContent": "## Related topics\n\n-  [`createPaypalExpressToken` mutation](../schema/checkout/mutations/create-paypal-express-token.md)\n-  [`placeOrder` mutation](../schema/cart/mutations/place-order.md)\n-  [`setPaymentMethodOnCart` mutation](../schema/cart/mutations/set-payment-method.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-methods/paypal-express-checkout.md",
          "loc": { "lines": { "from": 83, "to": 87 } }
        }
      }
    ],
    [
      "5bdc4e16-33e5-4fac-a3f9-659307513593",
      {
        "pageContent": "---\ntitle: Payment Services during a checkout authorization\ndescription: Learn how Adobe Commerce uses GraphQL to process orders for the Payment Services payment method during a typical checkout authorization.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Payment services during a checkout authorization\n\n[Payment Services for Adobe Commerce and Magento Open Source](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/guide-overview.html) is your turnkey self-service solution, including sandbox testing and a simple setup, for providing robust and secure payment processing for your Commerce websites.\n\nThese steps describe the flow of requests and responses required to complete a typical [checkout](../tutorials/checkout/index.md) authorization with Payment Services enabled.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/checkout.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "f9abc141-efe4-4c70-aa7d-cef79263fc5a",
      {
        "pageContent": "## Checkout workflow\n\n![Payment Services sequence diagram](../../_images/graphql/payment-services.svg)\n\n1. Run the [`getPaymentConfig`](../schema/checkout/queries/get-payment-config.md) query to fetch the payment configuration needed to render details about PayPal components, such as hosted fields, smart buttons, and Apple Pay.\n\n1. Commerce returns payment configuration information.\n\n1. Run [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) to [set the payment method](../tutorials/checkout/set-payment-method.md).\n\n1. Adobe Commerce returns a `Cart` object.\n\n1. Run [`createPaymentOrder`](../schema/checkout/mutations/create-payment-order.md) to begin the authorization process.\n\n1. Commerce forwards the request to PayPal.\n\n1. PayPal returns an `id` value.\n\n1. Adobe Commerce generates a `order_id` and forwards the value in the `mp_order_id` field and the PayPal response in the `id` field.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/checkout.md",
          "loc": { "lines": { "from": 15, "to": 33 } }
        }
      }
    ],
    [
      "784de440-3c91-4fd3-b74f-ad185b69d069",
      {
        "pageContent": "1. (Optional) If hosted fields and the Signifyd integration are enabled, run [`getPaymentOrder`](../schema/checkout/queries/get-payment-order.md).\n\n1. (Optional) Adobe Commerce returns details about the payment order.\n\n1. Run [`placeOrder`](../schema/cart/mutations/place-order.md).\n\n1. Commerce sends an authorization request to PayPal.\n\n1. PayPal returns the result to Commerce.\n\n1. Commerce creates an order.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/checkout.md",
          "loc": { "lines": { "from": 35, "to": 45 } }
        }
      }
    ],
    [
      "1de3aac4-4985-4f84-8b90-35c9548b5fd5",
      {
        "pageContent": "## `setPaymentMethodOnCartInput` object\n\nFor the PayPal Smart Buttons and Apple Pay payment methods, you do not need to run the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation. The hosted fields payment method requires that you run the mutation only if one of the following conditions are true:\n\n* You intend to vault a card by setting `is_active_payment_token_enabler` to `true`.\n\n* You have a stored payment method checkout where you intend to use a stored card by setting a `public_hash` value.\n\nIn these cases, the payment_method object must contain a `payment_services_paypal_hosted_fields` object.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/checkout.md",
          "loc": { "lines": { "from": 47, "to": 55 } }
        }
      }
    ],
    [
      "dc88f569-9b93-424c-b5fb-4317cc79f524",
      {
        "pageContent": "### `payment_services_paypal_hosted_fields` object\n\nThe `payment_services_paypal_hosted_fields` can contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cardBin` | String | Card bin number\n`cardExpiryMonth` | String | Expiration month of the card\n`cardExpiryYear` | String | Expiration year of the card\n`cardLast4` | String | Last four digits of the card\n`holderName` | String | Name on card\n`is_active_payment_token_enabler` | Boolean | Indicates whether a customer-entered credit/debit card should be tokenized for later usage. The default value is false. Required only if vaulting is enabled for Payment Services payment integration\n`payments_order_id` | String | The unique order ID generated in Commerce if Payment Services is enabled after PayPal returns the `paypal_order_id`\n`paypal_order_id` | String | The unique order ID generated by PayPal when receiving the authorization request\n`payment_source` | String | The payment source for the payment method",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/checkout.md",
          "loc": { "lines": { "from": 57, "to": 71 } }
        }
      }
    ],
    [
      "27a4cf04-27be-468f-8c50-dd0b0c81fe8a",
      {
        "pageContent": "### `setPaymentMethodOnCart` mutation example\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the PayPal Hosted Fields payment method.\n\n**Request:**\n\n```graphql\nmutation {\n    setPaymentMethodOnCart ( input: {\n      cart_id: \"uocGxUi5H97XFAMhY3s66q4aFYG3Bmdr\",\n      payment_method: {\n        code: \"payment_services_paypal_hosted_fields\",\n        payment_services_paypal_hosted_fields: {\n          payment_source: \"cc\",\n          payments_order_id: \"mp-order-a4babd34-13d3-4ac0-b1b0-109bb7be1574\",\n          paypal_order_id: \"9R90936863877801D\",\n          is_active_payment_token_enabler: true\n        }\n      }\n    }\n    ) {\n       cart {\n         id\n         selected_payment_method {\n           code\n         }\n       }\n    }\n  }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/checkout.md",
          "loc": { "lines": { "from": 73, "to": 101 } }
        }
      }
    ],
    [
      "193905e7-980b-4d6b-93ba-67e08cd4831b",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"id\": \"r8TKHa58b7Y8VaZHLyABNxrEdS8hJJTZ\",\n        \"selected_payment_method\": {\n          \"code\": \"payment_services_paypal_hosted_fields\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/checkout.md",
          "loc": { "lines": { "from": 102, "to": 119 } }
        }
      }
    ],
    [
      "a5294e24-7696-4a74-bd2a-6a222e221d84",
      {
        "pageContent": "---\ntitle: Payment Services Payment Methods\ndescription: Learn how to use the GraphQL APIs to integrate the Payment Services extension.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Payment Services Payment Methods\n\nPayment Services is your one-stop-shop for online checkout (from settlement and refunds to getting paid). Payment Services is designed to meet _all_ your payment needs.\n\nIt provides powerful tools to give you the insight and control needed for creating the best experience for your buyers.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/index.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "6fec4958-eef1-4794-8f91-ef619cc25e1b",
      {
        "pageContent": "* [**Onboarding**](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/get-started/onboard.html)---Commercial signup, technical configuration, entitlements, sandbox environment configuration, and live payment enablement.\n* [**Payment options**](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/payments-options.html)---Set the payment options to customize the methods available for your store (or multistore) customers.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/index.md",
          "loc": { "lines": { "from": 15, "to": 16 } }
        }
      }
    ],
    [
      "d39396f1-e639-4ff0-a870-d9874d9e63a6",
      {
        "pageContent": "* **Cash flow management financial reporting**---Synchronize [payment details](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/reporting/order-payment-status.html) with orders to get full order and payment transparency, [payouts](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/reporting/payouts.html), and detailed [transaction-level reporting](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/reporting/transactions.html) for financial reconciliation.\n* **Efficient checkout experience**---Remove any barriers to a fast and simple checkout with [card vaulting](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/vaulting.html) and [Instant Purchase](https://experienceleague.adobe.com/docs/commerce-admin/stores-sales/point-of-purchase/checkout-instant-purchase.html) (enabled by default for Adobe Commerce) features.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/index.md",
          "loc": { "lines": { "from": 17, "to": 18 } }
        }
      }
    ],
    [
      "a8452f64-7c5b-4ac3-a7e6-f1159f22e07a",
      {
        "pageContent": "[Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 and higher provides enhanced payment method capabilities. With this extension, you can implement the following payment methods:\n\n* Apple Pay with PayPal\n* PayPal Hosted Fields\n* PayPal Smart Buttons\n* PayPal Vault",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/index.md",
          "loc": { "lines": { "from": 20, "to": 25 } }
        }
      }
    ],
    [
      "4b847da6-a748-41b2-adf5-1747b73281db",
      {
        "pageContent": "---\ntitle: Payment Services minicart workflow\ndescription: Learn how Adobe Commerce uses GraphQL to process orders with Payment Services as a payment method from the minicart.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Payment services minicart workflow\n\nThese steps describe the additional flow of requests and responses required to place an order after [adding a product to your cart](../tutorials/checkout/add-product-to-cart.md) with the [Payment Services](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/guide-overview.html) solution enabled.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/minicart.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "9067208b-71e3-4842-a9c0-64563b895fd8",
      {
        "pageContent": "## Minicart workflow\n\n![Payment Services sequence diagram](../../_images/graphql/payment-services-minicart.svg)\n\n1. Run the [`getPaymentConfig`](../schema/checkout/queries/get-payment-config.md) query to fetch the payment configuration needed to render details about PayPal components, such as hosted fields, smart buttons, and Apple Pay.\n\n1. Adobe Commerce returns payment configuration information.\n\n1. Run [`createPaymentOrder`](../schema/checkout/mutations/create-payment-order.md) to begin the authorization process.\n\n1. Commerce forwards the request to PayPal.\n\n1. PayPal returns an `id` value.\n\n1. Commerce generates an `order_id` and forwards the value in the `mp_order_id` field and in the PayPal response in the `id` field.\n\n1. Run the [`syncPaymentOrder`](../schema/checkout/mutations/sync-payment-order.md) mutation to get payment details and update the quote with shipping, billing, email, and phone number details.\n\n1. Commerce returns details about the payment order.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/minicart.md",
          "loc": { "lines": { "from": 13, "to": 31 } }
        }
      }
    ],
    [
      "04dce0d3-3e65-4f56-9f53-373053176a2a",
      {
        "pageContent": "1. Run the [`setShippingMethodsOnCart`](../schema/cart/mutations/set-shipping-method.md)mutation to define the delivery methods for your order.\n\n1. Commerce returns details about the delivery methods for your order.\n\n1. Run the [`placeOrder`](../schema/cart/mutations/place-order.md) mutation.\n\n1. Commerce sends an authorization request to PayPal.\n\n1. PayPal returns the result to Commerce.\n\n1. Commerce creates an order.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/minicart.md",
          "loc": { "lines": { "from": 33, "to": 43 } }
        }
      }
    ],
    [
      "67cc87c2-39d5-4322-86cf-45fd76bc98c2",
      {
        "pageContent": "## `setPaymentMethodOnCartInput` object\n\nFor the PayPal Smart Buttons and Apple Pay payment methods, you do not need to run the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation. The hosted fields payment method requires that you run the mutation only if one of the following conditions are true:\n\n* You intend to vault a card by setting `is_active_payment_token_enabler` to `true`.\n\n* You have a stored payment method checkout where you intend to use a stored card by setting a `public_hash` value.\n\nIn these cases, the payment_method object must contain a `payment_services_paypal_hosted_fields` object.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/minicart.md",
          "loc": { "lines": { "from": 45, "to": 53 } }
        }
      }
    ],
    [
      "e2421702-5fbd-42a5-aee0-8f6989acc37e",
      {
        "pageContent": "### `payment_services_paypal_hosted_fields` object\n\nThe `payment_services_paypal_hosted_fields` can contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cardBin` | String | Card bin number\n`cardExpiryMonth` | String | Expiration month of the card\n`cardExpiryYear` | String | Expiration year of the card\n`cardLast4` | String | Last four digits of the card\n`holderName` | String | Name on card\n`is_active_payment_token_enabler` | Boolean | Indicates whether a customer-entered credit/debit card should be tokenized for later usage. The default value is false. Required only if vaulting is enabled for Payment Services payment integration\n`payments_order_id` | String | The unique order ID generated in Commerce if Payment Services is enabled after PayPal returns the `paypal_order_id`\n`paypal_order_id` | String | The unique order ID generated by PayPal when receiving the authorization request\n`payment_source` | String | The payment source for the payment method",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/minicart.md",
          "loc": { "lines": { "from": 55, "to": 69 } }
        }
      }
    ],
    [
      "5a3c1ef8-ee6d-4488-9332-8fe8f647ce8b",
      {
        "pageContent": "### `setPaymentMethodOnCart` mutation example\n\nThe following example sets the payment method to `payment_services_paypal_hosted_fields`:\n\n**Request:**\n\n```graphql\nmutation {\n    setPaymentMethodOnCart ( input: {\n      cart_id: \"uocGxUi5H97XFAMhY3s66q4aFYG3Bmdr\",\n      payment_method: {\n        code: \"payment_services_paypal_hosted_fields\",\n        payment_services_paypal_hosted_fields: {\n          payment_source: \"cc\",\n          payments_order_id: \"mp-order-a4babd34-13d3-4ac0-b1b0-109bb7be1574\",\n          paypal_order_id: \"9R90936863877801D\",\n          is_active_payment_token_enabler: true\n        }\n      }\n    }\n    ) {\n       cart {\n         id\n         selected_payment_method {\n           code\n         }\n       }\n    }\n  }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/minicart.md",
          "loc": { "lines": { "from": 71, "to": 99 } }
        }
      }
    ],
    [
      "d36b9596-b193-4916-8476-bd0885eb138a",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"id\": \"r8TKHa58b7Y8VaZHLyABNxrEdS8hJJTZ\",\n        \"selected_payment_method\": {\n          \"code\": \"payment_services_paypal_hosted_fields\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/minicart.md",
          "loc": { "lines": { "from": 100, "to": 117 } }
        }
      }
    ],
    [
      "ec42adc4-924c-4e3e-ac36-ed2faea04736",
      {
        "pageContent": "---\ntitle: Payment Services Vault\ndescription: Learn how to use the GraphQL APIs to integrate the Payment Services Vault payment solution.\nkeywords:\n  - GraphQL\n  - Payments\n---\n\n# Payment Services Vault payment method\n\nThe [Payment Services Vault payment method](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/vaulting.html) is a method of storing a transaction in which shoppers can save—or \"vault\"—their credit card credentials during checkout to use in a later purchase.\n\nThe following conditions must be true to use this payment method:\n\n-  The customer must be logged-in.\n\n-  The customer must have previously saved their payment information in the vault.\n\nYou cannot use this payment method if the customer decides to use a credit or debit card that is not stored in the vault.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/vault.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "3399caf6-ba38-4b53-9d05-77500cda2a40",
      {
        "pageContent": "## Payment Services Vault workflow\n\nThe following diagram shows the workflow for placing an order when Payment Services Vault is the selected payment method.\n\n![Payment Services Vault sequence diagram](../../_images/graphql/payment-services-paypal-vault.svg)\n\n1. Use the [`customerPaymentTokens`](../schema/checkout/queries/customer-payment-tokens.md) query to retrieve the payment tokens the customer stored in the vault.\n\n1. Commerce returns an array of payment tokens.\n\n1. The client integration renders the token information, and the customer selects a payment method.\n\n   When the customer selects a stored payment method, the client integration uses the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation to set the payment method to `payment_services_paypal_vault`.\n\n1. Commerce returns a `Cart` object.\n\n1. Run `placeOrder`.\n\n1. Commerce sends an authorization request to PayPal.\n\n1. PayPal returns the result to Commerce.\n\n1. Commerce creates an order.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/vault.md",
          "loc": { "lines": { "from": 21, "to": 43 } }
        }
      }
    ],
    [
      "0a80a701-3714-46a2-ae6c-3413b9cc1d6c",
      {
        "pageContent": "## Additional Payment information\n\nWhen you set the payment method to Payment Services Vault in the [`setPaymentMethodOnCart`](../schema/cart/mutations/set-payment-method.md) mutation, you must supply a value for the `public_hash` field. Run the [`customerPaymentTokens`](../schema/checkout/queries/customer-payment-tokens.md) query to retrieve the value.\n\nThis `public_hash` comes from the [`customerPaymentTokens`](../schema/checkout/queries/customer-payment-tokens.md) query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/vault.md",
          "loc": { "lines": { "from": 45, "to": 49 } }
        }
      }
    ],
    [
      "59fc34e1-7225-4e1e-b308-a518ab45d681",
      {
        "pageContent": "### `payment_services_paypal_vault` attributes\n\nThe `setPaymentMethodOnCart` mutation has a `payment_services_paypal_vault` object that contains the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`payments_order_id` | String | The unique order ID generated in Commerce if Payment Services is enabled after PayPal returns the `paypal_order_id`\n`paypal_order_id` | String | The unique order ID generated by PayPal when receiving the authorization request\n`payment_source` | String | The identifiable payment source for the payment method. The possible values are credit card, PayPal, and Apple Pay\n`public_hash` | String | The public hash of the payment token",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/vault.md",
          "loc": { "lines": { "from": 51, "to": 60 } }
        }
      }
    ],
    [
      "7fe13b1e-c9b9-4edb-be1c-bacfe9dad9e4",
      {
        "pageContent": "### Example usage\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Payment Services Vault payment method.\n\n**Request:**\n\n```graphql\nmutation {\n    setPaymentMethodOnCart ( input: {\n        cart_id: \"uocGxUi5H97XFAMhY3s66q4aFYG3Bmdr\",\n        payment_method: {\n            code: \"payment_services_paypal_vault\",\n            payment_services_paypal_vault: {\n                payment_source: \"vault\",\n                payments_order_id: \"mp-order-a4babd34-13d3-4ac0-b1b0-109bb7be1574\",\n                paypal_order_id: \"9R90936863877801D\",\n                public_hash: \"shew83bdbd83y2bdjbwb2ib2ds\"\n            }\n        }\n    }\n    ) {\n        cart {\n            id\n            selected_payment_method {\n                code\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/vault.md",
          "loc": { "lines": { "from": 62, "to": 90 } }
        }
      }
    ],
    [
      "6d8f44d7-6e67-40fc-a70d-8026a9b074a1",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"id\": \"r8TKHa58b7Y8VaZHLyABNxrEdS8hJJTZ\",\n        \"selected_payment_method\": {\n          \"code\": \"payment_services_paypal_vault\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/payment-services/vault.md",
          "loc": { "lines": { "from": 91, "to": 108 } }
        }
      }
    ],
    [
      "1350e7e0-9356-4f17-a018-eade3ebee1a5",
      {
        "pageContent": "---\ntitle: GraphQL API reference (2.4.7-beta)\ndescription: Review comprehensive reference documentation for the Adobe Commerce and Magento Open Source 2.4.7-beta GraphQL API schema.\nkeywords:\n  - GraphQL\nframeSrc: /graphql-api/beta/index.html\n---",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/reference/beta.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "33cab063-06ca-405f-9795-cfdd2c12a6bf",
      {
        "pageContent": "---\ntitle: GraphQL API reference\ndescription: Review comprehensive reference documentation for the Adobe Commerce and Magento Open Source GraphQL API schema.\nkeywords:\n  - GraphQL\nframeSrc: /graphql-api/index.html\n---",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/reference/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "9ae57672-dd25-4b6e-9cb8-86fac095f79f",
      {
        "pageContent": "---\ntitle: GraphQL release notes\ndescription: Learn about new features, enhancements, and bug fixes for the Adobe Commerce and Magento Open Source GraphQL API.\nkeywords:\n  - GraphQL\n---\n\n# GraphQL release notes\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nAs of Adobe Commerce and Magento Open Source 2.4.1, the GraphQL release notes are included in the [Adobe Commerce and Magento Open Source Release Notes](https://experienceleague.adobe.com/docs/commerce-operations/release/notes/overview.html).\n\nGraphQL is a flexible and performant API that allows you to build custom front-ends, including headless storefronts, [Progressive Web Apps](https://github.com/magento/pwa-studio) (PWA), and mobile apps for Magento.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "39790d04-2a5b-4c6a-b2cc-c8288033173e",
      {
        "pageContent": "To take part and contribute, see the [magento2](https://github.com/magento/magento2) GitHub repository and look for issues with the `Project: GraphQL` tag. Join us in our [Slack](https://magentocommeng.slack.com/archives/C8076E0KS) channel (or [self signup](https://opensource.magento.com/slack)) to discuss the project.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 16, "to": 16 } }
        }
      }
    ],
    [
      "1c6b8030-5100-4757-a276-93be8755fa86",
      {
        "pageContent": "## Adobe Commerce and Magento Open Source 2.4.0\n\n-  **Added the [`reorderItems` mutation](schema/orders/mutations/reorder-items.md).** This mutation enables the logged-in customer to add the contents of a previous order to their cart.\n\n-  **Added the [`categories` query](schema/products/queries/categories.md) returns a list of categories that match a specified filter.** This query differs from the `categoryList` query in that it supports pagination.\n\n-  **Added the [`pickupLocations` query](schema//cart/queries/pickup-locations.md).** When the Inventory in-store pickup feature is enabled, this query allows the shopper to select a pickup location. The `pickup_location_code` attribute has been added to the [`setShippingAddressesOnCart` mutation](schema/cart/mutations/set-shipping-address.md) to specify which source will serve as the pickup location.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 18, "to": 24 } }
        }
      }
    ],
    [
      "b40b35b9-224d-4749-9124-9b6fe6de8dec",
      {
        "pageContent": "The [Magento Open Source 2.4.0 Release Notes](https://experienceleague.adobe.com/docs/commerce-operations/release/notes/magento-open-source/2-4-0.html#graphql) and [Adobe Commerce 2.4.0 Release Notes](https://experienceleague.adobe.com/docs/commerce-operations/release/notes/adobe-commerce/2-4-0.html#graphql) list the bug fixes.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 26, "to": 26 } }
        }
      }
    ],
    [
      "45529012-6aad-4eb7-b95d-519585f86345",
      {
        "pageContent": "## Adobe Commerce and Magento Open Source 2.3.5\n\n-  **The `products` and `categoryList` queries can now be used to retrieve information about products and categories that have been added to a staged campaign.** These queries require an admin authorization token. See [Staging queries](usage/staging-queries.md) for details.\n-  Custom attributes used in layered navigation no longer require the **Use in Search**, **Visible in Advanced Search**, and **Use in Search Results Layered Navigation** fields be set to Yes.\n-  Added the `position` and `disabled` attributes to the `MediaGalleryInterface`.\n-  When you apply a gift card to a cart, an exception is no longer thrown when the last product is removed from the cart.\n-  In a category search, the `image` attribute returns the full path to an image, rather than a truncated path.\n-  Flat rate shipping amounts are calculated correctly when you add a configurable product to a cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 28, "to": 35 } }
        }
      }
    ],
    [
      "4c997b57-cc51-42b2-ad80-f029f6228ce0",
      {
        "pageContent": "## Adobe Commerce and Magento Open Source 2.3.4",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 37, "to": 37 } }
        }
      }
    ],
    [
      "4a6f6a43-5910-45f1-9156-042d07059238",
      {
        "pageContent": "-  **Guest carts can now be merged with customer carts.** The [`mergeCarts`](schema/cart/mutations/merge.md) mutation transfers the contents of a guest cart into the cart of a logged-in customer.\n-  **A customer can start an order on one device and complete it on another.** Use the [`customerCart`](schema/customer/queries/cart.md) query to obtain the cart ID for a logged-in customer.\n-  **Layered navigation can use custom filters.** The `filter` attribute of the [`products`](schema/products/queries/products.md) query now requires the `ProductAttributeFilterInput` object. You can specify a pre-defined filter in this object, or [define a custom filter](usage/custom-filters.md). As a result, layered navigation on your website filters on the attributes you need.\n-  **You can search categories by ID, name, and/or URL key.** The [`categoryList`](schema/products/queries/category-list.md) query replaces the deprecated `category` query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 39, "to": 42 } }
        }
      }
    ],
    [
      "338e13b8-3cd2-4709-a95b-7727677937c6",
      {
        "pageContent": "-  **A customer can add bundle and downloadable products to the cart with the [`addBundleProductsToCart`](schema/cart/mutations/add-bundle-products.md) and [`addDownloadableProductsToCart`](schema/cart/mutations/add-downloadable-products.md) mutations.**\n-  **The [`ProductInterface`](schema/products/interfaces/index.md) supports fixed product taxes (such as WEEE).** Use the [`storeConfig`](schema/store/queries/store-config.md) query to determine whether the store supports these taxes.\n-  **The [`cart`](schema/cart/queries/cart.md) object has been enhanced to include information about promotions and applied discounts at the line and cart levels.**\n-  **Added test coverage in multiple GraphQL modules.**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 43, "to": 46 } }
        }
      }
    ],
    [
      "3e5a729e-713d-40fd-9341-a5fe4b3cd561",
      {
        "pageContent": "The following queries and mutations have been deprecated:\n\nDeprecated entity | Use this instead\n--- | ---\n`category` query | `categoryList` query\n`setPaymentMethodOnCartAndPlaceOrder` mutation | Run the `setPaymentMethodOnCart` and `placeOrder` mutations in the same request\n`wishlist` query | `customer` query",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 48, "to": 54 } }
        }
      }
    ],
    [
      "2d3eafed-e055-4c16-9664-5e7e03b9f9e2",
      {
        "pageContent": "## Adobe Commerce and Magento Open Source 2.3.3\n\n-  **GraphQL supports PayPal, Braintree, and Authorize.Net payment methods.** You can use mutations to set the payment method, retrieve payment method-specific tokens, and place an order. For details, see the following topics:\n\n   -  Authorize.Net (removed for 2.4.0)\n   -  [Braintree](payment-methods/braintree.md)\n   -  [Braintree Vault](payment-methods/braintree-vault.md)\n   -  [PayPal Express Checkout](payment-methods/paypal-express-checkout.md)\n   -  [PayPal Payflow Link](payment-methods/payflow-link.md)\n   -  [PayPal Payflow Pro](payment-methods/payflow-pro.md)\n   -  [PayPal Payments Advanced](payment-methods/payments-advanced.md)\n   -  [PayPal Website Payments Pro Hosted Solution](payment-methods/hosted-pro.md)\n   -  [Express Checkout for other PayPal solutions](payment-methods/payflow-express.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 56, "to": 68 } }
        }
      }
    ],
    [
      "e27db139-e97e-4514-b84c-bfd5ef6092cd",
      {
        "pageContent": "-  **Added support for gift cards:** (Adobe Commerce only)\n   -  [`giftCardAccount`](schema/customer/queries/giftcard-account.md) query\n   -  [`applyGiftCardToAccount`](schema/cart/mutations/apply-giftcard.md) mutation\n   -  [`removeGiftCardFromCart`](schema/cart/mutations/remove-giftcard.md) mutation\n\n-  **Added the ability to manage store credit:** (Adobe Commerce only)\n   -  [`applyStoreCreditToCart`](schema/cart/mutations/apply-store-credit.md) mutation\n   -  [`removeStoreCreditFromCart`](schema/cart/mutations/remove-store-credit.md) mutation\n\n-  **Added the [addConfigurableProductsToCart](schema/cart/mutations/add-configurable-products.md) mutation.**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 70, "to": 79 } }
        }
      }
    ],
    [
      "5ebeeb99-3883-40a1-accd-4e3d19aa8c9d",
      {
        "pageContent": "## Magento Open Source 2.3.2\n\n-  **Added mutations to support the following cart operations and checkout for logged-in and guest customers:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 81, "to": 83 } }
        }
      }
    ],
    [
      "14b9a33f-39c3-4ebc-a482-36d87023da61",
      {
        "pageContent": "-  Add [simple products](schema/cart/mutations/add-simple-products.md) to a cart.\n   -  Add [virtual products](schema/cart/mutations/add-virtual-products.md) to a cart.\n   -  Set the [shipping address](schema/cart/mutations/set-shipping-address.md). Address books are supported.\n   -  Set the [billing address](schema/cart/mutations/set-billing-address.md). Address books are supported.\n   -  Set the [shipping method](schema/cart/mutations/set-shipping-method.md). Supported methods include DHL, FedEx, Flat Rate, Free Shipping, Table Rate, UPS, and USPS.\n   -  Set the [payment method](schema/cart/mutations/set-payment-method.md). Supported methods include Bank Transfer, Cash on Delivery, Check/Money Order, Purchase Order, and Zero Subtotal Checkout.\n   -  [Apply](schema/cart/mutations/apply-coupon.md) or [remove](schema/cart/mutations/remove-coupon.md) cart coupons.\n   -  [Assign an email](schema/cart/mutations/set-guest-email.md) to a guest cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 85, "to": 92 } }
        }
      }
    ],
    [
      "f0fab389-daa6-4b66-92f4-dac9d375759d",
      {
        "pageContent": "-  [Place an order](schema/cart/mutations/place-order.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 93, "to": 93 } }
        }
      }
    ],
    [
      "6aa2508d-0141-495a-a237-bc6bcca2eae2",
      {
        "pageContent": "-  **Added support for payment methods that implement Vault. See [customerPaymentTokens query](schema/checkout/queries/customer-payment-tokens.md) and [deletePaymentToken mutation](schema/checkout/mutations/delete-payment-token.md)**\n\n-  **Added new queries and extended the functionality of others.**\n\n   -  The [`isEmailAvailable` query](schema/customer/queries/is-email-available.md) checks whether the specified email address has already been used to create an account.\n   -  The [`cart` query](schema/cart/queries/cart.md) can now return information set by mutations that perform cart operations, including product information, shipping and billing addresses, shipping and payment methods, and applied coupons. The query also returns calculated totals.\n   -  The `customerPaymentTokens` query returns the signed-in customer's payment tokens.\n\n-  **Queries can now be performed as HTTP GET or POST operations.**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 95, "to": 103 } }
        }
      }
    ],
    [
      "f4c73a35-0ed0-45ed-bcdb-ef2e5707c0bf",
      {
        "pageContent": "-  **Adobe Commerce and Magento Open Source can use Varnish or full-page caching to [cache](usage/caching.md) pages rendered from the results of the following GraphQL queries:**\n\n   -  `category`\n   -  `cmsBlocks`\n   -  `cmsPage`\n   -  `products`\n   -  `urlResolver`\n\n  You must send these queries as HTTP GET operations to cache the results.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 105, "to": 113 } }
        }
      }
    ],
    [
      "494a7c4c-44ed-4060-aebe-a53815abf0f9",
      {
        "pageContent": "## Magento Open Source 2.3.1\n\n-  **Added mutations and queries that allow customers to manage My Account information.** Specific capabilities include:\n   -  Create [customer](schema/customer/mutations/create.md) account\n   -  Change account information\n   -  Manage billing and shipping addresses\n   -  Change customer password\n   -  Manage newsletter subscriptions\n   -  View [wish lists](schema/wishlist/queries/index.md)\n   -  View [order history](schema/customer/queries/orders.md)\n   -  View [downloadable products](schema/products/interfaces/types/downloadable.md)\n\n-  **Added functionality to support complex Catalog features.** This version supports:\n   -  Specifying absolute image paths for [products](schema/products/queries/products.md) and including extended image information\n   -  Rendering fields that use WYSIWYG text\n   -  URL rewrites for products​",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 115, "to": 130 } }
        }
      }
    ],
    [
      "af3d3ddf-6fa9-41e9-befc-ce6a8b9d4fcd",
      {
        "pageContent": "-  **GraphQL framework enhancements**, including:\n   -  Mutations that [generate](schema/customer/mutations/generate-token.md) and [revoke](schema/customer/mutations/revoke-token.md) customer tokens\n   -  Page Builder and WYSIWYG fields support complex structures for PWA scenarios\n   -  Adobe Commerce and Magento Open Source now calculate the complexity of queries and mutations and returns an error message if a query or mutation is deemed too complex\n   -  Variable support in [queries](usage/index.md#queries) and [mutations](usage/index.md#mutations)\n   -  A query that returns information about a store's [theme and CMS](schema/store/queries/store-config.md) configuration\n   -  GraphQL tests are integrated with Travis CI​\n   -  GraphQL browsers now display fields and objects alphabetically",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/release-notes.md",
          "loc": { "lines": { "from": 132, "to": 139 } }
        }
      }
    ],
    [
      "fa76325f-167c-4bc6-b69f-126548bbe681",
      {
        "pageContent": "---\ntitle: Attributes\n---\n\n# Attributes\n\nThe attributes queries allow you to retrieve values stored as custom and [Entity-Attribute-Value (EAV)](https://developer.adobe.com/commerce/php/development/components/attributes/) attributes. Custom attributes are those added on behalf of a merchant. For example, a merchant might need to add attributes to describe products, such as shape or volume. EAV attributes are defined by the system.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "7d397d75-a2ec-4404-91ea-4dd389e2e824",
      {
        "pageContent": "---\ntitle: Attribute Interfaces and Implementations\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\nimport CustomAttributeCustomer from '/src/_includes/graphql/examples/custom-attribute-customer.md'\nimport CustomAttributeFilterProduct from '/src/_includes/graphql/examples/custom-attribute-filter-product.md'\n\n# Attribute interfaces and implementations\n\n<BetaNote />\n\nAdobe Commerce provides the following interfaces to access system attributes and custom attributes defined by the merchant.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/interfaces/index.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "a418003b-caf9-44b7-b463-4b2ceb5cbe7c",
      {
        "pageContent": "Interface | Implementations\n--- | ---\n[`AttributeSelectedOptionInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-AttributeSelectedOptionInterface) | [`AttributeSelectedOption`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-AttributeSelectedOption)\n[`AttributeValueInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-AttributeValueInterface) | [`AttributeValue`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-AttributeValue) <br/>[`AttributeSelectedOptions`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-AttributeSelectedOptions)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/interfaces/index.md",
          "loc": { "lines": { "from": 15, "to": 18 } }
        }
      }
    ],
    [
      "fea7eaa7-864f-4c27-b5c1-e4a0c7935e83",
      {
        "pageContent": "[`CustomAttributeMetadataInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomerAttributeMetadata) | [`AttributeMetadata`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-AttributeMetadata)\n[`CustomAttributeOptionInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomAttributeOptionInterface) | [`AttributeOptionMetadata`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-AttributeOptionMetadata).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/interfaces/index.md",
          "loc": { "lines": { "from": 19, "to": 20 } }
        }
      }
    ],
    [
      "d9652065-459d-47d9-8fc8-c81b56bb5c53",
      {
        "pageContent": "## Example usage\n\n### Retrieve custom attributes metadata from a customer\n\n< CustomAttributeCustomer />\n\n### Filter `custom_attributesV2` of a product\n\n< CustomAttributeFilterProduct />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/interfaces/index.md",
          "loc": { "lines": { "from": 22, "to": 30 } }
        }
      }
    ],
    [
      "5663fb95-d0fa-4ed8-9b98-eef84a206791",
      {
        "pageContent": "---\ntitle: attributesForm query\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n<BetaNote />\n\n# attributesForm query\n\nThe `attributesForm` query retrieves EAV attributes associated with customer and customer address frontend forms.\n\nThese forms are visible when using the Admin to create or edit a customer or customer address address (**Stores** > Attributes > **Customer** or **Customer Address**).\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [country](../../store/queries/country.md) and [countries](../../store/queries/countries.md) mutations to retrieve information about the `region_id` and `country_id` attributes.\n\nThe following table maps the display names of the applicable forms to values that you can specify as a `formCode` value.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-form.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "28cb90bc-27c6-4004-828a-a50e22546642",
      {
        "pageContent": "| Type | Display name | `formCode` value |\n| --- | --- | --- |\n| Customer | Customer Account Edit | `customer_account_edit` |\n| Customer | Customer Registration | `customer_account_create` |\n| Customer address |  Customer Address Registration |  `customer_register_address` |\n| Customer address | Customer Account Address | `customer_address_edit` |\n\n<InlineAlert slots=\"text\" />\n\nYou cannot query on the Admin Checkout form.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-form.md",
          "loc": { "lines": { "from": 21, "to": 30 } }
        }
      }
    ],
    [
      "e96715ed-f925-41f5-b19e-57ddcc274ed9",
      {
        "pageContent": "## Syntax\n\n`{attributesForm(formCode: String!): {AttributesFormOutput!}}`\n\n## Reference\n\nThe [`attributesForm`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#query-attributesForm) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-form.md",
          "loc": { "lines": { "from": 32, "to": 38 } }
        }
      }
    ],
    [
      "57153b02-0806-4898-97a0-12908b26b97f",
      {
        "pageContent": "## Example usage\n\nThe following query returns the list of attributes metadata associated to the form `customer_register_address`.\n\n**Request:**\n\n```graphql\n{\n  attributesForm(formCode: \"customer_register_address\") {\n    items {\n      label\n      entity_type\n      frontend_input\n      is_required\n    }\n    errors {\n      type\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-form.md",
          "loc": { "lines": { "from": 40, "to": 60 } }
        }
      }
    ],
    [
      "386e961b-169f-43e2-b4bd-506e9ac01035",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-form.md",
          "loc": { "lines": { "from": 61, "to": 63 } }
        }
      }
    ],
    [
      "db364554-ebe5-4293-98f4-4c7c5399c51c",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"attributesForm\": {\n      \"items\": [\n        {\n          \"label\": \"First Name\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": true\n        },\n        {\n          \"label\": \"Last Name\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": true\n        },\n        {\n          \"label\": \"Company\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": false\n        },\n        {\n          \"label\": \"Street Address\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"MULTILINE\",\n          \"is_required\": true\n        },\n        {\n          \"label\": \"City\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": true\n        },\n        {\n          \"label\": \"Country\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-form.md",
          "loc": { "lines": { "from": 65, "to": 102 } }
        }
      }
    ],
    [
      "730595d6-a38a-44cd-ae8b-5e7e32a74d55",
      {
        "pageContent": "\"frontend_input\": \"SELECT\",\n          \"is_required\": true\n        },\n        {\n          \"label\": \"State/Province\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": false\n        },\n        {\n          \"label\": \"State/Province\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"HIDDEN\",\n          \"is_required\": false\n        },\n        {\n          \"label\": \"Zip/Postal Code\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": false\n        },\n        {\n          \"label\": \"Phone Number\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": true\n        },\n        {\n          \"label\": \"VAT Number\",\n          \"entity_type\": \"CUSTOMER_ADDRESS\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": false\n        }\n      ],\n      \"errors\": [\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-form.md",
          "loc": { "lines": { "from": 103, "to": 138 } }
        }
      }
    ],
    [
      "6376b759-5c4b-4719-a4a4-51284fcdc19a",
      {
        "pageContent": "{\n          \"type\": \"ATTRIBUTE_NOT_FOUND\",\n          \"message\": \"Attribute code \\\"middlename\\\" could not be found.\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-form.md",
          "loc": { "lines": { "from": 138, "to": 146 } }
        }
      }
    ],
    [
      "fcf6d08e-c69f-427b-8c27-1eb32b10256c",
      {
        "pageContent": "---\ntitle: attributesList query\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n<BetaNote />\n\n# attributesList query\n\nThe `attributesList` query retrieves a list of attributes metadata for a given `entity_type`.\n\nThe possible values for this attribute are populated by the modules introducing EAV entities, which currently are `CUSTOMER`, `CUSTOMER_ADDRESS`, `CATALOG_PRODUCT` and `RMA_ITEM`.\n\n## Syntax\n\n`{attributesList(entityType: AttributeEntityTypeEnum!): {AttributesMetadataOutput}}`\n\n## Reference\n\nThe [`attributesList`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#query-attributesList) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "ffda5c04-d25d-4625-8699-70bfe379467f",
      {
        "pageContent": "## Example usage",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 23, "to": 23 } }
        }
      }
    ],
    [
      "804b2536-a17d-44f9-a615-442b04f0d509",
      {
        "pageContent": "### Attributes list for `customer`\n\nThe following call returns the list of attributes metadata for a `customer`.\n\n**Request:**\n\n```graphql\n{\n  attributesList(entityType: CUSTOMER) {\n    items {\n      code\n      label\n      # other attribute metadata\n    }\n    errors {\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 25, "to": 43 } }
        }
      }
    ],
    [
      "15070979-8333-497b-b1d0-e86bdd2e28a3",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"attributesList\": {\n      \"items\": [\n        {\n          \"code\": \"website_id\",\n          \"label\": \"Associate to Website\"\n        },\n        {\n          \"code\": \"created_in\",\n          \"label\": \"Created From\"\n        },\n        {\n          \"code\": \"firstname\",\n          \"label\": \"First Name\"\n        },\n        {\n          \"code\": \"lastname\",\n          \"label\": \"Last Name\"\n        },\n        {\n          \"code\": \"email\",\n          \"label\": \"Email\"\n        },\n        {\n          \"code\": \"group_id\",\n          \"label\": \"Group\"\n        },\n        {\n          \"code\": \"disable_auto_group_change\",\n          \"label\": \"Disable Automatic Group Change Based on VAT ID\"\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 44, "to": 86 } }
        }
      }
    ],
    [
      "a90b9bb4-571d-4558-9659-4fb3d24842aa",
      {
        "pageContent": "### Attributes list for `rma_item`\n\nThe following call returns the list of attributes metadata for a `rma_item`.\n\n**Request:**\n\n```graphql\n{\n  attributesList(entityType: RMA_ITEM) {\n    items {\n      code\n      label\n      default_value\n      frontend_input\n      is_unique\n      is_required\n      options {\n        is_default\n        label\n        value\n      }\n    }\n    errors {\n      type\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 88, "to": 115 } }
        }
      }
    ],
    [
      "ccf18cb2-6e07-428d-8825-41b58f164ede",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 116, "to": 118 } }
        }
      }
    ],
    [
      "a1490376-b52b-4ef0-9cdc-de9ae1cc2da1",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"attributesList\": {\n      \"items\": [\n        {\n          \"code\": \"resolution\",\n          \"label\": \"Resolution\",\n          \"default_value\": null,\n          \"frontend_input\": \"SELECT\",\n          \"is_unique\": false,\n          \"is_required\": true,\n          \"options\": [\n            {\n              \"is_default\": null,\n              \"label\": \"Exchange\",\n              \"value\": \"4\"\n            },\n            {\n              \"is_default\": null,\n              \"label\": \"Refund\",\n              \"value\": \"5\"\n            },\n            {\n              \"is_default\": null,\n              \"label\": \"Store Credit\",\n              \"value\": \"6\"\n            }\n          ]\n        },\n        {\n          \"code\": \"condition\",\n          \"label\": \"Item Condition\",\n          \"default_value\": null,\n          \"frontend_input\": \"SELECT\",\n          \"is_unique\": false,\n          \"is_required\": true,\n          \"options\": [\n            {\n              \"is_default\": null,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 120, "to": 159 } }
        }
      }
    ],
    [
      "962bfc42-3ae9-409c-a811-cd113bf38c68",
      {
        "pageContent": "\"label\": \"Unopened\",\n              \"value\": \"7\"\n            },\n            {\n              \"is_default\": null,\n              \"label\": \"Opened\",\n              \"value\": \"8\"\n            },\n            {\n              \"is_default\": null,\n              \"label\": \"Damaged\",\n              \"value\": \"9\"\n            }\n          ]\n        },\n        {\n          \"code\": \"reason\",\n          \"label\": \"Reason to Return\",\n          \"default_value\": null,\n          \"frontend_input\": \"SELECT\",\n          \"is_unique\": false,\n          \"is_required\": true,\n          \"options\": [\n            {\n              \"is_default\": null,\n              \"label\": \"Wrong Color\",\n              \"value\": \"10\"\n            },\n            {\n              \"is_default\": null,\n              \"label\": \"Wrong Size\",\n              \"value\": \"11\"\n            },\n            {\n              \"is_default\": null,\n              \"label\": \"Out of Service\",\n              \"value\": \"12\"\n            }\n          ]\n        },\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 160, "to": 200 } }
        }
      }
    ],
    [
      "4e6d18fe-21ed-47bd-929b-1cfadc730594",
      {
        "pageContent": "{\n          \"code\": \"reason_other\",\n          \"label\": \"Other\",\n          \"default_value\": null,\n          \"frontend_input\": \"TEXT\",\n          \"is_unique\": false,\n          \"is_required\": true,\n          \"options\": []\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 200, "to": 214 } }
        }
      }
    ],
    [
      "5d07ecd6-8ddb-4989-91aa-c1e84fa8fc7b",
      {
        "pageContent": "### Apply a filter to the attributes list query\n\nThe following call returns the list of attributes metadata for a `catalog_product` filtered by `is_visible_on_front` and `is_comparable`.\n\n**Request:**\n\n```graphql\n{\n    attributesList(entityType: CATALOG_PRODUCT, filters: {is_visible_on_front:true, is_comparable: true}) {\n        items {\n            code\n            label\n            default_value\n            is_required\n            frontend_class\n            is_unique\n            options {\n                value\n                label\n            }\n        }\n        errors {\n            type\n            message\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 216, "to": 242 } }
        }
      }
    ],
    [
      "577364bd-1899-47d2-8152-d588777e060a",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 243, "to": 245 } }
        }
      }
    ],
    [
      "31884b88-9d53-49a1-b688-7a84398f3127",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"attributesList\": {\n      \"items\": [\n        {\n          \"code\": \"activity\",\n          \"label\": \"Activity\",\n          \"default_value\": \"\",\n          \"is_required\": false,\n          \"frontend_class\": null,\n          \"is_unique\": false,\n          \"options\": [\n            {\n              \"value\": \"13\",\n              \"label\": \"Hike\"\n            },\n            {\n              \"value\": \"14\",\n              \"label\": \"Outdoor\"\n            },\n            {\n              \"value\": \"15\",\n              \"label\": \"Running\"\n            },\n            {\n              \"value\": \"16\",\n              \"label\": \"Warmup\"\n            },\n            {\n              \"value\": \"17\",\n              \"label\": \"Yoga\"\n            },\n            {\n              \"value\": \"18\",\n              \"label\": \"Recreation\"\n            },\n            {\n              \"value\": \"19\",\n              \"label\": \"Lounge\"\n            },\n            {\n              \"value\": \"20\",\n              \"label\": \"Gym\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 247, "to": 290 } }
        }
      }
    ],
    [
      "248e5566-d773-482e-b78c-d92b3eff9685",
      {
        "pageContent": "},\n            {\n              \"value\": \"21\",\n              \"label\": \"Climbing\"\n            },\n            {\n              \"value\": \"22\",\n              \"label\": \"Crosstraining\"\n            },\n            {\n              \"value\": \"23\",\n              \"label\": \"Post-workout\"\n            },\n            {\n              \"value\": \"24\",\n              \"label\": \"Cycling\"\n            },\n            {\n              \"value\": \"25\",\n              \"label\": \"Athletic\"\n            },\n            {\n              \"value\": \"26\",\n              \"label\": \"Sports\"\n            },\n            {\n              \"value\": \"27\",\n              \"label\": \"Hiking\"\n            },\n            {\n              \"value\": \"28\",\n              \"label\": \"Overnight\"\n            },\n            {\n              \"value\": \"29\",\n              \"label\": \"School\"\n            },\n            {\n              \"value\": \"30\",\n              \"label\": \"Trail\"\n            },\n            {\n              \"value\": \"31\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 291, "to": 333 } }
        }
      }
    ],
    [
      "74cfe86e-ba00-4473-8e9b-9c560433079e",
      {
        "pageContent": "\"label\": \"Travel\"\n            },\n            {\n              \"value\": \"32\",\n              \"label\": \"Urban\"\n            }\n          ]\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-list.md",
          "loc": { "lines": { "from": 334, "to": 347 } }
        }
      }
    ],
    [
      "3f29345e-ad9f-4ab1-8af7-e6bf18864b4d",
      {
        "pageContent": "---\ntitle: attributesMetadata query\nedition: pwa\n---\n\n# attributesMetadata query\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nThe `attributesMetadata` query is available only if you have installed the PWA Metapackage for Magento Open Source Extensions. The query has been deprecated. Use the [`customAttributeMetadataV2`](custom-attribute-metadata-v2.md) query instead.\n\nThe `attributesMetadata` query returns everything available in [`customAttributeMetadata`](custom-attribute-metadata.md) but also includes additional information such as `data_type`, `sort_order`, and `ui_input` data, that can be used for filtering, searching and layered navigation. The information returned in `customAttributeMetadata` is in a different format when returned in `attributesMetadata`.\n\n## Syntax\n\n```graphql\n{ attributesMetadata(\n      entityType: AttributeEntityTypeEnum!,\n      attributeUids:[ID!],\n      showSystemAttributes: Boolean):\n        AttributesMetadata\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-metadata.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "ea652152-1551-498a-85b0-fce7d58f9c25",
      {
        "pageContent": "## Example usage\n\n**Request:**\n\n```graphql\n{\nattributesMetadata(\n    entityType: PRODUCT\n  ) {\n    items {\n      attribute_labels {\n        label\n        store_code\n      }\n      code\n      data_type\n      sort_order\n      ui_input {\n          is_html_allowed\n          ui_input_type\n        __typename\n        ... on SelectableInputTypeInterface {\n          attribute_options {\n            is_default\n            label\n            uid\n          }\n        }\n      }\n      uid\n      __typename\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-metadata.md",
          "loc": { "lines": { "from": 25, "to": 58 } }
        }
      }
    ],
    [
      "aa89f391-ea33-4cf7-936d-eb9fdbe27bb4",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-metadata.md",
          "loc": { "lines": { "from": 59, "to": 61 } }
        }
      }
    ],
    [
      "884c3039-a43f-4fce-8a61-dbb2b78fe0e8",
      {
        "pageContent": "```json\n{\"uid\": \"Y2F0YWxvZ19wcm9kdWN0L2Zhc2hpb25fY29sb3I=\",\n          \"__typename\": \"ProductAttributeMetadata\"\n        },\n        {\n          \"attribute_labels\": [\n            {\n              \"label\": \"Fashion Material\",\n              \"store_code\": \"default\"\n            }\n          ],\n          \"code\": \"fashion_material\",\n          \"data_type\": \"STRING\",\n          \"sort_order\": 0,\n          \"ui_input\": {\n            \"is_html_allowed\": true,\n            \"ui_input_type\": \"MULTISELECT\",\n            \"__typename\": \"UiAttributeTypeMultiSelect\",\n            \"attribute_options\": [\n              {\n                \"is_default\": false,\n                \"label\": \"14K Gold\",\n                \"uid\": \"Y2F0YWxvZ19wcm9kdWN0L2Zhc2hpb25fbWF0ZXJpYWwvNDY=\"\n              },\n              {\n                \"is_default\": false,\n                \"label\": \"Acrylic\",\n                \"uid\": \"Y2F0YWxvZ19wcm9kdWN0L2Zhc2hpb25fbWF0ZXJpYWwvMTE4\"\n              },\n              {\n                \"is_default\": false,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-metadata.md",
          "loc": { "lines": { "from": 63, "to": 93 } }
        }
      }
    ],
    [
      "b7d1debc-a9b8-49e4-975b-60c26a9bb29b",
      {
        "pageContent": "\"label\": \"Cashmere\",\n                \"uid\": \"Y2F0YWxvZ19wcm9kdWN0L2Zhc2hpb25fbWF0ZXJpYWwvMTIx\"\n              },\n              {\n                \"is_default\": false,\n                \"label\": \"Sterling Silver\",\n                \"uid\": \"Y2F0YWxvZ19wcm9kdWN0L2Zhc2hpb25fbWF0ZXJpYWwvNDk=\"\n              }\n            ]\n          }\n        }\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-metadata.md",
          "loc": { "lines": { "from": 94, "to": 105 } }
        }
      }
    ],
    [
      "e1d8d997-d1af-4fc7-a1a2-aeb1475d2f3e",
      {
        "pageContent": "## Input attributes\n\nAttribute | Data type | Description\n--- | --- | ---\n`attributeUids` | [ID!] | An array of attribute IDs to search\n`entityType` | AttributeEntityTypeEnum! | The type of entity to search\n`showSystemAttributes` | Boolean | Indicates whether to also return matching system attributes\n\n## Output attributes\n\nimport AttributeMetadata from '/src/_includes/graphql/attribute-metadata.md'\n\n<AttributeMetadata />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/attributes-metadata.md",
          "loc": { "lines": { "from": 107, "to": 119 } }
        }
      }
    ],
    [
      "9d1f88b0-217c-471a-a977-fbcfda56af93",
      {
        "pageContent": "---\ntitle: customAttributeMetadataV2 query\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n<BetaNote />\n\n# customAttributeMetadataV2 query\n\nThe `customAttributeMetadataV2` query retrieves metadata for the specified `entity_type` and `attribute_code` pairs.\n\nThis query replaces [`attributesMetadata`](attributes-metadata.md) and [`customAttributeMetadata`](custom-attribute-metadata.md).\n\nThis new query has several features that were not available in the deprecated queries:\n\n- All entity types can extend this query.\n- The query provides access to all properties of EAV attributes.\n\n## Syntax\n\n`{customAttributeMetadataV2(attributes: [AttributeInput!]): {AttributesMetadataOutput!}}`\n\n## Reference\n\nThe [`customAttributeMetadataV2`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#query-customAttributeMetadataV2) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "6b5628c5-4429-4927-9a8d-42f488baf521",
      {
        "pageContent": "## Example usage",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 28, "to": 28 } }
        }
      }
    ],
    [
      "133c0e90-4ef1-40f1-826a-68a6d3b01f6a",
      {
        "pageContent": "### Custom attribute metadata for a `customer` attribute\n\nThe following call returns metadata information for the `firstname` attribute of a `customer`.\n\n**Request:**\n\n```graphql\n{\n    customAttributeMetadataV2(attributes: [{attribute_code: \"firstname\", entity_type: \"customer\"}]) {\n        items {\n            code\n            label\n            entity_type\n            frontend_input\n            is_required\n            default_value\n            is_unique\n            options {\n                label\n                value\n            }\n        }\n        errors {\n            type\n            message\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 30, "to": 57 } }
        }
      }
    ],
    [
      "df5d1be2-625c-4535-a6d4-b2deb07bd0cf",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customAttributeMetadataV2\": {\n      \"items\": [\n        {\n          \"code\": \"firstname\",\n          \"label\": \"First Name\",\n          \"entity_type\": \"CUSTOMER\",\n          \"frontend_input\": \"TEXT\",\n          \"is_required\": true,\n          \"default_value\": null,\n          \"is_unique\": false,\n          \"options\": []\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 58, "to": 82 } }
        }
      }
    ],
    [
      "06d0b95b-63a6-43af-8f81-c4be01386b06",
      {
        "pageContent": "### Custom attribute metadata for a `rma_item` attribute\n\nThe following call returns metadata information for the `resolution` attribute of a `rma_item`.\n\n**Request:**\n\n```graphql\n{\n  customAttributeMetadataV2(attributes: [{attribute_code: \"resolution\", entity_type: \"rma_item\"}]) {\n    items {\n      code\n      default_value\n      label\n      entity_type\n      frontend_input\n      is_required\n      is_unique\n      options {\n        label\n        value\n      }\n      ... on ReturnItemAttributeMetadata {\n        input_filter\n        validate_rules {\n          name\n          value\n        }\n      }\n    }\n    errors {\n      type\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 84, "to": 118 } }
        }
      }
    ],
    [
      "dc3febeb-f036-436d-a061-1e31a3997d9d",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customAttributeMetadataV2\": {\n      \"items\": [\n        {\n          \"code\": \"resolution\",\n          \"default_value\": null,\n          \"label\": \"Resolution\",\n          \"entity_type\": \"RMA_ITEM\",\n          \"frontend_input\": \"SELECT\",\n          \"is_required\": true,\n          \"is_unique\": false,\n          \"options\": [\n            {\n              \"label\": \"Exchange\",\n              \"value\": \"4\"\n            },\n            {\n              \"label\": \"Refund\",\n              \"value\": \"5\"\n            },\n            {\n              \"label\": \"Store Credit\",\n              \"value\": \"6\"\n            }\n          ],\n          \"input_filter\": \"NONE\",\n          \"validate_rules\": []\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 119, "to": 158 } }
        }
      }
    ],
    [
      "62ec8768-0d17-4965-b04e-b4299b1c0f4d",
      {
        "pageContent": "### Custom attribute metadata for `product`\n\nThe following call returns metadata information for the `visibility` attribute of a `catalog_product`.\n\n**Request:**\n\n```graphql\n{\n    customAttributeMetadataV2(attributes: [{attribute_code: \"visibility\", entity_type: \"catalog_product\"}]) {\n        items {\n            code\n            label\n            entity_type\n            frontend_input\n            ...on CatalogAttributeMetadata {\n                is_filterable\n                is_html_allowed_on_front\n                is_wysiwyg_enabled\n                is_used_for_promo_rules\n                used_in_product_listing\n            }\n        }\n        errors {\n            type\n            message\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 160, "to": 187 } }
        }
      }
    ],
    [
      "427f667e-ad4f-4ac5-af82-e170a1981c18",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customAttributeMetadataV2\": {\n      \"items\": [\n        {\n          \"code\": \"visibility\",\n          \"label\": \"Visibility\",\n          \"entity_type\": \"CATALOG_PRODUCT\",\n          \"frontend_input\": \"SELECT\",\n          \"is_filterable\": false,\n          \"is_html_allowed_on_front\": false,\n          \"is_wysiwyg_enabled\": false,\n          \"is_used_for_promo_rules\": false,\n          \"used_in_product_listing\": false\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 188, "to": 213 } }
        }
      }
    ],
    [
      "c7487a0e-4975-4534-a56f-7e3e114c4bf1",
      {
        "pageContent": "### Custom attribute metadata for `product` with `swatch options`\n\nThe following call returns metadata information for the `color` attribute of a `catalog_product`.\n\nThe `swatch options` are the possible values of the attribute.\n\n**Request:**\n\n```graphql\n{\n    customAttributeMetadataV2(attributes: [{attribute_code: \"color\", entity_type: \"catalog_product\"}]) {\n        items {\n            code\n            label\n            entity_type\n            frontend_input\n            ...on CatalogAttributeMetadata {\n                update_product_preview_image\n                use_product_image_for_swatch\n                swatch_input_type\n            }\n        }\n        errors {\n            type\n            message\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 215, "to": 242 } }
        }
      }
    ],
    [
      "32271dfa-6ac4-4502-890c-7a6f65d92b16",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customAttributeMetadataV2\": {\n      \"items\": [\n        {\n          \"code\": \"color\",\n          \"label\": \"Color\",\n          \"entity_type\": \"CATALOG_PRODUCT\",\n          \"frontend_input\": \"SELECT\",\n          \"update_product_preview_image\": true,\n          \"use_product_image_for_swatch\": false,\n          \"swatch_input_type\": \"VISUAL\"\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata-v2.md",
          "loc": { "lines": { "from": 243, "to": 266 } }
        }
      }
    ],
    [
      "e3355500-dac3-467f-96b6-01fa603738f8",
      {
        "pageContent": "---\ntitle: customAttributeMetadata query\n---\n\n# customAttributeMetadata query\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nThe `customAttributeMetadata` query has been deprecated. Use the [`customAttributeMetadataV2`](../../attributes/queries/custom-attribute-metadata-v2.md) query instead.\n\nThe `customAttributeMetadata` query returns the attribute type, given an attribute code and entity type. All entity attributes can be added to an equivalent GraphQL type, including custom, extension, and EAV (which have precedence set in that order for collisions). The GraphQL query consumer does not have the ability to know a field's attribute type.\n\nThe `StorefrontProperties` output object returns information about a product attribute. Storefront properties are configured in the Admin at **Stores** > Attributes > **Product** > `Attribute Name` > **Storefront Properties**.\n\n## Syntax\n\n`customAttributeMetadata(attributes: [AttributeInput!]!): CustomAttributeMetadata`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "31756540-6bd1-4d62-b403-1ae564879d24",
      {
        "pageContent": "## Reference\n\nThe [`customAttributeMetadata`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-customAttributeMetadata) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 19, "to": 21 } }
        }
      }
    ],
    [
      "d05dd01f-4889-4431-bcaa-1b7b6b07d017",
      {
        "pageContent": "## Example usage\n\nThe following query returns the attribute type for various custom and EAV attributes.\n\n**Request:**\n\n```graphql\n{\n  customAttributeMetadata(\n    attributes: [\n      {\n        attribute_code: \"size\"\n        entity_type: \"catalog_product\"\n      }\n      {\n        attribute_code: \"color\"\n        entity_type: \"catalog_product\"\n      }\n    ]\n  ) {\n    items {\n      attribute_code\n      attribute_type\n      entity_type\n      input_type\n      attribute_options {\n       value\n       label\n     }\n      storefront_properties {\n        use_in_product_listing\n        use_in_layered_navigation\n        use_in_search_results_layered_navigation\n        visible_on_catalog_pages\n        position\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 23, "to": 61 } }
        }
      }
    ],
    [
      "e49e709e-c400-45b8-b51e-8486e533b3b5",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 62, "to": 64 } }
        }
      }
    ],
    [
      "dec28765-610d-4ec0-bbac-84fee254dd04",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"customAttributeMetadata\": {\n      \"items\": [\n        {\n          \"attribute_code\": \"size\",\n          \"attribute_type\": \"Int\",\n          \"entity_type\": \"catalog_product\",\n          \"input_type\": \"select\",\n          \"attribute_options\": [\n            {\n              \"value\": \"91\",\n              \"label\": \"55 cm\"\n            },\n            {\n              \"value\": \"166\",\n              \"label\": \"XS\"\n            },\n            {\n              \"value\": \"92\",\n              \"label\": \"65 cm\"\n            },\n            {\n              \"value\": \"167\",\n              \"label\": \"S\"\n            },\n            {\n              \"value\": \"93\",\n              \"label\": \"75 cm\"\n            },\n            {\n              \"value\": \"168\",\n              \"label\": \"M\"\n            },\n            {\n              \"value\": \"94\",\n              \"label\": \"6 foot\"\n            },\n            {\n              \"value\": \"169\",\n              \"label\": \"L\"\n            },\n            {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 66, "to": 109 } }
        }
      }
    ],
    [
      "a7d2a8fc-031c-4816-9188-01335289028b",
      {
        "pageContent": "{\n              \"value\": \"95\",\n              \"label\": \"8 foot\"\n            },\n            {\n              \"value\": \"170\",\n              \"label\": \"XL\"\n            },\n            {\n              \"value\": \"96\",\n              \"label\": \"10 foot\"\n            },\n            {\n              \"value\": \"171\",\n              \"label\": \"28\"\n            },\n            {\n              \"value\": \"172\",\n              \"label\": \"29\"\n            },\n            {\n              \"value\": \"173\",\n              \"label\": \"30\"\n            },\n            {\n              \"value\": \"174\",\n              \"label\": \"31\"\n            },\n            {\n              \"value\": \"175\",\n              \"label\": \"32\"\n            },\n            {\n              \"value\": \"176\",\n              \"label\": \"33\"\n            },\n            {\n              \"value\": \"177\",\n              \"label\": \"34\"\n            },\n            {\n              \"value\": \"178\",\n              \"label\": \"36\"\n            },\n            {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 109, "to": 153 } }
        }
      }
    ],
    [
      "7a7e63c5-e961-432c-ba9e-ef77ea693f47",
      {
        "pageContent": "{\n              \"value\": \"179\",\n              \"label\": \"38\"\n            }\n          ],\n          \"storefront_properties\": {\n            \"use_in_product_listing\": true,\n            \"use_in_layered_navigation\": \"FILTERABLE_WITH_RESULTS\",\n            \"use_in_search_results_layered_navigation\": false,\n            \"visible_on_catalog_pages\": false,\n            \"position\": 0\n          }\n        },\n        {\n          \"attribute_code\": \"color\",\n          \"attribute_type\": \"Int\",\n          \"entity_type\": \"catalog_product\",\n          \"input_type\": \"select\",\n          \"attribute_options\": [\n            {\n              \"value\": \"49\",\n              \"label\": \"Black\"\n            },\n            {\n              \"value\": \"50\",\n              \"label\": \"Blue\"\n            },\n            {\n              \"value\": \"51\",\n              \"label\": \"Brown\"\n            },\n            {\n              \"value\": \"52\",\n              \"label\": \"Gray\"\n            },\n            {\n              \"value\": \"53\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 153, "to": 189 } }
        }
      }
    ],
    [
      "81930022-8b5a-45aa-8b20-3e473d7089bc",
      {
        "pageContent": "\"label\": \"Green\"\n            },\n            {\n              \"value\": \"54\",\n              \"label\": \"Lavender\"\n            },\n            {\n              \"value\": \"55\",\n              \"label\": \"Multi\"\n            },\n            {\n              \"value\": \"56\",\n              \"label\": \"Orange\"\n            },\n            {\n              \"value\": \"57\",\n              \"label\": \"Purple\"\n            },\n            {\n              \"value\": \"58\",\n              \"label\": \"Red\"\n            },\n            {\n              \"value\": \"59\",\n              \"label\": \"White\"\n            },\n            {\n              \"value\": \"60\",\n              \"label\": \"Yellow\"\n            }\n          ],\n          \"storefront_properties\": {\n            \"use_in_product_listing\": true,\n            \"use_in_layered_navigation\": \"FILTERABLE_WITH_RESULTS\",\n            \"use_in_search_results_layered_navigation\": false,\n            \"visible_on_catalog_pages\": false,\n            \"position\": 0\n          }\n        }\n      ]",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 190, "to": 229 } }
        }
      }
    ],
    [
      "695580be-5e91-4f15-91a8-25baf73b4b08",
      {
        "pageContent": "}\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 228, "to": 233 } }
        }
      }
    ],
    [
      "c18cfb21-0372-488c-8900-b2a42d0a1e5d",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Field \"customAttributeMetadata\" argument \"attributes\" of type \"[AttributeInput!]!\" is required but not provided` | The `attributes` array parameter is required.\n`The attribute with a \"xxxx\" attributeCode doesn't exist. Verify the attribute and try again` | The given `attribute_code` parameter is invalid.\n`Invalid entity_type specified: \"xxxx\"` | The given `entity_type` is invalid.\n`Missing attribute_code for the input entity_type: \"xxxx\"`| There is no value passed for the `attribute_code` parameter for the given `entity_type` parameter.\n`Missing entity_type for the input attribute_code: \"xxxx\"` | There is no value passed for the `entity_type` parameter for the given `attribute_code` parameter.\n`Missing attribute_code/entity_type for the input Empty AttributeInput` | There are no values passed for both `attribute_code` and `entity_type` parameters.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/custom-attribute-metadata.md",
          "loc": { "lines": { "from": 235, "to": 244 } }
        }
      }
    ],
    [
      "ab233da8-1c53-4705-8609-10d416eb0c6f",
      {
        "pageContent": "---\ntitle: Attributes queries\n---\n\n# Attributes queries\n\nThe following queries allow you to retrieve details about custom and EAV attributes:\n\n* [`attributesForm`](attributes-form.md)\n* [`attributesList`](attributes-list.md)\n* [`attributesMetadata`](attributes-metadata.md) (Deprecated)\n* [`customAttributeMetadata`](custom-attribute-metadata.md) (Deprecated)\n* [`customAttributeMetadataV2`](custom-attribute-metadata-v2.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/attributes/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "7c2e5192-972a-410d-b295-1d5d0747ad3b",
      {
        "pageContent": "---\ntitle: Company (B2B)\nedition: b2b\n---\n\n# Company (B2B)\n\nThe Company component is the key entity within B2B on which all other features are in some way dependent. It allows joining multiple buyers that belong to the same company into a single company account (or corporate account). The company administrator is able to build the company structure (divisions, subdivisions, and users) in the appropriate hierarchy and provide different user roles and permissions to the company members. This hierarchy allows the company administrator to control user activity for the company account: ordering, quoting, purchasing, access to company credit information or profile, and so on. A seller can configure how the buying company operates on the website, including the payment methods, pricing levels, the ability to negotiate prices, and the ability to create requisition lists.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/index.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "ad3ef8df-bdc1-4ae3-818b-1f1c7a8e2af0",
      {
        "pageContent": "---\ntitle: createCompanyRole mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nedition: b2b\n---\n\n# createCompanyRole mutation\n\nThe `createCompanyRole` mutation defines a new company role. To create a role, you must provide an array of permissions that determine which resources the user can access.\n\nimport B2BRoles from '/src/_includes/graphql/b2b-roles.md'\n\n<B2BRoles />\n\nAlso, you can get the list of all resources defined within the company using the [`company`](../queries/company.md) query.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    createCompanyRole(\n        input: CompanyRoleCreateInput!\n    ) {\n        CreateCompanyRoleOutput\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-role.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "a8fd14f4-fe3c-49b8-bdad-a0820a2570cb",
      {
        "pageContent": "## Reference\n\nThe [`createCompanyRole`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createCompanyRole) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-role.md",
          "loc": { "lines": { "from": 32, "to": 34 } }
        }
      }
    ],
    [
      "f396bbae-1319-42ad-aec9-ebad176c45a3",
      {
        "pageContent": "## Example usage\n\nThis example creates a new company role with a list of company permissions available to the company.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-role.md",
          "loc": { "lines": { "from": 36, "to": 40 } }
        }
      }
    ],
    [
      "eb217ea5-64f8-4ef4-87c9-8a4bc4fec1ca",
      {
        "pageContent": "**Request:**\n\n```graphql\nmutation {\n  createCompanyRole(\n    input: {\n      name: \"Company Admin\"\n      permissions: [\n        \"Magento_Company::index\"\n        \"Magento_Company::view\"\n        \"Magento_Company::view_account\"\n        \"Magento_Company::edit_account\"\n        \"Magento_Company::view_address\"\n        \"Magento_Company::edit_address\"\n        \"Magento_Company::contacts\"\n        \"Magento_Company::payment_information\"\n        \"Magento_Company::shipping_information\"\n        \"Magento_Company::user_management\"\n        \"Magento_Company::roles_view\"\n        \"Magento_Company::roles_edit\"\n        \"Magento_Company::users_view\"\n        \"Magento_Company::users_edit\"\n        \"Magento_Company::credit\"\n        \"Magento_Company::credit_history\"\n      ]\n    }\n  ) {\n    role {\n      id\n      name\n      permissions {\n        id\n        text\n        sort_order\n        children {\n          id\n          text\n          sort_order\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-role.md",
          "loc": { "lines": { "from": 40, "to": 82 } }
        }
      }
    ],
    [
      "4f69d96b-62f6-4f6d-8f99-8e35bd488f88",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCompanyRole\": {\n      \"role\": {\n        \"id\": \"Mg==\",\n        \"name\": \"Company Admin\",\n        \"permissions\": [\n          {\n            \"id\": \"Magento_Company::index\",\n            \"text\": \"All\",\n            \"sort_order\": 100,\n            \"children\": [\n              {\n                \"id\": \"Magento_Company::view\",\n                \"text\": \"Company Profile\",\n                \"sort_order\": 100\n              },\n              {\n                \"id\": \"Magento_Company::user_management\",\n                \"text\": \"Company User Management\",\n                \"sort_order\": 200\n              },\n              {\n                \"id\": \"Magento_Company::credit\",\n                \"text\": \"Company Credit\",\n                \"sort_order\": 500\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-role.md",
          "loc": { "lines": { "from": 83, "to": 122 } }
        }
      }
    ],
    [
      "a6c7fcda-b92c-4976-a23a-94c6273a503b",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`User role with this name already exists. Enter a different name to save this role.` | The company cannot have multiple company roles with the same name.\n`Unable to set \"allow\" for the resource because its parent resource(s) is set to \"deny\".` | To allow permission for the company role, you must allow all the permissions of the parent tree.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-role.md",
          "loc": { "lines": { "from": 124, "to": 129 } }
        }
      }
    ],
    [
      "57c94b50-463a-426a-98c7-a08595e4f81a",
      {
        "pageContent": "---\ntitle: createCompanyTeam mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nedition: b2b\n---\n\n# createCompanyTeam mutation\n\nUse the `createCompanyTeam` mutation to create a new team for your company.\n\nThe `target_id` input attribute allows you to specify which node in the company structure will be the parent node of the company team. If you do not specify a value, the team will be assigned to the top-level (root) node of the company structure.\n\nYou can get the `target_id` with the [`company`](../queries/company.md) query.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    createCompanyTeam(\n        input: CompanyTeamCreateInput!\n    ) {\n        CreateCompanyTeamOutput\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-team.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "b08b9683-da75-4e4d-adce-cc8546b0062c",
      {
        "pageContent": "## Reference\n\nThe [`createCompanyTeam`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createCompanyTeam) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-team.md",
          "loc": { "lines": { "from": 30, "to": 32 } }
        }
      }
    ],
    [
      "6915ef28-dbc5-4ef4-a350-d5a861f26712",
      {
        "pageContent": "## Example usage\n\nThe following example shows the minimal payload for adding a new team to a customer's company.\n\n**Request:**\n\n```graphql\nmutation {\n  createCompanyTeam(\n    input: {\n      name: \"Test Team\"\n    }\n  ) {\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCompanyTeam\": {\n      \"team\": {\n        \"id\": \"MQ==\",\n        \"name\": \"Test Team\",\n        \"description\": null\n      }\n    }\n  }\n}\n```\n\nThis example creates a child team of the parent team specified in the `target_id` field.\n\n**Request:**\n\n```graphql\nmutation {\n  createCompanyTeam(\n    input: {\n      name: \"Test Child Team\"\n      description: \"Test Child Team description\"\n      target_id: \"MQ==\"\n    }\n  ) {\n    team {\n      id\n      name\n      description\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-team.md",
          "loc": { "lines": { "from": 34, "to": 91 } }
        }
      }
    ],
    [
      "9d69087d-c50b-488f-9dd4-8e5550343d09",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCompanyTeam\": {\n      \"team\": {\n        \"id\": \"Mg==\",\n        \"name\": \"Test Child Team\",\n        \"description\": \"Test Child Team description\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-team.md",
          "loc": { "lines": { "from": 92, "to": 108 } }
        }
      }
    ],
    [
      "9f1a386d-bcd4-416c-9eb8-2cf4d84d516a",
      {
        "pageContent": "---\ntitle: createCompanyUser mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nedition: b2b\n---\n\n# createCompanyUser mutation\n\nThe `createCompanyUser` mutation allows an existing company user who is assigned a role that contains the `Magento_Company::users_edit` permission to create a new company user. The specified email address determines how the application processes the request.\n\n-  If the email address is unique for the website, the application immediately creates the company user.\n\n-  If the email address belongs to a customer who is not a company user, the application sends an invitation to join the company organization to the customer. When the customer accepts the invitation, the application adds the customer to the company organization.\n\n-  If the email address belongs to a customer who is part of any company organization, the application returns the error \"A customer with the same email already assigned to company\".",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "3cb3a553-aa7e-4f3f-b200-e07d39d4ad0c",
      {
        "pageContent": "The `target_id` input attribute allows you to specify which node in the company structure will be the parent node of the company user. If you do not specify a value, the user will be assigned to the top-level (root) node of the company structure.\n\nYou can get the `target_id` and the `role_id` with the [`company`](../queries/company.md) query.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 18, "to": 22 } }
        }
      }
    ],
    [
      "0afed779-2d5a-45e9-9305-09e014756804",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n    createCompanyUser(\n        input: CompanyUserCreateInput!\n    ) {\n        CreateCompanyUserOutput\n    }\n}\n```\n\n## Reference\n\nThe [`createCompanyUser`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createCompanyUser) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 24, "to": 38 } }
        }
      }
    ],
    [
      "364c28ba-a16c-4005-820d-de7fa274d7a7",
      {
        "pageContent": "## Example usage\n\n### Create a company user (minimal payload)\n\nThe following example shows the minimal payload to add a company user. Because a `target_id` is not specified, the application places the new company user at the top node of the company structure.\n\n**Request:**\n\n```graphql\nmutation {\n  createCompanyUser(\n    input: {\n      email: \"john.doe@example.com\"\n      firstname: \"John\"\n      lastname: \"Doe\"\n      job_title: \"User\"\n      role_id: \"MQ==\"\n      status: ACTIVE\n      telephone: \"1234567890\"\n    }\n  ) {\n    user {\n      created_at\n      email\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCompanyUser\": {\n      \"user\": {\n        \"created_at\": \"2020-10-15 23:33:49\",\n        \"email\": \"john.doe@example.com\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 40, "to": 82 } }
        }
      }
    ],
    [
      "6ba1d478-1922-4c8b-9e4b-3d01f02822f9",
      {
        "pageContent": "### Create a company user in a specific location in the company structure\n\nThis example creates a new company user of the parent company team specified in the `target_id` field.\n\n**Request:**\n\n```graphql\nmutation {\n  createCompanyUser(\n    input: {\n      email: \"jane.doe3@example.com\"\n      firstname: \"Jane\"\n      lastname: \"Doe3\"\n      job_title: \"User\"\n      role_id: \"NTc=\"\n      status: ACTIVE\n      telephone: \"1234567890\"\n      target_id: \"OA==\"\n    }\n  ) {\n    user {\n      created_at\n      email\n      firstname\n      lastname\n      job_title\n      role {\n        id\n        name\n      }\n      team {\n        id\n        name\n        structure_id\n      }\n      status\n      telephone\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 84, "to": 123 } }
        }
      }
    ],
    [
      "784f67fd-08f9-4fec-8b22-a7d9776db23f",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCompanyUser\": {\n      \"user\": {\n        \"created_at\": \"2020-10-15 23:39:11\",\n        \"email\": \"jane.doe@example.com\",\n        \"firstname\": \"Jane\",\n        \"lastname\": \"Doe\",\n        \"job_title\": \"User\",\n        \"role\": {\n          \"id\": \"NTc=\",\n          \"name\": \"Default User\"\n        },\n        \"team\": {\n          \"id\": \"MQ==\",\n          \"name\": \"Test Team\",\n          \"structure_id\": \"Mg==\"\n        },\n        \"status\": \"ACTIVE\",\n        \"telephone\": \"1234567890\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 124, "to": 153 } }
        }
      }
    ],
    [
      "5aec5c51-5297-460a-b709-49cb20c06eb1",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 155, "to": 155 } }
        }
      }
    ],
    [
      "96e738bc-dde1-4643-8c10-6980dd41672b",
      {
        "pageContent": "Error | Description\n--- | ---\n`Invitation was sent to an existing customer, they will be added to your organization once they accept the invitation.` | The email provided in the `input`.`email` argument belongs to an existing customer. The application sends an invitation to this customer. When the customer accepts the invitation, the customer will be assigned to the company.\n`A customer with the same email already assigned to company.` | The email provided in the `input`.`email` argument belongs to an existing customer, and the customer has already been assigned to the company.\n`\"Email\" is not a valid email address.` | The value provided in the `input`.`email` argument has an invalid format.\n`Field \"createCompanyUser\" argument \"input\" requires type String!, found xxx.` | The value specified in the one of the `input` arguments has an invalid type.\n`Field \"xxx\" is not defined by type CompanyUserCreateInput.` | The `input`.`xxx` argument is undefined.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 157, "to": 163 } }
        }
      }
    ],
    [
      "b9bf269a-0b9e-4fa3-ae15-4ccb2749e570",
      {
        "pageContent": "`Required parameters are missing: xxx` | The `input`.`xxx` argument was omitted or contains an empty value.\n`No such entity with roleId = xxx` | The company role with ID `xxx` doesn't exist.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create-user.md",
          "loc": { "lines": { "from": 164, "to": 165 } }
        }
      }
    ],
    [
      "edb4d66f-8955-4abf-be91-04a59c649218",
      {
        "pageContent": "---\ntitle: createCompany mutation\nedition: b2b\n---\n\n# createCompany mutation\n\nThe `createCompany` mutation creates a company at the request of either a customer or a guest. The company definition includes the first name, last name, and email address of the company administrator. The email address assigned to the account cannot already exist in the system. Therefore, a customer attempting to create a company cannot use the same email address they used to log in to the storefront.\n\nThe company administrator cannot log in or perform additional company-related tasks until an administrator approves the request to create a company.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  createCompany(\n    input: CompanyCreateInput!\n  ) {\n    CreateCompanyOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "ff278324-91d6-4b85-a9c8-d4ebbf7cd54a",
      {
        "pageContent": "## Reference\n\nThe [`createCompany`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createCompany) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create.md",
          "loc": { "lines": { "from": 26, "to": 28 } }
        }
      }
    ],
    [
      "49b3e4b3-5dc6-46c3-b498-a1aac1f951a8",
      {
        "pageContent": "## Example usage\n\nThe following call creates a company on behalf of a guest.\n\n**Request:**\n\n```graphql\nmutation {\n  createCompany(input: {\n    company_name: \"TestCo\"\n    company_email: \"tgarofalo@example.com\"\n    company_admin: {\n      email: \"tgarofalo@example.com\"\n      firstname: \"Taina\"\n      lastname:\"Garofalo\"\n    }\n    legal_name: \"TestCo Inc.\"\n    legal_address: {\n      street: [\n        \"100 Big Oak Tree Dr\"\n      ]\n      city: \"San Francisco\"\n      region: {\n        region_code: \"CA\"\n      }\n      postcode: \"99999\"\n      country_id: US\n      telephone: \"555 867-5309\"\n    }\n  }){\n    company {\n      id\n      name\n      company_admin {\n        email\n        firstname\n        lastname\n      }\n      legal_address {\n        street\n        city\n        region {\n          region_code\n          region_id\n        }\n        postcode\n        telephone\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create.md",
          "loc": { "lines": { "from": 30, "to": 80 } }
        }
      }
    ],
    [
      "1112c83f-bef9-49aa-b5be-92a5302a3981",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCompany\": {\n      \"company\": {\n        \"id\": \"MQ==\",\n        \"name\": \"TestCo\",\n        \"company_admin\": {\n          \"email\": \"tgarofalo@example.com\",\n          \"firstname\": \"Taina\",\n          \"lastname\": \"Garofalo\"\n        },\n        \"legal_address\": {\n          \"street\": [\n            \"100 Big Oak Tree Dr\"\n          ],\n          \"city\": \"San Francisco\",\n          \"region\": {\n            \"region_code\": \"CA\",\n            \"region_id\": 12\n          },\n          \"postcode\": \"99999\",\n          \"telephone\": \"555 867-5309\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create.md",
          "loc": { "lines": { "from": 81, "to": 113 } }
        }
      }
    ],
    [
      "8b1934cc-81cf-4314-8028-1d5a6629a06c",
      {
        "pageContent": "## Related topics\n\n*  [updateCompany mutation](update.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/create.md",
          "loc": { "lines": { "from": 115, "to": 117 } }
        }
      }
    ],
    [
      "2e8d7948-26ff-473e-a9f3-82c557951a21",
      {
        "pageContent": "---\ntitle: deleteCompanyRole mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nedition: b2b\n---\n\n# deleteCompanyRole mutation\n\nUse the `deleteCompanyRole` mutation to delete a company role by ID.\n\nYou can get the role ID with the [`company`](../queries/company.md) query.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    deleteCompanyRole(\n        id: ID!\n    ) {\n        DeleteCompanyRoleOutput\n    }\n}\n```\n\n## Reference\n\nThe [`deleteCompanyRole`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteCompanyRole) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/delete-role.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "c4e2e327-7806-4193-ac6c-206382ce7265",
      {
        "pageContent": "## Example usage\n\nThe following example deletes the specified company role.\n\n**Request:**\n\n```graphql\nmutation {\n  deleteCompanyRole(\n    id: \"Mg==\"\n  ) {\n    success\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deleteCompanyRole\": {\n      \"success\": true\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/delete-role.md",
          "loc": { "lines": { "from": 32, "to": 58 } }
        }
      }
    ],
    [
      "6d254753-d31d-414d-83f9-cacea385119d",
      {
        "pageContent": "---\ntitle: deleteCompanyTeam mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nedition: b2b\n---\n\n# deleteCompanyTeam mutation\n\nUse the `deleteCompanyTeam` mutation to delete a company team by ID. You can get the team ID with the [`company`](../queries/company.md) query.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    deleteCompanyTeam(\n        id: ID!\n    ) {\n        DeleteCompanyTeamOutput\n    }\n}\n```\n\n## Reference\n\nThe [`deleteCompanyTeam`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteCompanyTeam) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/delete-team.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "beaa5b17-d7a0-4b3a-a1ae-3394c76ffea9",
      {
        "pageContent": "## Example usage\n\nThe following example deletes the specified team.\n\n**Request:**\n\n```graphql\nmutation {\n  deleteCompanyTeam(\n    id: \"Mg==\"\n  ) {\n    success\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deleteCompanyTeam\": {\n      \"success\": true\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/delete-team.md",
          "loc": { "lines": { "from": 30, "to": 56 } }
        }
      }
    ],
    [
      "3ab47fcf-0e2b-48f5-b2aa-ba449b6ac445",
      {
        "pageContent": "---\ntitle: deleteCompanyUser mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nedition: b2b\n---\n\n# deleteCompanyUser mutation\n\nUse the `deleteCompanyUser` mutation to deactivate the specified company user.\n\nYou can get the user ID with the [`company`](../queries/company.md) query.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    deleteCompanyUser(\n        id: ID!\n    ) {\n        DeleteCompanyUserOutput\n    }\n}\n```\n\n## Reference\n\nThe [`deleteCompanyUser`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteCompanyUser) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/delete-user.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "8353bba9-9a79-4c93-bc81-406a587942bf",
      {
        "pageContent": "## Example usage\n\nThe following example deactivates the user specified in the `id` attribute.\n\n**Request:**\n\n```graphql\nmutation {\n  deleteCompanyUser(\n    id: \"Mg==\"\n  ) {\n    success\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deleteCompanyUser\": {\n      \"success\": true\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/delete-user.md",
          "loc": { "lines": { "from": 32, "to": 58 } }
        }
      }
    ],
    [
      "29893f80-117a-43c3-9118-9da59860a11d",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`You do not have authorization to perform this action.` | The user with the ID provided in the `input`.`id` argument is not available to your company, or you do not have the necessary permissions to perform this operation.\n`You cannot delete yourself.` | You must specify a company user other than yourself.\n`A customer with the same email address already exists in an associated website` | The email provided in the `input`.`email` argument belongs to another user.\n`The user XXX is the company admin and cannot be set to inactive. You must set another user as the company admin first.` | The company owner cannot be deactivated. You must set another user as the company admin first.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/delete-user.md",
          "loc": { "lines": { "from": 60, "to": 67 } }
        }
      }
    ],
    [
      "91105055-d761-42f3-a210-ce3f96442340",
      {
        "pageContent": "---\ntitle: Company (B2B) mutations\nedition: b2b\n---\n\n# Company (B2B) mutations\n\nThe B2B company mutations allow you to perform the management operations:\n\n* Create and update a company.\n* Create, update, and delete company users.\n* Create, update, and delete company teams.\n* Move the position of a company team in the company hierarchy.\n* Create, update, and delete company roles.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "1c7c3638-62f1-4643-bae4-c31c6a972ad5",
      {
        "pageContent": "---\ntitle: updateCompanyRole mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nedition: b2b\n---\n\n# updateCompanyRole mutation\n\nUse the `updateCompanyRole` mutation to update the company role and permissions.\n\nYou can get the role ID and the list of all resources defined within the company using the [`company`](../queries/company.md) query.\n\nimport B2BRoles from '/src/_includes/graphql/b2b-roles.md'\n\n<B2BRoles />\n\nYou can change or add permissions to the company role using the `permissions` attribute.\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nAny time you use the `permissions` object to update role capabilities, you must include the entire hierarchy of permissions. The `updateCompanyRole` mutation rewrites all role permissions based on the specified payload.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-role.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "979bec58-0377-4dbd-808d-569280ab5286",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n    updateCompanyRole(\n        input: CompanyRoleUpdateInput!\n    ) {\n        UpdateCompanyRoleOutput\n    }\n}\n```\n\n## Reference\n\nThe [`updateCompanyRole`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCompanyRole) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-role.md",
          "loc": { "lines": { "from": 26, "to": 40 } }
        }
      }
    ],
    [
      "5d49f820-83b3-410c-b44b-387efd32428f",
      {
        "pageContent": "## Example usage\n\nThe following example updates the name of a company role.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCompanyRole(\n    input: {\n      id: \"Mg==\"\n      name: \"Company Admin (updated)\"\n    }\n  ) {\n    role {\n      id\n      name\n      permissions {\n        id\n        text\n        sort_order\n        children {\n          id\n          text\n          sort_order\n          children {\n            id\n            text\n            sort_order\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-role.md",
          "loc": { "lines": { "from": 42, "to": 76 } }
        }
      }
    ],
    [
      "7283a32d-c52e-46ed-b433-cf4716e16b59",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-role.md",
          "loc": { "lines": { "from": 77, "to": 79 } }
        }
      }
    ],
    [
      "f95084a6-8ce0-4c2c-acd0-85a258e92bbf",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"updateCompanyRole\": {\n      \"role\": {\n        \"id\": \"Mg==\",\n        \"name\": \"Company Admin (updated)\",\n        \"permissions\": [\n          {\n            \"id\": \"Magento_Company::index\",\n            \"text\": \"All\",\n            \"sort_order\": 100,\n            \"children\": [\n              {\n                \"id\": \"Magento_Company::view\",\n                \"text\": \"Company Profile\",\n                \"sort_order\": 100,\n                \"children\": [\n                  {\n                    \"id\": \"Magento_Company::view_account\",\n                    \"text\": \"Account Information (View)\",\n                    \"sort_order\": 100\n                  },\n                  {\n                    \"id\": \"Magento_Company::view_address\",\n                    \"text\": \"Legal Address (View)\",\n                    \"sort_order\": 200\n                  },\n                  {\n                    \"id\": \"Magento_Company::contacts\",\n                    \"text\": \"Contacts (View)\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-role.md",
          "loc": { "lines": { "from": 81, "to": 111 } }
        }
      }
    ],
    [
      "7b17f92e-f04a-461a-a2a5-97b1091bfa24",
      {
        "pageContent": "\"sort_order\": 300\n                  },\n                  {\n                    \"id\": \"Magento_Company::payment_information\",\n                    \"text\": \"Payment Information (View)\",\n                    \"sort_order\": 400\n                  },\n                  {\n                    \"id\": \"Magento_Company::shipping_information\",\n                    \"text\": \"Shipping Information (View)\",\n                    \"sort_order\": 450\n                  }\n                ]\n              },\n              {\n                \"id\": \"Magento_Company::user_management\",\n                \"text\": \"Company User Management\",\n                \"sort_order\": 200,\n                \"children\": [\n                  {\n                    \"id\": \"Magento_Company::roles_view\",\n                    \"text\": \"View roles and permissions\",\n                    \"sort_order\": 100\n                  },\n                  {\n                    \"id\": \"Magento_Company::users_view\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-role.md",
          "loc": { "lines": { "from": 112, "to": 137 } }
        }
      }
    ],
    [
      "1b7ff2cd-bc47-4de2-93eb-0d332bd1649a",
      {
        "pageContent": "\"text\": \"View users and teams\",\n                    \"sort_order\": 300\n                  }\n                ]\n              },\n              {\n                \"id\": \"Magento_Company::credit\",\n                \"text\": \"Company Credit\",\n                \"sort_order\": 500,\n                \"children\": [\n                  {\n                    \"id\": \"Magento_Company::credit_history\",\n                    \"text\": \"View\",\n                    \"sort_order\": 500\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-role.md",
          "loc": { "lines": { "from": 138, "to": 162 } }
        }
      }
    ],
    [
      "3cc9539b-a69b-429c-8dca-0e463502a949",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`User role with this name already exists. Enter a different name to save this role.` | The company cannot have multiple company roles with the same name.\n`Unable to set \"allow\" for the resource because its parent resource(s) is set to \"deny\".` | To allow permission for the company role, you must allow all the permissions of the parent tree.\n`No such entity with roleId = xxx` | The company role with ID `xxx` doesn't exist.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-role.md",
          "loc": { "lines": { "from": 164, "to": 170 } }
        }
      }
    ],
    [
      "0fe8f833-633c-427d-a9ce-c0d49d53f3da",
      {
        "pageContent": "---\ntitle: updateCompanyStructure mutation\nedition: b2b\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# updateCompanyStructure mutation\n\nUse the `updateCompanyStructure` mutation to change the parent node of a company team.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    updateCompanyStructure(\n        input: CompanyStructureUpdateInput!\n    ) {\n        UpdateCompanyStructureOutput\n    }\n}\n```\n\n## Reference\n\nThe [`updateCompanyStructure`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCompanyStructure) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-structure.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "22f49af6-c368-4867-ba07-67d4d18b32a8",
      {
        "pageContent": "## Example usage\n\nThe following example shows how to update the customer's company structure.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCompanyStructure(\n    input: {\n      tree_id: \"Mw==\"\n      parent_tree_id: \"MQ==\"\n    }\n  ) {\n    company {\n      structure(\n        rootId: \"MQ==\"\n      ) {\n        items {\n          id\n          parent_id\n          entity {\n            ... on CompanyTeam {\n              name\n              id\n              description\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-structure.md",
          "loc": { "lines": { "from": 30, "to": 62 } }
        }
      }
    ],
    [
      "bbb5e225-1d1a-4b61-a133-35edc9f53378",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCompanyStructure\": {\n      \"company\": {\n        \"structure\": {\n          \"items\": [\n            {\n              \"id\": \"MQ==\",\n              \"parent_id\": \"MA==\",\n              \"entity\": {}\n            },\n            {\n              \"id\": \"Mg==\",\n              \"parent_id\": \"MQ==\",\n              \"entity\": {\n                \"name\": \"Test Team\",\n                \"id\": \"MQ==\",\n                \"description\": \"Test Team description\"\n              }\n            },\n            {\n              \"id\": \"Mw==\",\n              \"parent_id\": \"Mg==\",\n              \"entity\": {\n                \"name\": \"Test Child Team\",\n                \"id\": \"Mg==\",\n                \"description\": \"Test Child Team dexription\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-structure.md",
          "loc": { "lines": { "from": 63, "to": 103 } }
        }
      }
    ],
    [
      "063f43f3-b3b2-4b6c-90e6-5ed116009750",
      {
        "pageContent": "---\ntitle: updateCompanyTeam mutation\nedition: b2b\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# updateCompanyTeam mutation\n\nUse the `updateCompanyTeam` mutation to update the company team data.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    updateCompanyTeam(\n        input: CompanyTeamUpdateInput!\n    ) {\n        UpdateCompanyTeamOutput\n    }\n}\n```\n\n## Reference\n\nThe [`updateCompanyTeam`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCompanyTeam) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-team.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "d288c890-e0c6-4f8e-920e-29690cab3fad",
      {
        "pageContent": "## Example usage\n\nThe following example updates the name and description of a company team.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCompanyTeam(\n    input: {\n      name: \"My Test Team\"\n      description: \"My Test Team description\"\n      id: \"MQ==\"\n    }\n  ) {\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCompanyTeam\": {\n      \"team\": {\n        \"id\": \"MQ==\",\n        \"name\": \"My Test Team\",\n        \"description\": \"My Test Team description\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-team.md",
          "loc": { "lines": { "from": 30, "to": 68 } }
        }
      }
    ],
    [
      "d5bb232a-e9f0-4f02-8bab-3ae2aae901fd",
      {
        "pageContent": "---\ntitle: updateCompanyUser mutation\nedition: b2b\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# updateCompanyUser mutation\n\nUse the `updateCompanyUser` mutation to update an existing company user.\n\nYou can get the user ID and role ID with the [`company`](../queries/company.md) query.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    updateCompanyUser(\n        input: CompanyUserUpdateInput!\n    ) {\n        UpdateCompanyUserOutput\n    }\n}\n```\n\n## Reference\n\nThe [`updateCompanyUser`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCompanyUser) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-user.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "c10bc0d0-f382-4cad-abeb-ca16f4f4bbe7",
      {
        "pageContent": "## Example usage\n\nThe following example changes the job title of the specified company user.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCompanyUser(\n    input: {\n      id: \"Mg==\"\n      job_title: \"Company User\"\n    }\n  ) {\n    user {\n      email\n      firstname\n      lastname\n      job_title\n      telephone\n      status\n      role {\n        id\n        name\n        users_count\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCompanyUser\": {\n      \"user\": {\n        \"email\": \"jane.doe@example.com\",\n        \"firstname\": \"Jane\",\n        \"lastname\": \"Doe\",\n        \"job_title\": \"Company User\",\n        \"telephone\": \"1234567890\",\n        \"status\": \"ACTIVE\",\n        \"role\": {\n          \"id\": \"MQ==\",\n          \"name\": \"Default User\",\n          \"users_count\": 1\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-user.md",
          "loc": { "lines": { "from": 32, "to": 84 } }
        }
      }
    ],
    [
      "ab3c57a4-521d-47c8-a7c0-395590038cd2",
      {
        "pageContent": "```\n\nThis example deactivates the company user and assigns a different role.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCompanyUser(\n    input: {\n      id: \"Mg==\"\n      role_id: \"MQ==\"\n      status: INACTIVE\n    }\n  ) {\n    user {\n      email\n      firstname\n      lastname\n      job_title\n      telephone\n      status\n      role {\n        id\n        name\n        users_count\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCompanyUser\": {\n      \"user\": {\n        \"email\": \"jane.doe@example.com\",\n        \"firstname\": \"Jane\",\n        \"lastname\": \"Doe\",\n        \"job_title\": \"Company User\",\n        \"telephone\": \"1234567890\",\n        \"status\": \"INACTIVE\",\n        \"role\": {\n          \"id\": \"MQ==\",\n          \"name\": \"Default User\",\n          \"users_count\": 1\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-user.md",
          "loc": { "lines": { "from": 85, "to": 139 } }
        }
      }
    ],
    [
      "9d792198-1aea-41f6-9804-f5e854c843ea",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`You do not have authorization to perform this action.` | The user with the ID provided in the `input`.`id` argument is not assigned to your company.\n`No such entity with roleId = xxx` | The company role with ID `xxx` doesn't exist.\n`A customer with the same email address already exists in an associated website` | The email provided in the `input`.`email` argument belongs to another user.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update-user.md",
          "loc": { "lines": { "from": 141, "to": 147 } }
        }
      }
    ],
    [
      "5ec29092-7a73-4ceb-89f4-4cd9fd34192b",
      {
        "pageContent": "---\ntitle: updateCompany mutation\nedition: b2b\n---\n\n# updateCompany mutation\n\nThe `updateCompany` mutation allows you to update a company's address as well as top-level string attributes such as the name, legal name, and email. You cannot update the administrator or other objects such as teams, roles, or resources with this mutation.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  updateCompany(\n    input: CompanyUpdateInput!\n  ) {\n    UpdateCompanyOutput\n  }\n}\n```\n\n## Reference\n\nThe [`updateCompany`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCompany) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "221cd163-e462-4897-8780-435fa5bafe7a",
      {
        "pageContent": "## Example usage\n\nThe following call updates the legal address of a company\n\n**Request:**\n\n```graphql\nmutation {\n  updateCompany(\n    input: {\n      legal_address: {\n        street: [\"265 Cambridge Ave\"]\n        city: \"Palo Alto\"\n        region: {\n          region_code:\"CA\"\n          region_id: 12\n        }\n        postcode: \"94306\"\n      }\n    }\n  ) {\n    company {\n      legal_address {\n        street\n        city\n        region {\n          region_code\n        }\n        postcode\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCompany\": {\n      \"company\": {\n        \"legal_address\": {\n          \"street\": [\n            \"265 Cambridge Ave\"\n          ],\n          \"city\": \"Palo Alto\",\n          \"region\": {\n            \"region_code\": \"CA\"\n          },\n          \"postcode\": \"94306\"\n        }\n      }\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [createCompany mutation](create.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/mutations/update.md",
          "loc": { "lines": { "from": 28, "to": 88 } }
        }
      }
    ],
    [
      "118cad97-8a81-4f82-a347-cf6b33c1b0f7",
      {
        "pageContent": "---\ntitle: company query\nedition: b2b\n---\n\n# company query\n\nThe `company` query returns details about the user's company. The request must include the customer token of a company user.\n\nA company structure can contain multiple levels of teams, with company users assigned at each level. To query on a company structure, specify fragments on the `Customer` and `CompanyTeam` objects. The application returns a [union](https://graphql.org/learn/schema/#union-types) of these objects. Specify the `__typename` attribute to distinguish the object types in the response.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "330e51f7-a0e3-4282-8283-dc03aa035e9d",
      {
        "pageContent": "The `CompanyCredit` output object contains the company's `available_credit` and `outstanding_balance` values. These values cannot be changed with a mutation.  The `available_credit` amount is the sum of the credit limit and the outstanding balance. If the company has exceeded the credit limit, the amount is as a negative value. The `outstanding_balance` amount is the amount reimbursed, less the total due from all orders placed using the Payment on Account payment method. The amount can be a positive or negative value.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 12, "to": 14 } }
        }
      }
    ],
    [
      "2e63dd67-8367-400f-b24e-26eead15bcb5",
      {
        "pageContent": "## Syntax\n\n`{company: {Company}}`\n\n## Reference\n\nThe [`company`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-company) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 16, "to": 22 } }
        }
      }
    ],
    [
      "8cbcf2fc-b66f-4a6e-8fff-190da3f2484d",
      {
        "pageContent": "## Example usage",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 24, "to": 24 } }
        }
      }
    ],
    [
      "d104f630-0be0-4dd5-a084-14c59b32bd63",
      {
        "pageContent": "### Return information about a newly-created company\n\nThe following call returns basic information about the customer's company.\n\n**Request:**\n\n```graphql\nquery{\n  company{\n    company_admin {\n      firstname\n      lastname\n      email\n    }\n    email\n    id\n    legal_address {\n      street\n       city\n      region {\n        region_id\n        region_code\n      }\n      postcode\n      country_code\n      telephone\n    }\n    legal_name\n    name\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 26, "to": 56 } }
        }
      }
    ],
    [
      "8cffd405-d1cd-4ddd-ba92-1d1d136c538d",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"company\": {\n      \"company_admin\": {\n        \"firstname\": \"Taina\",\n        \"lastname\": \"Garofalo\",\n        \"email\": \"tgarofalo@example.com\"\n      },\n      \"email\": \"tgarofalo@example.com\",\n      \"id\": \"MQ==\",\n      \"legal_address\": {\n        \"street\": [\n          \"265 Cambridge Ave\"\n        ],\n        \"city\": \"Palo Alto\",\n        \"region\": {\n          \"region_id\": 12,\n          \"region_code\": \"CA\"\n        },\n        \"postcode\": \"94306\",\n        \"country_code\": \"US\",\n        \"telephone\": \"555 867-5309\"\n      },\n      \"legal_name\": \"TestCo Inc.\",\n      \"name\": \"TestCo\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 57, "to": 90 } }
        }
      }
    ],
    [
      "f4b34abb-dba5-44b7-9f47-6c9df2eed181",
      {
        "pageContent": "### Return the company structure\n\nThe following query returns the customer's company structure.\n\n<!--- To do: Replace the response after creating a proper structure and add a tree depicting the structure -->\n\n**Request:**\n\n```graphql\nquery{\n  company{\n    id\n    name\n    structure{\n      items {\n        entity {\n          __typename\n          ... on Customer {\n            firstname\n            lastname\n            email\n          }\n          ... on CompanyTeam {\n            name\n            description\n            id\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 92, "to": 123 } }
        }
      }
    ],
    [
      "874b1230-aefc-42ae-bfab-170a3a4d2d9a",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 124, "to": 126 } }
        }
      }
    ],
    [
      "540ef3da-a303-4322-980e-8a791974d2f5",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"company\": {\n      \"id\": \"Ng==\",\n      \"name\": \"TestCo2\",\n      \"structure\": {\n        \"items\": [\n          {\n            \"entity\": {\n              \"__typename\": \"Customer\",\n              \"firstname\": \"Taina\",\n              \"lastname\": \"Garofalo\",\n              \"email\": \"donadmin@example.com\"\n            }\n          },\n          {\n            \"entity\": {\n              \"__typename\": \"CompanyTeam\",\n              \"name\": \"Y Team\",\n              \"description\": \"Y Team description\",\n              \"id\": \"Ng==\"\n            }\n          },\n          {\n            \"entity\": {\n              \"__typename\": \"Customer\",\n              \"firstname\": \"B\",\n              \"lastname\": \"BB\",\n              \"email\": \"bbb@example.com\"\n            }\n          },\n          {\n            \"entity\": {\n              \"__typename\": \"CompanyTeam\",\n              \"name\": \"X team\",\n              \"description\": \"X team description\",\n              \"id\": \"Nw==\"\n            }\n          },\n          {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 128, "to": 168 } }
        }
      }
    ],
    [
      "e8d78fd6-05fb-4bbd-a92f-8955e4883e44",
      {
        "pageContent": "{\n            \"entity\": {\n              \"__typename\": \"Customer\",\n              \"firstname\": \"A\",\n              \"lastname\": \"AA\",\n              \"email\": \"aa@example.com\"\n            }\n          },\n          {\n            \"entity\": {\n              \"__typename\": \"CompanyTeam\",\n              \"name\": \"Z Team\",\n              \"description\": \"Z team description\",\n              \"id\": \"NQ==\"\n            }\n          },\n          {\n            \"entity\": {\n              \"__typename\": \"Customer\",\n              \"firstname\": \"C\",\n              \"lastname\": \"CC\",\n              \"email\": \"ccc@example.com\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 168, "to": 197 } }
        }
      }
    ],
    [
      "5938f779-f386-45df-a3d7-6e61c67f71fe",
      {
        "pageContent": "### Return the company credit history\n\nThe following query returns a company's current company credit balance as well as a record of all company credit events.\n\n**Request:**\n\n```graphql\nquery{\n  company{\n    name\n    id\n    credit {\n      available_credit {\n        value\n        currency\n      }\n      credit_limit {\n        value\n        currency\n      }\n      outstanding_balance {\n        value\n        currency\n      }\n    }\n    credit_history{\n      items {\n        date\n        type\n        amount {\n          value\n          currency\n        }\n        balance {\n          outstanding_balance {\n            value\n            currency\n          }\n          available_credit {\n            value\n            currency\n          }\n          credit_limit {\n            value\n            currency\n          }\n        }\n      }\n    }\n\n    payment_methods\n\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 199, "to": 252 } }
        }
      }
    ],
    [
      "b5bcd131-ba85-4e7d-a26a-a21642668f7f",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 253, "to": 255 } }
        }
      }
    ],
    [
      "cc8b8b76-dd37-4d7e-b3d7-902036b92114",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"company\": {\n      \"name\": \"TestCo\",\n      \"id\": \"MQ==\",\n      \"credit\": {\n        \"available_credit\": {\n          \"value\": 436,\n          \"currency\": \"USD\"\n        },\n        \"credit_limit\": {\n          \"value\": 500,\n          \"currency\": \"USD\"\n        },\n        \"outstanding_balance\": {\n          \"value\": -64,\n          \"currency\": \"USD\"\n        }\n      },\n      \"credit_history\": {\n        \"items\": [\n          {\n            \"date\": \"2020-12-02 16:38:11\",\n            \"type\": \"ALLOCATION\",\n            \"amount\": {\n              \"value\": 0,\n              \"currency\": \"USD\"\n            },\n            \"balance\": {\n              \"outstanding_balance\": {\n                \"value\": 0,\n                \"currency\": \"USD\"\n              },\n              \"available_credit\": {\n                \"value\": 500,\n                \"currency\": \"USD\"\n              },\n              \"credit_limit\": {\n                \"value\": 500,\n                \"currency\": \"USD\"\n              }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 257, "to": 298 } }
        }
      }
    ],
    [
      "8b00692a-2c0d-4501-a2e5-6fe20e0b36b5",
      {
        "pageContent": "}\n            }\n          },\n          {\n            \"date\": \"2020-12-02 17:05:12\",\n            \"type\": \"PURCHASE\",\n            \"amount\": {\n              \"value\": -192,\n              \"currency\": \"USD\"\n            },\n            \"balance\": {\n              \"outstanding_balance\": {\n                \"value\": -192,\n                \"currency\": \"USD\"\n              },\n              \"available_credit\": {\n                \"value\": 308,\n                \"currency\": \"USD\"\n              },\n              \"credit_limit\": {\n                \"value\": 500,\n                \"currency\": \"USD\"\n              }\n            }\n          },\n          {\n            \"date\": \"2020-12-02 17:27:57\",\n            \"type\": \"PURCHASE\",\n            \"amount\": {\n              \"value\": -64,\n              \"currency\": \"USD\"\n            },\n            \"balance\": {\n              \"outstanding_balance\": {\n                \"value\": -256,\n                \"currency\": \"USD\"\n              },\n              \"available_credit\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 298, "to": 335 } }
        }
      }
    ],
    [
      "1fb66104-fe6f-4ea8-a938-d8aea78ca4ca",
      {
        "pageContent": "\"value\": 244,\n                \"currency\": \"USD\"\n              },\n              \"credit_limit\": {\n                \"value\": 500,\n                \"currency\": \"USD\"\n              }\n            }\n          },\n          {\n            \"date\": \"2020-12-02 17:35:47\",\n            \"type\": \"REIMBURSEMENT\",\n            \"amount\": {\n              \"value\": 192,\n              \"currency\": \"USD\"\n            },\n            \"balance\": {\n              \"outstanding_balance\": {\n                \"value\": -64,\n                \"currency\": \"USD\"\n              },\n              \"available_credit\": {\n                \"value\": 436,\n                \"currency\": \"USD\"\n              },\n              \"credit_limit\": {\n                \"value\": 500,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        ]\n      },\n      \"payment_methods\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/company.md",
          "loc": { "lines": { "from": 336, "to": 373 } }
        }
      }
    ],
    [
      "33453637-fef4-4906-9e30-2798c90e40bb",
      {
        "pageContent": "---\ntitle: Company (B2B) queries\nedition: b2b\n---\n\n# Company (B2B) queries\n\nThe [`company`](company.md) query returns full details about the specified company. The [`isCompanyAdminEmailAvailable`](is-company-admin-email-available.md), [`isCompanyEmailAvailable`](is-company-email-available.md), [`isCompanyRoleNameAvailable`](is-company-role-name-available.md), and [`isCompanyUserEmailAvailable`](is-company-user-email-available.md) queries allow you to determine whether company entities already exist.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "8f0218ff-ea51-43e1-8d57-ca67f395611b",
      {
        "pageContent": "---\ntitle: isCompanyAdminEmailAvailable query\nedition: b2b\n---\n\n# isCompanyAdminEmailAvailable query\n\nThe `isCompanyAdminEmailAvailable` query checks whether the specified email can be used to create a company administrator account. If the email matches an existing customer or another company administrator account, the query returns a `false` value. A value of `true` indicates the email address can be used to create a company administrator account.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n`isCompanyAdminEmailAvailable ( email String! ) IsCompanyAdminEmailAvailableOutput`\n\n## Reference\n\nThe [`isCompanyAdminEmailAvailable`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-isCompanyAdminEmailAvailable) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/is-company-admin-email-available.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "71d2fd53-cc07-484e-bb67-c798540f480e",
      {
        "pageContent": "## Example usage\n\nThe following example checks whether the email address `roni_cost@example.com` can be used to create a company administrator account.\n\n**Request:**\n\n```graphql\nquery{\n  isCompanyAdminEmailAvailable(email: \"roni_cost@example.com\"){\n    is_email_available\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"isCompanyAdminEmailAvailable\": {\n      \"is_email_available\": false\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [isCompanyEmailAvailable query](is-company-email-available.md)\n*  [isCompanyUserEmailAvailable query](is-company-user-email-available.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/is-company-admin-email-available.md",
          "loc": { "lines": { "from": 20, "to": 49 } }
        }
      }
    ],
    [
      "147ea3cc-29e1-4523-b377-2d9319ec3ff8",
      {
        "pageContent": "---\ntitle: isCompanyEmailAvailable query\nedition: b2b\n---\n\n# isCompanyEmailAvailable query\n\nThe `isCompanyEmailAvailable` query checks whether the specified email is valid for company registration. The specified email can be the same as an existing customer or company administrator. If the email matches an existing company email, the query returns a `false` value.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n`isCompanyEmailAvailable ( email String! ) IsCompanyEmailAvailableOutput`\n\n## Reference\n\nThe [`isCompanyEmailAvailable`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-isCompanyEmailAvailable) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/is-company-email-available.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "10fd4b43-035e-4519-a5cd-6a3c46a89660",
      {
        "pageContent": "## Example usage\n\nThe following example checks whether the email address `roni_cost@example.com` can be used to register a company.\n\n**Request:**\n\n```graphql\nquery{\n  isCompanyEmailAvailable(email: \"roni_cost@example.com\"){\n    is_email_available\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"isCompanyEmailAvailable\": {\n      \"is_email_available\": true\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [isCompanyAdminEmailAvailable query](is-company-admin-email-available.md)\n*  [isCompanyUserEmailAvailable query](is-company-user-email-available.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/is-company-email-available.md",
          "loc": { "lines": { "from": 20, "to": 49 } }
        }
      }
    ],
    [
      "41a8ecc9-8994-496e-bad5-aa3f10af85cf",
      {
        "pageContent": "---\ntitle: isCompanyRoleNameAvailable query\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nedition: b2b\n---\n\n# isCompanyRoleNameAvailable query\n\nThe `isCompanyRoleNameAvailable` query checks whether a company role name is valid for creating into a company.\n\nThe query returns a `false` value if the specified role name has already found in a company.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\n{\n    isCompanyRoleNameAvailable(\n        name: String!\n    ) {\n        is_role_name_available\n    }\n}\n```\n\n## Reference\n\nThe [`isCompanyRoleNameAvailable`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-isCompanyRoleNameAvailable) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/is-company-role-name-available.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "b4d690e1-e812-4fc7-bc48-d9a99faf1221",
      {
        "pageContent": "## Example usage\n\nThe following example checks whether the company role named \"Company Admin\" can be used to create a new company role.\n\n**Request:**\n\n```graphql\nquery {\n  isCompanyRoleNameAvailable(name: \"Company Admin\") {\n    is_role_name_available\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"isCompanyRoleNameAvailable\": {\n      \"is_role_name_available\": false\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/is-company-role-name-available.md",
          "loc": { "lines": { "from": 32, "to": 56 } }
        }
      }
    ],
    [
      "7599bd91-be4b-4588-9c0d-6da448dff023",
      {
        "pageContent": "---\ntitle: isCompanyUserEmailAvailable query\nedition: b2b\n---\n\n# isCompanyUserEmailAvailable query\n\nThe `isCompanyUserEmailAvailable` query checks whether an email is valid for registering a company user. The query returns a `false` value if the specified email matches the email of an existing customer or a company administrator.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n`isCompanyUserEmailAvailable ( email String! ) IsCompanyUserEmailAvailableOutput`\n\n## Reference\n\nThe [`isCompanyUserEmailAvailable`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-isCompanyUserEmailAvailable) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/is-company-user-email-available.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "68dcbdba-40ad-495e-8905-48f0f317e93a",
      {
        "pageContent": "## Example usage\n\nThe following example checks whether the email address `roni_cost@example.com` can be used to create a company user.\n\n**Request:**\n\n```graphql\nquery{\n  isCompanyUserEmailAvailable(email: \"roni_cost@example.com\"){\n    is_email_available\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"isCompanyUserEmailAvailable\": {\n      \"is_email_available\": false\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [isCompanyEmailAvailable query](is-company-email-available.md)\n*  [isCompanyAdminEmailAvailable query](is-company-admin-email-available.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/queries/is-company-user-email-available.md",
          "loc": { "lines": { "from": 20, "to": 49 } }
        }
      }
    ],
    [
      "c37f1f5c-54c3-4746-acc1-0a6d8a24f828",
      {
        "pageContent": "---\ntitle: Company (B2B) unions\nedition: b2b   \n---\n\n# Company (B2B) unions\n\nThe `CompanyStructureEntity` union provides details about a node in a company structure.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/unions/index.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "c6451b83-1fb6-4854-818c-37df97713b81",
      {
        "pageContent": "---\ntitle: CompanyStructureEntity union\nedition: b2b\n---\n\n# CompanyStructureEntity union\n\nA GraphQL union represents an object that could be one of several data types, but there is no guarantee that the data types contain fields in common. Use an inline fragment to return details about each possible data type.\n\nSee the GraphQL specification for more details about [unions](https://graphql.org/learn/schema/#union-types).\n\nThe `CompanyStructureEntity` union provides details about a node in a company structure.\n\n**Possible types:**\n\n*  `CompanyTeam`\n*  `Customer`\n\n**Fields with this union:**\n\n*  `CompanyStructureItem.entity`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/company/unions/structure-entity.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "c1ac8402-04f8-46d1-afe8-1900a367879a",
      {
        "pageContent": "---\ntitle: Negotiable quote (B2B)\nedition: b2b   \n---\n\n# Negotiable quote (B2B)\n\nCompany users (buyers) and merchants (sellers) use negotiable quotes to manage the negotiation process for an order. Although the negotiation process can be complex, the basic steps are as follows:\n\n* The buyer adds items to the cart and initiates a negotiable quote.\n\n* The seller reviews the request and begins the negotiation process.\n\n* When the buyer and seller agree to terms, the buyer begins the checkout process.\n\nThe [_B2B for Adobe Commerce Guide_](https://experienceleague.adobe.com/docs/commerce-admin/b2b/quotes/quotes.html?lang=en) describes the negotiation process in detail.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe Adobe Commerce GraphQL APIs provide coverage for buyer actions only. You can use [REST endpoints](https://developer.adobe.com/commerce/webapi/rest/b2b/negotiable-quote/) to integrate seller actions.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/index.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "3ed6db8f-5853-42cb-8b99-dd6068659c14",
      {
        "pageContent": "---\ntitle: Negotiable quote (B2B) interfaces\nedition: b2b   \n---\n\n# Negotiable quote (B2B) interfaces\n\nNegotiable quote queries and mutations can access the following interfaces:\n\n* [`NegotiableQuoteAddressInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-NegotiableQuoteAddressInterface). It is implemented by [`NegotiableQuoteShippingAddress`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-NegotiableQuoteShippingAddress) and  [`NegotiableQuoteBillingAddress`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-NegotiableQuoteBillingAddress).\n\n* [`NegotiableQuoteUidNonFatalResultInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-NegotiableQuoteUidNonFatalResultInterface). It is implemented by [`NegotiableQuoteUidOperationSuccess`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-NegotiableQuoteUidOperationSuccess).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/interfaces/index.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "49f64a25-a590-46c8-92e9-3d868bd34329",
      {
        "pageContent": "---\ntitle: closeNegotiableQuotes mutation\nedition: b2b\n---\n\n# closeNegotiableQuotes mutation\n\nThe `closeNegotiableQuotes` mutation closes an active negotiable quote. Once a quote is closed, it cannot be re-opened. Closed negotiable quotes can be viewed by the merchant and company users.\n\nThe [`CloseNegotiableQuoteOperationResult` union](../unions/index.md) is an output object that provides details about the result of a request to close a negotiable quote. To return these details, specify fragments on the `CloseNegotiableQuoteOperationFailure` and `NegotiableQuoteUidOperationSuccess` objects. Specify the `__typename` attribute to distinguish the object types in the response.\n\nThe `CloseNegotiableQuoteError` union type contains one or more of the following data types, all of which implement `ErrorInterface`.\n\n*  `InternalError`\n*  `NegotiableQuoteInvalidStateError`\n*  `NoSuchEntityUidError`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/close.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "32741ed9-84b2-4c42-bfc8-a3d6d7a067e1",
      {
        "pageContent": "This mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/close.md",
          "loc": { "lines": { "from": 18, "to": 18 } }
        }
      }
    ],
    [
      "0e20b9a7-fa6d-47df-8df5-6542238487e6",
      {
        "pageContent": "## Syntax\n\n```graphql\n    closeNegotiableQuotes(\n        input: CloseNegotiableQuotesInput!\n    ): CloseNegotiableQuotesOutput\n```\n\n## Reference\n\nThe [`closeNegotiableQuotes`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-closeNegotiableQuotes) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/close.md",
          "loc": { "lines": { "from": 20, "to": 30 } }
        }
      }
    ],
    [
      "f43689ea-9566-447b-a01f-35c2e32100b0",
      {
        "pageContent": "## Example usage\n\nThe following example contains an invalid `quote_uids` value, causing a FAILURE status.\n\n**Request:**\n\n```graphql\nmutation {\n  closeNegotiableQuotes(\n    input: {\n      quote_uids: [\"xyz\"]\n    }\n  ) {\n    result_status,\n    operation_results {\n      ...on NegotiableQuoteUidOperationSuccess{\n        __typename\n        quote_uid\n      }\n      ...on CloseNegotiableQuoteOperationFailure{\n        __typename\n        quote_uid\n        errors {\n          __typename\n          ...on ErrorInterface{\n            message\n          }\n          ...on NoSuchEntityUidError{\n            uid\n          }\n          ...on NegotiableQuoteInvalidStateError {\n            message\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/close.md",
          "loc": { "lines": { "from": 32, "to": 69 } }
        }
      }
    ],
    [
      "b355aafe-eab2-49d2-8327-60cc4ba62a87",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"closeNegotiableQuotes\": {\n      \"result_status\": \"FAILURE\",\n      \"operation_results\": [\n        {\n          \"__typename\": \"CloseNegotiableQuoteOperationFailure\",\n          \"quote_uid\": \"xyz\",\n          \"errors\": [\n            {\n              \"__typename\": \"NoSuchEntityUidError\",\n              \"message\": \"Could not find a quote with the specified UID.\",\n              \"uid\": \"xyz\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/close.md",
          "loc": { "lines": { "from": 70, "to": 95 } }
        }
      }
    ],
    [
      "4f5330c0-8f5f-4710-a306-b863358a0963",
      {
        "pageContent": "---\ntitle: deleteNegotiableQuotes mutation\nedition: b2b\n---\n\n# deleteNegotiableQuotes mutation\n\nThe `deleteNegotiableQuotes` mutation causes the specified negotiable quotes to be invisible from the Admin or from the storefront. The quotes are still present in the database.\n\nYou can run the `deleteNegotiableQuotes` mutation when negotiable quotes are have the following statuses:\n\n*  SUBMITTED\n*  UPDATED\n*  OPEN\n*  CLOSED\n*  DECLINED\n*  EXPIRED\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\ndeleteNegotiableQuotes(\n    input: DeleteNegotiableQuotesInput!\n): DeleteNegotiableQuotesOutput\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/delete.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "cbf72bda-8721-4169-8a09-d0d61edfacaf",
      {
        "pageContent": "## Reference\n\nThe [`deleteNegotiableQuotes`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteNegotiableQuotes) reference provides detailed information about the types and fields defined in this mutation.\n\nThe [`DeleteNegotiableQuoteOperationResult` union](../unions/index.md) is an output object that provides details about the result of a request to delete a negotiable quote. To return these details, specify fragments on the `DeleteNegotiableQuoteOperationFailure` and `NegotiableQuoteUidOperationSuccess` objects. Specify the `__typename` attribute to distinguish the object types in the response.\n\nThe `DeleteNegotiableQuoteError` union type contains one or more of the following data types, all of which implement `ErrorInterface`.\n\n*  `InternalError`\n*  `NegotiableQuoteInvalidStateError`\n*  `NoSuchEntityUidError`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/delete.md",
          "loc": { "lines": { "from": 29, "to": 39 } }
        }
      }
    ],
    [
      "b204d725-c40f-4bad-937b-dc60654fd26c",
      {
        "pageContent": "## Example usage\n\nThe following example deletes the specified negotiable quote.\n\n**Request:**\n\n```graphql\nmutation {\n  deleteNegotiableQuotes(\n    input: {\n      quote_uids: [\"R1chDMgmh6PXGz2AjXMTBaiE68wTydRH\"]\n    }\n  ) {\n    result_status,\n    operation_results {\n      ...on NegotiableQuoteUidOperationSuccess{\n        __typename\n        quote_uid\n      }\n      ...on DeleteNegotiableQuoteOperationFailure{\n        __typename\n        quote_uid\n        errors {\n          __typename\n          ...on ErrorInterface{\n            message\n          }\n          ...on NoSuchEntityUidError{\n            uid\n            message\n          }\n          ...on NegotiableQuoteInvalidStateError {\n            message\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/delete.md",
          "loc": { "lines": { "from": 41, "to": 79 } }
        }
      }
    ],
    [
      "ed58f43e-d383-43ba-a0eb-203790373dad",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deleteNegotiableQuotes\": {\n      \"result_status\": \"SUCCESS\",\n      \"operation_results\": [\n        {\n          \"__typename\": \"NegotiableQuoteUidOperationSuccess\",\n          \"quote_uid\": \"R1chDMgmh6PXGz2AjXMTBaiE68wTydRH\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/delete.md",
          "loc": { "lines": { "from": 80, "to": 98 } }
        }
      }
    ],
    [
      "8faeafb2-9d40-428a-aabc-231e1f68f040",
      {
        "pageContent": "---\ntitle: Negotiable quote (B2B) mutations\nedition: b2b   \n---\n\n# Negotiable quote (B2B) mutations\n\nThe B2B negotiable quote mutations allow you to perform the following operations:\n\n-  Manage the status of a negotiable quote\n   -  [Request a negotiable quote](./request.md) on behalf of a customer\n   -  [Send a negotiable quote for review](./send-for-review.md)\n   -  [Close negotiable quotes](./close.md)\n   -  [Delete negotiable quotes](./delete.md)\n\n-  Manage the contents of a negotiable quote\n   -  [Update the quantity of items](update-quantities.md)\n   -  [Completely remove items](remove-items.md)\n\n-  Prepare the negotiable quote for processing\n   -  [Set the billing address](set-billing-address.md)\n   -  [Set the shipping address](set-shipping-address.md)\n   -  [Set the shipping method](set-shipping-methods.md)\n   -  [Set the payment method](set-payment-method.md)\n   -  [Place the order](place-order.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "232c3549-1f69-408e-865e-77b703843dc9",
      {
        "pageContent": "---\ntitle: placeNegotiableQuoteOrder mutation\nedition: b2b\n---\n\n# placeNegotiableQuoteOrder mutation\n\nThe `placeNegotiableQuoteOrder` mutation converts a negotiable quote into an order and returns an order ID.\n\nThe negotiable quote must have one of the following statuses:\n\n-  SUBMITTED\n-  DECLINED\n-  EXPIRED\n\nIf the status is DECLINED or EXPIRED, the negotiable quote is processed like a standard cart, without applying any discounts. The negotiable quote is not converted to a standard cart.\n\nPerform the following actions before using the `placeNegotiableQuoteOrder` mutation. It might be necessary to perform additional steps during the process of coming to an agreement during the negotiable quote lifecycle.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/place-order.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "f930443d-df82-4535-9a97-4d80807ae677",
      {
        "pageContent": "-  [Create an empty cart](../../../cart/mutations/create-empty-cart.md)\n-  [Add one or more products](../../../cart/mutations/add-products.md) to the cart\n-  [Request a negotiable quote](request.md)\n-  [Set the billing address](set-billing-address.md)\n-  [Set the shipping address](set-shipping-address.md)\n-  [Set the shipping method](set-shipping-methods.md)\n-  [Set the payment method](set-payment-method.md)\n\nYou cannot manage orders with GraphQL, because orders are part of the backend. You can use REST or SOAP calls to manage orders to their completion.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/place-order.md",
          "loc": { "lines": { "from": 20, "to": 28 } }
        }
      }
    ],
    [
      "9697d187-fb2b-4a1f-8c4f-9cbc4f4dec3a",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  placeNegotiableQuoteOrder(\n    input: PlaceNegotiableQuoteOrderInput\n  ) {\n    PlaceNegotiableQuoteOrderOutput\n  }\n}\n```\n\n## Reference\n\nThe [`placeNegotiableQuoteOrder`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-placeNegotiableQuoteOrder) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\n**Request:**\n\n```graphql\nmutation {\n  placeNegotiableQuoteOrder(\n    input: {\n      quote_uid: \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\"\n    }\n  ) {\n    order {\n      order_number\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"placeNegotiableQuoteOrder\": {\n      \"order\": {\n        \"order_number\": \"000000006\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/place-order.md",
          "loc": { "lines": { "from": 30, "to": 76 } }
        }
      }
    ],
    [
      "910d23ea-b963-43fa-a86d-8fba9520ea0e",
      {
        "pageContent": "---\ntitle: removeNegotiableQuoteItems mutation\nedition: b2b\n---\n\n# removeNegotiableQuoteItems mutation\n\nThe `removeNegotiableQuoteItems` mutation removes the specified products from a negotiable quote.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nRemoving the last product from a negotiable quote causes the quote to be in a terminal state. You cannot add products to the quote, nor can you modify the quantity of any items. You can only [close](close.md) or [delete](delete.md) the quote.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\n    removeNegotiableQuoteItems(\n        input: RemoveNegotiableQuoteItemsInput!\n    ): RemoveNegotiableQuoteItemsOutput\n```\n\n## Reference\n\nThe [`removeNegotiableQuoteItems`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeNegotiableQuoteItems) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/remove-items.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "d963d21c-e36f-4a15-90a8-cb40683fb40e",
      {
        "pageContent": "## Example usage\n\nThe following example removes a product from a negotiable quote.\n\n**Request:**\n\n```graphql\nmutation {\n  removeNegotiableQuoteItems(\n    input: {\n      quote_uid: \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\"\n      quote_item_uids: [\"MTc=\"]\n    }\n  ) {\n    quote {\n      uid\n      name\n      updated_at\n      items {\n        uid\n        product {\n          uid\n          sku\n          name\n        }\n        quantity\n        prices {\n          price {\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/remove-items.md",
          "loc": { "lines": { "from": 28, "to": 62 } }
        }
      }
    ],
    [
      "afec8962-d440-4bb1-b92a-c2b4fc85fee1",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeNegotiableQuoteItems\": {\n      \"quote\": {\n        \"uid\": \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\",\n        \"name\": \"April 22 request\",\n        \"updated_at\": \"2021-04-23 18:21:44\",\n        \"items\": [\n          {\n            \"uid\": \"MTU=\",\n            \"product\": {\n              \"uid\": \"MjA=\",\n              \"sku\": \"24-UG01\",\n              \"name\": \"Quest Lumaflex&trade; Band\"\n            },\n            \"quantity\": 7,\n            \"prices\": {\n              \"price\": {\n                \"value\": 19\n              }\n            }\n          },\n          {\n            \"uid\": \"MTY=\",\n            \"product\": {\n              \"uid\": \"MTg=\",\n              \"sku\": \"24-UG02\",\n              \"name\": \"Pursuit Lumaflex&trade; Tone Band\"\n            },\n            \"quantity\": 8,\n            \"prices\": {\n              \"price\": {\n                \"value\": 16\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/remove-items.md",
          "loc": { "lines": { "from": 63, "to": 109 } }
        }
      }
    ],
    [
      "c2140f4e-1621-4c65-b0a0-9211817ed43c",
      {
        "pageContent": "---\ntitle: requestNegotiableQuote mutation\nedition: b2b\n---\n\n# requestNegotiableQuote mutation\n\nThe `requestNegotiableQuote` mutation initiates a negotiable quote on behalf of a company user. The company user must add all products to the cart before requesting a negotiable quote. Once the request is submitted, company users cannot add new products to the quote.\n\nIf the request is successful, the application assigns the cart ID to the negotiable quote. Therefore, the same cart ID is used throughout the lifecycle of the negotiable quote. The application generates a new cart ID if the company user starts a new order while a negotiable quote is in process. The cart ID must be active. You cannot create a negotiable quote if the quote is cancelled or converted to an order.\n\nIf the request is successful, the negotiable quote has the SUBMITTED status.\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "1a9e6c9a-d4b5-417c-b630-f5026731880e",
      {
        "pageContent": "If the negotiable quote requires a shipping address (for negotiation or tax calculations), you can use the [`setNegotiableQuoteShippingAddresses` mutation](set-shipping-address.md) to add the address to the standard quote during the negotiable quote process.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 16, "to": 18 } }
        }
      }
    ],
    [
      "41ce977f-73d2-4060-b37b-2933eb3bfa72",
      {
        "pageContent": "## Syntax\n\n```graphql\nrequestNegotiableQuote(\n    input: RequestNegotiableQuoteInput!\n): RequestNegotiableQuoteOutput\n```\n\n## Reference\n\nThe [`requestNegotiableQuote`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-requestNegotiableQuote) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 20, "to": 30 } }
        }
      }
    ],
    [
      "29b64381-78cd-48f4-963e-50d626f5b959",
      {
        "pageContent": "## Example usage\n\nThe following example requests a negotiable quote. The cart contains three items.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 32, "to": 36 } }
        }
      }
    ],
    [
      "6ed964d4-b49d-4efa-a6c3-3d4f5ec56498",
      {
        "pageContent": "```graphql\nmutation {\n  requestNegotiableQuote (\n    input: {\n      cart_id: \"kw6mLEvl6vjjPNsjtJqwpamv5o0iT1bc\"\n      quote_name: \"Discount request\"\n      comment: {\n        comment: \"Requesting a 10% discount for being a repeat customer.\"}\n    }\n  ){\n    quote {\n      uid\n      created_at\n      status\n      buyer {\n        firstname\n        lastname\n      }\n      comments {\n        uid\n        created_at\n        author {\n          firstname\n          lastname\n        }\n        creator_type\n        text\n      }\n      items {\n        product {\n          uid\n          sku\n          name\n          price_range {\n            maximum_price {\n              regular_price {\n                value\n              }\n            }\n          }\n        }\n        quantity\n      }\n      prices {\n        subtotal_excluding_tax {\n          value\n        }\n        subtotal_including_tax {\n          value\n        }\n        subtotal_with_discount_excluding_tax {\n          value\n        }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 38, "to": 90 } }
        }
      }
    ],
    [
      "f9c19ac5-763d-4ec2-bb32-39813d8fd8ea",
      {
        "pageContent": "}\n        grand_total {\n          value\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 90, "to": 97 } }
        }
      }
    ],
    [
      "4b3928c6-bff6-476e-a031-6a2665d31834",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 98, "to": 100 } }
        }
      }
    ],
    [
      "345b8fab-2715-4474-bb3c-d26b31914cde",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"requestNegotiableQuote\": {\n      \"quote\": {\n        \"uid\": \"kw6mLEvl6vjjPNsjtJqwpamv5o0iT1bc\",\n        \"created_at\": \"2021-04-20 19:01:38\",\n        \"status\": \"SUBMITTED\",\n        \"buyer\": {\n          \"firstname\": \"Taina\",\n          \"lastname\": \"Garofalo\"\n        },\n        \"comments\": [\n          {\n            \"uid\": \"MQ==\",\n            \"created_at\": \"2021-04-20 19:57:49\",\n            \"author\": {\n              \"firstname\": \"Taina\",\n              \"lastname\": \"Garofalo\"\n            },\n            \"creator_type\": \"BUYER\",\n            \"text\": \"Requesting a 10% discount for being a repeat customer.\"\n          }\n        ],\n        \"items\": [\n          {\n            \"product\": {\n              \"uid\": \"MTY=\",\n              \"sku\": \"24-UG07\",\n              \"name\": \"Dual Handle Cardio Ball\",\n              \"price_range\": {\n                \"maximum_price\": {\n                  \"regular_price\": {\n                    \"value\": 12\n                  }\n                }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 102, "to": 137 } }
        }
      }
    ],
    [
      "2f4f90da-0fd2-4da3-a823-7b71158d6f41",
      {
        "pageContent": "}\n              }\n            },\n            \"quantity\": 1\n          },\n          {\n            \"product\": {\n              \"uid\": \"NTI=\",\n              \"sku\": \"24-WG080\",\n              \"name\": \"Sprite Yoga Companion Kit\",\n              \"price_range\": {\n                \"maximum_price\": {\n                  \"regular_price\": {\n                    \"value\": 77\n                  }\n                }\n              }\n            },\n            \"quantity\": 1\n          },\n          {\n            \"product\": {\n              \"uid\": \"MTc=\",\n              \"sku\": \"24-UG04\",\n              \"name\": \"Zing Jump Rope\",\n              \"price_range\": {\n                \"maximum_price\": {\n                  \"regular_price\": {\n                    \"value\": 12\n                  }\n                }\n              }\n            },\n            \"quantity\": 1\n          }\n        ],\n        \"prices\": {\n          \"subtotal_excluding_tax\": {\n            \"value\": 101\n          },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 137, "to": 176 } }
        }
      }
    ],
    [
      "464777b9-b952-4d9a-bf0d-028ca907837c",
      {
        "pageContent": "},\n          \"subtotal_including_tax\": {\n            \"value\": 101\n          },\n          \"subtotal_with_discount_excluding_tax\": {\n            \"value\": 101\n          },\n          \"grand_total\": {\n            \"value\": 101\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/request.md",
          "loc": { "lines": { "from": 176, "to": 191 } }
        }
      }
    ],
    [
      "6df6f53e-74f1-4f8d-a5c2-f0010a763fe4",
      {
        "pageContent": "---\ntitle: sendNegotiableQuoteForReview mutation\nedition: b2b\n---\n\n# sendNegotiableQuoteForReview mutation\n\nThe `sendNegotiableQuoteForReview` mutation sends the negotiable quote to the seller for review. If the mutation is successful, the buyer cannot modify the quote until the merchant accepts the request.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nsendNegotiableQuoteForReview(\n    input: SendNegotiableQuoteForReviewInput!\n) : SendNegotiableQuoteForReviewOutput\n```\n\n## Reference\n\nThe [`sendNegotiableQuoteForReview`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-sendNegotiableQuoteForReview) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/send-for-review.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "a3e66ae3-7fd9-4a63-afcb-7687a60cd530",
      {
        "pageContent": "## Example usage\n\nThe following example adds a comment to the specified negotiable quote.\n\n**Request:**\n\n```graphql\nmutation{\n  sendNegotiableQuoteForReview(input: {\n    quote_uid: \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\"\n    comment: { comment: \"Thanks!\"}\n  }){\n    quote {\n      uid\n      buyer {\n        firstname\n        lastname\n      }\n      name\n      updated_at\n      status\n      comments {\n        uid\n        created_at\n        creator_type\n        author {\n          firstname\n          lastname\n        }\n        text\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/send-for-review.md",
          "loc": { "lines": { "from": 24, "to": 57 } }
        }
      }
    ],
    [
      "afa4c036-ae50-491f-9dec-5b550843bd52",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/send-for-review.md",
          "loc": { "lines": { "from": 58, "to": 60 } }
        }
      }
    ],
    [
      "12bbd976-3946-47ec-a34b-b3dd96803f2d",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"sendNegotiableQuoteForReview\": {\n      \"quote\": {\n        \"uid\": \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\",\n        \"buyer\": {\n          \"firstname\": \"Taina\",\n          \"lastname\": \"Garofalo\"\n        },\n        \"name\": \"April 22 request\",\n        \"updated_at\": \"2021-04-23 18:21:44\",\n        \"status\": \"SUBMITTED\",\n        \"comments\": [\n          {\n            \"uid\": \"OA==\",\n            \"created_at\": \"2021-04-22 17:04:47\",\n            \"creator_type\": \"BUYER\",\n            \"author\": {\n              \"firstname\": \"Taina\",\n              \"lastname\": \"Garofalo\"\n            },\n            \"text\": \"Requesting a 10% discount and a reduction in shipping costs.\"\n          },\n          {\n            \"uid\": \"OQ==\",\n            \"created_at\": \"2021-04-28 02:47:41\",\n            \"creator_type\": \"BUYER\",\n            \"author\": {\n              \"firstname\": \"Taina\",\n              \"lastname\": \"Garofalo\"\n            },\n            \"text\": \"Thanks!\"\n          }\n        ]\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/send-for-review.md",
          "loc": { "lines": { "from": 62, "to": 100 } }
        }
      }
    ],
    [
      "00a393d9-dff4-4d30-8273-d89414785305",
      {
        "pageContent": "}\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/send-for-review.md",
          "loc": { "lines": { "from": 97, "to": 101 } }
        }
      }
    ],
    [
      "2f13196e-887e-4ce6-a417-d06d9653e3f5",
      {
        "pageContent": "---\ntitle: setNegotiableQuoteBillingAddress mutation\nedition: b2b\n---\n\n# setNegotiableQuoteBillingAddress mutation\n\nThe `setNegotiableQuoteBillingAddress` mutation assigns the billing address for the specified negotiable quote. You can assign an address from the company user's address book, or define a new one. The negotiable quote must be in the UPDATED state to successfully set the billing address.\n\nTo return a list of valid billing addresses, construct a [`company` query](../../company/queries/company.md) that includes the `user` input attribute.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\n{\n    setNegotiableQuoteBillingAddress(\n        input: SetNegotiableQuoteBillingAddressInput!\n    ): SetNegotiableQuoteBillingAddressOutput\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-billing-address.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "ff7e302f-242a-469f-b9a2-f18f5a66ea91",
      {
        "pageContent": "## Reference\n\nThe [`setNegotiableQuoteBillingAddress`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setNegotiableQuoteBillingAddress) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-billing-address.md",
          "loc": { "lines": { "from": 24, "to": 26 } }
        }
      }
    ],
    [
      "eccce9a1-c8eb-459d-a36f-10e0dc296895",
      {
        "pageContent": "## Example usage\n\nThe following example adds a new billing address to a negotiable quote.\n\n**Request:**\n\n```graphql\nmutation {\n  setNegotiableQuoteBillingAddress(input: {\n    quote_uid: \"prFSdZyHOpMXeiJ32XlBzd8e1Mte9loS\",\n    billing_address: {\n      address: {\n        company: \"TestCo\"\n        firstname: \"Taina\"\n        lastname: \"Garofalo\"\n        street: \"100 Big Oak Tree Dr\"\n        city: \"San Francisco\"\n        postcode: \"9999\"\n        region: \"CA\"\n        region_id: 12\n        country_code: \"US\"\n        telephone: \"555 999-9999\"\n      }\n    }\n  }) {\n    quote {\n      billing_address {\n        company\n        firstname\n        lastname\n        street\n        city\n        region {\n          label\n          code\n        }\n        country {\n          label\n          code\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-billing-address.md",
          "loc": { "lines": { "from": 28, "to": 71 } }
        }
      }
    ],
    [
      "268bf36d-f53f-4e49-87c3-11ffc01968a0",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setNegotiableQuoteBillingAddress\": {\n      \"quote\": {\n        \"billing_address\": {\n          \"company\": \"TestCo\",\n          \"firstname\": \"Taina\",\n          \"lastname\": \"Garofalo\",\n          \"street\": [\n            \"100 Big Oak Tree Dr\"\n          ],\n          \"city\": \"San Francisco\",\n          \"region\": {\n            \"label\": \"California\",\n            \"code\": \"CA\"\n          },\n          \"country\": {\n            \"label\": \"US\",\n            \"code\": \"US\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-billing-address.md",
          "loc": { "lines": { "from": 73, "to": 103 } }
        }
      }
    ],
    [
      "539857e2-75ab-400b-a854-505500a11da9",
      {
        "pageContent": "---\ntitle: setNegotiableQuotePaymentMethod mutation\nedition: b2b\n---\n\n# setNegotiableQuotePaymentMethod mutation\n\nThe `setNegotiableQuotePaymentMethod` mutation defines which payment method to apply to the cart. The negotiable quote must be in the UPDATED state to successfully apply the payment method.\n\nSupported online payment methods include:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "17b7b49d-6759-497f-a1ba-285e0c92dabe",
      {
        "pageContent": "-  [Braintree](../../../../payment-methods/braintree.md)\n-  [Braintree Vault](../../../../payment-methods/braintree-vault.md)\n-  [PayPal Express Checkout](../../../../payment-methods/paypal-express-checkout.md)\n-  [PayPal Payflow Link](../../../../payment-methods/payflow-link.md)\n-  [PayPal Payflow Pro](../../../../payment-methods/payflow-pro.md)\n-  [PayPal Payflow Pro Vault](../../../../payment-methods/payflow-pro-vault.md)\n-  [PayPal Payments Advanced](../../../../payment-methods/payments-advanced.md)\n-  [PayPal Website Payments Pro Hosted Solution](../../../../payment-methods/hosted-pro.md)\n-  [Express Checkout for other PayPal solutions](../../../../payment-methods/payflow-express.md)\n\nThe following offline payment methods are also supported:\n\nTitle | Code\n--- | ---\nBank Transfer Payment | `banktransfer`\nCash on Delivery | `cashondelivery`\nCheck / Money order | `checkmo`\nNo Payment Information Required | `free`\nPurchase Order | `purchaseorder`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 12, "to": 30 } }
        }
      }
    ],
    [
      "003e7719-9fb8-4d14-a9fc-68ff4e19ffae",
      {
        "pageContent": "This mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 32, "to": 32 } }
        }
      }
    ],
    [
      "7551b481-1360-426a-9747-c9c7ab5285b5",
      {
        "pageContent": "## Syntax\n\n```graphql\n{\n    setNegotiableQuotePaymentMethod(\n        input: SetNegotiableQuotePaymentMethodInput!\n    ): SetNegotiableQuotePaymentMethodOutput\n}\n```\n\n## Reference\n\nThe [`setNegotiableQuotePaymentMethod`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setNegotiableQuotePaymentMethod) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 34, "to": 46 } }
        }
      }
    ],
    [
      "5f2aacbd-2aab-4487-b46d-622278c665dc",
      {
        "pageContent": "## Example usage\n\nThe following example sets the payment method .\n\n**Request:**\n\n```graphql\nmutation {\n  setNegotiableQuotePaymentMethod(\n    input: {\n      quote_uid: \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\"\n      payment_method: { code: \"checkmo\" }\n    }\n  ) {\n    quote {\n      uid\n      name\n      status\n      available_payment_methods {\n        code\n        title\n      }\n      selected_payment_method {\n        code\n        title\n        purchase_order_number\n      }\n      items {\n        product {\n          sku\n          name\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 48, "to": 83 } }
        }
      }
    ],
    [
      "6e7f86dc-c0d1-4e70-8510-9378e882a96d",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setNegotiableQuotePaymentMethod\": {\n      \"quote\": {\n        \"uid\": \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\",\n        \"name\": \"April 22 request\",\n        \"status\": \"UPDATED\",\n        \"available_payment_methods\": [\n          {\n            \"code\": \"checkmo\",\n            \"title\": \"Check / Money order\"\n          }\n        ],\n        \"selected_payment_method\": {\n          \"code\": \"checkmo\",\n          \"title\": \"Check / Money order\",\n          \"purchase_order_number\": null\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 84, "to": 111 } }
        }
      }
    ],
    [
      "aa233d4e-d821-4129-955c-05c0d8548fd8",
      {
        "pageContent": "---\ntitle: setNegotiableQuoteShippingAddress mutation\nedition: b2b\n---\n\n# setNegotiableQuoteShippingAddress mutation\n\nThe `setNegotiableQuoteShippingAddress` mutation assigns the shipping address for the specified negotiable quote. You can assign an address from the company user's address book, or define a new one. The negotiable quote must be in the UPDATED state to successfully set a shipping address.\n\nTo return a list of valid shipping addresses, construct a [`company` query](../../company/queries/company.md) that includes the `user` input attribute.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\n{\n    setNegotiableQuoteShippingAddress(\n        input: SetNegotiableQuoteShippingAddressInput!\n    ): SetNegotiableQuoteShippingAddressOutput\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "81fae6a6-79a8-4118-8e1e-baa436d8d9e4",
      {
        "pageContent": "## Reference\n\nThe [`setNegotiableQuoteShippingAddress`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setNegotiableQuoteShippingAddress) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 24, "to": 26 } }
        }
      }
    ],
    [
      "1311ca63-c9bf-4f75-9891-3b498d6c7b4e",
      {
        "pageContent": "## Example usage\n\nThe following example adds a predefined shipping address to a negotiable quote.\n\n**Request:**\n\n```graphql\nmutation {\n  setNegotiableQuoteShippingAddress(input: {\n    quote_uid: \"prFSdZyHOpMXeiJ32XlBzd8e1Mte9loS\"\n    shipping_addresses: {\n      customer_address_uid: \"MQ==\"\n    }\n  }) {\n    quote {\n      shipping_addresses {\n        company\n        firstname\n        lastname\n        street\n        city\n        region {\n          label\n          code\n        }\n        country {\n          label\n          code\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 28, "to": 60 } }
        }
      }
    ],
    [
      "c5e6c91a-260d-4fe7-a9f6-834309ee4cca",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setNegotiableQuoteShippingAddress\": {\n      \"quote\": {\n        \"shipping_addresses\": [\n          {\n            \"company\": \"TestCo\",\n            \"firstname\": \"Taina\",\n            \"lastname\": \"Garofalo\",\n            \"street\": [\n              \"100 Big Oak Tree Dr\"\n            ],\n            \"city\": \"San Francisco\",\n            \"region\": {\n              \"label\": \"California\",\n              \"code\": \"CA\"\n            },\n            \"country\": {\n              \"label\": \"US\",\n              \"code\": \"US\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 62, "to": 94 } }
        }
      }
    ],
    [
      "5fee7e89-cc62-4be6-b37e-d191a22fcaf0",
      {
        "pageContent": "---\ntitle: setNegotiableQuoteShippingMethods mutation\nedition: b2b\n---\n\n# setNegotiableQuoteShippingMethods mutation\n\nThe `setNegotiableQuoteShippingMethods` mutation sets one or more delivery methods on a negotiable quote. By default, the following delivery methods are supported:\n\nLabel | Carrier code | Method code\n--- | --- | ---\nDHL | dhl | Varies\nFederal Express | fedex | Varies\nFlat Rate | flatrate | flatrate\nFree Shipping | freeshipping | freeshipping\nBest Way | tablerate | bestway\nUnited Parcel Service | ups | Varies\nUnited States Postal Service | usps | Varies\n\nThe negotiable quote must be in the UPDATED state to successfully set a shipping address.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nsetNegotiableQuoteShippingMethods(\n    input: SetNegotiableQuoteShippingMethodsInput!\n): SetNegotiableQuoteShippingMethodsOutput\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-shipping-methods.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "e884034f-f912-4bfd-831b-7143f5ad2ead",
      {
        "pageContent": "## Reference\n\nThe [`setNegotiableQuoteShippingMethods`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setNegotiableQuoteShippingMethods) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-shipping-methods.md",
          "loc": { "lines": { "from": 32, "to": 34 } }
        }
      }
    ],
    [
      "c9268649-6c44-42ee-8f77-4ba1c2bf6ceb",
      {
        "pageContent": "## Example usage\n\nThe following example sets the shipping method for a negotiable quote.\n\n**Request:**\n\n```graphql\n\nmutation {\n  setNegotiableQuoteShippingMethods(\n    input: {\n      quote_uid: \"z13H2xRCqEiyVoPJmSmekvhOo4GdsVSp\",\n      shipping_methods: [\n        {\n          carrier_code: \"tablerate\"\n          method_code: \"bestway\"\n        }\n      ]\n    }\n  ) {\n    quote {\n      uid\n      shipping_addresses {\n        selected_shipping_method {\n          carrier_code\n          carrier_title\n          method_code\n          method_title\n          amount {\n            value\n            currency\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-shipping-methods.md",
          "loc": { "lines": { "from": 36, "to": 72 } }
        }
      }
    ],
    [
      "5d7c423d-573f-4e35-84c1-71e1ada8d60c",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setNegotiableQuoteShippingMethods\": {\n      \"quote\": {\n        \"uid\": \"prFSdZyHOpMXeiJ32XlBzd8e1Mte9loS\",\n        \"shipping_addresses\": [\n          {\n            \"selected_shipping_method\": {\n              \"carrier_code\": \"tablerate\",\n              \"carrier_title\": \"Best Way\",\n              \"method_code\": \"bestway\",\n              \"method_title\": \"Table Rate\",\n              \"amount\": {\n                \"value\": 29.95,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/set-shipping-methods.md",
          "loc": { "lines": { "from": 74, "to": 102 } }
        }
      }
    ],
    [
      "6c309aa5-490c-4bb8-a275-ed1f449e8cde",
      {
        "pageContent": "---\ntitle: updateNegotiableQuoteQuantities mutation\nedition: b2b\n---\n\n# updateNegotiableQuoteQuantities mutation\n\nThe `updateNegotiableQuoteQuantities` mutation changes the quantity of one or more products in an active negotiable quote.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the `removeNegotiableQuoteItems` mutation to completely remove a product from a negotiable quote.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nupdateNegotiableQuoteQuantities(\n    input: UpdateNegotiableQuoteQuantitiesInput!\n): UpdateNegotiableQuoteItemsQuantityOutput\n```\n\n## Reference\n\nThe [`updateNegotiableQuoteQuantities`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateNegotiableQuoteQuantities) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/update-quantities.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "e2e479b3-4554-4ecb-8b8a-cba5b402b6ee",
      {
        "pageContent": "## Example usage\n\nThe following example changes the quantity of two products in a negotiable quote.\n\n**Request:**\n\n```graphql\nmutation {\n  updateNegotiableQuoteQuantities(\n    input: {\n      quote_uid: \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\"\n      items: [\n        { quote_item_uid: \"MTU=\", quantity: 7 }\n        { quote_item_uid: \"MTY=\", quantity: 8 }\n      ]\n    }\n  ) {\n    quote {\n      uid\n      name\n      updated_at\n      items {\n        uid\n        product {\n          uid\n          sku\n          name\n        }\n        quantity\n        prices {\n          price {\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/update-quantities.md",
          "loc": { "lines": { "from": 28, "to": 65 } }
        }
      }
    ],
    [
      "0855ca36-1863-4b63-a5ef-79c465be9aee",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/update-quantities.md",
          "loc": { "lines": { "from": 66, "to": 68 } }
        }
      }
    ],
    [
      "e13c7871-6c7d-40df-80b3-f6f948f53f21",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"updateNegotiableQuoteQuantities\": {\n      \"quote\": {\n        \"uid\": \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\",\n        \"name\": \"April 22 request\",\n        \"updated_at\": \"2021-04-23 14:43:42\",\n        \"items\": [\n          {\n            \"uid\": \"MTU=\",\n            \"product\": {\n              \"uid\": \"MjA=\",\n              \"sku\": \"24-UG01\",\n              \"name\": \"Quest Lumaflex&trade; Band\"\n            },\n            \"quantity\": 7,\n            \"prices\": {\n              \"price\": {\n                \"value\": 19\n              }\n            }\n          },\n          {\n            \"uid\": \"MTY=\",\n            \"product\": {\n              \"uid\": \"MTg=\",\n              \"sku\": \"24-UG02\",\n              \"name\": \"Pursuit Lumaflex&trade; Tone Band\"\n            },\n            \"quantity\": 8,\n            \"prices\": {\n              \"price\": {\n                \"value\": 16\n              }\n            }\n          },\n          {\n            \"uid\": \"MTc=\",\n            \"product\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/update-quantities.md",
          "loc": { "lines": { "from": 70, "to": 109 } }
        }
      }
    ],
    [
      "5c0bda74-136b-49f3-a587-54a066fcbb3d",
      {
        "pageContent": "\"uid\": \"MTc=\",\n              \"sku\": \"24-UG04\",\n              \"name\": \"Zing Jump Rope\"\n            },\n            \"quantity\": 10,\n            \"prices\": {\n              \"price\": {\n                \"value\": 12\n              }\n            }\n          }\n        ]\n      }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/mutations/update-quantities.md",
          "loc": { "lines": { "from": 110, "to": 125 } }
        }
      }
    ],
    [
      "cb350e4e-fc5c-4514-9e86-bf6a5e1beeb8",
      {
        "pageContent": "---\ntitle: Negotiable quote (B2B) queries\nedition: b2b   \n---\n\n# Negotiable quote (B2B) queries\n\nB2B for Adobe Commerce provides two negotiable quote queries. [`negotiableQuote`](./quote.md) returns details about a single quote. [`negotiableQuotes`](./quotes.md) returns multiple quotes, filtered by name or ID.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "4a5eb3a0-a6d3-40df-bb21-ab7996ee667b",
      {
        "pageContent": "---\ntitle: negotiableQuote query\nedition: b2b   \n---\n\n# negotiableQuote query\n\nThe `negotiableQuote` query retrieves details about the specified negotiable quote. Use the [`negotiableQuotes` query](quotes.md) to return a list of valid `uid` values.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nnegotiableQuote (uid ID!): NegotiableQuote\n```\n\n## Reference\n\nThe [`negotiableQuote`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-negotiableQuote) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "e118c13f-eea8-4ed0-b66c-5f066fe30fa7",
      {
        "pageContent": "## Example usage\n\nThe following example returns information about the negotiable quote with the UID of `kw6mLEvl6vjjPNsjtJqwpamv5o0iT1bc`. The buyer and seller agreed to a five percent discount on the order.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 22, "to": 26 } }
        }
      }
    ],
    [
      "43e8d615-96fe-49d7-9b48-a835bc9a776e",
      {
        "pageContent": "```graphql\nquery{\n  negotiableQuote(uid: \"kw6mLEvl6vjjPNsjtJqwpamv5o0iT1bc\"){\n    uid\n    status\n    total_quantity\n    email\n    items {\n      product {\n        name\n        sku\n        uid\n        price_range {\n          maximum_price {\n            regular_price {\n              value\n            }\n          }\n        }\n      }\n      quantity\n    }\n    comments {\n      uid\n      created_at\n      author {\n        firstname\n        lastname\n      }\n      text\n    }\n    history {\n      uid\n      created_at\n      author {\n        firstname\n        lastname\n      }\n      change_type\n      changes {\n        comment_added {\n          comment\n        }\n        statuses {\n          changes {\n            new_status\n            old_status\n          }\n        }\n        expiration {\n          new_expiration\n          old_expiration\n          }\n        }\n        total {\n          new_price {\n            value\n          }\n          old_price {\n            value\n          }\n        }\n      }\n    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 28, "to": 91 } }
        }
      }
    ],
    [
      "6f686e85-dd06-4eb6-826f-06860d4f4681",
      {
        "pageContent": "}\n    }\n    uid\n    updated_at\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 90, "to": 95 } }
        }
      }
    ],
    [
      "3f912cb8-2d37-43ec-862c-77a880f1e181",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 96, "to": 98 } }
        }
      }
    ],
    [
      "0cee748c-1fc7-43e5-96e1-2c2bcaa9a59b",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"negotiableQuote\": {\n      \"uid\": \"kw6mLEvl6vjjPNsjtJqwpamv5o0iT1bc\",\n      \"status\": \"ORDERED\",\n      \"total_quantity\": 3,\n      \"email\": \"tgarofalo@example.com\",\n      \"items\": [\n        {\n          \"product\": {\n            \"name\": \"Dual Handle Cardio Ball\",\n            \"sku\": \"24-UG07\",\n            \"price_range\": {\n              \"maximum_price\": {\n                \"regular_price\": {\n                  \"value\": 12\n                }\n              }\n            }\n          },\n          \"quantity\": 1\n        },\n        {\n          \"product\": {\n            \"name\": \"Sprite Yoga Companion Kit\",\n            \"sku\": \"24-WG080\",\n            \"price_range\": {\n              \"maximum_price\": {\n                \"regular_price\": {\n                  \"value\": 77\n                }\n              }\n            }\n          },\n          \"quantity\": 1\n        },\n        {\n          \"product\": {\n            \"name\": \"Zing Jump Rope\",\n            \"sku\": \"24-UG04\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 100, "to": 140 } }
        }
      }
    ],
    [
      "138e34cc-73ae-4986-9eb9-092a827e016b",
      {
        "pageContent": "\"price_range\": {\n              \"maximum_price\": {\n                \"regular_price\": {\n                  \"value\": 12\n                }\n              }\n            }\n          },\n          \"quantity\": 1\n        }\n      ],\n      \"comments\": [\n        {\n          \"uid\": \"MQ==\",\n          \"created_at\": \"2021-04-20 19:57:49\",\n          \"author\": {\n            \"firstname\": \"Taina\",\n            \"lastname\": \"Garofalo\"\n          },\n          \"text\": \"Requesting a 10% discount for being a repeat customer.\"\n        },\n        {\n          \"uid\": \"Mg==\",\n          \"created_at\": \"2021-04-21 16:06:51\",\n          \"author\": {\n            \"firstname\": \"John Paul\",\n            \"lastname\": \"Pope\"\n          },\n          \"text\": \"Hello Taina! Thanks for registering with Luma as a partner company.\\r\\n\\r\\nUnfortunately, we cannot grant your request, because the 10% discount is reserved for our frequent customers, and this is your first order. We can offer a 5% discount on this order.\"\n        },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 141, "to": 170 } }
        }
      }
    ],
    [
      "62359592-5903-46b0-a7e3-6be184d70fdf",
      {
        "pageContent": "},\n        {\n          \"uid\": \"Mw==\",\n          \"created_at\": \"2021-04-21 16:12:48\",\n          \"author\": {\n            \"firstname\": \"Taina\",\n            \"lastname\": \"Garofalo\"\n          },\n          \"text\": \"I understand. I&#039;ll accept your offer.\"\n        },\n        {\n          \"uid\": \"NA==\",\n          \"created_at\": \"2021-04-21 17:03:36\",\n          \"author\": {\n            \"firstname\": \"John Paul\",\n            \"lastname\": \"Pope\"\n          },\n          \"text\": \"Great! You should see a 5% discount in your cart. Shipping fees and taxes might apply.\"\n        },\n        {\n          \"uid\": \"NQ==\",\n          \"created_at\": \"2021-04-21 17:54:34\",\n          \"author\": {\n            \"firstname\": \"Taina\",\n            \"lastname\": \"Garofalo\"\n          },\n          \"text\": \"Adding a shipping address\"\n        }\n      ],\n      \"history\": [\n        {\n          \"uid\": \"MQ==\",\n          \"created_at\": \"2021-04-20 19:57:49\",\n          \"author\": {\n            \"firstname\": \"Taina\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 170, "to": 204 } }
        }
      }
    ],
    [
      "48cf26dd-10af-4fb8-9cb6-46103310ed4e",
      {
        "pageContent": "\"lastname\": \"Garofalo\"\n          },\n          \"change_type\": \"CREATED\",\n          \"changes\": {\n            \"comment_added\": {\n              \"comment\": \"Requesting a 10% discount for being a repeat customer.\"\n            },\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"SUBMITTED\",\n                  \"old_status\": null\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }\n          }\n        },\n        {\n          \"uid\": \"Mg==\",\n          \"created_at\": \"2021-04-21 15:55:09\",\n          \"author\": {\n            \"firstname\": \"admin\",\n            \"lastname\": \"admin\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": null,\n            \"statuses\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 205, "to": 240 } }
        }
      }
    ],
    [
      "1937c7d4-7955-4575-81f8-c9642aa5a4b6",
      {
        "pageContent": "\"changes\": [\n                {\n                  \"new_status\": \"PENDING\",\n                  \"old_status\": \"SUBMITTED\"\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }\n          }\n        },\n        {\n          \"uid\": \"Mw==\",\n          \"created_at\": \"2021-04-21 16:06:51\",\n          \"author\": {\n            \"firstname\": \"admin\",\n            \"lastname\": \"admin\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": {\n              \"comment\": \"Hello Taina! Thanks for registering with Luma as a partner company.\\r\\n\\r\\nUnfortunately, we cannot grant your request, because the 10% discount is reserved for our frequent customers, and this is your first order. We can offer a 5% discount on this order.\"\n            },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 241, "to": 269 } }
        }
      }
    ],
    [
      "c607e262-00e7-4234-964c-997491a22466",
      {
        "pageContent": "},\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"UPDATED\",\n                  \"old_status\": \"PENDING\"\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }\n          }\n        },\n        {\n          \"uid\": \"NA==\",\n          \"created_at\": \"2021-04-21 16:12:48\",\n          \"author\": {\n            \"firstname\": \"Taina\",\n            \"lastname\": \"Garofalo\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": {\n              \"comment\": \"I understand. I&#039;ll accept your offer.\"\n            },\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"SUBMITTED\",\n                  \"old_status\": \"UPDATED\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 269, "to": 304 } }
        }
      }
    ],
    [
      "f5603c1a-926e-4dfd-b9ae-13af1e426bf6",
      {
        "pageContent": "}\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }\n          }\n        },\n        {\n          \"uid\": \"NQ==\",\n          \"created_at\": \"2021-04-21 17:02:18\",\n          \"author\": {\n            \"firstname\": \"admin\",\n            \"lastname\": \"admin\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": null,\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"PENDING\",\n                  \"old_status\": \"SUBMITTED\"\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 305, "to": 342 } }
        }
      }
    ],
    [
      "baaec694-2fa0-411b-b52d-287ca491085e",
      {
        "pageContent": "}\n          }\n        },\n        {\n          \"uid\": \"Ng==\",\n          \"created_at\": \"2021-04-21 17:03:36\",\n          \"author\": {\n            \"firstname\": \"admin\",\n            \"lastname\": \"admin\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": {\n              \"comment\": \"Great! You should see a 5% discount in your cart. Shipping fees and taxes might apply.\"\n            },\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"UPDATED\",\n                  \"old_status\": \"PENDING\"\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": {\n                \"value\": 95.95\n              },\n              \"old_price\": {\n                \"value\": 101\n              }\n            }\n          }\n        },\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 343, "to": 380 } }
        }
      }
    ],
    [
      "93e7444b-feb2-4711-8163-712d8d42d230",
      {
        "pageContent": "{\n          \"uid\": \"Nw==\",\n          \"created_at\": \"2021-04-21 17:54:08\",\n          \"author\": {\n            \"firstname\": \"Taina\",\n            \"lastname\": \"Garofalo\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": null,\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"OPEN\",\n                  \"old_status\": \"UPDATED\"\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }\n          }\n        },\n        {\n          \"uid\": \"OA==\",\n          \"created_at\": \"2021-04-21 17:54:34\",\n          \"author\": {\n            \"firstname\": \"Taina\",\n            \"lastname\": \"Garofalo\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 380, "to": 416 } }
        }
      }
    ],
    [
      "c8bcd6cf-d2e3-45d7-bde7-3c454081b0c2",
      {
        "pageContent": "\"comment_added\": {\n              \"comment\": \"Adding a shipping address\"\n            },\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"SUBMITTED\",\n                  \"old_status\": \"OPEN\"\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }\n          }\n        },\n        {\n          \"uid\": \"OQ==\",\n          \"created_at\": \"2021-04-21 18:23:56\",\n          \"author\": {\n            \"firstname\": \"admin\",\n            \"lastname\": \"admin\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": null,\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"PENDING\",\n                  \"old_status\": \"SUBMITTED\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 417, "to": 452 } }
        }
      }
    ],
    [
      "90898763-b410-40c5-a311-654b84a92a5f",
      {
        "pageContent": "}\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }\n          }\n        },\n        {\n          \"uid\": \"MTA=\",\n          \"created_at\": \"2021-04-21 18:24:46\",\n          \"author\": {\n            \"firstname\": \"admin\",\n            \"lastname\": \"admin\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": null,\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"UPDATED\",\n                  \"old_status\": \"PENDING\"\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 453, "to": 491 } }
        }
      }
    ],
    [
      "b5dd3d00-128b-44d5-bbb5-5c02c6808b4e",
      {
        "pageContent": "}\n          }\n        },\n        {\n          \"uid\": \"MTE=\",\n          \"created_at\": \"2021-04-21 18:29:29\",\n          \"author\": {\n            \"firstname\": \"Taina\",\n            \"lastname\": \"Garofalo\"\n          },\n          \"change_type\": \"UPDATED\",\n          \"changes\": {\n            \"comment_added\": null,\n            \"statuses\": {\n              \"changes\": [\n                {\n                  \"new_status\": \"OPEN\",\n                  \"old_status\": \"UPDATED\"\n                },\n                {\n                  \"new_status\": \"ORDERED\",\n                  \"old_status\": \"OPEN\"\n                }\n              ]\n            },\n            \"expiration\": {\n              \"new_expiration\": \"Never\",\n              \"old_expiration\": null\n            },\n            \"total\": {\n              \"new_price\": null,\n              \"old_price\": null\n            }\n          }\n        }\n      ],\n      \"updated_at\": \"2021-04-21 18:29:28\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quote.md",
          "loc": { "lines": { "from": 491, "to": 531 } }
        }
      }
    ],
    [
      "603b1b63-708d-4f18-86e5-4e189b146626",
      {
        "pageContent": "---\ntitle: negotiableQuotes query\nedition: b2b   \n---\n\n# negotiableQuotes query\n\nThe `negotiableQuotes` query returns a list of negotiable quotes that can be viewed by the logged-in customer, including quotes created by the customer or by subordinates in the company hierarchy.\n\nThis query requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\n{\n    negotiableQuotes(\n        filter: NegotiableQuoteFilterInput,\n        pageSize: Int = 20,\n        currentPage: Int = 1\n    ): NegotiableQuotesOutput\n}\n```\n\n## Reference\n\nThe [`negotiableQuotes`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-negotiableQuotes) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quotes.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "81d0d8a7-e68a-46a9-9d63-afa811b88307",
      {
        "pageContent": "## Example usage\n\nThe following example returns general information about the negotiable quotes containing the string `request` that are accessible to the company user. The results are sorted by negotiable quote name, listed in ascending order.\n\n**Request:**\n\n```graphql\nquery {\n  negotiableQuotes(filter: { name:\n    { match: \"request\" }\n    })\n    {\n    items {\n      uid\n      name\n      created_at\n      status\n    }\n    total_count\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quotes.md",
          "loc": { "lines": { "from": 28, "to": 48 } }
        }
      }
    ],
    [
      "acfd8f37-93a7-4e0f-8d96-7c94890357f6",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"negotiableQuotes\": {\n      \"items\": [\n        {\n          \"uid\": \"BfYWqXwmUpL2Ra1igfrv6xyOMx89sFDu\",\n          \"name\": \"Last request\",\n          \"created_at\": \"2021-04-28 15:43:09\",\n          \"status\": \"PENDING\"\n        },\n        {\n          \"uid\": \"eywCZkG8avwW1eivuahc7oukY0ZFDC3H\",\n          \"name\": \"Latest request\",\n          \"created_at\": \"2021-04-26 16:35:48\",\n          \"status\": \"OPEN\"\n        },\n        {\n          \"uid\": \"xCA4wSZEHsb5QbFiKfoq5k1Dk8vIPBgb\",\n          \"name\": \"April 22 request\",\n          \"created_at\": \"2021-04-22 15:59:47\",\n          \"status\": \"PENDING\"\n        },\n        {\n          \"uid\": \"kw6mLEvl6vjjPNsjtJqwpamv5o0iT1bc\",\n          \"name\": \"Discount request\",\n          \"created_at\": \"2021-04-20 19:01:38\",\n          \"status\": \"ORDERED\"\n        }\n      ],\n      \"total_count\": 4\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/queries/quotes.md",
          "loc": { "lines": { "from": 49, "to": 87 } }
        }
      }
    ],
    [
      "4223bc91-b8e9-4165-9bf0-f54e07d0ce77",
      {
        "pageContent": "---\ntitle: Unions\n---\n\n# Unions\n\nA GraphQL union represents an object that could be one of several data types, but there is no guarantee that the data types contain fields in common. Use an inline fragment to return details about each possible data type.\n\nSee the GraphQL specification for more details about [unions](https://graphql.org/learn/schema/#union-types).\n\n## CloseNegotiableQuoteError union\n\nThe [`CloseNegotiableQuoteError`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-CloseNegotiableQuoteError) union provides details about failed attempts to close one or more negotiable quotes.\n\n**Possible types:**\n\n*  `InternalError`\n*  `NegotiableQuoteInvalidStateError`\n*  `NoSuchEntityUidError`\n\n**Fields with this union:**\n\n`CloseNegotiableQuoteOperationFailure.errors`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/unions/index.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "0e2a00e9-9aa4-4a17-8333-68b4fd3d185d",
      {
        "pageContent": "## CloseNegotiableQuoteOperationResult union\n\nThe [`CloseNegotiableQuoteOperationResult`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-CloseNegotiableQuoteOperationResult) union provides details about the result of a request to close a negotiable quote.\n\n**Possible types:**\n\n*  `CloseNegotiableQuoteOperationFailure`\n*  `NegotiableQuoteUidOperationSuccess`\n\n**Fields with this union:**\n\n`CloseNegotiableQuotesOutput.operation_results`\n\n## CompanyStructureEntity union\n\nThe [`CompanyStructureEntity`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-CompanyStructureEntity) union provides details about a node in a company structure.\n\n**Possible types:**\n\n*  `CompanyTeam`\n*  `Customer`\n\n**Fields with this union:**\n\n*  `CompanyStructureItem.entity`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/unions/index.md",
          "loc": { "lines": { "from": 25, "to": 49 } }
        }
      }
    ],
    [
      "a232582a-b354-4af2-8949-2d34004a1eb9",
      {
        "pageContent": "## DeleteNegotiableQuoteError union\n\nThe [`DeleteNegotiableQuoteError`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-DeleteNegotiableQuoteError) union provides details about failed attempts to delete one or more negotiable quotes.\n\n**Possible types:**\n\n*  `InternalError`\n*  `NegotiableQuoteInvalidStateError`\n*  `NoSuchEntityUidError`\n\n**Fields with this union:**\n\n`DeleteNegotiableQuoteOperationFailure.errors`\n\n## DeleteNegotiableQuoteOperationResult union\n\nThe [`DeleteNegotiableQuoteOperationResult`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-DeleteNegotiableQuoteOperationResult) union provides details about the result of a request to delete a negotiable quote.\n\n**Possible types:**\n\n*  DeleteNegotiableQuoteOperationFailure\n*  NegotiableQuoteUidOperationSuccess\n\n**Fields with this union:**\n\n`DeleteNegotiableQuotesOutput.operation_results`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/negotiable-quote/unions/index.md",
          "loc": { "lines": { "from": 51, "to": 76 } }
        }
      }
    ],
    [
      "cf1adadd-fe33-4c3f-b6cd-ebf4448920b9",
      {
        "pageContent": "---\ntitle: Purchase orders (B2B)\nedition: b2b   \n---\n\n# Purchase orders (B2B)\n\nWhen B2B for Adobe Commerce is installed and purchase orders are activated for a company account, all orders are automatically created as purchase orders. Company users with the required permissions can create, edit, and delete their own purchase orders as well as those created by subordinate users.\n\nAdobe Commerce provides multiple mutations that define and manage purchase orders. However, there are no top-level queries that return lists of purchase orders or purchase order details.\nThe [`customer` query](../../customer/queries/customer.md) now returns details about purchase orders.\n\nSee [Purchase Orders for Companies](https://experienceleague.adobe.com/docs/commerce-admin/b2b/purchase-orders/purchase-order-flow.html) in the _B2B for Adobe Commerce Guide_ for information about enabling the B2B purchase order capabilities and the different workflows for online and offline payment methods.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "b7081a90-7173-4c1b-88e4-3b1efdc08cbe",
      {
        "pageContent": "The following examples demonstrate `customer` queries that return information about purchase orders.\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nAll examples require a valid [customer authentication token](../../customer/mutations/generate-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 15, "to": 19 } }
        }
      }
    ],
    [
      "5102cfd2-5c4e-42e3-9f59-0bf7e92198b1",
      {
        "pageContent": "## Return a list of purchase orders\n\nThe following example returns the list of purchase orders.\n\n**Request:**\n\n``` graphql\n{\n    customer {\n        purchase_orders(\n            currentPage: 1,\n            pageSize: 20,\n            filter: {\n                company_purchase_orders: true,\n            }\n        ) {\n            total_count\n            page_info {\n                current_page\n                page_size\n                total_pages\n            }\n            items {\n                uid\n                number\n              order {\n                id\n              }\n              created_at\n              updated_at\n              created_by {\n                firstname\n                lastname\n              }\n              status\n              order {\n                total {\n                  grand_total {\n                    value\n                    currency\n                  }\n                }\n              }\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 21, "to": 67 } }
        }
      }
    ],
    [
      "2afbfa79-7c6c-471d-a342-3871e58165ad",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 68, "to": 70 } }
        }
      }
    ],
    [
      "d27e6acf-1bba-4766-ad3e-d06f1cba06fe",
      {
        "pageContent": "``` json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_orders\": {\n        \"total_count\": 2,\n        \"page_info\": {\n          \"current_page\": 1,\n          \"page_size\": 20,\n          \"total_pages\": 1\n        },\n        \"items\": [\n          {\n            \"uid\": \"Nw==\",\n            \"number\": \"000000007\",\n            \"order\": null,\n            \"created_at\": \"2023-01-25 20:59:05\",\n            \"updated_at\": \"2023-01-25 21:10:31\",\n            \"created_by\": {\n              \"firstname\": \"Melanie\",\n              \"lastname\": \"Shaw\"\n            },\n            \"status\": \"APPROVED\"\n          },\n          {\n            \"uid\": \"Ng==\",\n            \"number\": \"000000006\",\n            \"order\": {\n              \"id\": \"NQ==\",\n              \"total\": {\n                \"grand_total\": {\n                  \"value\": 375,\n                  \"currency\": \"USD\"\n                }\n              }\n            },\n            \"created_at\": \"2023-01-25 20:35:56\",\n            \"updated_at\": \"2023-01-31 19:45:09\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 72, "to": 109 } }
        }
      }
    ],
    [
      "98883eff-e8f6-40a7-94a0-3dc5df279d18",
      {
        "pageContent": "\"created_by\": {\n              \"firstname\": \"Kevin\",\n              \"lastname\": \"Harper\"\n            },\n            \"status\": \"ORDER_PLACED\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 110, "to": 121 } }
        }
      }
    ],
    [
      "53a094d8-4f8b-4857-bf52-b766dcf29dd6",
      {
        "pageContent": "## Return details about one purchase order\n\nThe following example returns the purchase order information.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 123, "to": 127 } }
        }
      }
    ],
    [
      "532a85af-c8e4-4b02-8763-82ce3087841f",
      {
        "pageContent": "``` graphql\n{\n    customer {\n        purchase_order(uid: \"MQ==\") {\n            uid\n            number\n            created_at\n            updated_at\n            status\n            available_actions\n            created_by {\n                firstname\n                lastname\n                email\n            }\n            order {\n                number\n            }\n            comments {\n                created_at\n                text\n                author {\n                    firstname\n                    lastname\n                    email\n                }\n            }\n            history_log {\n                activity\n                created_at\n            }\n            quote {\n                items {\n                    product {\n                        sku\n                    }\n                }\n                prices {\n                    grand_total {\n                        value\n                        currency\n                    }\n                }\n            }\n        }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 129, "to": 173 } }
        }
      }
    ],
    [
      "dac4348e-65be-4b21-ad4c-f5ffebc43f4c",
      {
        "pageContent": "}\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 173, "to": 175 } }
        }
      }
    ],
    [
      "425a0fc5-edbc-4b64-ace6-02c0d804511a",
      {
        "pageContent": "```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_order\": {\n        \"uid\": \"MQ==\",\n        \"number\": \"000000001\",\n        \"created_at\": \"2023-01-10 18:32:13\",\n        \"updated_at\": \"2023-01-10 18:32:13\",\n        \"status\": \"APPROVED\",\n        \"available_actions\": [\n          \"PLACE_ORDER\"\n        ],\n        \"created_by\": {\n          \"firstname\": \"John\",\n          \"lastname\": \"Doe\",\n          \"email\": \"john.doe@example.com\"\n        },\n        \"order\": null,\n        \"comments\": [],\n        \"history_log\": [],\n        \"quote\": {\n          \"items\": [\n            {\n              \"product\": {\n                \"sku\": \"Simple product\"\n              }\n            }\n          ],\n          \"prices\": {\n            \"grand_total\": {\n              \"value\": 14,\n              \"currency\": \"USD\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 176, "to": 220 } }
        }
      }
    ],
    [
      "e5f89e77-0d68-417d-a589-c77f0f606029",
      {
        "pageContent": "## Check if the customer is enabled for purchase orders\n\nThe following example returns `true` if the customer has the purchase order functionality enabled.\n\n**Request:**\n\n``` graphql\n{\n    customer {\n        purchase_orders_enabled\n    }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_orders_enabled\": true\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/index.md",
          "loc": { "lines": { "from": 222, "to": 246 } }
        }
      }
    ],
    [
      "11232733-bf65-4039-a6ec-35f739a8c899",
      {
        "pageContent": "---\ntitle: addPurchaseOrderComment mutation\nedition: b2b\n---\n\n# addPurchaseOrderComment mutation\n\nThe `addPurchaseOrderComment` mutation adds a comment to the specified purchase order. The response contains details about the comment.\n\n## Syntax\n\n```graphql\nmutation {\n  addPurchaseOrderComment(\n    input: AddPurchaseOrderCommentInput!\n  ) {\n      AddPurchaseOrderCommentOutput\n  }\n}\n```\n\n## Reference\n\nThe [`addPurchaseOrderComment`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addPurchaseOrderComment) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/add-comment.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "51c377de-5393-4de6-8da2-37177df9e623",
      {
        "pageContent": "## Example usage\n\nThe following example adds a comment to the purchase order.\n\n**Request:**\n\n``` graphql\nmutation {\n  addPurchaseOrderComment(\n      input: {\n        purchase_order_uid: \"MQ==\",\n        comment: \"Looks good to me\"\n      },\n    ) {\n    comment {\n        uid\n        author {\n            firstname\n            lastname\n            email\n        }\n        text\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"addPurchaseOrderComment\": {\n      \"comment\": {\n        \"uid\": \"Mw==\",\n        \"author\": {\n          \"firstname\": \"John\",\n          \"lastname\": \"Doe\",\n          \"email\": \"john.doe@example.com\"\n        },\n        \"text\": \"Looks good to me.\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/add-comment.md",
          "loc": { "lines": { "from": 26, "to": 71 } }
        }
      }
    ],
    [
      "a6e3c8c0-5518-487d-85f3-d46ff77b3fdc",
      {
        "pageContent": "---\ntitle: addPurchaseOrderItemsToCart mutation\nedition: b2b\n---\n\n# addPurchaseOrderItemsToCart mutation\n\nThe `addPurchaseOrderItemsToCart` mutation adds all purchase order items to the shopping cart. The request must specify a `cart_id` and a `purchase_order_uid`. If the value of `replace_existing_cart_items` is set to `true`, the mutation deletes the pre-existing items from the purchase order. Otherwise, the mutation merges the pre-existing items with the new items.\n\n## Syntax\n\n```graphql\nmutation {\n  addPurchaseOrderItemsToCart(\n    input: AddPurchaseOrderItemsToCartInput!\n  ){\n    AddProductsToCartOutput\n  }\n}\n```\n\n## Reference\n\nThe [`addPurchaseOrderItemsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addPurchaseOrderItemsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "1c9dd3ce-56d0-4990-82dd-cad4107dba38",
      {
        "pageContent": "## Example usage\n\nThe following example adds all purchase order items to the shopping cart.\n\n**Request:**\n\n``` graphql\nmutation {\n  addPurchaseOrderItemsToCart(\n    input: {\n      purchase_order_uid: \"MQ==\",\n      cart_id: \"hJUrIcPm77uCyYkSTBRGyjSvS40mw1Qd\",\n      replace_existing_cart_items: false\n    }\n  ) {\n    cart {\n      id\n      items {\n        product {\n          sku\n        }\n      }\n    }\n    user_errors {\n      message\n      code\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"addPurchaseOrderItemsToCart\": {\n      \"cart\": {\n        \"id\": \"hJUrIcPm77uCyYkSTBRGyjSvS40mw1Qd\",\n        \"items\": [\n          {\n            \"product\": {\n              \"sku\": \"Simple product\"\n            }\n          }\n        ]\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 26, "to": 77 } }
        }
      }
    ],
    [
      "e9207604-b3e2-4a94-9041-43b2c0d223a9",
      {
        "pageContent": "---\ntitle: approvePurchaseOrders mutation\nedition: b2b\n---\n\n# approvePurchaseOrders mutation\n\nThe `approvePurchaseOrders` mutation approves one or more purchase orders. The specified purchase orders must have a status of PENDING.\n\n## Syntax\n\n```graphql\nmutation {\n    approvePurchaseOrders(\n      input: PurchaseOrdersActionInput!\n    ) {\n      PurchaseOrdersActionOutput\n    }\n}\n```\n\n## Reference\n\nThe [`approvePurchaseOrders`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-approvePurchaseOrders) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/approve.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "fb4ca8ca-cf01-4fea-848f-eedb01ede1af",
      {
        "pageContent": "## Example usage\n\nThe following example approves a purchase order.\n\n**Request:**\n\n``` graphql\nmutation {\n  approvePurchaseOrders(\n    input: {\n      purchase_order_uids: [\"Ng==\"]\n    }\n  ) {\n    purchase_orders {\n      number\n    }\n    errors {\n      message\n      type\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"approvePurchaseOrders\": {\n      \"purchase_orders\": [\n        {\n          \"number\": \"000000006\"\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/approve.md",
          "loc": { "lines": { "from": 26, "to": 65 } }
        }
      }
    ],
    [
      "b6550fa7-7495-418e-8539-a158e76f4a6d",
      {
        "pageContent": "---\ntitle: cancelPurchaseOrders mutation\nedition: b2b\n---\n\n# cancelPurchaseOrders mutation\n\nThe `cancelPurchaseOrders` mutation cancels the specified purchase orders. If the request is successful, the status of each purchase order is `CANCELED`.\n\n## Syntax\n\n```graphql\nmutation {\n    cancelPurchaseOrders(\n        input: PurchaseOrdersActionInput!\n    ) {\n        PurchaseOrdersActionOutput\n    }\n}\n```\n\n## Reference\n\nThe [`cancelPurchaseOrders`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-cancelPurchaseOrders) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/cancel.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "b08cd155-9893-4d97-bf19-5347a220a5f5",
      {
        "pageContent": "## Example usage\n\nThe following example cancels purchase orders.\n\n**Request:**\n\n``` graphql\nmutation {\n  cancelPurchaseOrders(\n    input: {\n        purchase_order_uids: [\"NQ==\"]\n    }\n  ) {\n    purchase_orders {\n        number\n        status\n    }\n    errors {\n        message\n        type\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"cancelPurchaseOrders\": {\n      \"purchase_orders\": [\n        {\n          \"number\": \"000000005\",\n          \"status\": \"CANCELED\"\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/cancel.md",
          "loc": { "lines": { "from": 26, "to": 67 } }
        }
      }
    ],
    [
      "b3322c92-1ee9-4dc0-947e-811d93195802",
      {
        "pageContent": "---\ntitle: Purchase order (B2B) mutations\nedition: b2b   \n---\n\n# Purchase order (B2B) mutations\n\nAdobe Commerce for B2B provides the following mutations for processing and managing purchase orders:\n\n* [`addPurchaseOrderComment`](./add-comment.md)\n* [`addPurchaseOrderItemsToCart`](./add-items-to-cart.md)\n* [`approvePurchaseOrders`](./approve.md)\n* [`cancelPurchaseOrders`](./cancel.md)\n* [`placeOrderForPurchaseOrder`](./place-purchase-order.md)\n* [`placePurchaseOrder`](./place-order.md)\n* [`rejectPurchaseOrders`](./reject.md)\n* [`validatePurchaseOrders`](../../purchase-order-rule/mutations/validate.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "650b3ce7-3c8d-4707-9b76-1523977d4358",
      {
        "pageContent": "---\ntitle: placeOrderForPurchaseOrder mutation\nedition: b2b\n---\n\n# placeOrderForPurchaseOrder mutation\n\nThe `placeOrderForPurchaseOrder` mutation converts an approved purchase order to an order. If the request is successful, the status of the purchase order is `ORDER_PLACED`.\n\nUse the [`placePurchaseOrder` mutation](place-purchase-order.md) to place a purchase order using the cart ID.\n\n## Syntax\n\n```graphql\nmutation {\n    placeOrderForPurchaseOrder(\n        input: PlaceOrderForPurchaseOrderInput!\n    ) {\n        PlaceOrderForPurchaseOrderOutput\n    }\n}\n```\n\n## Reference\n\nThe [`placeOrderForPurchaseOrder`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-placeOrderForPurchaseOrder) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/place-order.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "f6fc2337-66ed-4477-808d-5a9ab6430c91",
      {
        "pageContent": "## Example usage\n\nThe following example places an order based on the approved purchase order.\n\n**Request:**\n\n``` graphql\nmutation {\n  placeOrderForPurchaseOrder(\n    input: {\n        purchase_order_uid: \"MQ==\"\n    }\n  ) {\n   order {\n    number\n   }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"placeOrderForPurchaseOrder\": {\n      \"order\": {\n        \"number\": \"000000001\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/place-order.md",
          "loc": { "lines": { "from": 28, "to": 60 } }
        }
      }
    ],
    [
      "ace41fd1-7dcd-4aec-96f2-9d58c6dd9cea",
      {
        "pageContent": "---\ntitle: placePurchaseOrder mutation\nedition: b2b\n---\n\n# placePurchaseOrder mutation\n\nThe `placePurchaseOrder` mutation places a purchase order using the specified `cart_id`. If the request is successful, the status of the purchase order is `ORDER_PLACED`.\n\nUse the [`placeOrderForPurchaseOrder` mutation](place-order.md) to convert a purchase order to an order using the UID.\n\n## Syntax\n\n```graphql\nmutation {\n    placePurchaseOrder(\n        input: PlacePurchaseOrderInput!\n    ) {\n        PlacePurchaseOrderOutput\n    }\n}\n```\n\n## Reference\n\nThe [`placePurchaseOrder`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-placePurchaseOrder) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/place-purchase-order.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "06192b0d-5f7f-4a7c-bcd0-30c2746c9ce9",
      {
        "pageContent": "## Example usage\n\nThe following example places a purchase order.\n\n**Request:**\n\n``` graphql\nmutation {\n  placePurchaseOrder(\n    input: {\n        cart_id: \"hJUrIcPm77uCyYkSTBRGyjSvS40mw1Qd\"\n    }\n  ) {\n    purchase_order {\n        number\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"placePurchaseOrder\": {\n      \"purchase_order\": {\n        \"number\": \"000000002\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/place-purchase-order.md",
          "loc": { "lines": { "from": 28, "to": 60 } }
        }
      }
    ],
    [
      "3d2c4a66-1132-47aa-8fae-8197f188e0ad",
      {
        "pageContent": "---\ntitle: rejectPurchaseOrders mutation\nedition: b2b\n---\n\n# rejectPurchaseOrders mutation\n\nThe `rejectPurchaseOrders` mutation rejects one or more purchase orders. The specified purchase orders must have a status of PENDING.\n\n## Syntax\n\n```graphql\nmutation {\n  rejectPurchaseOrders(\n    input: PurchaseOrdersActionInput!\n  ){\n    PurchaseOrdersActionOutput\n  }\n}\n```\n\n## Reference\n\nThe [`rejectPurchaseOrders`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-rejectPurchaseOrders) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/reject.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "85363bd9-a00e-47fa-9ba8-1e65d13ecda7",
      {
        "pageContent": "## Example usage\n\nThe following example rejects a purchase order.\n\n**Request:**\n\n``` graphql\nmutation {\n  rejectPurchaseOrders(\n    input: {\n      purchase_order_uids: [\"MTA=\"]\n    }\n  ) {\n    purchase_orders {\n      number\n      uid\n      status\n    }\n    errors {\n      message\n      type\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"rejectPurchaseOrders\": {\n      \"purchase_orders\": [\n        {\n          \"number\": \"000000010\",\n          \"uid\": \"MTA=\",\n          \"status\": \"REJECTED\"\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order/mutations/reject.md",
          "loc": { "lines": { "from": 26, "to": 69 } }
        }
      }
    ],
    [
      "f97e0534-80cc-42db-8b13-73fb2f316258",
      {
        "pageContent": "---\ntitle: Purchase order approval rules (B2B)\nedition: b2b   \n---\n\n# Purchase order approval rules (B2B)\n\nIn a typical implementation of purchase orders, a company admin or manager with sufficient permissions sets up approval rules that enforce company policies. These approval rules establish who the rule applies to, when the rule is triggered, and who must approve the affected purchase order.\n\nAdobe Commerce provides multiple mutations that define and validate approval rules. However, there are no top-level queries to return lists of rules or purchase orders awaiting approval.\nThe [`customer` query](../../customer/queries/customer.md) now returns details about purchase orders and approval rules.\n\nThe [Purchase order approval rules](https://experienceleague.adobe.com/docs/commerce-admin/b2b/purchase-orders/account-dashboard-approval-rules.html) topic in the _B2B for Adobe Commerce Guide_ provides additional information about setting up approval rules.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "95d24f6a-6c8e-40dc-b159-f8fed75147a0",
      {
        "pageContent": "The following examples demonstrate `customer` queries that return information about approval rules.\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nAll examples require a valid [customer authentication token](../../customer/mutations/generate-token.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 15, "to": 19 } }
        }
      }
    ],
    [
      "3f0500b0-6b31-4ea4-bd5b-3de20f87e4a8",
      {
        "pageContent": "## Return a list of approval rules\n\nThe `purchase_order_approval_rules` query returns the list of purchase order approval rules. Use the value of the `items.uid` field to get details about a specific approval rule.\n\nThe following example returns the list of purchase order approval rules.\n\n**Request:**\n\n``` graphql\n{\n  customer {\n    purchase_order_approval_rules {\n      items {\n        name\n        uid\n      }\n      page_info {\n        page_size\n        current_page\n        total_pages\n      }\n      total_count\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 21, "to": 45 } }
        }
      }
    ],
    [
      "e61db58d-1925-43f9-bf05-6d5d18688fc7",
      {
        "pageContent": "```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_order_approval_rules\": {\n        \"items\": [\n          {\n            \"name\": \"Autoapprove order\",\n            \"uid\": \"OQ==\"\n          },\n          {\n            \"name\": \"Over 10 SKUs\",\n            \"uid\": \"Ng==\"\n          },\n          {\n            \"name\": \"Purchase order over $1000\",\n            \"uid\": \"NQ==\"\n          }\n        ],\n        \"page_info\": {\n          \"page_size\": 20,\n          \"current_page\": 1,\n          \"total_pages\": 1\n        },\n        \"total_count\": 3\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 46, "to": 79 } }
        }
      }
    ],
    [
      "abec0c54-ec8c-47ea-b409-12d3e30587ca",
      {
        "pageContent": "## Get approval rule details\n\nThe `purchase_order_approval_rule` query returns information about the specified approval rule. To retrieve details about the amount or quantity required to trigger an approval rule, you must specify the implementations of the [`PurchaseOrderApprovalRuleConditionInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-PurchaseOrderApprovalRuleConditionInterface).\n\nThe following example returns information about the purchase order approval rule.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 81, "to": 87 } }
        }
      }
    ],
    [
      "e8ac5b4d-e74e-4c61-9e29-aad185916ba3",
      {
        "pageContent": "**Request:**\n\n``` graphql\n{\n  customer {\n    purchase_order_approval_rule(uid: \"Ng==\") {\n      uid\n      name\n      description\n      status\n      created_at\n      updated_at\n      created_by\n      applies_to_roles {\n        name\n      }\n      approver_roles {\n        name\n      }\n      condition {\n        attribute\n        operator\n        ... on PurchaseOrderApprovalRuleConditionAmount {\n          amount {\n            value\n            currency\n          }\n        }\n        ... on PurchaseOrderApprovalRuleConditionQuantity {\n          quantity\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 87, "to": 121 } }
        }
      }
    ],
    [
      "1f24c93a-e0b3-4cda-ad35-d3dc2ca11642",
      {
        "pageContent": "```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_order_approval_rule\": {\n        \"uid\": \"Ng==\",\n        \"name\": \"Over 10 SKUs\",\n        \"description\": null,\n        \"status\": \"ENABLED\",\n        \"created_at\": \"2023-01-25 20:05:25\",\n        \"updated_at\": \"2023-01-25 20:05:25\",\n        \"created_by\": \"Melanie Shaw\",\n        \"applies_to_roles\": [\n          {\n            \"name\": \"Default User\"\n          }\n        ],\n        \"approver_roles\": [\n          {\n            \"name\": \"Manager\"\n          }\n        ],\n        \"condition\": {\n          \"attribute\": \"NUMBER_OF_SKUS\",\n          \"operator\": \"MORE_THAN_OR_EQUAL_TO\",\n          \"quantity\": 10\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 122, "to": 157 } }
        }
      }
    ],
    [
      "0f6564d6-fe00-413b-9093-d2c8c5f0dfc3",
      {
        "pageContent": "## Approval flow\n\nCompany users that are enabled to create or review purchase orders and are designated as an approver can view purchase orders in the **My Purchase Orders** dashboard page.\n\nThe following example returns the approval history of purchase orders made by the company user's subordinates.\n\n**Request:**\n\n``` graphql\n{\n  customer {\n    purchase_orders(filter: { company_purchase_orders: true }) {\n      items {\n        approval_flow {\n          rule_name\n          events {\n            name\n            role\n            status\n            message\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 159, "to": 184 } }
        }
      }
    ],
    [
      "14131a34-7b52-4b5a-87ab-4d6ac70bab97",
      {
        "pageContent": "```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_orders\": {\n        \"items\": [\n          {\n            \"approval_flow\": [\n              {\n                \"rule_name\": \"Rule 1\",\n                \"events\": [\n                  {\n                    \"name\": \"Unknown Customer\",\n                    \"role\": \"Company Administrator\",\n                    \"status\": \"PENDING\",\n                    \"message\": \"Pending Approval from Company Administrator\"\n                  },\n                  {\n                    \"name\": \"Unknown Customer\",\n                    \"role\": \"Purchaser's Manager\",\n                    \"status\": \"PENDING\",\n                    \"message\": \"Pending Approval from Purchaser's Manager\"\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 185, "to": 221 } }
        }
      }
    ],
    [
      "9c1c6cd6-624a-4871-a71f-f1e317af17ce",
      {
        "pageContent": "## Return approval rule metadata\n\nThe following example returns the metadata necessary to render the form for [creating or editing an approval rule](https://experienceleague.adobe.com/docs/commerce-admin/b2b/purchase-orders/account-dashboard-approval-rules.html#approval-rule-setup).\n\n**Request:**\n\n``` graphql\n{\n  customer {\n    purchase_order_approval_rule_metadata {\n      available_applies_to {\n        name\n      }\n      available_condition_currencies {\n        code\n        symbol\n      }\n      available_requires_approval_from {\n        name\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 223, "to": 245 } }
        }
      }
    ],
    [
      "3bc4bca7-1bd9-40c7-b1de-1a04dd07cb18",
      {
        "pageContent": "```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_order_approval_rule_metadata\": {\n        \"available_applies_to\": [\n          {\n            \"name\": \"Default User\"\n          },\n          {\n            \"name\": \"Manager\"\n          },\n          {\n            \"name\": \"Director\"\n          },\n          {\n            \"name\": \"Admin\"\n          }\n        ],\n        \"available_condition_currencies\": [\n          {\n            \"code\": \"USD\",\n            \"symbol\": \"$\"\n          }\n        ],\n        \"available_requires_approval_from\": [\n          {\n            \"name\": \"Company Administrator\"\n          },\n          {\n            \"name\": \"Purchaser's Manager\"\n          },\n          {\n            \"name\": \"Default User\"\n          },\n          {\n            \"name\": \"Manager\"\n          },\n          {\n            \"name\": \"Director\"\n          },\n          {\n            \"name\": \"Admin\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/index.md",
          "loc": { "lines": { "from": 246, "to": 299 } }
        }
      }
    ],
    [
      "54a93cba-ef60-4f26-9805-3018f1d1932c",
      {
        "pageContent": "---\ntitle: PurchaseOrderApprovalRuleConditionInterface attributes and implementations\nedition: b2b\n---\n\n# PurchaseOrderApprovalRuleConditionInterface attributes and implementations\n\n[`PurchaseOrderApprovalRuleConditionInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-PurchaseOrderApprovalRuleConditionInterface) provides details about the approval rule conditions. It has the following implementations:\n\n*  [`PurchaseOrderApprovalRuleConditionAmount`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-PurchaseOrderApprovalRuleConditionAmount)\n*  [`PurchaseOrderApprovalRuleConditionQuantity`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-PurchaseOrderApprovalRuleConditionQuantity)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/interfaces/index.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "601e5753-7a98-49e1-821e-931465ad7e2f",
      {
        "pageContent": "## Example usage\n\nThe following example returns information about the purchase order approval rule condition.\n\n**Request:**\n\n``` graphql\n{\n    customer {\n        purchase_order_approval_rule(\n            uid: \"Mg==\"\n        ) {\n            condition {\n              attribute\n              operator\n              ... on PurchaseOrderApprovalRuleConditionAmount {\n                amount {\n                  value\n                  currency\n                }\n              }\n              ... on PurchaseOrderApprovalRuleConditionQuantity {\n                quantity\n              }\n            }\n        }\n    }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_order_approval_rule\": {\n        \"condition\": {\n          \"attribute\": \"GRAND_TOTAL\",\n          \"operator\": \"MORE_THAN\",\n          \"amount\": {\n            \"value\": 5,\n            \"currency\": \"USD\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/interfaces/index.md",
          "loc": { "lines": { "from": 13, "to": 62 } }
        }
      }
    ],
    [
      "b7e000f3-e28d-4cda-9b4b-cb13aee4e6b4",
      {
        "pageContent": "---\ntitle: createPurchaseOrderApprovalRule mutation\nedition: b2b\n---\n\n# createPurchaseOrderApprovalRule mutation\n\nThe `createPurchaseOrderApprovalRule` mutation creates a purchase order approval rule.\n\nA request to create an approval rule must include the following fields and objects:\n\n*  `name`\n*  `condition`\n*  `approvers`\n\nThe `condition` object must contain an `attribute` field, an `operator`, and either an `amount` or a `quantity`. The `attribute` field determines if the rule checks the order total (`GRAND_TOTAL`), the number of SKUs in the order (`NUMBER_OF_SKUS`), or the shipping expense (`SHIPPING_INCL_TAX`). The operator must be one of `MORE_THAN`, `LESS_THAN`, `MORE_THAN_OR_EQUAL_TO`, or `LESS_THAN_OR_EQUAL_TO`.\n\nThe `applies_to` field can contain an array of company user role IDs. When an empty array is provided, the rule is applied to all user roles in the system, including those created in the future.\n\nThe default value of the `status` field is `ENABLED`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/create.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "66a22717-3ca1-4d49-b436-d9d9bfc9632f",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n    createPurchaseOrderApprovalRule(\n        input: PurchaseOrderApprovalRuleInput!\n    ) {\n        PurchaseOrderApprovalRule\n    }\n}\n```\n\n## Reference\n\nThe [`createPurchaseOrderApprovalRule`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createPurchaseOrderApprovalRule) reference provides detailed information about the types and fields defined in this mutation.\n\n## Headers\n\nA valid [customer authentication token](../../../customer/mutations/generate-token.md) is required.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/create.md",
          "loc": { "lines": { "from": 22, "to": 40 } }
        }
      }
    ],
    [
      "efeb7487-c098-40e4-b16b-94b436ac8a89",
      {
        "pageContent": "## Example usage\n\nThe following example creates a purchase order approval rule.\n\n**Request:**\n\n``` graphql\nmutation {\n  createPurchaseOrderApprovalRule(\n    input: {\n        name: \"Rule name\",\n        description: \"Rule description\",\n        applies_to: [],\n        status: ENABLED,\n        condition: {\n            attribute: GRAND_TOTAL,\n            operator: MORE_THAN,\n            amount: {\n                value: 100.00,\n                currency: EUR\n            }\n        },\n        approvers: [\"MQ==\"]\n    }\n  ) {\n    name\n    uid\n    applies_to_roles\n    condition\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"createPurchaseOrderApprovalRule\": {\n      \"name\": \"Rule name\",\n      \"uid\": \"MTA=\",\n      \"applies_to_roles\": [],\n      \"condition\": {\n        \"attribute\": \"GRAND_TOTAL\",\n        \"operator\": \"MORE_THAN\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/create.md",
          "loc": { "lines": { "from": 42, "to": 91 } }
        }
      }
    ],
    [
      "9bfe9161-aab6-4503-8bfa-e5c9fe1eeff2",
      {
        "pageContent": "---\ntitle: deletePurchaseOrderApprovalRule mutation\nedition: b2b\n---\n\n# deletePurchaseOrderApprovalRule mutation\n\nThe `deletePurchaseOrderApprovalRule` mutation deletes one or more purchase order approval rules.\n\nYou can use the [`customer` query](../../../customer/queries/customer.md) to retrieve the `uid` value of the approval rule.\n\nIf the mutation is successful, it returns null. Otherwise, the response contains details about any errors encountered.\n\n## Syntax\n\n```graphql\nmutation {\n    deletePurchaseOrderApprovalRule(\n        input: DeletePurchaseOrderApprovalRuleInput!\n    ) {\n        DeletePurchaseOrderApprovalRuleOutput\n    }\n}\n```\n\n## Reference\n\nThe [`deletePurchaseOrderApprovalRule`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deletePurchaseOrderApprovalRule) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/delete.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "25153e95-6f3f-47ba-9baf-eca3741de334",
      {
        "pageContent": "## Headers\n\nA valid [customer authentication token](../../../customer/mutations/generate-token.md) is required.\n\n## Example usage\n\nThe following example deletes the purchase order approval rule.\n\n**Request:**\n\n``` graphql\nmutation {\n  deletePurchaseOrderApprovalRule(\n    input: {\n        approval_rule_uids: [\"Mg==\"]\n    }\n  ) {\n    errors {\n        message\n        type\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"deletePurchaseOrderApprovalRule\": {\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/delete.md",
          "loc": { "lines": { "from": 30, "to": 65 } }
        }
      }
    ],
    [
      "3fc0e0a5-b900-49b7-8f08-2214893ce607",
      {
        "pageContent": "---\ntitle: Purchase order approval rule (B2B) mutations\nedition: b2b   \n---\n\n# Purchase order approval rule (B2B) mutations\n\nB2B for Adobe Commerce provides mutations to manage purchase order approval rules:\n\n* `createPurchaseOrderApprovalRule`\n* `deletePurchaseOrderApprovalRule`\n* `updatePurchaseOrderApprovalRule`\n\nThe `validatePurchaseOrders` mutation allows an approver to manually validate purchase orders when automatic validation fails unexpectedly.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "f869bae9-b168-447c-93b5-02772d9c97ce",
      {
        "pageContent": "---\ntitle: updatePurchaseOrderApprovalRule mutation\nedition: b2b\n---\n\n# updatePurchaseOrderApprovalRule mutation\n\nThe `updatePurchaseOrderApprovalRule` mutation updates the specified purchase order approval rule.\n\nYou can use the [`customer` query](../../../customer/queries/customer.md) to retrieve the `uid` value of the approval rule.\n\nThe [`createPurchaseOrderApprovalRule` mutation](create.md) describes the requirements of the `condition` and `approvers` fields.\n\n## Syntax\n\n```graphql\nmutation {\n    updatePurchaseOrderApprovalRule(\n        input: UpdatePurchaseOrderApprovalRuleInput!\n    ) {\n        PurchaseOrderApprovalRule\n    }\n}\n```\n\n## Reference\n\nThe [`updatePurchaseOrderApprovalRule`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updatePurchaseOrderApprovalRule) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/update.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "9e6a1144-6204-4a6e-8260-30a083958348",
      {
        "pageContent": "## Headers\n\nA valid [customer authentication token](../../../customer/mutations/generate-token.md) is required.\n\n## Example usage\n\nThe following example updates the purchase order approval rule.\n\n**Request:**\n\n``` graphql\nmutation {\n  updatePurchaseOrderApprovalRule(\n    input: {\n        uid: \"Mg==\",\n        name: \"Rule name updated\",\n        description: \"Rule description\",\n        applies_to: [],\n        status: ENABLED,\n        condition: {\n            attribute: GRAND_TOTAL,\n            operator: MORE_THAN,\n            amount: {\n                value: 100.00,\n                currency: EUR\n            }\n        }\n    }\n  ) {\n    uid\n    name\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"updatePurchaseOrderApprovalRule\": {\n      \"uid\": \"Mg==\",\n      \"name\": \"Rule name updated\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/update.md",
          "loc": { "lines": { "from": 30, "to": 76 } }
        }
      }
    ],
    [
      "5800f49b-b534-409b-b736-78f25c47b767",
      {
        "pageContent": "---\ntitle: validatePurchaseOrders mutation\nedition: b2b\n---\n\n# validatePurchaseOrders mutation\n\nBy default, Adobe Commerce validates purchase orders automatically. However, purchase orders can become stuck in certain circumstances, such as when the message queue system is down and the purchase order is in the PENDING state. You might need to run the `validatePurchaseOrders` mutation to manually validate purchase orders.\n\nYou must specify one or more purchase order UIDs as input.\n\n## Syntax\n\n```graphql\nmutation {\n    validatePurchaseOrders(\n        input: ValidatePurchaseOrdersInput!\n    ) {\n        ValidatePurchaseOrdersOutput\n    }\n}\n```\n\n## Reference\n\nThe [`validatePurchaseOrders`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-validatePurchaseOrders) reference provides detailed information about the types and fields defined in this mutation.\n\n## Headers\n\nA valid [customer authentication token](../../../customer/mutations/generate-token.md) is required.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/validate.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "2440bf16-8156-4ecb-9cad-4cba169ea080",
      {
        "pageContent": "## Example usage\n\nThe following example validates purchase orders.\n\n**Request:**\n\n``` graphql\nmutation {\n  validatePurchaseOrders(\n    input: {\n        purchase_order_uids: [\"Nw==\", \"OA==\"]\n    }\n  ) {\n    purchase_orders {\n        number\n        status\n    }\n    errors {\n        message\n        type\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"validatePurchaseOrders\": {\n      \"purchase_orders\": [\n        {\n          \"number\": \"000000007\",\n          \"status\": \"APPROVAL_REQUIRED\"\n        },\n        {\n          \"number\": \"000000008\",\n          \"status\": \"APPROVAL_REQUIRED\"\n        }\n      ],\n      \"errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/purchase-order-rule/mutations/validate.md",
          "loc": { "lines": { "from": 32, "to": 77 } }
        }
      }
    ],
    [
      "221cefbb-bdb8-48a5-b39d-b085c78c0775",
      {
        "pageContent": "---\ntitle: Requisition lists (B2B) \ndescription:\n---\n\n# Requisition lists (B2B)\n\nRequisition lists are similar to wish lists, except they are used in the context of B2B transactions. Using a requisition list saves time for buyers who frequently purchase products on a continuing basis. Items are added to the shopping cart directly from the requisition list. Customers can maintain multiple lists to streamline their workflow. For example, they can create lists that focus on products from different vendors, buyers, teams, or campaigns. Requisition lists are available for both logged-in users and guests.\n\nThe [_B2B for Adobe Commerce_](https://experienceleague.adobe.com/docs/commerce-admin/b2b/requisition-lists/requisition-lists.html) guide describes requisition lists in detail.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/index.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "5eb942bb-16b3-414f-9f91-bbe765af085d",
      {
        "pageContent": "---\ntitle: RequisitionListItemInterface attributes and implementations\nedition: b2b\n---\n\n# RequisitionListItemInterface attributes and implementations\n\n[`RequisitionListItemInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RequisitionListItemInterface) provides details about items in a requisition list. It has the following implementations:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/index.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "3d61b0bc-a052-4d03-b646-66ee6eb005fd",
      {
        "pageContent": "*  [`BundleRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-BundleRequisitionListItem)\n*  [`ConfigurableRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ConfigurableRequisitionListItem)\n*  [`DownloadableRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-DownloadableRequisitionListItem)\n*  [`GiftCardRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-GiftCardRequisitionListItem)\n*  [`SimpleRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-SimpleRequisitionListItem)\n*  [`VirtualRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-VirtualRequisitionListItem)\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/index.md",
          "loc": { "lines": { "from": 10, "to": 17 } }
        }
      }
    ],
    [
      "839aee3a-94b9-4bd3-8c73-5a2057d4410a",
      {
        "pageContent": "There is not an implementation for grouped products. The items within a grouped product are managed individually.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/index.md",
          "loc": { "lines": { "from": 19, "to": 19 } }
        }
      }
    ],
    [
      "ea5d76f6-c91d-433e-8c0f-ef9c1ba781eb",
      {
        "pageContent": "## Example usage\n\nThe following mutation adds a product to a requisition list and returns information about the products in the list.\n\n**Request:**\n\n```graphql\nmutation {\n  addProductsToRequisitionList(\n      requisitionListUid: \"Mg==\"\n      requisitionListItems: [\n        {\n            sku: \"MS10\"\n            quantity: 1\n            selected_options: [\"Y29uZmlndXJhYmxlLzkzLzUw\",\"Y29uZmlndXJhYmxlLzE2MC8xNjg\"]\n        }\n      ]\n    ) {\n    requisition_list {\n      uid\n      items {\n        items {\n          ... on RequisitionListItemInterface {\n            uid\n            product {\n              uid\n              sku\n              name\n            }\n            quantity\n          }\n        }\n      }\n      items_count\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/index.md",
          "loc": { "lines": { "from": 21, "to": 57 } }
        }
      }
    ],
    [
      "c7c98999-8013-4797-a818-0d09424d4eb3",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addProductsToRequisitionList\": {\n      \"requisition_list\": {\n        \"uid\": \"Mg==\",\n        \"items\": {\n          \"items\": [\n            {\n              \"uid\": \"Mg==\",\n              \"product\": {\n                \"uid\": \"MTA=\",\n                \"sku\": \"24-WB05\",\n                \"name\": \"Savvy Shoulder Tote\"\n              },\n              \"quantity\": 1\n            },\n            {\n              \"uid\": \"Mw==\",\n              \"product\": {\n                \"uid\": \"NTk2\",\n                \"sku\": \"MS10\",\n                \"name\": \"Logan  HeatTec&reg; Tee\"\n              },\n              \"quantity\": 1\n            }\n          ]\n        },\n        \"items_count\": 2\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/index.md",
          "loc": { "lines": { "from": 58, "to": 95 } }
        }
      }
    ],
    [
      "6e14e827-828d-43c1-b891-1dbe9ff1f101",
      {
        "pageContent": "---\ntitle: RequisitionListItemInterface attributes and implementations\nedition: b2b\n---\n\n# RequisitionListItemInterface attributes and implementations\n\n[`RequisitionListItemInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RequisitionListItemInterface) provides details about items in a requisition list. It has the following implementations:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/item.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "2a582899-a330-4041-9478-13008c0c63ed",
      {
        "pageContent": "*  [`BundleRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-BundleRequisitionListItem)\n*  [`ConfigurableRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ConfigurableRequisitionListItem)\n*  [`DownloadableRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-DownloadableRequisitionListItem)\n*  [`GiftCardRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-GiftCardRequisitionListItem)\n*  [`SimpleRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-SimpleRequisitionListItem)\n*  [`VirtualRequisitionListItem`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-VirtualRequisitionListItem)\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/item.md",
          "loc": { "lines": { "from": 10, "to": 17 } }
        }
      }
    ],
    [
      "e3915f61-da09-4df0-8969-a289a9fa1204",
      {
        "pageContent": "There is not an implementation for grouped products. The items within a grouped product are managed individually.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/item.md",
          "loc": { "lines": { "from": 19, "to": 19 } }
        }
      }
    ],
    [
      "377c4c3d-ce05-4d19-9c46-0162fd9a6650",
      {
        "pageContent": "## Example usage\n\nThe following mutation adds a product to a requisition list and returns information about the products in the list.\n\n**Request:**\n\n```graphql\nmutation {\n  addProductsToRequisitionList(\n      requisitionListUid: \"Mg==\"\n      requisitionListItems: [\n        {\n            sku: \"MS10\"\n            quantity: 1\n            selected_options: [\"Y29uZmlndXJhYmxlLzkzLzUw\",\"Y29uZmlndXJhYmxlLzE2MC8xNjg\"]\n        }\n      ]\n    ) {\n    requisition_list {\n      uid\n      items {\n        items {\n          ... on RequisitionListItemInterface {\n            uid\n            product {\n              uid\n              sku\n              name\n            }\n            quantity\n          }\n        }\n      }\n      items_count\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/item.md",
          "loc": { "lines": { "from": 21, "to": 57 } }
        }
      }
    ],
    [
      "ac1699f8-ad16-4329-9634-b39d044ef077",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addProductsToRequisitionList\": {\n      \"requisition_list\": {\n        \"uid\": \"Mg==\",\n        \"items\": {\n          \"items\": [\n            {\n              \"uid\": \"Mg==\",\n              \"product\": {\n                \"uid\": \"MTA=\",\n                \"sku\": \"24-WB05\",\n                \"name\": \"Savvy Shoulder Tote\"\n              },\n              \"quantity\": 1\n            },\n            {\n              \"uid\": \"Mw==\",\n              \"product\": {\n                \"uid\": \"NTk2\",\n                \"sku\": \"MS10\",\n                \"name\": \"Logan  HeatTec&reg; Tee\"\n              },\n              \"quantity\": 1\n            }\n          ]\n        },\n        \"items_count\": 2\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/interfaces/item.md",
          "loc": { "lines": { "from": 58, "to": 95 } }
        }
      }
    ],
    [
      "771e0db5-ff18-4a7a-b0de-ae59d3f1bee6",
      {
        "pageContent": "---\ntitle: addRequisitionListItemsToCart mutation\nedition: b2b\ncontributor_name: EY\n---\n\n# addRequisitionListItemsToCart mutation\n\nThe `addRequisitionListItemsToCart` mutation adds requisition list items to the cart. The requisition list does not change after adding items to the cart.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  addRequisitionListItemsToCart (\n    requisitionListUid: ID\n    requisitionListItemUids: [ID!]\n  ) {\n    AddRequisitionListItemsToCartOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "65dfe058-0a74-4691-908f-1764e15adbf3",
      {
        "pageContent": "## Reference\n\nThe [`addRequisitionListItemsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addRequisitionListItemsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 30, "to": 32 } }
        }
      }
    ],
    [
      "f77ed07e-ea17-4d05-9ad3-d708f7792313",
      {
        "pageContent": "## Example usage\n\nThe following example adds items to the cart.\n\n**Request:**\n\n```graphql\nmutation {\n  addRequisitionListItemsToCart (\n    requisitionListUid: \"Mg==\"\n    requisitionListItemUids:\n    [\"Mw==\", \"Ng==\", \"Nw==\"]\n  )\n  {\n    status\n    cart {\n      items {\n        uid\n        product {\n          uid\n          sku\n          name\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 34, "to": 60 } }
        }
      }
    ],
    [
      "2fe03008-8419-43e0-9e72-c61cd9d0435e",
      {
        "pageContent": "```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"addRequisitionListItemsToCart\": {\n      \"status\": true,\n      \"cart\": {\n        \"items\": [\n          {\n            \"uid\": \"NQ==\",\n            \"product\": {\n              \"uid\": \"NTk2\",\n              \"sku\": \"MS10\",\n              \"name\": \"Logan  HeatTec&reg; Tee\"\n            }\n          },\n          {\n            \"uid\": \"Nw==\",\n            \"product\": {\n              \"uid\": \"MTI=\",\n              \"sku\": \"24-WB03\",\n              \"name\": \"Driven Backpack\"\n            }\n          },\n          {\n            \"uid\": \"OA==\",\n            \"product\": {\n              \"uid\": \"Mg==\",\n              \"sku\": \"24-MB04\",\n              \"name\": \"Strive Shoulder Pack\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 61, "to": 101 } }
        }
      }
    ],
    [
      "e936d195-6b42-47f6-9c1f-95accc4dc89b",
      {
        "pageContent": "---\ntitle: addProductsToRequisitionList mutation\nedition: b2b\ncontributor_name: EY\n---\n\n# addProductsToRequisitionList mutation\n\nThe `addProductsToRequisitionList` mutation adds products to a requisition list.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  addProductsToRequisitionList(\n    requisitionListUid: ID!\n    requisitionListItems: [RequisitionListItemsInput!]!\n  ) {\n    AddProductsToRequisitionListOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/add-products.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "cd983caa-4edc-4fd6-a21b-3d39a467e7d6",
      {
        "pageContent": "## Reference\n\nThe [`addProductsToRequisitionList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addProductsToRequisitionList) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/add-products.md",
          "loc": { "lines": { "from": 30, "to": 32 } }
        }
      }
    ],
    [
      "b5a6278c-91b1-481b-a367-622cb5144e0a",
      {
        "pageContent": "## Example usage\n\nThe following example adds products to a requisition list.\n\n**Request:**\n\n``` graphql\nmutation {\n  addProductsToRequisitionList(\n      requisitionListUid: \"Mg==\"\n      requisitionListItems: [\n        {\n            sku: \"MS10\"\n            quantity: 1\n            selected_options: [\"Y29uZmlndXJhYmxlLzkzLzUw\",\"Y29uZmlndXJhYmxlLzE2MC8xNjg\"]\n        }\n      ]\n    ) {\n    requisition_list {\n      uid\n      items {\n        items {\n          ... on RequisitionListItemInterface {\n            uid\n            product {\n              uid\n              sku\n              name\n            }\n            quantity\n          }\n        }\n      }\n      items_count\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/add-products.md",
          "loc": { "lines": { "from": 34, "to": 70 } }
        }
      }
    ],
    [
      "16eda758-f068-4db2-80cc-35817093b239",
      {
        "pageContent": "```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"addProductsToRequisitionList\": {\n      \"requisition_list\": {\n        \"uid\": \"Mg==\",\n        \"items\": {\n          \"items\": [\n            {\n              \"uid\": \"Mw==\",\n              \"product\": {\n                \"uid\": \"NTk2\",\n                \"sku\": \"MS10\",\n                \"name\": \"Logan  HeatTec&reg; Tee\"\n              },\n              \"quantity\": 1\n            }\n          ]\n        },\n        \"items_count\": `\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/add-products.md",
          "loc": { "lines": { "from": 71, "to": 99 } }
        }
      }
    ],
    [
      "4eafc51a-2723-49a3-9341-37d9959be2f4",
      {
        "pageContent": "---\ntitle: clearCustomerCart mutation\nedition: b2b\ncontributor_name: EY\n---\n\n# clearCustomerCart mutation\n\nThe `clearCustomerCart` mutation clears the customer's cart. B2B requisition lists must be enabled to execute this mutation.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  clearCustomerCart(\n    cartUid: String!\n  ) {\n    ClearCustomerCartOutput\n  }\n}\n```\n\n## Reference\n\nThe [`clearCustomerCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-clearCustomerCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/clear-customer-cart.md",
          "loc": { "lines": { "from": 1, "to": 31 } }
        }
      }
    ],
    [
      "fa08a6bd-7731-440e-bbf6-11f2ce14acf1",
      {
        "pageContent": "## Example usage\n\nThe following example clears the customer's cart.\n\n**Request:**\n\n``` graphql\nmutation {\n  clearCustomerCart(\n      cartUid: \"8k0Q4MpH2IGahWrTRtqM61YV2MtLPApz\"\n    ) {\n        status\n    }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"clearCustomerCart\": {\n        \"status\": \"true\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/clear-customer-cart.md",
          "loc": { "lines": { "from": 33, "to": 59 } }
        }
      }
    ],
    [
      "a955578c-da4e-4b63-a5c9-0a2108e80c15",
      {
        "pageContent": "---\ntitle: copyItemsBetweenRequisitionLists mutation\nedition: b2b\ncontributor_name: EY\n---\n\n# copyItemsBetweenRequisitionLists mutation\n\nThe `copyItemsBetweenRequisitionLists` mutation copies items from one requisition list to another.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\n## Syntax\n\n```graphql\nmutation {\n  copyItemsBetweenRequisitionLists(\n    sourceRequisitionListUid: ID!,\n    destinationRequisitionListUid: ID,\n    requisitionListItem: CopyItemsBetweenRequisitionListsInput\n  ) {\n    CopyItemsFromRequisitionListsOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/copy-items.md",
          "loc": { "lines": { "from": 1, "to": 29 } }
        }
      }
    ],
    [
      "5c7ddcb3-24ff-4535-b54c-567237829bd9",
      {
        "pageContent": "## Reference\n\nThe [`copyItemsBetweenRequisitionLists`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-copyItemsBetweenRequisitionLists) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example copies an item from one requisition list to another.\n\n**Request:**\n\n``` graphql\nmutation {\n  copyItemsBetweenRequisitionLists(\n      sourceRequisitionListUid: \"Mg==\",\n      destinationRequisitionListUid: \"Mw==\",\n      requisitionListItem: {\n        requisitionListItemUids: [\n          \"Nw==\"\n        ]\n      }\n    ) {\n    requisition_list {\n      uid\n      name\n      items_count\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"copyItemsBetweenRequisitionLists\": {\n      \"requisition_list\": {\n        \"uid\": \"Mw==\",\n        \"name\": \"Rarely ordered items\",\n        \"items_count\": 3\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/copy-items.md",
          "loc": { "lines": { "from": 31, "to": 75 } }
        }
      }
    ],
    [
      "9c5bbc81-fe08-4952-8fa0-c964065159a3",
      {
        "pageContent": "## Related topics\n\n*  [moveItemsBetweenRequisitionLists mutation](move-items.md)\n*  [deleteRequisitionListItems mutation](delete.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/copy-items.md",
          "loc": { "lines": { "from": 77, "to": 80 } }
        }
      }
    ],
    [
      "0be374e5-a6dc-4806-9fff-68af3e111d2a",
      {
        "pageContent": "---\ntitle: createRequisitionList mutation\nedition: b2b\ncontributor_name: Zilker Technology\ncontributor_link: https://www.ztech.io/\n---\n\n# createRequisitionList mutation\n\nThe `createRequisitionList` mutation creates a requisition list for the logged in customer.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [`storeConfig` query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  createRequisitionList(\n    name: String!\n    description: String\n  ) {\n    CreateRequisitionListOutput\n  }\n}\n```\n\n## Reference\n\nThe [`createRequisitionList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createRequisitionList) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/create.md",
          "loc": { "lines": { "from": 1, "to": 33 } }
        }
      }
    ],
    [
      "9cc515dd-7c9f-4e24-89b4-6d6b21b90605",
      {
        "pageContent": "## Example usage\n\nThe following example creates the `Frequently Ordered Products` requisition list.\n\n**Request:**\n\n```graphql\nmutation {\n  createRequisitionList(input:{\n    name: \"Frequently Ordered Products\"\n    description: \"Frequently ordered products list\"\n  }\n  ) {\n    requisition_list {\n      uid\n      name\n      description\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createRequisitionList\": {\n      \"requisition_list\": {\n          \"uid\": \"Mw==\"\n          \"name\": \"Frequently Ordered Products\"\n          \"description\": \"Frequently ordered products list\"\n        }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/create.md",
          "loc": { "lines": { "from": 35, "to": 71 } }
        }
      }
    ],
    [
      "9a415d54-5c2a-4d1a-b0dd-2b64fa7cbeb7",
      {
        "pageContent": "---\ntitle: deleteRequisitionListItems mutation\nedition: b2b\ncontributor_name: EY\n---\n\n# deleteRequisitionListItems mutation\n\nThe `deleteRequisitionListItems` mutation removes items from the specified requisition list for the logged in customer.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  deleteRequisitionListItems(\n    requisitionListUid: ID!\n    requisitionListItemUids: [ID!]!\n  ) {\n    DeleteRequisitionListItemsOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/delete-items.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "fc242229-afca-4dfb-9cb4-2b9cc9512eac",
      {
        "pageContent": "## Reference\n\nThe [`deleteRequisitionListItems`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteRequisitionListItems) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example removes the specified items from the requisition list.\n\n**Request:**\n\n``` graphql\nmutation {\n  deleteRequisitionListItems(\n    requisitionListUid: \"Mg==\",\n    requisitionListItemUids: [\"NA==\",\"NQ==\"]\n  ) {\n    requisition_list {\n      uid\n      items_count\n    }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"deleteRequisitionListItems\": {\n      \"requisition_list\": {\n        \"uid\": \"Mg==\",\n        \"items_count\": 1\n      }\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [updateRequisitionList mutation](update.md)\n*  [deleteRequisitionList mutation](delete.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/delete-items.md",
          "loc": { "lines": { "from": 30, "to": 72 } }
        }
      }
    ],
    [
      "b1276d8b-f933-45e0-b401-559681a13e94",
      {
        "pageContent": "---\ntitle: deleteRequisitionList mutation\nedition: b2b\ncontributor_name: Zilker Technology\ncontributor_link: https://www.ztech.io/\n---\n\n# deleteRequisitionList mutation\n\nThe `deleteRequisitionList` mutation deletes a requisition list of the logged in customer. The response can include any remaining requisition lists.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  deleteRequisitionList(\n    requisitionListUid: ID!\n  ) {\n    deleteRequisitionListOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/delete.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "16b05937-a892-4f9c-8480-2b4cd4f26244",
      {
        "pageContent": "## Reference\n\nThe [`deleteRequisitionList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteRequisitionList) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example deletes a requisition list.\n\n**Request:**\n\n```graphql\nmutation {\n  deleteRequisitionList(\n    requisitionListUid: \"Mw==\"\n  ) {\n    status\n    requisition_lists {\n      total_count\n      items {\n        uid\n        name\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deleteRequisitionList\": {\n      \"status\": true,\n      \"requisition_lists\": {\n        \"total_count\": 1\n        \"items\": [\n          {\n            \"uid\": \"Mg==\",\n            \"name\": \"Frequently Ordered Products\"\n          }\n        ]\n      }\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [createRequisitionList mutation](create.md)\n*  [updateRequisitionList mutation](update.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/delete.md",
          "loc": { "lines": { "from": 30, "to": 81 } }
        }
      }
    ],
    [
      "6b134a4b-d6a7-459a-992e-1271d49a1fd3",
      {
        "pageContent": "---\ntitle: Requisition list (B2B) mutations\nedition: b2b   \n---\n\n# Requisition list (B2B) mutations\n\nThe B2B requisition list mutations allow you to perform the following operations:\n\n- Manage requisition lists\n  - [Create a requisition list](create.md)\n  - [Update a requisition list](update.md)\n  - [Delete a requistion list](delete.md)\n\n- Manage the contents of a requisition list\n  - [Add products to a requisition list](add-products.md)\n  - [Copy products from one requisition list to another](copy-items.md)\n  - [Move products from one requisition list to another](move-items.md)\n  - [Update items in a requisition list](update-items.md)\n  - [Delete items from a requistion list](delete-items.md)\n\n- Manage the cart\n  - [Add requisition list items to the cart](add-items-to-cart.md)\n  - [Clear the cart](clear-customer-cart.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "73e5969c-80d3-4827-868e-71bb70bc56b5",
      {
        "pageContent": "---\ntitle: moveItemsBetweenRequisitionLists mutation\nedition: b2b\ncontributor_name: EY\n---\n\n# moveItemsBetweenRequisitionLists mutation\n\nThe `moveItemsBetweenRequisitionLists` mutation moves items from one requisition list to another.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  moveItemsBetweenRequisitionLists(\n    sourceRequisitionListUid: ID!\n    destinationRequisitionListUid: ID\n    requisitionListItem: MoveItemsBetweenRequisitionListsInput\n  ) {\n    MoveItemsBetweenRequisitionListsOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/move-items.md",
          "loc": { "lines": { "from": 1, "to": 29 } }
        }
      }
    ],
    [
      "248542bd-621b-45c9-834a-87681cb9a2ae",
      {
        "pageContent": "## Reference\n\nThe [`moveItemsBetweenRequisitionLists`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-moveItemsBetweenRequisitionLists) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/move-items.md",
          "loc": { "lines": { "from": 31, "to": 33 } }
        }
      }
    ],
    [
      "24249d6d-d058-476e-a434-939ec7d33b44",
      {
        "pageContent": "## Example usage\n\nThe following example moves an item from one requisition list to another.\n\n**Request:**\n\n```graphql\nmutation {\n  moveItemsBetweenRequisitionLists(\n      sourceRequisitionListUid: \"Mg==\"\n      destinationRequisitionListUid: \"Mw==\"\n      requisitionListItem: {\n        requisitionListItemUids:\n          [\"MTI=\"]\n        }\n        ) {\n      source_requisition_list {\n        uid\n        name\n        items_count\n      }\n      destination_requisition_list {\n        uid\n        name\n        items_count\n      }\n  }\n}\n```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"moveItemsBetweenRequisitionLists\": {\n      \"source_requisition_list\": {\n        \"uid\": \"Mg==\",\n        \"name\": \"Frequently Ordered Products\",\n        \"items_count\": 3\n      },\n      \"destination_requisition_list\": {\n        \"uid\": \"Mw==\",\n        \"name\": \"Rarely ordered items\",\n        \"items_count\": 2\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/move-items.md",
          "loc": { "lines": { "from": 35, "to": 84 } }
        }
      }
    ],
    [
      "d3dcebd9-f338-4a92-896b-ccaa429e7b02",
      {
        "pageContent": "## Related topics\n\n*  [copyItemsBetweenRequisitionLists mutation](copy-items.md)\n*  [deleteRequisitionListItems mutation](delete-items.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/move-items.md",
          "loc": { "lines": { "from": 86, "to": 89 } }
        }
      }
    ],
    [
      "f755c3b2-603a-4014-86b0-46cb0037e59b",
      {
        "pageContent": "---\ntitle: updateRequisitionListItems mutation\nedition: b2b\ncontributor_name: EY\n---\n\n# updateRequisitionListItems mutation\n\nThe `updateRequisitionListItems` mutation updates products in a requisition list.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  updateRequisitionListItems(\n    requisitionListUid: ID!\n    requisitionListItems: [UpdateRequisitionListItemsInput!]!\n  ) {\n    UpdateRequisitionListItemsOutput\n  }\n}\n```\n\n## Reference\n\nThe [`updateRequisitionListItems`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateRequisitionListItems) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/update-items.md",
          "loc": { "lines": { "from": 1, "to": 32 } }
        }
      }
    ],
    [
      "93e2170e-6f01-4c8f-b2b3-697c0a941eeb",
      {
        "pageContent": "## Example usage\n\nThe following example updates the quantity of an item in a requisition list.\n\n**Request:**\n\n```graphql\nmutation {\n  updateRequisitionListItems(\n    requisitionListUid: \"Mg==\",\n    requisitionListItems: [\n      {\n          item_id: \"Mw==\"\n          quantity: 2\n      }\n    ]\n    ){\n    requisition_list {\n      uid\n      name\n      items_count\n      items {\n        items {\n          uid\n          quantity\n          product {\n            uid\n            name\n            sku\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/update-items.md",
          "loc": { "lines": { "from": 34, "to": 68 } }
        }
      }
    ],
    [
      "0935abf9-7872-4ce8-8606-d1b8bfe1dad6",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateRequisitionListItems\": {\n      \"requisition_list\": {\n        \"uid\": \"Mg==\",\n        \"name\": \"Frequently Ordered Products\",\n        \"items_count\": 1,\n        \"items\": {\n          \"items\": [\n            {\n              \"uid\": \"Mw==\",\n              \"quantity\": 2,\n              \"product\": {\n                \"uid\": \"NTk2\",\n                \"name\": \"Logan  HeatTec&reg; Tee\",\n                \"sku\": \"MS10\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/update-items.md",
          "loc": { "lines": { "from": 69, "to": 98 } }
        }
      }
    ],
    [
      "20c36e0a-fdf3-4b57-b202-e02ed49bc445",
      {
        "pageContent": "---\ntitle: updateRequisitionList mutation\nedition: b2b\ncontributor_name: Zilker Technology\ncontributor_link: https://www.ztech.io/\n---\n\n# updateRequisitionList mutation\n\nThe `updateRequisitionList` mutation updates the name and, optionally, the description of a requisition list.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [storeConfig query](../../../../schema/store/queries/store-config.md) with the `is_requisition_list_active` attribute to determine whether requisition lists are enabled.\n\nThis mutation requires a valid [customer authentication token](../../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  updateRequisitionList(\n    requisitionListUid: ID!\n    name: String!\n    description: String\n  ) {\n    updateRequisitionListOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/update.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "e6b8eb3e-9472-4745-b68d-dee94f5ad1c5",
      {
        "pageContent": "## Reference\n\nThe [`updateRequisitionList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateRequisitionList) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example renames the `Frequently Ordered Products` requisition list and updates its description.\n\n**Request:**\n\n```graphql\nmutation {\n  updateRequisitionList(input:{\n    name: \"Frequently Ordered Essential Products\"\n    description: \"Frequently ordered essential products list\"\n  }\n    requisitionListUid: \"Mw==\"\n  ) {\n    requisition_list {\n      uid\n      name\n      description\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateRequisitionList\": {\n      \"requisition_list\": {\n          \"uid\": \"Mw==\"\n          \"name\": \"Frequently Ordered Essential Products\"\n          \"description\": \"Frequently ordered essential products list\"\n        }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/update.md",
          "loc": { "lines": { "from": 32, "to": 73 } }
        }
      }
    ],
    [
      "7a7d6022-541f-440f-9529-149ef9462194",
      {
        "pageContent": "## Related topics\n\n*  [createRequisitionList mutation](create.md)\n*  [deleteRequisitionList mutation](delete.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/b2b/requisition-list/mutations/update.md",
          "loc": { "lines": { "from": 75, "to": 78 } }
        }
      }
    ],
    [
      "0778f4f4-8884-44b5-bdb1-aa1c55ce56c7",
      {
        "pageContent": "---\ntitle: Cart\n---\n\n# Cart\n\nThe shopper performs the following tasks that affect the cart:\n\n* Select products to purchase. The shopper can subsequently modify the quantity of a product to purchase, or remove a product from the cart.\n\n* View the total cost of selected items.\n\n* Apply or remove coupons, gift cards, reward points, or store credits, thereby changing the total cost.\n\n* Set the shipping address and provider.\n\n* Set the payment method and billing address.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/index.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "dc9c2565-b199-460b-acfb-9d44356e48fb",
      {
        "pageContent": "---\ntitle: CartItemInterface attributes and implementations\n---\n\n# CartItemInterface attributes and implementations\n\nThe [`CartItemInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CartItemInterface) has the following implementations:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "a23e269c-2049-4cfc-b0d0-5a0e3c8b3655",
      {
        "pageContent": "*  [BundleCartItem]https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-BundleCartItem\n*  [ConfigurableCartItem](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ConfigurableCartItem)\n*  [DownloadableCartItem](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-DownloadableCartItem)\n*  [GiftCardCartItem](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-GiftCardCartItem)\n*  [SimpleCartItem](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-SimpleCartItem)\n*  [VirtualCartItem](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-VirtualCartItem)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 9, "to": 14 } }
        }
      }
    ],
    [
      "2054cfbf-0669-40f0-8d62-8af4460bfd7c",
      {
        "pageContent": "## Example usage\n\nThe following mutation adds a configurable product and a bundle product to the cart. The response contains details about these items.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 16, "to": 20 } }
        }
      }
    ],
    [
      "cc08b0ab-ade0-40f9-865c-8ff9fb64ac0e",
      {
        "pageContent": "```graphql\nmutation {\n  addProductsToCart(\n    cartId: \"h7HmZwfU7zIGR94jsuzOVBUAYtyPefkr\"\n    cartItems: [\n      {\n        quantity: 1\n        sku: \"WSH12\"\n        selected_options: [\"Y29uZmlndXJhYmxlLzkzLzUz\",\"Y29uZmlndXJhYmxlLzE2MS8xNzQ=\"]\n      }\n      {\n        quantity: 1\n        sku: \"24-WG080\"\n        selected_options: [\n          \"YnVuZGxlLzEvMS8x\"\n          \"YnVuZGxlLzIvNC8x\"\n          \"YnVuZGxlLzMvNS8x\"\n          \"YnVuZGxlLzQvOC8x\"\n        ]\n      }\n    ]\n  ) {\n    cart {\n      items {\n        uid\n        product {\n          name\n          sku\n        }\n        quantity\n        ... on ConfigurableCartItem {\n          configurable_options {\n            configurable_product_option_uid\n            configurable_product_option_value_uid\n            option_label\n            value_label\n          }\n        }\n        ... on BundleCartItem {\n          bundle_options {\n            uid\n            label\n            type\n            values {\n              id\n              label",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 22, "to": 67 } }
        }
      }
    ],
    [
      "622e862a-8858-4bb8-a871-a4911e2245a3",
      {
        "pageContent": "label\n              price\n              quantity\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 67, "to": 76 } }
        }
      }
    ],
    [
      "606780ca-76a8-471e-8271-a0fae978c018",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 77, "to": 79 } }
        }
      }
    ],
    [
      "3ce8d056-7aa7-467b-b120-495d5eb38717",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"addProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"uid\": \"MjU=\",\n            \"product\": {\n              \"name\": \"Erika Running Short\",\n              \"sku\": \"WSH12\"\n            },\n            \"quantity\": 1,\n            \"configurable_options\": [\n              {\n                \"configurable_product_option_uid\": \"Y29uZmlndXJhYmxlLzIwNDgvOTM=\",\n                \"configurable_product_option_value_uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                \"option_label\": \"Color\",\n                \"value_label\": \"Green\"\n              },\n              {\n                \"configurable_product_option_uid\": \"Y29uZmlndXJhYmxlLzIwNDgvMTYx\",\n                \"configurable_product_option_value_uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzQ=\",\n                \"option_label\": \"Size\",\n                \"value_label\": \"28\"\n              }\n            ]\n          },\n          {\n            \"uid\": \"Mjc=\",\n            \"product\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 81, "to": 111 } }
        }
      }
    ],
    [
      "2098cb7d-c8f2-4640-a029-b0d83ec2707c",
      {
        "pageContent": "\"name\": \"Sprite Yoga Companion Kit\",\n              \"sku\": \"24-WG080\"\n            },\n            \"quantity\": 1,\n            \"bundle_options\": [\n              {\n                \"uid\": \"YnVuZGxlLzE=\",\n                \"label\": \"Sprite Stasis Ball\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 1,\n                    \"label\": \"Sprite Stasis Ball 55 cm\",\n                    \"price\": 23,\n                    \"quantity\": 1\n                  }\n                ]\n              },\n              {\n                \"uid\": \"YnVuZGxlLzI=\",\n                \"label\": \"Sprite Foam Yoga Brick\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 4,\n                    \"label\": \"Sprite Foam Yoga Brick\",\n                    \"price\": 5,\n                    \"quantity\": 1\n                  }\n                ]\n              },\n              {\n                \"uid\": \"YnVuZGxlLzM=\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 112, "to": 144 } }
        }
      }
    ],
    [
      "a11920aa-8297-4fdf-8469-faf70748ee86",
      {
        "pageContent": "\"label\": \"Sprite Yoga Strap\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 5,\n                    \"label\": \"Sprite Yoga Strap 6 foot\",\n                    \"price\": 14,\n                    \"quantity\": 1\n                  }\n                ]\n              },\n              {\n                \"uid\": \"YnVuZGxlLzQ=\",\n                \"label\": \"Sprite Foam Roller\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 8,\n                    \"label\": \"Sprite Foam Roller\",\n                    \"price\": 19,\n                    \"quantity\": 1\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/interfaces/index.md",
          "loc": { "lines": { "from": 145, "to": 176 } }
        }
      }
    ],
    [
      "64cdbab4-ea53-4d32-904f-c01a3546d177",
      {
        "pageContent": "---\ntitle: addBundleProductsToCart mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# addBundleProductsToCart mutation\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nWe recommend using the [addProductsToCart mutation](add-products.md) to add any type of product to the cart.\n\nUse the `addBundleProductsToCart` mutation to add bundle products to a specific cart.\n\n## Syntax\n\n`mutation: {addBundleProductsToCart(input: AddBundleProductsToCartInput): {AddBundleProductsToCartOutput}}`\n\n## Reference\n\nThe [`addBundleProductsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addBundleProductsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "8f2d8313-bfb7-4c16-8aa4-1849caa842ae",
      {
        "pageContent": "## Example usage\n\nThe following example uses a bundle product \"Sprite Yoga Companion Kit\" from Adobe Commerce and Magento Open Source sample data.\nThe SKU of this product is: **24-WG080**\n\nThis example adds one bundle product with following children to the specified shopping cart:\n\n-  Sprite Stasis Ball 65 cm (x1)\n-  Sprite Foam Yoga Brick (x2)\n-  Sprite Yoga Strap 10 foot (x1)\n-  Sprite Foam Roller (x1)\n\nThe `cart_id` used in this example was [generated](create-empty-cart.md) by creating an empty cart.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 23, "to": 37 } }
        }
      }
    ],
    [
      "1b6c90d0-c839-42e3-9167-f0307085d099",
      {
        "pageContent": "```graphql\nmutation {\n  addBundleProductsToCart(\n    input: {\n      cart_id: \"2m3Wpue1L3bNARhErAKbZ8Lb7czvgq6R\"\n      cart_items: [\n      {\n        data: {\n          sku: \"24-WG080\"\n          quantity: 1\n        }\n        bundle_options: [\n          {\n            id: 1\n            quantity: 1\n            value: [\n              \"2\"\n            ]\n          },\n          {\n            id: 2\n            quantity: 2\n            value: [\n              \"4\"\n            ]\n          },\n          {\n            id: 3\n            quantity: 1\n            value: [\n              \"7\"\n            ]\n          },\n          {\n            id: 4\n            quantity: 1\n            value: [\n              \"8\"\n            ]\n          }\n        ]\n      },\n    ]\n  }) {\n    cart {\n      items {\n        uid\n        quantity\n        product {\n          sku\n        }\n        ... on BundleCartItem {\n          bundle_options {\n            uid\n            label\n            type\n            values {\n              id",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 39, "to": 96 } }
        }
      }
    ],
    [
      "cde074da-4520-458f-a72c-21244af2e550",
      {
        "pageContent": "id\n              label\n              price\n              quantity\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 96, "to": 106 } }
        }
      }
    ],
    [
      "31c04bb3-25c9-433a-8a49-dcd68dcf89f5",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 107, "to": 109 } }
        }
      }
    ],
    [
      "00af989f-83a9-47db-b328-10925d9839f3",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"addBundleProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"uid\": \"MjI=\",\n            \"quantity\": 1,\n            \"product\": {\n              \"sku\": \"WSH12\"\n            }\n          },\n          {\n            \"uid\": \"MjQ=\",\n            \"quantity\": 3,\n            \"product\": {\n              \"sku\": \"24-WB01\"\n            }\n          },\n          {\n            \"uid\": \"MzI=\",\n            \"quantity\": 1,\n            \"product\": {\n              \"sku\": \"24-WG080\"\n            },\n            \"bundle_options\": [\n              {\n                \"uid\": \"YnVuZGxlLzE=\",\n                \"label\": \"Sprite Stasis Ball\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 2,\n                    \"label\": \"Sprite Stasis Ball 65 cm\",\n                    \"price\": 27,\n                    \"quantity\": 1\n                  }\n                ]\n              },\n              {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 111, "to": 151 } }
        }
      }
    ],
    [
      "521780bc-05c5-41d8-88ea-6696a228072e",
      {
        "pageContent": "{\n                \"uid\": \"YnVuZGxlLzI=\",\n                \"label\": \"Sprite Foam Yoga Brick\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 4,\n                    \"label\": \"Sprite Foam Yoga Brick\",\n                    \"price\": 5,\n                    \"quantity\": 2\n                  }\n                ]\n              },\n              {\n                \"uid\": \"YnVuZGxlLzM=\",\n                \"label\": \"Sprite Yoga Strap\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 7,\n                    \"label\": \"Sprite Yoga Strap 10 foot\",\n                    \"price\": 21,\n                    \"quantity\": 1\n                  }\n                ]\n              },\n              {\n                \"uid\": \"YnVuZGxlLzQ=\",\n                \"label\": \"Sprite Foam Roller\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 8,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 151, "to": 183 } }
        }
      }
    ],
    [
      "e3d95aa5-4140-44d0-9d18-5ad82404da20",
      {
        "pageContent": "\"label\": \"Sprite Foam Roller\",\n                    \"price\": 19,\n                    \"quantity\": 1\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 184, "to": 197 } }
        }
      }
    ],
    [
      "b7c77b89-ca33-4a3e-aacc-7759d8a9d2ca",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` database table.\n`Could not find a product with SKU \"XXX\"` | A simple product with the SKU specified in the `data.sku` argument does not exist.\n`Required parameter \"cart_id\" is missing` | The `cart_id` argument is omitted or contains an empty value.\n\n## Related topics\n\n-  [Bundle product data types](../../products/interfaces/types/bundle.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-bundle-products.md",
          "loc": { "lines": { "from": 199, "to": 209 } }
        }
      }
    ],
    [
      "6790da91-2a31-45ed-823e-0facb884ed08",
      {
        "pageContent": "---\ntitle: addConfigurableProductsToCart mutation\n---\n\n# addConfigurableProductsToCart mutation\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nWe recommend using the [addProductsToCart mutation](add-products.md) to add any type of product to the cart.\n\nUse the `addConfigurableProductsToCart` mutation to add configurable products to a specific cart.\n\n## Syntax\n\n`mutation: {addConfigurableProductsToCart(input: AddConfigurableProductsToCartInput) {AddConfigurableProductsToCartOutput}}`\n\n## Reference\n\nThe [`addConfigurableProductsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addConfigurableProductsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-configurable-products.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "29e07694-8fcf-428e-8af8-74fb468c7c82",
      {
        "pageContent": "## Example usage\n\nThe following example adds two black Teton Pullover Hoodies size extra-small to the specified shopping cart. The `cart_id` used in this example was [generated](create-empty-cart.md) by creating an empty cart.\n\n**Request:**\n\n```graphql\nmutation {\n  addConfigurableProductsToCart(\n    input: {\n      cart_id: \"4JQaNVJokOpFxrykGVvYrjhiNv9qt31C\"\n      cart_items: [\n        {\n          parent_sku: \"MH02\"\n          data: {\n            quantity: 2\n            sku: \"MH02-XS-Black\"\n          }\n        }\n      ]\n    }\n  ) {\n    cart {\n      items {\n        uid\n        quantity\n        product {\n          name\n          sku\n        }\n        ... on ConfigurableCartItem {\n          configurable_options {\n            option_label\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-configurable-products.md",
          "loc": { "lines": { "from": 21, "to": 59 } }
        }
      }
    ],
    [
      "c5214b90-0437-4383-aa88-85318ce595e6",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addConfigurableProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"uid\": \"Mzc=\",\n            \"quantity\": 2,\n            \"product\": {\n              \"name\": \"Teton Pullover Hoodie\",\n              \"sku\": \"MH02\"\n            },\n            \"configurable_options\": [\n              {\n                \"option_label\": \"Color\"\n              },\n              {\n                \"option_label\": \"Size\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-configurable-products.md",
          "loc": { "lines": { "from": 60, "to": 91 } }
        }
      }
    ],
    [
      "20dc9639-45f9-44b6-947a-29a5a4a1915d",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-configurable-products.md",
          "loc": { "lines": { "from": 93, "to": 93 } }
        }
      }
    ],
    [
      "1a1b3f39-b810-4f86-bd10-770c7dfaab11",
      {
        "pageContent": "Error | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Could not add the product with SKU configurable to the shopping cart: The product that was requested doesn't exist. Verify the product and try again.` | The simple product with the SKU specified in the `data`.`sku` attribute does not exist.\n`Could not find a product with SKU \"XXX\"` | The configurable product with SKU specified in the `parent_sku` argument does not exist.\n`Could not find specified product.` | The simple product specified in the `data`.`sku` argument is not assigned to the configurable product provided in the `parent_sku` attribute.\n`Required parameter \"cart_id\" is missing` | The `cart_id` argument was omitted or contains an empty value.\n`Required parameter \"cart_items\" is missing` | The `cart_items` argument was omitted or contains an empty array.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-configurable-products.md",
          "loc": { "lines": { "from": 95, "to": 102 } }
        }
      }
    ],
    [
      "469172ad-a87c-4648-92d8-4131b3db5985",
      {
        "pageContent": "`Required parameter \"email\" is missing` | The `email` argument was omitted or contains an empty value.\n`The requested qty is not available` | The requested quantity specified `data`.`quantity` is not available.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-configurable-products.md",
          "loc": { "lines": { "from": 103, "to": 104 } }
        }
      }
    ],
    [
      "a9f0b228-5e09-484f-876e-1e3902950d7e",
      {
        "pageContent": "## Related topics\n\n-  [Configurable product data types](../../products/interfaces/types/configurable.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-configurable-products.md",
          "loc": { "lines": { "from": 106, "to": 108 } }
        }
      }
    ],
    [
      "1f71a289-7f32-43a9-9921-4112bc7232c9",
      {
        "pageContent": "---\ntitle: addDownloadableProductsToCart mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# addDownloadableProductsToCart mutation\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nWe recommend using the [addProductsToCart mutation](add-products.md) to add any type of product to the cart.\n\nA downloadable product can be anything that you can deliver as a file, such as an eBook, music, video, software application, or an update. To add a downloadable product to a cart, you must provide the cart ID, the SKU, and the quantity. In some cases, you must include the IDs for downloadable product links. You can also optionally specify customizable options.\n\n## Syntax\n\n```graphql\nmutation: {\n    addDownloadableProductsToCart(\n        input: AddDownloadableProductsToCartInput\n    ): {\n        AddDownloadableProductsToCartOutput\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "0a8ab8d3-babf-45e6-92a9-33461785404f",
      {
        "pageContent": "## Reference\n\nThe [`addDownloadableProductsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addDownloadableProductsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 27, "to": 29 } }
        }
      }
    ],
    [
      "14324607-2a11-4fb0-a76c-0a70dec797d6",
      {
        "pageContent": "## Example usage\n\nThe following examples show how to add a downloadable product to a shopping cart , depending on whether the **Links can be purchased separately** option is selected on the **Downloadable Information** section of the product page.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 31, "to": 33 } }
        }
      }
    ],
    [
      "cf5276f8-b7ef-45ac-a611-1a488fa621d4",
      {
        "pageContent": "### Add a downloadable product to a cart with `Links can be purchased separately` enabled\n\nThe following example shows how to add a downloadable product in which the **Links can be purchased separately** option is enabled. The payload includes custom downloadable links `Episode 2` and `Episode 3`.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 35, "to": 39 } }
        }
      }
    ],
    [
      "e108ffc7-9b96-4c63-b5d7-284c89ed5ea6",
      {
        "pageContent": "**Request:**\n\n```graphql\nmutation {\n  addDownloadableProductsToCart(\n    input: {\n      cart_id: \"gMV2BFQuNGiQmTnepQlMGko7Xc4P3X1w\"\n      cart_items: {\n        data: {\n          sku: \"240-LV09\"\n          quantity: 1\n        }\n        downloadable_product_links: [\n          {\n            link_id: 7                 # Episode 2\n          }\n          {\n            link_id: 8                 # Episode 3\n          }\n        ]\n      }\n    }\n  ) {\n    cart {\n      items {\n        product {\n          sku\n        }\n        quantity\n        ... on DownloadableCartItem {\n          links {\n            title\n            price\n          }\n          samples {\n            title\n            sample_url\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 39, "to": 81 } }
        }
      }
    ],
    [
      "7fa77026-7a28-4294-849e-5f81b645950a",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 82, "to": 84 } }
        }
      }
    ],
    [
      "d7dccc09-cd97-49ef-92d6-5eed46e3a9fa",
      {
        "pageContent": "```text\n{\n  \"data\": {\n    \"addDownloadableProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"product\": {\n              \"sku\": \"240-LV09\"\n            },\n            \"quantity\": 1,\n            \"links\": [\n              {\n                \"title\": \"Episode 2\",\n                \"price\": 9\n              },\n              {\n                \"title\": \"Episode 3\",\n                \"price\": 9\n              }\n            ],\n            \"samples\": [\n              {\n                \"title\": \"Trailer #1\",\n                \"sample_url\": \"https://<M2_INSTANCE>/downloadable/download/sample/sample_id/16/\"\n              },\n              {\n                \"title\": \"Trailer #2\",\n                \"sample_url\": \"https://<M2_INSTANCE>/downloadable/download/sample/sample_id/17/\"\n              },\n              {\n                \"title\": \"Trailer #3\",\n                \"sample_url\": \"https://<M2_INSTANCE>/downloadable/download/sample/sample_id/18/\"\n              }\n            ]\n          }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 86, "to": 121 } }
        }
      }
    ],
    [
      "896d624b-5105-431b-aeea-2b0d13a4c494",
      {
        "pageContent": "}\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 121, "to": 127 } }
        }
      }
    ],
    [
      "7e7bb2a1-bc39-4651-926f-7a369d6d2bf3",
      {
        "pageContent": "### Add a downloadable product to a cart with disabled `Links can be purchased separately`\n\nThe following example shows how to add a downloadable product in which the **Links can be purchased separately** option is disabled. All downloadable links are added to the cart automatically.\n\n**Request:**\n\n```graphql\nmutation {\n  addDownloadableProductsToCart(\n    input: {\n      cart_id: \"gMV2BFQuNGiQmTnepQlMGko7Xc4P3X1w\"\n      cart_items: {\n        data: {\n          sku: \"240-LV07\"\n          quantity: 1\n        }\n      }\n    }\n  ) {\n    cart {\n      items {\n        product {\n          sku\n        }\n        quantity\n        ... on DownloadableCartItem {\n          links {\n            title\n            price\n          }\n          samples {\n            title\n            sample_url\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 129, "to": 167 } }
        }
      }
    ],
    [
      "08f1f5c0-c094-40e4-9740-5ce5884c558e",
      {
        "pageContent": "```\n\n**Response:**\n\n```text\n{\n  \"data\": {\n    \"addDownloadableProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"product\": {\n              \"sku\": \"240-LV07\"\n            },\n            \"quantity\": 2,\n            \"links\": [\n              {\n                \"title\": \"Solo Power Circuit\",\n                \"price\": 14\n              }\n            ],\n            \"samples\": [\n              {\n                \"title\": \"Trailer #1\",\n                \"sample_url\": \"https://<M2_INSTANCE>/downloadable/download/sample/sample_id/10/\"\n              },\n              {\n                \"title\": \"Trailer #2\",\n                \"sample_url\": \"https://<M2_INSTANCE>/downloadable/download/sample/sample_id/11/\"\n              },\n              {\n                \"title\": \"Trailer #3\",\n                \"sample_url\": \"https://<M2_INSTANCE>/downloadable/download/sample/sample_id/12/\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 168, "to": 209 } }
        }
      }
    ],
    [
      "984be18d-c210-453c-80a4-dab6755afab2",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` database table.\n`Could not find a product with SKU \"YYY\"` | A product with the SKU specified in the `data`.`sku` argument does not exist.\n`Required parameter \"cart_id\" is missing` | The mutation does not contain a `cart_id` argument.\n`Required parameter \"cart_items\" is missing` | The `cart_items` argument is empty or is not of type `array`.\n`Please specify product link(s).` | You tried to add a downloadable product in which the `Links can be purchased separately` option is enabled, but you did not specify individual product links.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-downloadable-products.md",
          "loc": { "lines": { "from": 211, "to": 219 } }
        }
      }
    ],
    [
      "6ca3ca9f-b7f4-4550-8d65-0dc6a9a15766",
      {
        "pageContent": "---\ntitle: addProductsToCart mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# addProductsToCart mutation\n\nThe `addProductsToCart` mutation adds any type of product to the shopping cart. It streamlines the process of adding products by allowing you to specify multiple product types in a single call. We recommend using this mutation to add products to the cart instead of the single-purpose mutations, such as `addSimpleProductsToCart` and `addConfigurableProductsToCart`.\n\nYou must specify the Cart ID along with the list of SKU and quantity pairs as parameters to add the products to the shopping cart.\n\nThe `CartItemInput` object now contains the `selected_options` and `entered_options` attributes. A selected option is predefined, and the shopper chooses from a set of possible values. Entered options generally contain text the shopper types, but other possibilities exist.\n\nSelected options can be used in the following product types:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "2b0b5056-1d97-43d4-a4ff-203495aac1f6",
      {
        "pageContent": "*  Customizable options such those presented in drop-down menu, radio buttons, and checkboxes\n\n*  Bundle products\n\n*  Configurable products\n\n*  Downloadable products\n\n*  Gift cards (amount)\n\n*  Grouped products\n\nEntered options can be used in the following product types:\n\n*  Customizable options such as those presented in a text field, text area, or file\n\n*  Gift cards (custom amounts, sender and recipient fields, messages)\n\nUse the `uid` attribute to reference selected or entered options. For entered options, the `uid` represents an option value, while for entered options, the `uid` represents an option. Each `uid` is unique across different options in a set.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 17, "to": 35 } }
        }
      }
    ],
    [
      "bd639d14-d08c-4e33-934b-e20ebf4c5ae2",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  addProductsToCart(\n    cartId: String!\n    cartItems: [CartItemInput!]!\n  ) {\n    AddProductsToCartOutput\n  }\n}\n```\n\n## Reference\n\nThe [`addProductsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addProductsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 37, "to": 52 } }
        }
      }
    ],
    [
      "47b43928-3e5e-41a5-803a-07ff4a64bfa6",
      {
        "pageContent": "## Example usage\n\nThese examples show the minimal payload for adding products, including those with customizable options.\n\n### Add a simple product to a cart\n\nThe following example adds a simple product to a cart.\n\n**Request:**\n\n```graphql\nmutation {\n  addProductsToCart(\n    cartId: \"8k0Q4MpH2IGahWrTRtqM61YV2MtLPApz\"\n    cartItems: [\n      {\n        quantity: 1\n        sku: \"24-MB04\"\n      }\n    ]\n  ) {\n    cart {\n      items {\n        product {\n          name\n          sku\n        }\n        quantity\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"product\": {\n              \"name\": \"Strive Shoulder Pack\",\n              \"sku\": \"24-MB04\"\n            },\n            \"quantity\": 1\n          }\n        ]\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 54, "to": 113 } }
        }
      }
    ],
    [
      "f674256e-e66b-4b3f-a504-02af2738e458",
      {
        "pageContent": "### Add a configurable product to a cart\n\nThe following examples show two ways to add the same configurable product (`WSH12`, a pair of shorts) to the cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 115, "to": 117 } }
        }
      }
    ],
    [
      "1d789ab1-934e-43cb-a0ec-a10da3bd1e3c",
      {
        "pageContent": "#### Specify a parent and a child SKU\n\nIn this example, the configurable product SKU is the `parent_sku` attribute, while the simple product variant is the `sku` attribute.\n\n**Request:**\n\n```graphql\nmutation {\n  addProductsToCart(\n    cartId: \"8k0Q4MpH2IGahWrTRtqM61YV2MtLPApz\"\n    cartItems: [\n      {\n        quantity: 1\n        parent_sku: \"WSH12\"\n        sku: \"WSH12-28-Green\"\n      }\n    ]\n  ) {\n    cart {\n      items {\n        id\n        product {\n          name\n          sku\n        }\n        quantity\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 119, "to": 152 } }
        }
      }
    ],
    [
      "4c9a173f-378d-4cf5-98f3-887de6685b1d",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"id\": \"24\",\n            \"product\": {\n              \"name\": \"Erika Running Short\",\n              \"sku\": \"WSH12\"\n            },\n            \"quantity\": 1\n          },\n          {\n            \"id\": \"26\",\n            \"product\": {\n              \"name\": \"Erika Running Short-28-Green\",\n              \"sku\": \"WSH12-28-Green\"\n            },\n            \"quantity\": 1\n          }\n        ]\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 153, "to": 185 } }
        }
      }
    ],
    [
      "9bc85e76-a4f1-4138-8281-83c33e425db0",
      {
        "pageContent": "#### Specify the SKU with selected options\n\nIn this example, the mutation specifies the size and color as selected options. The first option specifies the color, while the second option specifies the size. The [`products` query](../../products/queries/products.md#retrieve-variant-uid-values) shows how to obtain the values specified in the `selected_options` array.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 187, "to": 191 } }
        }
      }
    ],
    [
      "32711807-9431-4148-b81a-6d0f42a2a3c0",
      {
        "pageContent": "**Request:**\n\n```graphql\nmutation {\n  addProductsToCart(\n    cartId: \"2m3Wpue1L3bNARhErAKbZ8Lb7czvgq6R\"\n    cartItems: [\n      {\n        quantity: 1\n        sku: \"WSH12\"\n        selected_options: [\"Y29uZmlndXJhYmxlLzkzLzUz\",\"Y29uZmlndXJhYmxlLzE2MS8xNzQ=\"]\n      }\n    ]\n  ) {\n    cart {\n      items {\n        product {\n          name\n          sku\n        }\n        ... on ConfigurableCartItem {\n          configurable_options {\n            configurable_product_option_uid\n            option_label\n            configurable_product_option_value_uid\n            value_label\n          }\n        }\n        quantity\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 191, "to": 227 } }
        }
      }
    ],
    [
      "1d129c13-f7fa-4b8f-a0c5-02d08e206213",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"product\": {\n              \"name\": \"Erika Running Short\",\n              \"sku\": \"WSH12\"\n            },\n            \"configurable_options\": [\n              {\n                \"configurable_product_option_uid\": \"Y29uZmlndXJhYmxlLzIwNDgvOTM=\",\n                \"option_label\": \"Color\",\n                \"configurable_product_option_value_uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                \"value_label\": \"Green\"\n              },\n              {\n                \"configurable_product_option_uid\": \"Y29uZmlndXJhYmxlLzIwNDgvMTYx\",\n                \"option_label\": \"Size\",\n                \"configurable_product_option_value_uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzQ=\",\n                \"value_label\": \"28\"\n              }\n            ],\n            \"quantity\": 1\n          }\n        ]\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 228, "to": 265 } }
        }
      }
    ],
    [
      "f9923f52-0b02-456f-9f69-e19fa90afe4b",
      {
        "pageContent": "### Add a simple product with entered options\n\nThe following example adds a simple product with a customizable option to the cart. The customizable option allows the shopper to specify a message for engraving.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe customizable option is not part of the Luma sample data.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 267, "to": 275 } }
        }
      }
    ],
    [
      "b5eed568-58c2-4fe1-a11c-2e3e0070017c",
      {
        "pageContent": "**Request:**\n\n```graphql\nmutation {\n  addProductsToCart(\n    cartId: \"2m3Wpue1L3bNARhErAKbZ8Lb7czvgq6R\"\n    cartItems: [\n      {\n        quantity: 1\n        sku: \"24-WG03\"\n        entered_options: [{\n          uid: \"Y3VzdG9tLW9wdGlvbi8x\"\n          value: \"Congrats, Julie!\"\n        }]\n      }\n    ]\n  ) {\n    cart {\n      items {\n        product {\n          name\n          sku\n        }\n        ... on SimpleCartItem {\n          customizable_options {\n            customizable_option_uid\n            label\n            values {\n              customizable_option_value_uid\n              value\n            }\n          }\n        }\n        quantity\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 275, "to": 316 } }
        }
      }
    ],
    [
      "839e3878-d9ba-4c45-9901-2ee0f94c0d18",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"id\": \"19\",\n            \"product\": {\n              \"name\": \"Clamber Watch\",\n              \"sku\": \"24-WG03\"\n            },\n            \"customizable_options\": [\n              {\n                \"customizable_option_uid\": \"Y3VzdG9tLW9wdGlvbi8x\",\n                \"label\": \"Engraving\",\n                \"values\": [\n                  {\n                    \"customizable_option_value_uid\": \"Y3VzdG9tLW9wdGlvbi8x\",\n                    \"value\": \"Congrats, Julie!\"\n                  }\n                ]\n              }\n            ],\n            \"quantity\": 1\n          }\n        ]\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 317, "to": 353 } }
        }
      }
    ],
    [
      "53e5ef92-fb8f-4e9b-9c35-8ac2f486019a",
      {
        "pageContent": "## Add a bundle product with selected options to a cart\n\nThe following example adds the Sprite Yoga Companion Kit bundle product to the cart. The bundle product is comprised of four simple products, and the selected simple products are specified with a value in the `selected_options` array. Use the `products` query to determine these UID values. Note that each UID value is an encoded value representing the following string:\n\n`bundle/<bundle_option_id>/<bundle_option_selection_id>/<quantity>`\n\nBecause the encoded value includes the quantity, the schema does not contain a `quantity` attribute for individual simple products.\n\nIn this example, the UID values are encoded versions of these strings:\n\n```text\nbundle/1/1/1\nbundle/2/4/1\nbundle/3/5/1\nbundle/4/8/1",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 355, "to": 369 } }
        }
      }
    ],
    [
      "6bc09097-531d-4186-8249-890ce6a36779",
      {
        "pageContent": "```\n\n**Request:**\n\n```graphql\nmutation {\n  addProductsToCart(\n    cartId: \"ELwvX8VJinGJ9Q2vOXSiCTS4gvCDKP8U\"\n    cartItems: [\n      {\n        quantity: 1\n        sku: \"24-WG080\"\n        selected_options: [\n          \"YnVuZGxlLzEvMS8x\"\n          \"YnVuZGxlLzIvNC8x\"\n          \"YnVuZGxlLzMvNS8x\"\n          \"YnVuZGxlLzQvOC8x\"\n        ]\n      }\n    ]\n  ) {\n    cart {\n      items {\n        uid\n        product {\n          name\n          sku\n        }\n        quantity\n        ... on BundleCartItem {\n          bundle_options {\n            uid\n            label\n            type\n            values {\n              id\n              label\n              price\n              quantity\n            }\n          }\n        }\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 370, "to": 419 } }
        }
      }
    ],
    [
      "e861b4c6-b246-44e2-bd63-2e9b661ade60",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 420, "to": 422 } }
        }
      }
    ],
    [
      "6479aa38-1050-4d9c-b7bf-199b7a0393b6",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"addProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"uid\": \"MTQ=\",\n            \"product\": {\n              \"name\": \"Sprite Yoga Companion Kit\",\n              \"sku\": \"24-WG080\"\n            },\n            \"quantity\": 1,\n            \"bundle_options\": [\n              {\n                \"uid\": \"YnVuZGxlLzE=\",\n                \"label\": \"Sprite Stasis Ball\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 1,\n                    \"label\": \"Sprite Stasis Ball 55 cm\",\n                    \"price\": 23,\n                    \"quantity\": 1\n                  }\n                ]\n              },\n              {\n                \"uid\": \"YnVuZGxlLzI=\",\n                \"label\": \"Sprite Foam Yoga Brick\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 4,\n                    \"label\": \"Sprite Foam Yoga Brick\",\n                    \"price\": 5,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 424, "to": 459 } }
        }
      }
    ],
    [
      "d33cf142-33bf-4d43-a0ba-45fff84d7b68",
      {
        "pageContent": "\"quantity\": 1\n                  }\n                ]\n              },\n              {\n                \"uid\": \"YnVuZGxlLzM=\",\n                \"label\": \"Sprite Yoga Strap\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 5,\n                    \"label\": \"Sprite Yoga Strap 6 foot\",\n                    \"price\": 14,\n                    \"quantity\": 1\n                  }\n                ]\n              },\n              {\n                \"uid\": \"YnVuZGxlLzQ=\",\n                \"label\": \"Sprite Foam Roller\",\n                \"type\": \"radio\",\n                \"values\": [\n                  {\n                    \"id\": 8,\n                    \"label\": \"Sprite Foam Roller\",\n                    \"price\": 19,\n                    \"quantity\": 1\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 460, "to": 498 } }
        }
      }
    ],
    [
      "780b7f79-3f92-45af-ba90-a28a8749a91f",
      {
        "pageContent": "### Add a bundle product with entered options to the cart\n\nFor `entered_options`, the `uid` attribute contains the encoded entered value. The `value` attribute defines the quantity. If the `BundleProduct.items.options.can_change_quantity` attribute is `false`, then the bundle product definition sets the quantity for the simple product. Otherwise, the shopper decides the quantity.\n\nThe Luma sample data does not provide any bundle products with entered options. The following snippet shows how to construct the mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 500, "to": 504 } }
        }
      }
    ],
    [
      "1276ee9d-d1b5-41b7-82a9-09149fe5498a",
      {
        "pageContent": "```graphql\nmutation {\n  addProductsToCart(\n    cartId: \"ELwvX8VJinGJ9Q2vOXSiCTS4gvCDKP8U\"\n    cartItems: [\n      {\n        quantity: 1\n        sku: \"bundle1\"\n        entered_options: [\n          {\n            uid: \"EncodedEnteredValue1\"\n            value: 1\n          }\n        ]\n        selected_options: [\n          \"EncodedSelectedValue1\"\n          \"EncodedSelectedValue2\"\n        ]\n      }\n    ]\n  ) {\n    cart {\n      items {\n        uid\n        product {\n          name\n          sku\n        }\n        quantity\n        ... on BundleCartItem {\n          bundle_options {\n            uid\n            label\n            type\n            values {\n              id\n              label\n              price\n              quantity\n            }\n          }\n        }\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 506, "to": 556 } }
        }
      }
    ],
    [
      "f2d3ba03-98db-4cbb-9dd5-a1c8005f04ee",
      {
        "pageContent": "## Errors\n\nCode | Error | Description\n--- | --- | ---\n`CART_ID_INVALID` | `Could not find a cart with ID` | The specified cart ID is invalid.\n`PRODUCT_NOT_FOUND` | `Could not find a product with SKU \"XXX\"` | A product with the SKU specified in the argument `data`.`sku` does not exist.\n`NOT_SALABLE` | `Product that you are trying to add is not available.` | A requested product is not available\n`INSUFFICIENT_STOCK` | `This product is out of stock` | The requested product is out of stock\n`UNDEFINED` | `UNDEFINED` | The error message does not match any error code",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-products.md",
          "loc": { "lines": { "from": 558, "to": 566 } }
        }
      }
    ],
    [
      "90f92e68-200e-4ceb-99fe-fbef78ac834f",
      {
        "pageContent": "---\ntitle: addSimpleProductsToCart mutation\n---\n\n# addSimpleProductsToCart mutation\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nWe recommend using the [addProductsToCart mutation](add-products.md) to add any type of product to the cart.\n\nThe `addSimpleProductsToCart` mutation allows you to add any number of simple and group products to the cart at the same time.\n\nSimple products are physical products that do not have variations, such as color, size, or price. Group products are a set of simple standalone products that are assigned a unique SKU and are presented as a group. Each product in the group is purchased as a separate item.\n\nTo add a simple or grouped product to a cart, you must provide the cart ID, the SKU, and the quantity. You can also optionally provide customizable options.\n\n## Syntax\n\n`mutation: {addSimpleProductsToCart(input: AddSimpleProductsToCartInput): {AddSimpleProductsToCartOutput}}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-simple-products.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "4580d52f-c12f-4549-961b-77f0aacc03dd",
      {
        "pageContent": "## Reference\n\nThe [`addSimpleProductsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addSimpleProductsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-simple-products.md",
          "loc": { "lines": { "from": 21, "to": 23 } }
        }
      }
    ],
    [
      "610782f7-73e3-483f-a2ae-affd3fdbb5a0",
      {
        "pageContent": "## Example usage\n\nThese examples show the minimal payload and a payload that includes customizable options.\n\n### Add a simple product to a cart\n\nThe following example adds a simple product to a cart. The response contains the entire contents of the customer's cart.\n\n**Request:**\n\n```graphql\nmutation {\n  addSimpleProductsToCart(\n    input: {\n      cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n      cart_items: [\n        {\n          data: {\n            quantity: 1\n            sku: \"24-MB04\"\n          }\n        }\n      ]\n    }\n  ) {\n    cart {\n      items {\n        id\n        product {\n          name\n          sku\n        }\n        quantity\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addSimpleProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"id\": \"13\",\n            \"product\": {\n              \"name\": \"Strive Shoulder Pack\",\n              \"sku\": \"24-MB04\"\n            },\n            \"quantity\": 1\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-simple-products.md",
          "loc": { "lines": { "from": 25, "to": 85 } }
        }
      }
    ],
    [
      "e4a6d7bb-9fdc-4300-b872-f622f89b20d6",
      {
        "pageContent": "### Add a simple product with customizable options to a cart\n\nIf a product has a customizable option, you can specify the option's value in the `addSimpleProductsToCart` request.\n\n**Request:**\n\n```graphql\nmutation {\n  addSimpleProductsToCart (input: {\n    cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\",\n    cart_items: {\n      data: {\n        sku: \"simple\"\n        quantity: 1\n      },\n      customizable_options: [\n        {\n          id: 121\n          value_string: \"field value\"\n        }\n      ]\n    }\n  }) {\n    cart {\n      items {\n        product {\n           name\n        }\n        quantity\n        ... on SimpleCartItem {\n          customizable_options {\n            label\n            values {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-simple-products.md",
          "loc": { "lines": { "from": 87, "to": 127 } }
        }
      }
    ],
    [
      "10d5f07f-d2e5-45db-8eb8-463b77340efd",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addSimpleProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"product\": {\n              \"name\": \"simple\"\n            },\n            \"quantity\": 1,\n            \"customizable_options\": [\n              {\n                \"label\": \"Field Option\",\n                \"values\": [\n                  {\n                    \"value\": \"field value\"\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-simple-products.md",
          "loc": { "lines": { "from": 128, "to": 159 } }
        }
      }
    ],
    [
      "9c6800ae-6d10-4634-b99a-5d6e622f464a",
      {
        "pageContent": "### Add a grouped product to a cart\n\nThe following example adds a grouped product (`Workout-Kit`) to a cart. The grouped product contains three simple products.\n\n**Request:**\n\n```graphql\nmutation {\n  addSimpleProductsToCart(\n    input: {\n      cart_id: \"2m3Wpue1L3bNARhErAKbZ8Lb7czvgq6R\"\n      cart_items: [\n        {\n          data: {\n            quantity: 1\n            sku: \"24-WB01\"\n          }\n        }\n      ]\n    }\n  ) {\n    cart {\n      items {\n        uid\n        product {\n          name\n          sku\n        }\n        quantity\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addSimpleProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"uid\": \"NDA=\",\n            \"product\": {\n              \"name\": \"Voyage Yoga Bag\",\n              \"sku\": \"24-WB01\"\n            },\n            \"quantity\": 1\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-simple-products.md",
          "loc": { "lines": { "from": 161, "to": 217 } }
        }
      }
    ],
    [
      "16032c7d-4743-4ff6-bd27-f2a0c1c0d92a",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Could not find a product with SKU \"YYY\"` | A simple product with the SKU specified in the `data`.`sku` argument does not exist.\n`Required parameter \"cart_id\" is missing` | The `cart_id` argument was omitted or contains an empty value.\n`Required parameter \"cart_items\" is missing` | The `cart_items` argument was omitted or contains an empty value.\n`The current user cannot perform operations on cart XXX` | An unauthorized user (guest) tried to add the product into a customer's cart, or an authorized user (customer) tried to add the product into the cart of another customer.\n`The product's required option(s) weren't entered. Make sure the options are entered and try again.` | A simple product has customizable options that were not specified in the mutation, but are required for adding the product into the cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-simple-products.md",
          "loc": { "lines": { "from": 219, "to": 228 } }
        }
      }
    ],
    [
      "b3ea0b1e-e6b8-4018-9bfd-42d3b883294b",
      {
        "pageContent": "---\ntitle: addVirtualProductsToCart mutation\n---\n\n# addVirtualProductsToCart mutation\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nWe recommend using the [addProductsToCart mutation](add-products.md) to add any type of product to the cart.\n\nA virtual product represents a saleable item that is not physical, such as a membership, service, warranty, or subscription. Virtual products do not need to be shipped or downloaded, nor do they require stock management.\n\nThe `addVirtualProductsToCart` mutation allows you to add multiple virtual products to the cart at the same time, but you cannot add other product types with this mutation. To add a virtual product to a cart, you must provide the cart ID, the SKU, and the quantity. You can also optionally provide customizable options.\n\n## Syntax\n\n`mutation: {addVirtualProductsToCart(input: AddVirtualProductsToCartInput): {AddVirtualProductsToCartOutput}}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-virtual-products.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "faf97351-da40-4f64-9a64-8219b101b4d4",
      {
        "pageContent": "## Reference\n\nThe [`addVirtualProductsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addVirtualProductsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-virtual-products.md",
          "loc": { "lines": { "from": 19, "to": 21 } }
        }
      }
    ],
    [
      "03c2b98f-50a4-4cae-9427-6df195a581ea",
      {
        "pageContent": "## Example usage\n\nThe Luma sample data does not include any virtual products. The following example requires that you create a virtual product with the `sku` value of `Membership-Gold` with a price of $49.99.\n\n**Request:**\n\n```graphql\n\nmutation {\n  addVirtualProductsToCart(\n    input: {\n      cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\",\n      cart_items: [\n        {\n          data: {\n            quantity: 1\n            sku: \"Membership-Gold\"\n          }\n        }\n       ]\n    }\n  ) {\n    cart {\n      items {\n        product {\n          name\n        }\n        quantity\n      }\n      prices {\n        grand_total {\n          value\n          currency\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-virtual-products.md",
          "loc": { "lines": { "from": 23, "to": 60 } }
        }
      }
    ],
    [
      "6e4f5719-3bc6-42c8-8f02-4dbb4b0a7ecb",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addVirtualProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"product\": {\n              \"name\": \"Gold Membership\"\n            },\n            \"quantity\": 1\n          }\n        ],\n        \"prices\": {\n          \"grand_total\": {\n            \"value\": 49.99,\n            \"currency\": \"USD\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-virtual-products.md",
          "loc": { "lines": { "from": 61, "to": 88 } }
        }
      }
    ],
    [
      "bbe64ae5-2d73-4b94-8854-ecf5dacf86fc",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Could not find a product with SKU \"YYY\"` | A virtual product with the SKU specified in the `data`.`sku` argument does not exist.\n`Required parameter \"cart_id\" is missing` | The `cart_id` argument was omitted or contains an empty value.\n`Required parameter \"cart_items\" is missing` | The `cart_items` argument was omitted or contains an empty value.\n`The current user cannot perform operations on cart XXX` | An unauthorized user (guest) tried to add the product into a customer's cart, or an authorized user (customer) tried to add the product into the cart of another customer.\n`The product's required option(s) weren't entered. Make sure the options are entered and try again.` | A virtual product has customizable options that were not specified in the mutation, but are required for adding the product into the cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/add-virtual-products.md",
          "loc": { "lines": { "from": 90, "to": 99 } }
        }
      }
    ],
    [
      "8d5494b5-c660-41db-bc2d-c44fad582eea",
      {
        "pageContent": "---\ntitle: applyCouponToCart mutation\n---\n\n# applyCouponToCart mutation\n\nThe `applyCouponToCart` mutation applies a pre-defined coupon code to the specified cart. Valid coupon codes are defined in cart price rules.\n\n## Syntax\n\n`mutation: {applyCouponToCart(input: ApplyCouponToCartInput) {ApplyCouponToCartOutput}}`\n\n## Reference\n\nThe [`applyCouponToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-applyCouponToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-coupon.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "7754f077-397d-4164-9e82-ba81ddaab407",
      {
        "pageContent": "## Example usage\n\nThe following example applies the coupon code `H2O` to the cart. For this coupon to be valid, the Affirm Water Bottle (`sku`: 24-UG06) must be in the cart.\n\n**Request:**\n\n``` text\nmutation {\n  applyCouponToCart(\n    input: {\n      cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\",\n      coupon_code: \"H20\"\n    }\n  ) {\n    cart {\n      items {\n        product {\n          name\n        }\n        quantity\n      }\n      applied_coupons {\n        code\n      }\n      prices {\n        grand_total{\n          value\n          currency\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-coupon.md",
          "loc": { "lines": { "from": 17, "to": 49 } }
        }
      }
    ],
    [
      "b242b17e-3708-46af-a65c-33f5b4741ce9",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"applyCouponToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"product\": {\n              \"name\": \"Gold Membership\"\n            },\n            \"quantity\": 2\n          },\n          {\n            \"product\": {\n              \"name\": \"Strive Shoulder Pack\"\n            },\n            \"quantity\": 1\n          },\n          {\n            \"product\": {\n              \"name\": \"Affirm Water Bottle \"\n            },\n            \"quantity\": 1\n          }\n        ],\n        \"applied_coupons\": {\n          \"code\": \"H20\"\n        },\n        \"prices\": {\n          \"grand_total\": {\n            \"value\": 134.08,\n            \"currency\": \"USD\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-coupon.md",
          "loc": { "lines": { "from": 50, "to": 92 } }
        }
      }
    ],
    [
      "cac2172a-6ebb-4b9c-a8ec-75cd93942b73",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`A coupon is already applied to the cart. Please remove it to apply another` | The value specified in the `coupon_code` argument has already applied to cart. Use [removeCouponFromCart](remove-coupon.md) to remove the current coupon and to apply another.\n`Cart does not contain products.` | The coupon cannot be applied to an empty cart.\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Required parameter \"coupon_code\" is missing` | The required `coupon_code` argument contains an empty value.\n`The coupon code isn't valid. Verify the code and try again.` | The entered coupon code is not applicable. Check the existing shopping cart price rules for details.\n`The current user cannot perform operations on cart XXX` | An unauthorized user (guest) tried to add the product into a customer's cart, or an authorized user (customer) tried to add the product into the cart of another customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-coupon.md",
          "loc": { "lines": { "from": 94, "to": 103 } }
        }
      }
    ],
    [
      "f27f0ba9-6f61-4cf8-9ef7-0847e907902a",
      {
        "pageContent": "---\ntitle: applyGiftCardToCart mutation\nedition: ee\n---\n\n# applyGiftCardToCart mutation\n\nThe `applyGiftCardToCart` mutation applies a pre-defined gift card code to the specified cart.\n\n## Syntax\n\n `mutation: applyGiftCardToCart(input: ApplyGiftCardToCartInput): ApplyGiftCardToCartOutput`\n\n## Reference\n\nThe [`applyGiftCardToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-applyGiftCardToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-giftcard.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "5ded9ed2-3fdc-4424-8a24-10526d752716",
      {
        "pageContent": "## Example usage\n\nThe following example adds a gift card with the code `0330CEIVTLB4` to the cart. The gift card has a value of $20.\n\n**Request:**\n\n```graphql\nmutation {\n  applyGiftCardToCart(\n    input: {\n      cart_id: \"lY8PnKhlHBGc4WS5v0Y3dWjxiA5PvvgY\"\n      gift_card_code: \"0330CEIVTLB4\"\n    }\n  ) {\n    cart {\n      applied_gift_cards {\n        applied_balance {\n          value\n          currency\n        }\n        code\n        current_balance {\n          value\n          currency\n        }\n        expiration_date\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-giftcard.md",
          "loc": { "lines": { "from": 18, "to": 47 } }
        }
      }
    ],
    [
      "4a8edec7-0f75-44d7-9399-db3107643a84",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"applyGiftCardToCart\": {\n      \"cart\": {\n        \"applied_gift_cards\": [\n          {\n            \"applied_balance\": {\n              \"value\": 20,\n              \"currency\": \"USD\"\n            },\n            \"code\": \"0330CEIVTLB4\",\n            \"current_balance\": {\n              \"value\": 20,\n              \"currency\": \"USD\"\n            },\n            \"expiration_date\": null\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-giftcard.md",
          "loc": { "lines": { "from": 48, "to": 75 } }
        }
      }
    ],
    [
      "9902201a-6f0f-4d12-85a4-972d564092b5",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The gift card code couldn't be added. Verify your information and try again.` | The specified `gift_card_code` is incorrect.\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Field ApplyGiftCardToCartInput.gift_card_code of required type String! was not provided.` | The required field `gift_card_code` was not provided.\n`Required parameter \\\"gift_card_code\\\" is missing` | The value provided in the field `gift_card_code` is empty.\n`Field ApplyGiftCardToCartInput.cart_id of required type String! was not provided.` | The required field `cart_id` was not provided.\n`Required parameter \\\"cart_id\\\" is missing` | The value provided in the field `cart_id` is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-giftcard.md",
          "loc": { "lines": { "from": 77, "to": 86 } }
        }
      }
    ],
    [
      "aedd9bf5-cd2c-4a04-beda-d86edf263792",
      {
        "pageContent": "---\ntitle: applyRewardPointsToCart mutation\nedition: ee\n---\n\n# applyRewardPointsToCart mutation\n\nThe `applyRewardPointsToCart` mutation applies reward points to the customer's cart. You cannot specify a quantity of reward points. If the reward points balance is less than the cart total, the application applies the entire reward points balance. Otherwise, the application applies as many reward points needed to bring the total to 0. Fractional reward points are discarded.\n\nUse the [`removeRewardPointsFromCart` mutation](remove-reward-points.md) to undo the results of the `applyRewardPointsToCart` mutation.\n\n## Syntax\n\n`mutation: applyRewardPointsToCart(cartId: ID!): ApplyRewardPointsToCartOutput`\n\n## Reference\n\nThe [`applyRewardPointsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-applyRewardPointsToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-reward-points.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "67f991d0-3653-492a-bd37-97b9fc7d44c1",
      {
        "pageContent": "## Example usage\n\nThe following example applies $5 to the cart. In this example, the exchange rate is defined as 25 reward points equals $5.\n\n**Request:**\n\n```graphql\nmutation {\n  applyRewardPointsToCart(cartId: \"8k0Q4MpH2IGahWrTRtqM61YV2MtLPApz\")\n  {\n    cart {\n      items {\n        quantity\n        product {\n          sku\n          name\n          price_range {\n            maximum_price {\n              final_price {\n                currency\n                value\n              }\n            }\n          }\n        }\n      }\n      applied_reward_points {\n        money {\n          currency\n          value\n        }\n        points\n      }\n      prices {\n        grand_total {\n          currency\n          value\n        }\n        applied_taxes {\n          amount {\n            currency\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-reward-points.md",
          "loc": { "lines": { "from": 20, "to": 67 } }
        }
      }
    ],
    [
      "b610dc86-3ada-4be3-b259-45dda4a4f817",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"applyRewardPointsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"quantity\": 1,\n            \"product\": {\n              \"sku\": \"WJ04\",\n              \"name\": \"Ingrid Running Jacket\",\n              \"price_range\": {\n                \"maximum_price\": {\n                  \"final_price\": {\n                    \"currency\": \"USD\",\n                    \"value\": 84\n                  }\n                }\n              }\n            }\n          }\n        ],\n        \"applied_reward_points\": {\n          \"money\": {\n            \"currency\": \"USD\",\n            \"value\": 5\n          },\n          \"points\": 25\n        },\n        \"prices\": {\n          \"grand_total\": {\n            \"currency\": \"USD\",\n            \"value\": 90.93\n          },\n          \"applied_taxes\": [\n            {\n              \"amount\": {\n                \"currency\": \"USD\",\n                \"value\": 6.93\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-reward-points.md",
          "loc": { "lines": { "from": 68, "to": 119 } }
        }
      }
    ],
    [
      "a1b8b6ea-5f9e-42c7-a42c-de1723a0c827",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Required parameter \"cart_id\" is missing` | The mutation does not contain a `cart_id` argument.\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-reward-points.md",
          "loc": { "lines": { "from": 121, "to": 126 } }
        }
      }
    ],
    [
      "0de68388-d84d-474a-8d49-03b88cc31e88",
      {
        "pageContent": "---\ntitle: applyStoreCreditToCart mutation\nedition: ee\n---\n\n# applyStoreCreditToCart mutation\n\nThe `applyStoreCreditToCart` mutation applies store credit to the specified cart. Store credit must be enabled on the store to run this mutation.\n\nStore credit is an amount that the merchant applies to a customer account as a result of a refund or similar transaction. If gift cards are enabled for a store, then a customer receives store credit when redeeming a gift card. No matter how the customer obtains store credit, these funds can be used to pay for purchases.\n\nThe amount returned in the `current_balance` indicates how much store credit at the time you run the `applyStoreCreditToCart` mutation. This amount is not decreased until you place the order.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nIf the amount of available store credit equals or exceeds the grand total of the quote, set the payment method to `free` in the `setPaymentMethodOnCart` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-store-credit.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "894ee1b3-c046-4014-8232-afecbbf0d0ce",
      {
        "pageContent": "## Syntax\n\n`mutation: {applyStoreCreditToCart(input: ApplyStoreCreditToCartInput): {ApplyStoreCreditToCartOutput}}`\n\n## Reference\n\nThe [`applyStoreCreditToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-applyStoreCreditToCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-store-credit.md",
          "loc": { "lines": { "from": 18, "to": 24 } }
        }
      }
    ],
    [
      "ee34d904-bae7-475e-804a-d0bb28f05524",
      {
        "pageContent": "## Example usage\n\nIn the following example, the customer starts with $10 of store credit. The subtotal of the items in the cart before applying the store credit plus shipping and tax is $34.64. The grand total on the cart after applying the store credit is $24.64.\n\n**Request:**\n\n```graphql\nmutation {\n  applyStoreCreditToCart(\n    input: {\n      cart_id: \"4HHaKzxpKM2ZwD0IcheRfcPNBWS3OvRM\"\n    }\n  ) {\n    cart {\n      applied_store_credit {\n        applied_balance {\n          currency\n          value\n        }\n        current_balance {\n          currency\n          value\n        }\n      }\n      prices {\n        grand_total {\n          currency\n          value\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-store-credit.md",
          "loc": { "lines": { "from": 26, "to": 58 } }
        }
      }
    ],
    [
      "04e50f53-2f7c-4153-b5ef-65ce7e302a94",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"applyStoreCreditToCart\": {\n      \"cart\": {\n        \"applied_store_credit\": {\n          \"applied_balance\": {\n            \"currency\": \"USD\",\n            \"value\": 34.64\n          },\n          \"current_balance\": {\n            \"currency\": \"USD\",\n            \"value\": 10\n          }\n        },\n        \"prices\": {\n          \"grand_total\": {\n            \"currency\": \"USD\",\n            \"value\": 24.64\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-store-credit.md",
          "loc": { "lines": { "from": 59, "to": 88 } }
        }
      }
    ],
    [
      "5e1a5c37-d333-4d61-96d9-c334edbea08d",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \\\"xxxxx\\\"` | The ID provided in the `cart_id` field is invalid or the cart does not exist for the customer.\n`The cart isn't active` | The cart with the given cart ID is unavailable, because the items have been purchased and the cart ID becomes inactive.\n`Field ApplyStoreCreditToCartInput.cart_id of required type String! was not provided` | The value specified in the `ApplyStoreCreditToCartInput.cart_id` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/apply-store-credit.md",
          "loc": { "lines": { "from": 90, "to": 96 } }
        }
      }
    ],
    [
      "fb8c6f54-964f-497b-84b2-c9b7438fd6b4",
      {
        "pageContent": "---\ntitle: assignCustomerToGuestCart mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# assignCustomerToGuestCart mutation\n\nThe `assignCustomerToGuestCart` mutation merges a logged-in customer's shopping cart into the specified guest cart. The mutation inactivates the customer's shopping cart and moves the products to the guest cart. The guest cart is then assigned to the customer.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe `masked_id` of the guest cart contains a new value. The `quote_id` remains the same.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [mergeCarts](merge.md) mutation to transfer the contents of a guest cart into a customer's cart.\n\n## Syntax\n\n```graphql\nmutation {\n    assignCustomerToGuestCart(\n        cart_id: String!\n    ) {\n        Cart!\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/assign-customer-to-guest-cart.md",
          "loc": { "lines": { "from": 1, "to": 31 } }
        }
      }
    ],
    [
      "beb97d81-3ed2-4d96-bb55-c68b05ddc164",
      {
        "pageContent": "## Reference\n\nThe [`assignCustomerToGuestCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-assignCustomerToGuestCart) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nIn the following example, the customer and guest carts each contain one item. The mutation merges the customer's cart to the guest cart. As a result, the guest cart contains two items.\n\n**Request:**\n\n```graphql\nmutation {\n  assignCustomerToGuestCart(\n    cart_id: \"MDYKgqIdWMKr7VD1zlYwxrB7kuX8lR5s\"\n  ) {\n    items {\n      quantity\n      product {\n        sku\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"assignCustomerToGuestCart\": {\n      \"items\": [\n        {\n          \"quantity\": 1,\n          \"product\": {\n            \"sku\": \"customer_item\"\n          }\n        },\n        {\n          \"quantity\": 1,\n          \"product\": {\n            \"sku\": \"guest_item\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/assign-customer-to-guest-cart.md",
          "loc": { "lines": { "from": 33, "to": 81 } }
        }
      }
    ],
    [
      "3f7efb83-8488-49a1-928c-48f53316abc6",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The current customer isn't authorized.` | The current customer is not currently logged in.\n`Unable to assign the customer to the guest cart` | The current customer can't be assigned to the provided guest cart.\n`The cart isn't active` | The cart with the specified cart ID is unavailable, because the items have been purchased and the cart ID becomes inactive.\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`The current user cannot perform operations on cart \"XXX\"` | Tried to assign the customer to the customer's cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/assign-customer-to-guest-cart.md",
          "loc": { "lines": { "from": 83, "to": 91 } }
        }
      }
    ],
    [
      "1643c959-214f-42a8-89fa-c6a0ce01c9ae",
      {
        "pageContent": "---\ntitle: createEmptyCart mutation\n---\n\n# createEmptyCart mutation\n\nThe `createEmptyCart` mutation creates an empty shopping cart for a guest or logged in customer. You can allow the system to generate a cart ID, or assign a specific ID.\n\nIf you are creating a cart for a logged in customer, you must include the customer's authorization token in the header of the request.\n\n## Syntax\n\n```graphql\nmutation {\n  createEmptyCart {\n    String\n  }\n}\n```\n\n## Reference\n\nThe [`createEmptyCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createEmptyCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/create-empty-cart.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "9c3feeba-680f-4be7-a295-9fec55b85f4e",
      {
        "pageContent": "## Example usage\n\n### Create a cart with a randomly-generated cart ID\n\n**Request:**\n\n```graphql\nmutation {\n  createEmptyCart\n}\n```\n\n**Response:**\n\nThe response is the cart ID, which is sometimes called the quote ID. The remaining examples in this topic will use this cart ID.\n\n```json\n{\n  \"data\": {\n    \"createEmptyCart\": \"4JQaNVJokOpFxrykGVvYrjhiNv9qt31C\"\n  }\n}\n```\n\n### Create an empty cart with an assigned cart ID\n\nYou can also create an empty cart with a specified `cart_id`.\n\n**Request:**\n\n```graphql\nmutation {\n  createEmptyCart(\n    input: {\n      cart_id: \"x2345678901234567890123456789012\"\n    }\n  )\n}\n```\n\n**Response:**\n\nThe mutation returns the same `cart_id`.\n\n```json\n{\n  \"data\": {\n    \"createEmptyCart\": \"x2345678901234567890123456789012\"\n  }\n}\n```\n\n## Errors\n\nError | Description\n--- | ---\n`Cart with ID \"XXX\" already exists.` | The specified cart ID was previously used to create a cart.\n`Cart ID length should to be 32 symbols.` | The cart ID is not the required length.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/create-empty-cart.md",
          "loc": { "lines": { "from": 25, "to": 82 } }
        }
      }
    ],
    [
      "c5b8be5a-4171-476c-bb08-cd94c70a3b1a",
      {
        "pageContent": "---\ntitle: Cart mutations\n---\n\n# Cart mutations\n\nThe cart mutations allow you to perform the following operations:\n\n* Create and manage carts\n\n  * [`assignCustomerToGuestCart`](assign-customer-to-guest-cart.md)\n  * [`createEmptyCart`](create-empty-cart.md)\n  * [`mergeCarts`](merge.md)\n\n* Manage cart contents\n\n  * [`addBundleProductsToCart`](add-bundle-products.md)\n  * [`addConfigurableProductsToCart`](add-configurable-products.md)\n  * [`addDownloadableProductsToCart`](add-downloadable-products.md)\n  * [`addProductsToCart`](add-products.md)\n  * [`addSimpleProductsToCart`](add-simple-products.md)\n  * [`addVirtualProductsToCart`](add-virtual-products.md)\n  * [`removeItemFromCart`](remove-item.md)\n  * [`setGiftOptionsOnCart`](set-gift-options.md)\n  * [`updateCartItems`](update-items.md)\n\n* Adjust the balance",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "bb63ac54-3c98-4004-82e3-a12415721848",
      {
        "pageContent": "* [`applyCouponToCart`](apply-coupon.md)\n  * [`applyGiftCardToCart`](apply-giftcard.md)\n  * [`applyRewardPointsToCart`](apply-reward-points.md)\n  * [`applyStoreCreditToCart`](apply-store-credit.md)\n  * [`redeemGiftCardBalanceAsStoreCredit`](redeem-giftcard-balance.md)\n  * [`removeCouponFromCart`](remove-coupon.md)\n  * [`removeGiftCardFromCart`](remove-giftcard.md)\n  * [`removeRewardPointsFromCart`](remove-reward-points.md)\n  * [`removeStoreCreditFromCart`](remove-store-credit.md)\n\n* Prepare for checkout\n\n  * [`placeOrder`](place-order.md)\n  * [`setBillingAddressOnCart`](set-billing-address.md)\n  * [`setGuestEmailOnCart`](set-guest-email.md)\n  * [`setPaymentMethodOnCart`](set-payment-method.md)\n  * [`setPaymentMethodAndPlaceOrder`](set-payment-place-order.md)\n  * [`setShippingAddressesOnCart`](set-shipping-address.md)\n  * [`setShippingMethodsOnCart`](set-shipping-method.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/index.md",
          "loc": { "lines": { "from": 29, "to": 47 } }
        }
      }
    ],
    [
      "e8f98e8f-6e21-4c30-b785-06cc3fd174aa",
      {
        "pageContent": "---\ntitle: mergeCarts mutation\n---\n\n# mergeCarts mutation\n\nThe `mergeCarts` mutation transfers the contents of a guest cart into the cart of a logged-in customer. This mutation must be run on behalf of a logged-in customer.\n\nIf you do not specify a value for the `destination_cart_id` input argument, the mutation determines the customer's cart ID and uses that value.\n\nThe mutation retains any items that were already in the logged-in customer's cart. If both the guest and customer carts contain the same item, `mergeCarts` adds the quantities. Upon success, the mutation deletes the original guest cart.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [assignCustomerToGuestCart](assign-customer-to-guest-cart.md) mutation to assign the contents of a logged-in customer's cart to a guest cart.\nCustomer cart becomes inactive and the guest cart remains active.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/merge.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "4a477c80-0854-4ef4-8be2-97826cf5a635",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n    mergeCarts(\n        source_cart_id: String!\n        destination_cart_id: String\n    ) {\n        Cart!\n    }\n}\n```\n\n## Reference\n\nThe [`mergeCarts`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-mergeCarts) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/merge.md",
          "loc": { "lines": { "from": 18, "to": 33 } }
        }
      }
    ],
    [
      "e528d529-2dd5-4721-9f44-6fcaa9678719",
      {
        "pageContent": "## Example usage\n\nIn the following example, the customer had one Overnight Duffle in the cart (`CYmiiQRjPVc2gJUc5r7IsBmwegVIFO43`) before a guest cart (`mPKE05OOtcxErbk1Toej6gw6tcuxvT9O`) containing a Radiant Tee and another Overnight Duffle was merged. The cart now includes three items, including two Overnight Duffles.\n\n**Request:**\n\n```graphql\nmutation {\n  mergeCarts(\n    source_cart_id: \"mPKE05OOtcxErbk1Toej6gw6tcuxvT9O\",\n    destination_cart_id: \"CYmiiQRjPVc2gJUc5r7IsBmwegVIFO43\"\n  ) {\n    items {\n      id\n      product {\n        name\n        sku\n      }\n      quantity\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/merge.md",
          "loc": { "lines": { "from": 35, "to": 56 } }
        }
      }
    ],
    [
      "7bc77c98-9e77-4f3f-83e6-488f57cd86d2",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"mergeCarts\": {\n      \"items\": [\n        {\n          \"id\": \"14\",\n          \"product\": {\n            \"name\": \"Overnight Duffle\",\n            \"sku\": \"24-WB07\"\n          },\n          \"quantity\": 2\n        },\n        {\n          \"id\": \"17\",\n          \"product\": {\n            \"name\": \"Radiant Tee\",\n            \"sku\": \"WS12\"\n          },\n          \"quantity\": 1\n        }\n      ]\n    }\n  }\n}\n```\n\nThe following example executes the previous request without specifying `destination_cart_id`.\n\n**Request:**\n\n```graphql\nmutation {\n  mergeCarts(\n    source_cart_id: \"mPKE05OOtcxErbk1Toej6gw6tcuxvT9O\"\n  ) {\n    items {\n      id\n      product {\n        name\n        sku\n      }\n      quantity\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/merge.md",
          "loc": { "lines": { "from": 57, "to": 106 } }
        }
      }
    ],
    [
      "78c55bec-cc73-4976-824e-20b38f8f3a98",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"mergeCarts\": {\n      \"items\": [\n        {\n          \"id\": \"14\",\n          \"product\": {\n            \"name\": \"Overnight Duffle\",\n            \"sku\": \"24-WB07\"\n          },\n          \"quantity\": 2\n        },\n        {\n          \"id\": \"17\",\n          \"product\": {\n            \"name\": \"Radiant Tee\",\n            \"sku\": \"WS12\"\n          },\n          \"quantity\": 1\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/merge.md",
          "loc": { "lines": { "from": 107, "to": 136 } }
        }
      }
    ],
    [
      "a2b29e88-fcb7-4fc9-b2a2-e83daceba305",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Current user does not have an active cart.` | The `mergeCarts` mutation deactivates the guest cart specified in the `source_cart_id` after merging. The guest cannot make any further operations with it.\n`Required parameter \"source_cart_id\" is missing` | The `source_cart_id` attribute contains an empty value.\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table, or you tried to merge two guest carts.\n`The current user cannot perform operations on cart` | The authorized customer tried to merge a guest cart into the cart of another customer.\n`Could not create empty cart for customer` | The system could not create an empty cart for the logged-in customer",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/merge.md",
          "loc": { "lines": { "from": 138, "to": 146 } }
        }
      }
    ],
    [
      "648c87f1-be53-4cf4-a7d5-ede625b516a1",
      {
        "pageContent": "---\ntitle: placeOrder mutation\n---\n\n# placeOrder mutation\n\nThe `placeOrder` mutation converts the cart into an order and returns an order ID. You cannot manage orders with GraphQL, because orders are part of the backend. You can use REST or SOAP calls to manage orders to their completion.\n\nPerform the following actions before using the `placeOrder` mutation:\n\n-  Create an empty cart\n-  Add one or more products to the cart\n-  Set the billing address\n-  Set the shipping address\n-  Set the shipping method\n-  Set the payment method\n-  For guest customers, assign an email to the cart\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/place-order.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "115b2ba2-14c3-4402-93eb-a14d5a147402",
      {
        "pageContent": "The `placeOrder` mutation runs asynchronously if the `AsyncOrder` module has been enabled. By default, the mutation runs synchronously. [Asynchronous order placement](https://experienceleague.adobe.com/docs/commerce-operations/performance-best-practices/high-throughput-order-processing.html#asynchronous-order-placement) describes the benefits of enabling the module.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/place-order.md",
          "loc": { "lines": { "from": 21, "to": 21 } }
        }
      }
    ],
    [
      "a869ad80-56fb-410e-81f9-cb3c9eb2375e",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  placeOrder(\n    input: PlaceOrderInput\n  ) {\n    PlaceOrderOutput\n  }\n}\n```\n\n## Reference\n\nThe [`placeOrder`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-placeOrder) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\n**Request:**\n\n```graphql\nmutation {\n  placeOrder(\n    input: {\n      cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n    }\n  ) {\n    order {\n      order_number\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"placeOrder\": {\n      \"order\": {\n        \"order_number\": \"000000006\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/place-order.md",
          "loc": { "lines": { "from": 23, "to": 69 } }
        }
      }
    ],
    [
      "2cc83b8d-94b1-4278-a71f-10b26d111258",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/place-order.md",
          "loc": { "lines": { "from": 71, "to": 71 } }
        }
      }
    ],
    [
      "d52d568a-578e-4acb-8f6a-62be673cd29d",
      {
        "pageContent": "Error | Description\n--- | ---\n`Enter a valid payment method and try again` | The payment method was not set. See [setPaymentMethodOnCart](../../cart/mutations/set-payment-method.md) mutation.\n`Guest email for cart is missing.` | The guest attempted to place an order but did not provide an email address. See [setGuestEmailOnCart](../../cart/mutations/set-guest-email.md) mutation.\n`Please check the billing address information` | The billing address was not set. See [setBillingAddressOnCart](../../cart/mutations/set-billing-address.md) mutation.\n`Required parameter \"cart_id\" is missing` | The mutation does not contain a `cart_id` parameter.\n`Some addresses can't be used due to the configurations for specific countries` | The shipping method was not set. See [setShippingMethodsOnCart](set-shipping-method.md) mutation.\n`Some of the products are out of stock` | One of the products in the shopping cart are currently out of stock.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/place-order.md",
          "loc": { "lines": { "from": 73, "to": 80 } }
        }
      }
    ],
    [
      "10e9cd7d-297f-45fa-b2f0-a7a21e069dad",
      {
        "pageContent": "`The current user cannot perform operations on cart` | An unauthorized user (guest) tried to place an order on behalf of an authorized user (customer), or a customer tried to place an order on behalf of another customer.\n`The shipping method is missing. Select the shipping method and try again` | The shipping method was not set. See [setShippingMethodsOnCart](set-shipping-method.md) mutation.\n`Unable to place order: A server error stopped your order from being placed. Please try to place your order again` | The shopper tried to place an order when no products are in the shopping cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/place-order.md",
          "loc": { "lines": { "from": 81, "to": 83 } }
        }
      }
    ],
    [
      "e0bc4b4b-fbe7-4d01-8d31-47ec9c90bed6",
      {
        "pageContent": "---\ntitle: redeemGiftCardBalanceAsStoreCredit mutation\nedition: ee\n---\n\n# redeemGiftCardBalanceAsStoreCredit mutation\n\nThe `redeemGiftCardBalanceAsStoreCredit` mutation converts the entire balance of a gift card to store credit. The gift card must be redeemable and cannot have a balance of 0 at the time you run the mutation. After successfully running the mutation, the value of the gift card changes to 0.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nRun this mutation on behalf of logged-in customers only. [Authorization tokens](../../../usage/authorization-tokens.md) describes how to send a request as a customer.\n\n## Syntax\n\n```graphql\nmutation {\n  redeemGiftCardBalanceAsStoreCredit(\n    input: GiftCardAccountInput\n  ) {\n    GiftCardAccount\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/redeem-giftcard-balance.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "7b7b9e5d-45f0-4261-8783-a7b3462f2980",
      {
        "pageContent": "## Reference\n\nThe [`redeemGiftCardBalanceAsStoreCredit`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-redeemGiftCardBalanceAsStoreCredit) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example redeems the gift card with code `\"056MHP57TJ5C\"`.\n\n**Request:**\n\n```graphql\nmutation {\n  redeemGiftCardBalanceAsStoreCredit(\n    input: {\n      gift_card_code: \"056MHP57TJ5C\"\n    }\n  ) {\n    balance {\n      currency\n      value\n    }\n    code\n    expiration_date\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"redeemGiftCardBalanceAsStoreCredit\": {\n      \"balance\": {\n        \"currency\": \"USD\",\n        \"value\": 0\n      },\n      \"code\": \"056MHP57TJ5C\",\n      \"expiration_date\": null\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/redeem-giftcard-balance.md",
          "loc": { "lines": { "from": 26, "to": 68 } }
        }
      }
    ],
    [
      "24a8503e-773f-4326-8503-eb23899229c0",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Gift card not found` | The specified `gift_card_code` value does not exist in the `giftcardaccount` table or the amount has been already redeemed.\n`Field GiftCardAccountInput.gift_card_code of required type String! was not provided` | The value specified in the `GiftCardAccountInput.gift_card_code` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/redeem-giftcard-balance.md",
          "loc": { "lines": { "from": 70, "to": 75 } }
        }
      }
    ],
    [
      "f8cbe1ff-6c6c-45a6-a99b-f33d7917c98f",
      {
        "pageContent": "---\ntitle: removeCouponFromCart mutation\n---\n\n# removeCouponFromCart mutation\n\nThe `removeCouponFromCart` mutation removes a previously-applied coupon from the cart. The cart must contain at least one item in order to remove the coupon.\n\n## Syntax\n\n`mutation: {removeCouponFromCart(input: RemoveCouponFromCartInput)  {RemoveCouponFromCartOutput}}`\n\n## Reference\n\nThe [`removeCouponFromCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeCouponFromCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-coupon.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "3898b3d4-24cf-4eab-b422-f38caf3f7bb7",
      {
        "pageContent": "## Example usage\n\nThe following example removes a coupon from the cart.\n\n**Request:**\n\n``` text\nmutation {\n  removeCouponFromCart(\n    input:\n      { cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\" }\n    ) {\n    cart {\n      items {\n        product {\n          name\n        }\n        quantity\n      }\n      applied_coupons {\n        code\n      }\n      prices {\n        grand_total{\n          value\n          currency\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-coupon.md",
          "loc": { "lines": { "from": 17, "to": 47 } }
        }
      }
    ],
    [
      "6d8fda24-5ab0-48ac-8048-fa761adfa054",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeCouponFromCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"product\": {\n              \"name\": \"Strive Shoulder Pack\"\n            },\n            \"quantity\": 1\n          },\n          {\n            \"product\": {\n              \"name\": \"Affirm Water Bottle \"\n            },\n            \"quantity\": 1\n          }\n        ],\n        \"applied_coupons\": null,\n        \"prices\": {\n          \"grand_total\": {\n            \"value\": 39,\n            \"currency\": \"USD\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-coupon.md",
          "loc": { "lines": { "from": 48, "to": 82 } }
        }
      }
    ],
    [
      "c785104f-9a33-4540-b911-fd5b40cba461",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Cart does not contain products.` | The coupon cannot be removed from the empty cart.\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Current user does not have an active cart.` | The user cannot perform this mutation on the inactive cart.\n`Required parameter \"cart_id\" is missing` | The required `cart_id` argument contains an empty value.\n`The coupon code couldn't be deleted. Verify the coupon code and try again.` | The coupon was not removed from the cart. Check the existing shopping cart price rules for details.\n`The current user cannot perform operations on cart XXX` | An unauthorized user (guest) tried to add the product into a customer's cart, or an authorized user (customer) tried to add the product into the cart of another customer.\n`Wrong store code specified for cart` | The specified `cart_id` does not exist in specified store.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-coupon.md",
          "loc": { "lines": { "from": 84, "to": 94 } }
        }
      }
    ],
    [
      "8ea97c2f-1947-4eb0-91b8-87cd560a0b58",
      {
        "pageContent": "---\ntitle: removeGiftCardFromCart mutation\nedition: ee\n---\n\n# removeGiftCardFromCart mutation\n\nThe `removeGiftCardFromCart` mutation removes a previously-applied gift card from the cart.\n\n## Syntax\n\n `mutation: removeGiftCardFromCart(input: RemoveGiftCardFromCartInput): RemoveGiftCardFromCartOutput`\n\n## Reference\n\nThe [`removeGiftCardFromCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeGiftCardFromCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-giftcard.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "41e48049-ea9e-4c91-a5a7-6652d15d5614",
      {
        "pageContent": "## Example usage\n\n The following example removes a gift card from the cart.\n\n**Request:**\n\n ``` text\nmutation {\n  removeGiftCardFromCart(\n    input: {\n      cart_id: \"lOeLKsVkZ1PEvA8A7EaCvmEAk4JRBR7A\"\n      gift_card_code: \"049XDMZ6L81X\"\n    }\n  ) {\n    cart {\n      applied_gift_cards {\n        code\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n ```json\n{\n  \"data\": {\n    \"removeGiftCardFromCart\": {\n      \"cart\": {\n        \"applied_gift_cards\": []\n      }\n    }\n  }\n}\n```\n\n## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \\\"xxxxx\\\"` | The ID provided in the `cart_id` field is invalid or the cart does not exist for the customer.\n`The gift card couldn't be deleted from the quote.` | The value provided in the `gift_card_code` field is invalid or the gift card with that specific ID does not exist in the cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-giftcard.md",
          "loc": { "lines": { "from": 18, "to": 60 } }
        }
      }
    ],
    [
      "810edaf0-e881-49a1-8aa1-fd7f2c2f8560",
      {
        "pageContent": "---\ntitle: removeItemFromCart mutation\n---\n\n# removeItemFromCart mutation\n\nThe `removeItemFromCart` mutation deletes the entire quantity of a specified item from the cart. If you remove all items from the cart, the cart continues to exist.\n\n## Syntax\n\n`mutation: {removeItemFromCart(input: RemoveItemFromCartInput): {RemoveItemFromCartOutput}}`\n\n## Reference\n\nThe [`removeItemFromCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeItemFromCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-item.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "080cd9a0-9e74-4259-8893-9f8173987d03",
      {
        "pageContent": "## Example usage\n\nThe following example removes cart item 14 from the cart.\n\n**Request:**\n\n```graphql\nmutation {\n  removeItemFromCart(\n    input: {\n      cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\",\n      cart_item_id: 14\n    }\n  )\n {\n  cart {\n    items {\n      id\n      product {\n        name\n      }\n      quantity\n    }\n    prices {\n      grand_total{\n        value\n        currency\n      }\n    }\n  }\n }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeItemFromCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"uid\": \"NDA=\",\n            \"product\": {\n              \"name\": \"Strive Shoulder Pack\"\n            },\n            \"quantity\": 3\n          }\n        ],\n        \"prices\": {\n          \"grand_total\": {\n            \"value\": 96,\n            \"currency\": \"USD\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-item.md",
          "loc": { "lines": { "from": 17, "to": 77 } }
        }
      }
    ],
    [
      "69811961-efc2-4ef5-9013-63330b6de721",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Cart doesn't contain the ZZZ item.` | The item ID specified in the `cart_item_id` argument does not exist in the requested shopping cart.\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Required parameter \"cart_id\" is missing.` | The value specified in the `cart_id` argument is empty.\n`Required parameter \"cart_item_id\" is missing.` | The value specified in the `cart_item_id` argument is equal to zero.\n`The current user cannot perform operations on cart \"XXX\"` | An unauthorized user (guest) tried to remove a product from the shopping cart of authorized user (customer), or a customer tried to remove a product from the shopping cart of another customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-item.md",
          "loc": { "lines": { "from": 79, "to": 87 } }
        }
      }
    ],
    [
      "8fb1b14f-4d58-424b-a15b-a3ee5659e1b3",
      {
        "pageContent": "---\ntitle: removeRewardPointsFromCart mutation\nedition: ee\n---\n\n# removeRewardPointsFromCart mutation\n\nThe `removeRewardPointsFromCart` mutation removes all reward points that were previously applied to the customer's cart with the [`applyRewardPointsToCart` mutation](apply-reward-points.md).\n\n## Syntax\n\n`mutation: removeRewardPointsFromCart(cartId: ID!): RemoveRewardPointsFromCartOutput`\n\n## Reference\n\nThe [`removeRewardPointsFromCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeRewardPointsFromCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-reward-points.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "8c41c2a0-63bd-4090-835d-9f93e8f965bc",
      {
        "pageContent": "## Example usage\n\nThe following example removes all reward points from the customer's cart. The `applied_rewards_points` object is now null.\n\n**Request:**\n\n```graphql\nmutation {\n  removeRewardPointsFromCart(cartId: \"8k0Q4MpH2IGahWrTRtqM61YV2MtLPApz\")\n  {\n    cart {\n      applied_reward_points {\n        money {\n          currency\n          value\n        }\n        points\n      }\n      prices {\n        applied_taxes {\n          amount {\n            currency\n            value\n          }\n        }\n        grand_total {\n          currency\n          value\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-reward-points.md",
          "loc": { "lines": { "from": 18, "to": 50 } }
        }
      }
    ],
    [
      "c4c1eefd-7d0c-4ca3-83eb-e69e4f4f124e",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeRewardPointsFromCart\": {\n      \"cart\": {\n        \"applied_reward_points\": null,\n        \"prices\": {\n          \"applied_taxes\": [\n            {\n              \"amount\": {\n                \"currency\": \"USD\",\n                \"value\": 6.93\n              }\n            }\n          ],\n          \"grand_total\": {\n            \"currency\": \"USD\",\n            \"value\": 90.93\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-reward-points.md",
          "loc": { "lines": { "from": 51, "to": 79 } }
        }
      }
    ],
    [
      "a70a2fa3-848c-4817-a7ad-51c7c68e48d5",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \\\"xxxxx\\\"` | The ID provided in the `cart_id` field is invalid or the cart does not exist for the customer.\n`The cart isn't active` | The cart with the specified cart ID is unavailable, because the items have been purchased and the cart ID becomes inactive.\n`Field removeRewardPointsFromCart.cart_id of required type String! was not provided` | The value specified in the `removeRewardPointsFromCart.cart_id` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-reward-points.md",
          "loc": { "lines": { "from": 81, "to": 87 } }
        }
      }
    ],
    [
      "d6132f44-ceec-450b-a5b2-a59d93c3fa21",
      {
        "pageContent": "---\ntitle: removeStoreCreditFromCart mutation\nedition: ee\n---\n\n# removeStoreCreditFromCart mutation\n\nThe `removeStoreCreditFromCart` mutation removes store credit previously applied to the specified cart with the [`applyStoreCreditToCart`](apply-store-credit.md) mutation. The application restores the customer's available store credit to its original amount and recalculates all cart totals.\n\nStore credit must be enabled on the store to run this mutation.\n\n## Syntax\n\n`mutation: {removeStoreCreditFromCart(input: RemoveStoreCreditFromCartInput): {RemoveStoreCreditFromCartOutput}}`\n\n## Reference\n\nThe [`removeStoreCreditFromCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeStoreCreditFromCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-store-credit.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "f6337902-5605-47a5-b1ab-a0a136b2b3bb",
      {
        "pageContent": "## Example usage\n\n**Request:**\n\n```graphql\nmutation {\n  removeStoreCreditFromCart(\n    input: {\n      cart_id: \"4HHaKzxpKM2ZwD0IcheRfcPNBWS3OvRM\"\n    }\n  ) {\n    cart {\n      applied_store_credit {\n        applied_balance {\n          currency\n          value\n        }\n        current_balance {\n          currency\n          value\n        }\n      }\n      prices {\n        grand_total {\n          currency\n          value\n        }\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeStoreCreditFromCart\": {\n      \"cart\": {\n        \"applied_store_credit\": {\n          \"applied_balance\": {\n            \"currency\": \"USD\",\n            \"value\": 0\n          },\n          \"current_balance\": {\n            \"currency\": \"USD\",\n            \"value\": 10\n          }\n        },\n        \"prices\": {\n          \"grand_total\": {\n            \"currency\": \"USD\",\n            \"value\": 34.64\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-store-credit.md",
          "loc": { "lines": { "from": 20, "to": 80 } }
        }
      }
    ],
    [
      "fb14d11c-aa5f-4a52-8027-7a3f9835788f",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Please specify a valid customer.` | The mutation requires a valid authorization token.\n`Required parameter \"cart_id\" is missing` | The value specified in `cart_id` is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/remove-store-credit.md",
          "loc": { "lines": { "from": 82, "to": 87 } }
        }
      }
    ],
    [
      "50552177-d70a-41b0-9105-812e15b0bb97",
      {
        "pageContent": "---\ntitle: setBillingAddressOnCart mutation\n---\n\n# setBillingAddressOnCart mutation\n\nThe `setBillingAddressOnCart` mutation sets the billing address for a specific cart. If you set the `same_as_shipping` attribute to `true`, the application assigns the billing address to be the same as the shipping address.\n\n## Syntax\n\n`mutation: {setBillingAddressOnCart(input: SetBillingAddressOnCartInput) {SetBillingAddressOnCartOutput}}`\n\n## Reference\n\nThe [`setBillingAddressOnCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setBillingAddressOnCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-billing-address.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "0deafd48-0204-40d2-bc2f-e913d194a91b",
      {
        "pageContent": "## Example usage\n\nThe following example creates a new billing address for a specific cart.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-billing-address.md",
          "loc": { "lines": { "from": 17, "to": 21 } }
        }
      }
    ],
    [
      "604f1148-c038-4646-a25a-d02f64d63db4",
      {
        "pageContent": "**Request:**\n\n```graphql\nmutation {\n  setBillingAddressOnCart(\n    input: {\n      cart_id: \"4JQaNVJokOpFxrykGVvYrjhiNv9qt31C\"\n      billing_address: {\n        address: {\n          firstname: \"Bob\"\n          middlename: \"Joe\"\n          lastname: \"Roll\"\n          prefix: \"Mr.\"\n          suffix: \"Jr.\"\n          company: \"Magento\"\n          street: [\"Magento Pkwy\", \"Main Street\"]\n          city: \"Austin\"\n          region: \"TX\"\n          postcode: \"78758\"\n          country_code: \"US\"\n          telephone: \"8675309\"\n          fax: \"8675311\"\n          save_in_address_book: true\n        }\n        same_as_shipping: false\n      }\n    }\n  ) {\n    cart {\n      billing_address {\n        firstname\n        middlename\n        lastname\n        prefix\n        suffix\n        company\n        street\n        city\n        region{\n          code\n          label\n        }\n        postcode\n        telephone\n        fax\n        country{\n          code\n          label\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-billing-address.md",
          "loc": { "lines": { "from": 21, "to": 73 } }
        }
      }
    ],
    [
      "cbc13d79-00a7-43b7-8194-3b8c15ded6c2",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setBillingAddressOnCart\": {\n      \"cart\": {\n        \"billing_address\": {\n          \"firstname\": \"Bob\",\n          \"middlename\": \"Joe\",\n          \"lastname\": \"Roll\",\n          \"prefix\": \"Mr.\",\n          \"suffix\": \"Jr.\",\n          \"company\": \"Magento\",\n          \"street\": [\n            \"Magento Pkwy\",\n            \"Main Street\"\n          ],\n          \"city\": \"Austin\",\n          \"region\": {\n              \"code\": \"TX\",\n              \"label\": \"Texas\"\n            },\n          \"postcode\": \"78758\",\n          \"telephone\": \"8675309\",\n          \"fax\": \"8675311\",\n           \"country\": {\n             \"code\": \"US\",\n             \"label\": \"US\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-billing-address.md",
          "loc": { "lines": { "from": 74, "to": 111 } }
        }
      }
    ],
    [
      "4a5fb8d6-d82f-4229-acd9-9bf7bff2ea40",
      {
        "pageContent": "---\ntitle: setGiftOptionsOnCart mutation\nedition: ee\n---\n\n# setGiftOptionsOnCart mutation\n\nThe `setGiftOptionsOnCart` mutation allows the buyer to set the following gift options on the cart level:\n\n*  Gift messages\n*  Gift wrapping\n*  A gift receipt to accompany the order\n*  A printed card to accompany the order\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nGift messages are a feature of Magento Open Source. All other gift options require Adobe Commerce.\n\nTo remove a gift message, set the `gift_message` object to null. To remove gift wrapping, set the `gift_wrapping_id` attribute to null.\n\nUse the [updateCartItems mutation](update-items.md) to set gift messages and gift wrapping on individual items.\n\nThese options are configured on the **Stores** > Configuration > **Sales** > **Sales** > **Gift Options** screen. To determine whether these options are enabled, specify these attributes in the [`storeConfig` query](../../store/queries/store-config.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "9e88746b-ca68-4206-bf51-06b96a18b4a0",
      {
        "pageContent": "*  `allow_gift_receipt`\n*  `allow_gift_wrapping_on_order`\n*  `allow_printed_card`\n*  `cart_gift_wrapping`\n*  `cart_printed_card`\n*  `printed_card_price`\n*  `sales_gift_wrapping`\n*  `sales_printed_card`\n\nGift wrapping is available for simple, configurable, bundle products as well as physical gift cards.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 25, "to": 34 } }
        }
      }
    ],
    [
      "afd113b3-3251-45a0-8d3c-b7767ce99714",
      {
        "pageContent": "## Syntax\n\n`mutation: {setGiftOptionsOnCart(input: SetGiftOptionsOnCartInput): SetGiftOptionsOnCartOutput}`\n\n## Reference\n\nThe [`setGiftOptionsOnCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setGiftOptionsOnCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 36, "to": 42 } }
        }
      }
    ],
    [
      "6e8872ed-171f-4f32-b1b6-b1bc0b6ee3a4",
      {
        "pageContent": "## Example usage\n\nThe following example adds a gift message, gift wrapping, and a gift receipt to the cart.\n\n**Request:**\n\n```graphql\nmutation {\n  setGiftOptionsOnCart(\n    input: {\n      cart_id: \"8k0Q4MpH2IGahWrTRtqM61YV2MtLPApz\"\n      gift_message: {\n        to: \"Alex\"\n        from: \"Veronica\"\n        message: \"Happy Birthday!\"\n      }\n      gift_wrapping_id: \"Mg==\"\n      gift_receipt_included: true\n      printed_card_included: false\n    }\n  ) {\n    cart {\n      id\n      gift_message {\n        to\n        from\n        message\n      }\n      gift_wrapping {\n        uid\n      }\n      gift_receipt_included\n      printed_card_included\n      items {\n        quantity\n        prices {\n          price {\n            value\n            currency\n          }\n        }\n      }\n      prices {\n        gift_options {\n          gift_wrapping_for_order {\n            value\n            currency\n          }\n        }\n        grand_total {\n          value\n          currency\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 44, "to": 100 } }
        }
      }
    ],
    [
      "aa8974c7-e043-40ee-84ff-86548d860a07",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 101, "to": 103 } }
        }
      }
    ],
    [
      "ce03e381-62e6-4c9d-af69-5d75d9b4b679",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"setGiftOptionsOnCart\": {\n      \"cart\": {\n        \"id\": \"8k0Q4MpH2IGahWrTRtqM61YV2MtLPApz\",\n        \"gift_message\": {\n            \"to\": \"Alex\"\n            \"from\": \"Veronica\"\n            \"message\": \"Happy Birthday!\"\n        }\n        \"gift_wrapping\": {\n          \"uid\": \"Mg==\"\n        },\n        \"gift_receipt_included\": true,\n        \"printed_card_included\": false,\n        \"items\": [\n          {\n            \"quantity\": 1,\n            \"prices\": {\n              \"price\": {\n                \"value\": 32,\n                \"currency\": \"USD\"\n              }\n            }\n          },\n          {\n            \"quantity\": 1,\n            \"prices\": {\n              \"price\": {\n                \"value\": 84,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        ],\n        \"prices\": {\n          \"gift_options\": {\n            \"gift_wrapping_for_order\": {\n              \"value\": 7,\n              \"currency\": \"USD\"\n            }\n          },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 105, "to": 147 } }
        }
      }
    ],
    [
      "5abb5bfe-de97-49c0-bc73-454d5299a8c7",
      {
        "pageContent": "},\n          \"grand_total\": {\n            \"value\": 132.57,\n            \"currency\": \"USD\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 147, "to": 157 } }
        }
      }
    ],
    [
      "de3cdf75-61c3-4a85-8362-27bd1564b583",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 159, "to": 159 } }
        }
      }
    ],
    [
      "fa37f4b2-ec2d-4366-888c-78a951b0e783",
      {
        "pageContent": "Error | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Field SetBillingAddressOnCartInput.cart_id of required type String! was not provided.` | The value specified in the `SetShippingAddressesOnCartInput`.`cart_id` argument is empty.\n`Field CartAddressInput.firstname of required type String! was not provided.` | The value specified in the `shipping_addresses`.`firstname` argument is empty.\n`Field CartAddressInput.lastname of required type String! was not provided.` | The value specified in the `shipping_addresses`.`lastname` argument is empty.\n`Field CartAddressInput.city of required type String! was not provided.` | The value specified in the `shipping_addresses`.`city` argument is empty.\n`Field CartAddressInput.street of required type String! was not provided.` | The value specified in the `shipping_addresses`.`street` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 161, "to": 168 } }
        }
      }
    ],
    [
      "7dcdf19a-f72b-485a-a14c-859de3c5a23f",
      {
        "pageContent": "`Field CartAddressInput.country_code of required type String! was not provided.` | The value specified in the `shipping_addresses`.`country_code` argument is empty.\n`Field SetBillingAddressOnCartInput.billing_address of required type BillingAddressInput! was not provided.` | The `shipping_addresses` input attribute of type `ShippingAddressInput` is missing.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-gift-options.md",
          "loc": { "lines": { "from": 169, "to": 170 } }
        }
      }
    ],
    [
      "7560f22c-1f19-43b2-8cde-00a6d3bb137f",
      {
        "pageContent": "---\ntitle: setGuestEmailOnCart mutation\n---\n\n# setGuestEmailOnCart mutation\n\nFor guest customers, you must assign an email to the cart before you place the order.\n\nA logged-in customer specifies an email address when they create an account. Therefore, you can place the order without explicitly setting the email.\n\n## Syntax\n\n`mutation: {setGuestEmailOnCart(input: SetGuestEmailOnCartInput): {SetGuestEmailOnCartOutput}}`\n\n## Reference\n\nThe [`setGuestEmailOnCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setGuestEmailOnCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-guest-email.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "aff43ed7-797b-47ff-85d3-0201b11ed062",
      {
        "pageContent": "## Example usage\n\n**Request:**\n\n```graphql\nmutation {\n  setGuestEmailOnCart(\n    input: {\n      cart_id: \"4JQaNVJokOpFxrykGVvYrjhiNv9qt31C\"\n      email: \"jdoe@example.com\"\n    }\n  ) {\n    cart {\n      email\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setGuestEmailOnCart\": {\n      \"cart\": {\n        \"email\": \"jdoe@example.com\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-guest-email.md",
          "loc": { "lines": { "from": 19, "to": 50 } }
        }
      }
    ],
    [
      "2538c32b-2ea9-45d1-a931-1a88eb542ad0",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The ID specified in the `cart` argument does not exist.\n`Invalid email format` | The value specified in the `email` argument has an incorrect format.\n`Required parameter \"cart_id\" is missing` | The `cart_id` argument was omitted or contains an empty value.\n`Required parameter \"email\" is missing` | The `email` argument was omitted or contains an empty value.\n`The current user cannot perform operations on cart \"XXX\"` | An unauthorized user (guest) tried to set the email address on the customer's cart.\n`The request is not allowed for logged in customers` | An authorized user (customer) is not allowed to use the `setGuestEmailOnCart` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-guest-email.md",
          "loc": { "lines": { "from": 52, "to": 61 } }
        }
      }
    ],
    [
      "b52d7dce-8c4f-4634-8a58-cb7632b3befb",
      {
        "pageContent": "---\ntitle: setPaymentMethodOnCart mutation\n---\n\n# setPaymentMethodOnCart mutation\n\nThe `setPaymentMethodOnCart` mutation defines which payment method to apply to the cart. Adobe Commerce and Magento Open Source GraphQL supports the following offline payment methods:\n\nTitle | Code\n--- | ---\nBank Transfer Payment | `banktransfer`\nCash on Delivery | `cashondelivery`\nCheck / Money order | `checkmo`\nNo Payment Information Required | `free`\nPurchase Order | `purchaseorder`\n\nSupported online payment methods include:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "67456e6f-1ece-4722-88f7-69de3b568646",
      {
        "pageContent": "-  [Braintree](../../../payment-methods/braintree.md)\n-  [Braintree Vault](../../../payment-methods/braintree-vault.md)\n-  [PayPal Express Checkout](../../../payment-methods/paypal-express-checkout.md)\n-  [PayPal Payflow Link](../../../payment-methods/payflow-link.md)\n-  [PayPal Payflow Pro](../../../payment-methods/payflow-pro.md)\n-  [PayPal Payflow Pro Vault](../../../payment-methods/payflow-pro-vault.md)\n-  [PayPal Payments Advanced](../../../payment-methods/payments-advanced.md)\n-  [PayPal Website Payments Pro Hosted Solution](../../../payment-methods/hosted-pro.md)\n-  [Express Checkout for other PayPal solutions](../../../payment-methods/payflow-express.md)\n\nFor all online payment methods, the payload must include an object that defines additional information specific to that payment method. For example, the payload for Braintree payment method includes the following object:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 19, "to": 29 } }
        }
      }
    ],
    [
      "f84fe65b-df43-4203-9521-18a897e79153",
      {
        "pageContent": "```graphql\nbraintree: {\n  payment_method_nonce: \"fake-nonce\"\n  is_active_payment_token_enabler: false\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 31, "to": 36 } }
        }
      }
    ],
    [
      "788d1172-d4a4-4546-b47f-d0d9875bf46e",
      {
        "pageContent": "## Syntax\n\n`mutation: {setPaymentMethodOnCart(input: SetPaymentMethodOnCartInput): SetPaymentMethodOnCartOutput}}`\n\n## Reference\n\nThe [`setPaymentMethodOnCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setPaymentMethodOnCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 38, "to": 44 } }
        }
      }
    ],
    [
      "014e93ed-ed48-4065-aa1e-e2e5aee63369",
      {
        "pageContent": "## Example usage\n\n### Offline payment method\n\nThe following example assigns the `banktransfer` payment method to the specified cart.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n      cart_id: \"rMQdWEecBZr4SVWZwj2AF6y0dNCKQ8uH\"\n      payment_method: {\n          code: \"banktransfer\"\n      }\n  }) {\n    cart {\n      selected_payment_method {\n        code\n        title\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"banktransfer\",\n          \"title\": \"Bank Transfer Payment\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 46, "to": 87 } }
        }
      }
    ],
    [
      "74586850-d3b9-47f1-b496-107e6de9f4cb",
      {
        "pageContent": "## Online payment method\n\nThe following example shows the `setPaymentMethodOnCart` mutation constructed for the Braintree payment method.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n    cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n    payment_method: {\n      code: \"braintree\"\n      braintree: {\n        payment_method_nonce: \"fake-nonce\"\n        is_active_payment_token_enabler: false\n      }\n    }\n  }) {\n  cart {\n    selected_payment_method {\n      code\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"braintree\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 89, "to": 129 } }
        }
      }
    ],
    [
      "525a2239-5518-4d9f-9f57-121e924c6cae",
      {
        "pageContent": "## Input attributes\n\nThe top-level `SetPaymentMethodOnCartInput` object is listed first. All child objects are listed in alphabetical order.\n\n### SetPaymentMethodOnCartInput attributes\n\nThe `SetPaymentMethodOnCartInput` object must contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cart_id` | String! | The unique ID that identifies the customer's cart\n`payment_method` | [PaymentMethodInput!](#paymentmethodinput-attributes) | An object containing the payment method code\n\n### PaymentMethodInput attributes\n\nThe `PaymentMethodInput` object can contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`code` | String! | The internal name for the payment method\n`purchase_order_number` | String | The purchase order number. Optional for most payment methods\n\nFor all online payment methods, the payload must include an object that defines additional information specific to that payment method.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 131, "to": 153 } }
        }
      }
    ],
    [
      "3f75de1c-1d39-47ab-8178-82fac1790d04",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 155, "to": 155 } }
        }
      }
    ],
    [
      "7452caf7-107c-472b-8e3a-fad8c0d5e743",
      {
        "pageContent": "Error | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Required parameter \"cart_id\" is missing.` | The value specified in the `cart_id` argument is empty.\n`Required parameter \"code\" for \"payment_method\" is missing.` | The value specified in the `code` argument is empty.\n`The current user cannot perform operations on cart \"XXX\"` | An unauthorized user (guest) tried to set a payment method for an order on behalf of an authorized user (customer), or a customer tried to set a payment method for an order on behalf of another customer.\n`The requested Payment Method is not available.` | Specified in the `payment_method` argument payment method is disabled or does not exist.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 157, "to": 163 } }
        }
      }
    ],
    [
      "4fad7a35-b3c4-48ab-bead-cd2a260fd5e1",
      {
        "pageContent": "`The shipping address is missing. Set the address and try again.` | You ran `setPaymentMethodOnCart` mutation before [setShippingAddressesOnCart](set-shipping-method.md). Set a shipping address first. [GraphQL checkout tutorial](../../../tutorials/checkout/index.md) shows the order placement sequence.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-method.md",
          "loc": { "lines": { "from": 164, "to": 164 } }
        }
      }
    ],
    [
      "f8638390-6a27-401f-a61e-1d0ca18dafbf",
      {
        "pageContent": "---\ntitle: setPaymentMethodAndPlaceOrder mutation\ncontributor_name: Something Digital\ncontributor_link: https://www.somethingdigital.com/\n---\n\n# setPaymentMethodAndPlaceOrder mutation\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nThe `setPaymentMethodAndPlaceOrder` mutation has been deprecated. Use the [setPaymentMethodOnCart](set-payment-method.md) and [placeOrder](place-order.md) mutations instead. You can run the two methods in the same call if your use case allows it.\n\nThe `setPaymentMethodAndPlaceOrder` mutation sets the cart payment method and converts the cart into an order. The\nmutation returns the resulting order ID. You cannot manage orders with GraphQL, because orders are part of the backend.\nYou can use REST or SOAP calls to manage orders to their completion.\n\nPerform the following actions before using the `setPaymentMethodAndPlaceOrder` mutation:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-place-order.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "7c5d0576-561b-402d-a97f-efb452dba0e7",
      {
        "pageContent": "-  Create an empty cart\n-  Add one or more products to the cart\n-  Set the billing address\n-  Set the shipping address (non-virtual carts only)\n-  Set the shipping method (non-virtual carts only)\n-  For guest customers, assign an email to the cart\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe `setPaymentMethodAndPlaceOrder` mutation runs asynchronously if the `AsyncOrder` module has been enabled. By default, the mutation runs synchronously. [Asynchronous order placement](https://experienceleague.adobe.com/docs/commerce-operations/performance-best-practices/high-throughput-order-processing.html#asynchronous-order-placement) describes the benefits of enabling the module.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-place-order.md",
          "loc": { "lines": { "from": 19, "to": 28 } }
        }
      }
    ],
    [
      "89704743-78d7-4e6a-9539-c67f4edd81aa",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  setPaymentMethodAndPlaceOrder(\n    input: SetPaymentMethodAndPlaceOrderInput\n  ) {\n    PlaceOrderOutput\n  }\n}\n```\n\n## Reference\n\nThe [`setPaymentMethodAndPlaceOrder`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setPaymentMethodAndPlaceOrder) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodAndPlaceOrder(\n    input: {\n      cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\"\n      payment_method: {\n        code: \"checkmo\"\n      }\n    }\n  ) {\n    order {\n      order_id\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodAndPlaceOrder\": {\n      \"order\": {\n        \"order_id\": \"000000006\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-place-order.md",
          "loc": { "lines": { "from": 30, "to": 79 } }
        }
      }
    ],
    [
      "e5aafd0d-e463-44f8-b93b-de8711ab9562",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-place-order.md",
          "loc": { "lines": { "from": 81, "to": 81 } }
        }
      }
    ],
    [
      "aaf9701d-6432-4af6-bc32-29db7aedbb26",
      {
        "pageContent": "Error | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Guest email for cart is missing.` |  The guest attempted to place an order but did not provide an email address. See the [setGuestEmailOnCart](set-guest-email.md) mutation.\n`Required parameter \"cart_id\" is missing` | The required `cart_id` argument contains an empty value.\n`Required parameter \"code\" for \"payment_method\" is missing.` | The value specified in the `code` argument is empty.\n`The current user cannot perform operations on cart \"XXX\"` | An unauthorized user (guest) tried to set a payment method and place an order with a customer's cart, or an authorized user (customer) tried to set a payment method and place an order with a cart of another customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-place-order.md",
          "loc": { "lines": { "from": 83, "to": 89 } }
        }
      }
    ],
    [
      "0e9e8c4f-5cc5-42d7-9942-d9943545c8ad",
      {
        "pageContent": "`The shipping address is missing. Set the address and try again.` | You ran `setPaymentMethodAndPlaceOrder` mutation before [setShippingAddressesOnCart](set-shipping-method.md). Set a shipping address first. [GraphQL checkout tutorial](https://devdocs.magento.com/guides/v2.3/graphql/tutorials/checkout/index.html) shows the order placement sequence.\n`The requested Payment Method is not available.` | The payment method specified in the `payment_method` argument is disabled or does not exist.\n`Unable to place order: Some of the products are out of stock.` | Some of the products in a cart are out of stock.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-payment-place-order.md",
          "loc": { "lines": { "from": 90, "to": 92 } }
        }
      }
    ],
    [
      "3a943ff2-0bdc-4b63-9306-5d9c46b79b84",
      {
        "pageContent": "---\ntitle: setShippingAddressesOnCart mutation\n---\n\n# setShippingAddressesOnCart mutation\n\nThe `setShippingAddressesOnCart` mutation sets one or more shipping addresses on a specific cart. The shipping address does not need to be specified in the following circumstances:\n\n*  The cart contains only virtual items\n*  When you defined the billing address, you set the `same_as_shipping` attribute to `true`. The application assigns the same address as the shipping address.\n\n## Syntax\n\n`mutation: {setShippingAddressesOnCart(input: SetShippingAddressesOnCartInput) {SetShippingAddressesOnCartOutput}}`\n\n## Reference\n\nThe [`setShippingAddressesOnCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setShippingAddressesOnCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "59079494-be92-4450-bb45-51f4508d46f6",
      {
        "pageContent": "## Example usage\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 20, "to": 22 } }
        }
      }
    ],
    [
      "b0a1a85e-451a-4914-801e-98440d366e49",
      {
        "pageContent": "```graphql\nmutation {\n  setShippingAddressesOnCart(\n    input: {\n      cart_id: \"4JQaNVJokOpFxrykGVvYrjhiNv9qt31C\"\n      shipping_addresses: [\n        {\n          address: {\n            firstname: \"Bob\"\n            middlename: \"Joe\"\n            lastname: \"Roll\"\n            prefix: \"Mr.\"\n            suffix: \"Jr.\"\n            company: \"Magento\"\n            street: [\"Magento Pkwy\", \"Main Street\"]\n            city: \"Austin\"\n            region: \"TX\"\n            postcode: \"78758\"\n            country_code: \"US\"\n            telephone: \"8675309\"\n            fax: \"8675311\"\n            save_in_address_book: false\n          },\n          pickup_location_code: \"txspeqs\"\n        }\n      ]\n    }\n  ) {\n    cart {\n      shipping_addresses {\n        firstname\n        middlename\n        lastname\n        prefix\n        suffix\n        company\n        street\n        city\n        region {\n          code\n          label\n        }\n        postcode\n        telephone\n        fax\n        country {\n          code",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 24, "to": 70 } }
        }
      }
    ],
    [
      "b7e72d64-12f1-4530-90b2-b193d96231cb",
      {
        "pageContent": "code\n          label\n        }\n        pickup_location_code\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 70, "to": 77 } }
        }
      }
    ],
    [
      "f9c97f2a-f80b-4fdf-9b88-5777ebfc2fd0",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setShippingAddressesOnCart\": {\n      \"cart\": {\n        \"shipping_addresses\": [\n          {\n            \"firstname\": \"Bob\",\n            \"middlename\": \"Joe\",\n            \"lastname\": \"Roll\",\n            \"prefix\": \"Mr.\",\n            \"suffix\": \"Jr.\",\n            \"company\": \"Magento\",\n            \"street\": [\n              \"Magento Pkwy\",\n              \"Main Street\"\n            ],\n            \"city\": \"Austin\",\n            \"region\": {\n              \"code\": \"TX\",\n              \"label\": \"Texas\"\n            },\n            \"postcode\": \"78758\",\n            \"telephone\": \"8675309\",\n            \"fax\": \"8675311\",\n            \"country\": {\n              \"code\": \"US\",\n              \"label\": \"US\"\n            },\n            \"pickup_location_code\": \"txspeqs\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 78, "to": 118 } }
        }
      }
    ],
    [
      "1f8d16b2-50d6-49cf-a055-523cc1b46181",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 120, "to": 120 } }
        }
      }
    ],
    [
      "fdf28be7-8268-4529-b4e8-c570b3fa44f4",
      {
        "pageContent": "Error | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Field SetShippingAddressesOnCartInput.cart_id of required type String! was not provided.` | The value specified in the `SetShippingAddressesOnCartInput`.`cart_id` argument is empty.\n`Field CartAddressInput.firstname of required type String! was not provided.` | The value specified in the `shipping_addresses`.`firstname` argument is empty.\n`Field CartAddressInput.lastname of required type String! was not provided.` | The value specified in the `shipping_addresses`.`lastname` argument is empty.\n`Field CartAddressInput.city of required type String! was not provided.` | The value specified in the `shipping_addresses`.`city` argument is empty.\n`Field CartAddressInput.street of required type String! was not provided.` | The value specified in the `shipping_addresses`.`street` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 122, "to": 129 } }
        }
      }
    ],
    [
      "6db064cd-509f-4d17-99b6-a234dc505443",
      {
        "pageContent": "`Field CartAddressInput.country_code of required type String! was not provided.` | The value specified in the `shipping_addresses`.`country_code` argument is empty.\n`Field SetShippingAddressesOnCartInput.shipping_addresses of required type [ShippingAddressInput]! was not provided.` | The `shipping_addresses` input attribute of type `ShippingAddressInput` is missing.\n`The current user cannot perform operations on cart \"XXX\"` | An unauthorized user (guest) tried to set a delivery method for an order on behalf of an authorized user (customer), or a customer tried to set a delivery method for an order on behalf of another customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-address.md",
          "loc": { "lines": { "from": 130, "to": 132 } }
        }
      }
    ],
    [
      "4e615888-8278-4818-bd2f-cc84a009b034",
      {
        "pageContent": "---\ntitle: setShippingMethodsOnCart mutation\n---\n\n# setShippingMethodsOnCart mutation\n\nThe `setShippingMethodsOnCart` mutation sets one or more delivery methods on a cart. By default, GraphQL supports the following delivery methods:\n\nLabel | Carrier code | Method code\n--- | --- | ---\nDHL | dhl | Varies\nFederal Express | fedex | Varies\nFlat Rate | flatrate | flatrate\nFree Shipping | freeshipping | freeshipping\nBest Way | tablerate | bestway\nUnited Parcel Service | ups | Varies\nUnited States Postal Service | usps | Varies\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nDo not run the `setShippingMethodsOnCart` mutation on in-store pickup orders. Instead, specify the `pickup_location_code` attribute in the [`setShippingAddressesOnCart` mutation](set-shipping-address.md).\n\n## Syntax\n\n`mutation: {setShippingMethodsOnCart(input: setShippingMethodsOnCartInput) {setShippingMethodsOnCartOutput}}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-method.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "062a703f-cf3d-4514-b65c-4bfa74779b2a",
      {
        "pageContent": "## Reference\n\nThe [`setShippingMethodsOnCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-setShippingMethodsOnCart) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-method.md",
          "loc": { "lines": { "from": 27, "to": 29 } }
        }
      }
    ],
    [
      "ff82fc69-4ef3-4d43-8aa1-f68c88d884bb",
      {
        "pageContent": "## Example usage\n\nThe following example sets the delivery method to Best Way.\n\n**Request:**\n\n```graphql\nmutation {\n  setShippingMethodsOnCart(\n    input: {\n      cart_id: \"IeTUiU0oCXjm0uRqGCOuhQ2AuQatogjG\",\n      shipping_methods: [\n        {\n          carrier_code: \"tablerate\"\n          method_code: \"bestway\"\n        }\n      ]\n    }\n  ) {\n    cart {\n      shipping_addresses {\n        selected_shipping_method {\n          carrier_code\n          carrier_title\n          method_code\n          method_title\n          amount {\n            value\n            currency\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-method.md",
          "loc": { "lines": { "from": 31, "to": 65 } }
        }
      }
    ],
    [
      "4934c5f0-06c1-4b54-b60a-c98fbeea535a",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setShippingMethodsOnCart\": {\n      \"cart\": {\n        \"shipping_addresses\": [\n          {\n            \"selected_shipping_method\": {\n              \"carrier_code\": \"tablerate\",\n              \"carrier_title\": \"Best Way\",\n              \"method_code\": \"bestway\",\n              \"method_title\": \"Table Rate\",\n              \"amount\": {\n                \"value\": 0,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-method.md",
          "loc": { "lines": { "from": 66, "to": 93 } }
        }
      }
    ],
    [
      "f89045a6-bae4-4738-8b4b-0d6b54dda9a2",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-method.md",
          "loc": { "lines": { "from": 95, "to": 95 } }
        }
      }
    ],
    [
      "084a3a4e-769f-4403-becb-37edf9f32ebf",
      {
        "pageContent": "Error | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Carrier with such method not found: carrier_code, method_code` | A specified carrier method was not found, or it is not applicable for the defined shipping address.\n`Required parameter \"cart_id\" is missing` | The value specified in the `cart_id` argument is empty.\n`Required parameter \"carrier_code\" is missing.` | The value specified in the `shipping_methods`.`carrier_code` argument is empty.\n`Required parameter \"method_code\" is missing.` | The value specified in the `shipping_methods`.`method_code` argument is empty.\n`Required parameter \"shipping_methods\" is missing` | The value specified in the `shipping_methods` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-method.md",
          "loc": { "lines": { "from": 97, "to": 104 } }
        }
      }
    ],
    [
      "ed8cfb52-8abf-485e-b0bd-8c6d5c61835f",
      {
        "pageContent": "`The current user cannot perform operations on cart \"XXX\"` | An unauthorized user (guest) tried to set a delivery method for an order on behalf of an authorized user (customer), or a customer tried to set a delivery method for an order on behalf of another customer.\n`The shipping method can't be set for an empty cart. Add an item to cart and try again.` | The delivery method cannot be set for an empty cart.\n`You cannot specify multiple shipping methods.` | You can set only one delivery method for an order.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/set-shipping-method.md",
          "loc": { "lines": { "from": 105, "to": 107 } }
        }
      }
    ],
    [
      "9d2318f5-3373-46db-b0be-1ec87008285c",
      {
        "pageContent": "---\ntitle: updateCartItems mutation\n---\n\n# updateCartItems mutation\n\nThe `updateCartItems` mutation allows you to modify items in the specified cart. You can also replace the current quantity of one or more cart items with the specified quantities. The mutation does not perform calculations to determine the quantity of cart items.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nSetting the quantity to `0` removes an item from the cart.\n\n## Syntax\n\n`mutation: {updateCartItems(input: UpdateCartItemsInput): {UpdateCartItemsOutput}}`\n\n## Reference\n\nThe [`updateCartItems`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCartItems) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/update-items.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "cb32e70f-1b7b-43a0-bbe4-f0eabea4e36e",
      {
        "pageContent": "## Example usage\n\nThe following example changes the quantity of cart item `MjQ=`. The new quantity is `3`.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCartItems(\n    input: {\n      cart_id: \"2m3Wpue1L3bNARhErAKbZ8Lb7czvgq6R\",\n      cart_items: [\n        {\n          cart_item_uid: \"MjQ=\"\n          quantity: 3\n        }\n      ]\n    }\n  ){\n    cart {\n      items {\n        uid\n        product {\n          name\n        }\n        quantity\n      }\n      prices {\n        grand_total{\n          value\n          currency\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/update-items.md",
          "loc": { "lines": { "from": 21, "to": 56 } }
        }
      }
    ],
    [
      "c63147a5-058b-4aca-a535-fb3c2712c774",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCartItems\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"uid\": \"MjI=\",\n            \"product\": {\n              \"name\": \"Erika Running Short\"\n            },\n            \"quantity\": 1\n          },\n          {\n            \"uid\": \"MjQ=\",\n            \"product\": {\n              \"name\": \"Voyage Yoga Bag\"\n            },\n            \"quantity\": 3\n          }\n        ],\n        \"prices\": {\n          \"grand_total\": {\n            \"value\": 152.63,\n            \"currency\": \"USD\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/update-items.md",
          "loc": { "lines": { "from": 57, "to": 92 } }
        }
      }
    ],
    [
      "ab946dda-2cba-487d-b968-24c2afbe31f1",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find cart item with id: XXX` | The specified `input`.`cart_items`.`cart_item_id` value does not exist in the `quote_item` database table.\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` database table.\n`Required parameter \"cart_id\" is missing.` | The value specified in the `cart_id` argument is empty.\n`Required parameter \"cart_items\" is missing.` | The `cart_items` argument is empty, or its value is specified as a non-array value.\n`Required parameter \"quantity\" for \"cart_items\" is missing.` | The required `input`.`cart_items`.`quantity` argument must be specified.\n`The current user cannot perform operations on cart \"XXX\"` | An unauthorized user (guest) tried to update a customer's cart, or an authorized user (customer) tried to update the cart of another customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/mutations/update-items.md",
          "loc": { "lines": { "from": 94, "to": 103 } }
        }
      }
    ],
    [
      "41c4e77b-0d9d-4c75-a216-4703236d3192",
      {
        "pageContent": "---\ntitle: cart query\n---\n\n# cart query\n\nUse the `cart` query to retrieve information about a particular cart.\n\nCart functionality is defined in the `Quote` module. A Quote represents the contents of a customer's shopping cart. It is responsible for performing tasks such as:\n\n*  Tracking each item in the cart, including the quantity and base cost\n*  Determining estimated shipping costs\n*  Calculating subtotals, computing additional costs, applying coupons, and determining the payment method\n\n## Syntax\n\n`{cart(cart_id: String!) {Cart}}`\n\n## Reference\n\nThe [`cart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-cart) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "62339ae7-aed5-4bdd-b6c6-015951f2192f",
      {
        "pageContent": "## Sample queries",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 23, "to": 23 } }
        }
      }
    ],
    [
      "2f3d029c-a744-4838-bca2-c0a8007d0e91",
      {
        "pageContent": "### Cart ready for checkout\n\nThe following query shows the status of a cart that is ready to be converted into an order.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 25, "to": 29 } }
        }
      }
    ],
    [
      "417444f4-f160-47e3-b09f-62de4ebcbe29",
      {
        "pageContent": "```graphql\n{\n  cart(cart_id: \"CYmiiQRjPVc2gJUc5r7IsBmwegVIFO43\") {\n    email\n    billing_address {\n      city\n      country {\n        code\n        label\n      }\n      firstname\n      lastname\n      postcode\n      region {\n        code\n        label\n      }\n      street\n      telephone\n    }\n    shipping_addresses {\n      firstname\n      lastname\n      street\n      city\n      region {\n        code\n        label\n      }\n      country {\n        code\n        label\n      }\n      telephone\n      available_shipping_methods {\n        amount {\n          currency\n          value\n        }\n        available\n        carrier_code\n        carrier_title\n        error_message\n        method_code\n        method_title\n        price_excl_tax {\n          value\n          currency\n        }\n        price_incl_tax {\n          value\n          currency\n        }\n      }\n      selected_shipping_method {\n        amount {\n          value\n          currency\n        }\n        carrier_code\n        carrier_title",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 31, "to": 91 } }
        }
      }
    ],
    [
      "1f2e9d31-cc97-499e-b9d4-7de39500b831",
      {
        "pageContent": "method_code\n        method_title\n      }\n    }\n    items {\n      id\n      product {\n        name\n        sku\n      }\n      quantity\n      errors {\n        code\n        message\n      }\n    }\n    available_payment_methods {\n      code\n      title\n    }\n    selected_payment_method {\n      code\n      title\n    }\n    applied_coupons {\n      code\n    }\n    prices {\n      grand_total {\n        value\n        currency\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 92, "to": 126 } }
        }
      }
    ],
    [
      "b97fc8c7-0aea-4a35-999b-2536fbf56032",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 127, "to": 129 } }
        }
      }
    ],
    [
      "304dd9ca-b367-4d1c-b799-726147f94265",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"cart\": {\n      \"email\": \"roni_cost@example.com\",\n      \"billing_address\": {\n        \"city\": \"Calder\",\n        \"country\": {\n          \"code\": \"US\",\n          \"label\": \"US\"\n        },\n        \"firstname\": \"Veronica\",\n        \"lastname\": \"Costello\",\n        \"postcode\": \"49628-7978\",\n        \"region\": {\n          \"code\": \"MI\",\n          \"label\": \"Michigan\"\n        },\n        \"street\": [\n          \"6146 Honey Bluff Parkway\"\n        ],\n        \"telephone\": \"(555) 229-3326\"\n      },\n      \"shipping_addresses\": [\n        {\n          \"firstname\": \"Veronica\",\n          \"lastname\": \"Costello\",\n          \"street\": [\n            \"6146 Honey Bluff Parkway\"\n          ],\n          \"city\": \"Calder\",\n          \"region\": {\n            \"code\": \"MI\",\n            \"label\": \"Michigan\"\n          },\n          \"country\": {\n            \"code\": \"US\",\n            \"label\": \"US\"\n          },\n          \"telephone\": \"(555) 229-3326\",\n          \"available_shipping_methods\": [\n            {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 131, "to": 172 } }
        }
      }
    ],
    [
      "cf38f2a3-5055-455c-845b-b212801629d8",
      {
        "pageContent": "{\n              \"amount\": {\n                \"currency\": \"USD\",\n                \"value\": 10\n              },\n              \"available\": true,\n              \"carrier_code\": \"tablerate\",\n              \"carrier_title\": \"Best Way\",\n              \"error_message\": \"\",\n              \"method_code\": \"bestway\",\n              \"method_title\": \"Table Rate\",\n              \"price_excl_tax\": {\n                \"value\": 10,\n                \"currency\": \"USD\"\n              },\n              \"price_incl_tax\": {\n                \"value\": 10,\n                \"currency\": \"USD\"\n              }\n            },\n            {\n              \"amount\": {\n                \"currency\": \"USD\",\n                \"value\": 15\n              },\n              \"available\": true,\n              \"carrier_code\": \"flatrate\",\n              \"carrier_title\": \"Flat Rate\",\n              \"error_message\": \"\",\n              \"method_code\": \"flatrate\",\n              \"method_title\": \"Fixed\",\n              \"price_excl_tax\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 172, "to": 203 } }
        }
      }
    ],
    [
      "0d4d2f5b-50e4-4be1-a583-b65f688e4b38",
      {
        "pageContent": "\"value\": 15,\n                \"currency\": \"USD\"\n              },\n              \"price_incl_tax\": {\n                \"value\": 15,\n                \"currency\": \"USD\"\n              }\n            }\n          ],\n          \"selected_shipping_method\": {\n            \"amount\": {\n              \"value\": 10,\n              \"currency\": \"USD\"\n            },\n            \"carrier_code\": \"tablerate\",\n            \"carrier_title\": \"Best Way\",\n            \"method_code\": \"bestway\",\n            \"method_title\": \"Table Rate\"\n          }\n        }\n      ],\n      \"items\": [\n        {\n          \"uid\": \"Mg==\",\n          \"product\": {\n            \"name\": \"Strive Shoulder Pack\",\n            \"sku\": \"24-MB04\"\n          },\n          \"quantity\": 2\n        },\n        {\n          \"uid\": \"17\",\n          \"product\": {\n            \"name\": \"Savvy Shoulder Tote\",\n            \"sku\": \"24-WB05\"\n          },\n          \"quantity\": 1\n        }\n      ],\n      \"available_payment_methods\": [\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 204, "to": 244 } }
        }
      }
    ],
    [
      "3ce3eb86-9ec1-44b1-bce8-74f71123c61a",
      {
        "pageContent": "{\n          \"code\": \"braintree_cc_vault\",\n          \"title\": \"Stored Cards (Braintree)\"\n        },\n        {\n          \"code\": \"braintree\",\n          \"title\": \"Credit Card (Braintree)\"\n        },\n        {\n          \"code\": \"checkmo\",\n          \"title\": \"Check / Money order\"\n        }\n      ],\n      \"selected_payment_method\": {\n        \"code\": \"checkmo\",\n        \"title\": \"Check / Money order\"\n      },\n      \"applied_coupons\": null,\n      \"prices\": {\n        \"grand_total\": {\n          \"value\": 105.26,\n          \"currency\": \"USD\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 244, "to": 271 } }
        }
      }
    ],
    [
      "0e4721ac-78d1-45f4-a6e2-4e7bf48f8121",
      {
        "pageContent": "### Cart discounts\n\nIn this query, the **Buy 3 tee shirts and get the 4th free** cart price rule from the sample data is active. This rule was modified slightly to add the label `3T1free`.  (If a cart price rule does not have a label, the application returns a default label of `Discount`.) A custom rule in which the customer saves 10% on the order by applying a discount code is also in effect.\n\nThe `3T1free` rule is applied first, and the application returns the price of a single shirt, $29, as the discount. The application then applies a 10% discount to the remaining total of the products in the cart.\n\nIf other promotions or price adjustments are applied to the cart through either store credit or gift cards, these are reflected under the `discounts` object with the appropriate label.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 273, "to": 281 } }
        }
      }
    ],
    [
      "816873bf-7095-41af-a176-ebfcc4f2bab2",
      {
        "pageContent": "**Request:**\n\n```graphql\n{\n  cart(cart_id: \"v7jYJUjvPeHbdMJRcOfZIeQhs2Xc2ZKT\") {\n    email\n    items {\n      uid\n      prices {\n        total_item_discount {\n          value\n        }\n        price {\n          value\n        }\n        discounts {\n          label\n          amount {\n            value\n          }\n        }\n      }\n      product {\n        name\n        sku\n      }\n      quantity\n    }\n    applied_coupons {\n      code\n    }\n    prices {\n      discounts {\n        amount {\n          value\n        }\n        applied_to\n        label\n      }\n      grand_total {\n        value\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 281, "to": 325 } }
        }
      }
    ],
    [
      "234a93ad-a822-4b25-b62e-b64c44711f40",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 326, "to": 328 } }
        }
      }
    ],
    [
      "6b0757ab-797b-44ef-a9d5-8a6f22cba201",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"cart\": {\n      \"email\": \"roni_cost@example.com\",\n      \"items\": [\n        {\n          \"uid\": \"MjY=\",\n          \"prices\": {\n            \"total_item_discount\": {\n              \"value\": 37.7\n            },\n            \"price\": {\n              \"value\": 29\n            },\n            \"discounts\": [\n              {\n                \"label\": \"Discount (3T1free, 10% Off for New Customers)\",\n                \"amount\": {\n                  \"value\": 37.7\n                }\n              },\n              {\n                \"label\": \"Gift Card\",\n                \"amount\": {\n                  \"value\": 0.1\n                }\n              },\n              {\n                \"label\": \"Store Credit\",\n                \"amount\": {\n                  \"value\": 0.1\n                }\n              }\n            ]\n          },\n          \"product\": {\n            \"name\": \"Elisa EverCool&trade; Tee\",\n            \"sku\": \"WS06\"\n          },\n          \"quantity\": 4\n        }\n      ],",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 330, "to": 372 } }
        }
      }
    ],
    [
      "4ea4bcc4-ee7e-40ba-97be-32264c47dc29",
      {
        "pageContent": "}\n      ],\n      \"applied_coupons\": [\n        {\n          \"code\": \"NEW\"\n        }\n      ],\n      \"prices\": {\n        \"discounts\": [\n          {\n            \"amount\": {\n              \"value\": 29\n            },\n            \"applied_to\": \"ITEM\",\n            \"label\": \"3T1free\"\n          },\n          {\n            \"amount\": {\n              \"value\": 8.7\n            },\n            \"applied_to\": \"ITEM\",\n            \"label\": \"10% Off for New Customers\"\n          }\n        ],\n        \"grand_total\": {\n          \"value\": 84.76\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 371, "to": 402 } }
        }
      }
    ],
    [
      "06e9d90d-445f-40fb-9c38-07f6b4a156d7",
      {
        "pageContent": "### Tier price example\n\nIn the following example, tier prices has been established for product `24-UG01` and `24-UG05`, as shown in the following table:\n\nProduct | Quantity | Fixed/Discount | Amount\n--- | --- | --- | --- |\n24-UG01 | 5 | Discount | 5%\n24-UG01 | 10 | Discount | 10%\n24-UG01 | 15 | Discount | 15%\n24-UG05 | 5 | Fixed | $16\n24-UG05 | 10 | Fixed | $11\n\nThe cart in the example contains 12 units of `24-UG05` and 8 units of `24-UG-01`, so the price of `24-UG05` is $11, and the price of `24-UG01` is $18.05 (5% off).\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 404, "to": 418 } }
        }
      }
    ],
    [
      "806bc0d6-f9b0-48b4-bd7b-6c5885121615",
      {
        "pageContent": "**Request:**\n\n```graphql\nquery {\n  cart(cart_id: \"v7jYJUjvPeHbdMJRcOfZIeQhs2Xc2ZKT\"){\n    items {\n      uid\n      quantity\n      product{\n        name\n        sku\n        price_tiers {\n          quantity\n          final_price {\n            value\n          }\n          discount {\n            amount_off\n            percent_off\n          }\n        }\n      }\n      prices{\n        price{\n          value\n        }\n      }\n    }\n    prices {\n      discounts {\n        label\n        applied_to\n        amount {\n          value\n        }\n      }\n      subtotal_excluding_tax {\n        value\n      }\n      applied_taxes {\n        label\n        amount {\n          value\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 418, "to": 465 } }
        }
      }
    ],
    [
      "32bce573-01a1-47cf-ab71-2f164340d1d6",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 466, "to": 468 } }
        }
      }
    ],
    [
      "bf4e25a6-6b27-4f64-b1cb-28f95e7c1076",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"cart\": {\n      \"items\": [\n        {\n          \"uid\": \"NjU=\",\n          \"quantity\": 12,\n          \"product\": {\n            \"name\": \"Go-Get'r Pushup Grips\",\n            \"sku\": \"24-UG05\",\n            \"price_tiers\": [\n              {\n                \"quantity\": 5,\n                \"final_price\": {\n                  \"value\": 16\n                },\n                \"discount\": {\n                  \"amount_off\": 3,\n                  \"percent_off\": 15.79\n                }\n              },\n              {\n                \"quantity\": 10,\n                \"final_price\": {\n                  \"value\": 11\n                },\n                \"discount\": {\n                  \"amount_off\": 8,\n                  \"percent_off\": 42.11\n                }\n              }\n            ]\n          },\n          \"prices\": {\n            \"price\": {\n              \"value\": 11\n            }\n          }\n        },\n        {\n          \"uid\": \"NjY=\",\n          \"quantity\": 8,\n          \"product\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 470, "to": 513 } }
        }
      }
    ],
    [
      "9c837e8b-22a9-434c-b897-38ab8e216f1b",
      {
        "pageContent": "\"name\": \"Quest Lumaflex&trade; Band\",\n            \"sku\": \"24-UG01\",\n            \"price_tiers\": [\n              {\n                \"quantity\": 5,\n                \"final_price\": {\n                  \"value\": 18.05\n                },\n                \"discount\": {\n                  \"amount_off\": 0.95,\n                  \"percent_off\": 5\n                }\n              },\n              {\n                \"quantity\": 10,\n                \"final_price\": {\n                  \"value\": 17.1\n                },\n                \"discount\": {\n                  \"amount_off\": 1.9,\n                  \"percent_off\": 10\n                }\n              },\n              {\n                \"quantity\": 15,\n                \"final_price\": {\n                  \"value\": 16.15\n                },\n                \"discount\": {\n                  \"amount_off\": 2.85,\n                  \"percent_off\": 15\n                }\n              }\n            ]\n          },\n          \"prices\": {\n            \"price\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 514, "to": 550 } }
        }
      }
    ],
    [
      "656b8bfc-b26e-411c-a361-a6dfabd6fdeb",
      {
        "pageContent": "\"value\": 18.05\n            }\n          }\n        }\n      ],\n      \"prices\": {\n        \"discounts\": [\n          {\n            \"label\": \"200\",\n            \"applied_to\": \"ITEM\",\n            \"amount\": {\n              \"value\": 55.28\n            }\n          }\n        ],\n        \"subtotal_excluding_tax\": {\n          \"value\": 276.4\n        },\n        \"applied_taxes\": [\n          {\n            \"label\": \"US-MI-*-Rate 1\",\n            \"amount\": {\n              \"value\": 18.24\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 551, "to": 581 } }
        }
      }
    ],
    [
      "d7a1008f-028f-44e4-9325-911baa161640",
      {
        "pageContent": "## Input attributes\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cart_id` | String! | A 32-character string that is created when you [create a cart](../mutations/create-empty-cart.md)\n\n## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \\\"xxxxx\\\"` | The ID provided in the `cart_id` field is invalid or the cart does not exist for the customer.\n`The cart isn't active` | The cart with the specified cart ID is unavailable, because the items have been purchased and the cart ID becomes inactive.\n`Field cart.cart_id of required type String! was not provided` | The value specified in the `cart.cart_id` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 583, "to": 595 } }
        }
      }
    ],
    [
      "47321170-85cf-41a4-97ba-1ca665c5ebda",
      {
        "pageContent": "## Related topics\n\n*  [createEmptyCart mutation](../mutations/create-empty-cart.md)\n*  [addSimpleProductsToCart mutation](../mutations/add-simple-products.md)\n*  [setShippingAddressesOnCart mutation](../mutations/set-shipping-address.md)\n*  [setShippingMethodsOnCart mutation](../mutations/set-shipping-method.md)\n*  [setBillingAddressOnCart mutation](../mutations/set-billing-address.md)\n*  [setPaymentMethodOnCart mutation](../mutations/set-payment-method.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/cart.md",
          "loc": { "lines": { "from": 597, "to": 604 } }
        }
      }
    ],
    [
      "c4e25d52-296f-4460-8ad5-5791ba544d90",
      {
        "pageContent": "---\ntitle: Cart queries\n---\n\n# Cart queries\n\nThe `cart` query returns the content of the shopper's cart. Adobe Commerce returns the [`Cart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-Cart) object. This object is also returned by numerous mutations, including those that add products to the cart and prepare a cart for checkout.\n\nWhen Inventory Management is installed and configured, you can use the `pickupLocations` query to help a shopper determine whether their order can be picked up at a physical location. This query is most useful when the shopper has selected one or more items for purchase.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 9 } }
        }
      }
    ],
    [
      "ed221526-5ead-4beb-9d5b-45ced691d227",
      {
        "pageContent": "---\ntitle: pickupLocations query\ncontributor_name: Oleksandr Kravchuk\ncontributor_link: https://github.com/swnsma\n---\n\n# pickupLocations query\n\nUse the `pickupLocations` query to retrieve a list of available pickup locations.\n\nThe `pickupLocations` query supports the following types of filters.\n\n*  Area filters allow you to specify a location and a radius to find all locations within that radius. The `search_term` field must contain either the region, city, or postcode, followed by a colon and the country code. This value determines the location to use as the center of the search radius.  Valid search terms include Texas:US, Austin:US, and 78740:US. The two-letter country code must be uppercase.\n\n*  Attribute filters allow you to return locations within a specified country, postal code, region, city, street, street, name, and pickup location code.\n\nYou can specify multiple filters in a query.\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/pickup-locations.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "c0b719e3-7aa7-4fe5-a054-937b88c93b18",
      {
        "pageContent": "The `pickupLocations` query does not support searching by SKU assignment intersections.\n\nIf no filters are provided, the query returns a list of pickup locations, assigned to the Sales Channel that is used by the store.\n\nThe `ProductInfoInput` object can contain a list of SKUs. If this object is provided in the query, then the response contains locations where all the products are available for in-store pickup. If even one product in the list cannot be used as an in-store pickup location, that location will not be included in the response.\n\nThe query supports pagination and sorting (including sorting by distance if area filtering was applied).\n\nThe query returns a `PickupLocations` object, which contains information about pagination and list of `PickupLocation` items.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/pickup-locations.md",
          "loc": { "lines": { "from": 21, "to": 29 } }
        }
      }
    ],
    [
      "e62838b5-ccfe-4660-8e89-bc9d29663ac8",
      {
        "pageContent": "## Syntax\n\n```graphql\npickupLocations (area: AreaInput filters: PickupLocationFilterInput sort: PickupLocationSortInput pageSize: Int currentPage: Int): PickupLocations\n```\n\n## Reference\n\nThe [`pickupLocations`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-pickupLocations) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/pickup-locations.md",
          "loc": { "lines": { "from": 31, "to": 39 } }
        }
      }
    ],
    [
      "30ce0410-4a99-4642-9e9a-aae7f91fc865",
      {
        "pageContent": "## Example usage\n\nThe following query returns the closest pickup location to `Austin` with limitation in 1500 KM.\nBecause `pageSize` is set to 1 and distance by `distance` is applied, result will return the closest pickup location.\n\n**Request:**\n\n```graphql\n{\n  pickupLocations(\n    area:{\n      radius: 1500\n      search_term: \"Austin:US\"\n    }\n    pageSize: 1\n    currentPage: 1\n    sort: {distance: ASC},\n    productsInfo: [\n        {\n            sku: \"SKU-1\"\n        }\n    ]\n  ) {\n    items {\n      pickup_location_code\n      name\n      email\n      fax\n      description\n      latitude\n      longitude\n      country_id\n      region_id\n      region\n      city\n      street\n      postcode\n      phone\n    },\n    total_count\n    page_info {\n      page_size\n      current_page\n      total_pages\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/pickup-locations.md",
          "loc": { "lines": { "from": 41, "to": 87 } }
        }
      }
    ],
    [
      "af15a05a-a48f-4886-8e58-bc4f57bc6517",
      {
        "pageContent": "```\n\n**Response:**\n\nIf the Pickup location is not available for the given search term, the response will be empty.\nFor the available Pickup location, the response would look like:\n\n```json\n{\n  \"data\": {\n    \"pickupLocations\": {\n      \"items\": [\n        {\n          \"pickup_location_code\": \"txspeqs\",\n          \"name\": \"Sport Equipment Store\",\n          \"email\": \"sales@company.com\",\n          \"fax\": null,\n          \"description\": \"Sport Equipment Store description\",\n          \"latitude\": 29.7543,\n          \"longitude\": -95.3609,\n          \"country_id\": \"US\",\n          \"region_id\": 57,\n          \"region\": \"Texas\",\n          \"city\": \"Houston\",\n          \"street\": \"4631 Airport Blvd #125\",\n          \"postcode\": \"77010\",\n          \"phone\": \"(555) 555-5555\"\n        }\n      ],\n      \"total_count\": 1,\n      \"page_info\": {\n        \"page_size\": 1,\n        \"current_page\": 1,\n        \"total_pages\": 1\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/pickup-locations.md",
          "loc": { "lines": { "from": 88, "to": 126 } }
        }
      }
    ],
    [
      "9453e0ee-4516-4be5-9a1d-246c6e237d43",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Field AreaInput.radius of required type Int! was not provided` | The value specified in the `AreaInput.radius` argument is empty.\n`Field AreaInput.search_term of required type String! was not provided` | The value specified in the `AreaInput.search_term` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/cart/queries/pickup-locations.md",
          "loc": { "lines": { "from": 128, "to": 133 } }
        }
      }
    ],
    [
      "e902086b-41a2-4b34-81a5-88e5228c0cbf",
      {
        "pageContent": "---\ntitle: Checkout\n---\n\n# Checkout\n\nThe checkout schema helps complete the customer checkout process by managing and retrieving payment tokens and checkout agreements.\n\nThe checkout workflow differs for each online payment time. See the following topics for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/index.md",
          "loc": { "lines": { "from": 1, "to": 9 } }
        }
      }
    ],
    [
      "97a68608-eccd-4d75-bc23-14ed7e0b74f4",
      {
        "pageContent": "*  [Braintree](../../payment-methods/braintree.md)\n*  [Braintree vault](../../payment-methods/braintree-vault.md)\n*  [Payment Services checkout](../../payment-services/checkout.md\n*  [Payment Services minicart](../../payment-services/minicart.md)\n*  [Klarna](../../payment-methods/klarna.md) (no longer supported)\n*  [PayPal Express Checkout](../../payment-methods/paypal-express-checkout.md)\n*  [Express Checkout for other PayPal solutions](../../payment-methods/payflow-express.md)\n*  [PayPal Payflow Link](../../payment-methods/payflow-link.md)\n*  [PayPal Payflow Pro](../../payment-methods/payflow-pro.md)\n*  [PayPal Payflow Pro Vault](../../payment-methods/payflow-pro-vault.md)\n*  [PayPal Payments Advanced](../../payment-methods/payments-advanced.md)\n*  [PayPal Website Payments Pro Hosted Solution](../../payment-methods/hosted-pro.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/index.md",
          "loc": { "lines": { "from": 11, "to": 22 } }
        }
      }
    ],
    [
      "f2c039a6-67b1-4d8e-8396-ee1a5630b003",
      {
        "pageContent": "---\ntitle: createBraintreeClientToken mutation\ncontributor_name: Something Digital\ncontributor_link: https://www.somethingdigital.com/\n---\n\n# createBraintreeClientToken mutation\n\nThe `createBraintreeClientToken` mutation creates the client token for Braintree Javascript SDK initialization.\n\n## Syntax\n\n```graphql\nmutation {\n  createBraintreeClientToken {\n    String\n  }\n}\n```\n\n## Reference\n\nThe [`createBraintreeClientToken`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createBraintreeClientToken) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\n**Request:**\n\n```graphql\nmutation {\n  createBraintreeClientToken\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createBraintreeClientToken\": \"4JQaNVJokOpFxrykGVvYrjhiNv9qt31C\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-braintree-client-token.md",
          "loc": { "lines": { "from": 1, "to": 43 } }
        }
      }
    ],
    [
      "7c6be748-f373-4da2-9f88-4a7d68fd15c3",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The Braintree payment method is not active.` | The [Braintree](https://docs.magento.com/m2/ee/user_guide/payment/braintree.html) payment method is disabled in admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-braintree-client-token.md",
          "loc": { "lines": { "from": 45, "to": 49 } }
        }
      }
    ],
    [
      "d8afa3ea-33e9-4a81-97b6-9a5b59710d0a",
      {
        "pageContent": "---\ntitle: createKlarnaPaymentsSession mutation\ncontributor_name: Klarna\ncontributor_link: https://www.klarna.com/\n---\n\n# createKlarnaPaymentsSession mutation\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe Klarna Vendor Bundled Extension was removed from the Adobe Commerce codebase in version 2.4.4.\nThis mutation is no longer supported.\n\nThe `createKlarnaPaymentsSession` mutation initiates a Klarna session. You can create a session at any time before you display the available payment methods, but ideally, the cart would already contain products, the billing address, shipping address, and shipping method. If the cart changes afterward, you must run the mutation again to ensure that the latest payment methods are made available to the shopper. Factors such as the cart contents, the shipping and billing addresses, and the grand total after applying coupons can determine the payment methods Klarna offers.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-klarna-payments-session.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "9d0c1669-f05d-4a28-97af-26838ee5670f",
      {
        "pageContent": "The mutation response includes an array of payment method categories. When the shopper selects a Klarna payment method, prepend the string `klarna_` to the selected `identifer`, and use the resulting string as the `payment_method.code` value in the subsequent `setPaymentMethodOnCart` mutation. For example, if the shopper selects the \"Pay later in 30 days\" payment method, the `identifier` value is `pay_later`, and the `payment_method.code` value is `klarna_pay_later`.\n\nThe response also contains a client token. You must also supply this value in the `setPaymentMethodOnCart` mutation.\n\n[Klarna payment method](../../../payment-methods/klarna.md) provides additional information about the workflow of Klarna transactions.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-klarna-payments-session.md",
          "loc": { "lines": { "from": 16, "to": 20 } }
        }
      }
    ],
    [
      "5d0b0afc-2afc-4a4b-a338-86d1d6852e27",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  createKlarnaPaymentsSession(\n    input: createKlarnaPaymentsSessionInput!\n  ) {\n    createKlarnaPaymentsSessionOutput\n  }\n}\n```\n\n## Example usage\n\n**Request:**\n\n```graphql\nmutation {\n  createKlarnaPaymentsSession(\n    input: {\n      cart_id: \"VaP2GtqImwsTEXEf7azrh4vopebXp8gl\"}\n  ) {\n    client_token\n    payment_method_categories {\n      identifier\n      name\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createKlarnaPaymentsSession\": {\n      \"client_token\": \"<token_value>\",\n      \"payment_method_categories\": [\n        {\n          \"identifier\": \"pay_later\",\n          \"name\": \"Pay later in 30 days\"\n        },\n        {\n          \"identifier\": \"pay_over_time\",\n          \"name\": \"Buy now, pay later\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-klarna-payments-session.md",
          "loc": { "lines": { "from": 22, "to": 73 } }
        }
      }
    ],
    [
      "25a9ed13-1ad0-4a1d-8ad8-369a77859b78",
      {
        "pageContent": "## Input attributes\n\n### createKlarnaPaymentsSessionInput attributes\n\nThe `createKlarnaPaymentsSessionInput` object must contain the following attribute.\n\nAttribute | Data type | Description\n--- | --- | ---\n`cart_id` | String! | The masked ID that identifies the shopper's cart",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-klarna-payments-session.md",
          "loc": { "lines": { "from": 75, "to": 83 } }
        }
      }
    ],
    [
      "d1dfa7d8-362e-413a-a461-02028464a334",
      {
        "pageContent": "## Output attributes\n\n### createKlarnaPaymentsSessionOutput attributes\n\nThe `createKlarnaPaymentsSessionOutput` object can contain the following attributes.\n\nAttribute | Data type | Description\n--- | --- | ---\n`client_token` |  String | The payment method client token\n`payment_method_categories` | [Categories] | An array of payment method categories\n\n### Categories attributes\n\nThe `Categories` object can contain the following attributes.\n\nAttribute | Data type | Description\n--- | --- | ---\n`asset_urls` | [Assets] | The payment method assets\n`identifier` | String! | The payment method identifier\n`name` | String! | The payment method name\n\n### Assets attributes\n\nThe `Assets` object can contain the following attributes.\n\nAttribute | Data type | Description\n--- | --- | ---\n`descriptive` | String | The payment method logo url (descriptive)\n`standard` | String | The payment method logo url (standard)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-klarna-payments-session.md",
          "loc": { "lines": { "from": 85, "to": 113 } }
        }
      }
    ],
    [
      "390fb445-9ccc-41da-8a10-2dfb40171820",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The Klarna payment method is not active.` | The [Klarna](https://experienceleague.adobe.com/docs/commerce-admin/config/sales/payment-methods/payment-methods.html) payment method is disabled in admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-klarna-payments-session.md",
          "loc": { "lines": { "from": 115, "to": 119 } }
        }
      }
    ],
    [
      "385d7f36-613b-4c00-ba1f-b7f1c98339e4",
      {
        "pageContent": "---\ntitle: createPayflowProToken mutation\n---\n\n# createPayflowProToken mutation\n\nThe `createPayflowProToken` mutation initiates a Payflow Pro transaction and receives a token. The payload must contain the redirect URLs to use when the transaction is successful, when the customer cancels the transaction, or when an error occurs.\n\nThe `PayflowProUrlInput` object contains a set of relative URLs that PayPal will use in response to various actions during the authorization process. The application prepends the base URL to this value to create a full URL. For example, if the full URL is `https://www.example.com/path/to/page.html`, the relative URL is `path/to/page.html`.\n\nUse this input for Payflow Pro and Payment Pro payment methods.\n\nSee [Paypal Payflow Pro payment method](../../../payment-methods/payflow-pro.md) for detailed information about the workflow of PayPal Payflow Pro transactions.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-payflow-pro-token.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "ca9e5bfb-70a0-4fc3-8932-3031f0cd842f",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  createPayflowProToken(\n    input: PayflowProTokenInput\n  ) {\n    CreatePayflowProTokenOutput\n  }\n}\n```\n\n## Reference\n\nThe [`createPayflowProToken`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createPayflowProToken) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-payflow-pro-token.md",
          "loc": { "lines": { "from": 15, "to": 29 } }
        }
      }
    ],
    [
      "1f1df76a-f00f-47a6-b7dc-b7dff944d056",
      {
        "pageContent": "## Example usage\n\nThe following example requests a token in a Payflow Pro transaction.\n\n**Request:**\n\n```graphql\nmutation {\n  createPayflowProToken(\n    input: {\n      cart_id: \"Po1WkfK7d3vZE0qga610NwJIbxgqllpt\"\n      urls: {\n        return_url: \"paypal/action/return.html\"\n        cancel_url: \"paypal/action/cancel.html\"\n        error_url: \"paypal/action/error.html\"\n      }\n    }\n  ) {\n    response_message\n    result\n    result_code\n    secure_token\n    secure_token_id\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createPayflowProToken\": {\n      \"response_message\": \"Approved\",\n      \"result\": 0,\n      \"result_code\": 0,\n      \"secure_token\": \"5JRGtIDsaJUuEPq0lR5m9ugqG\",\n      \"secure_token_id\": \"H3roFRhGjKzxCKr5TlA8mooClBpQxgBY\"\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-payflow-pro-token.md",
          "loc": { "lines": { "from": 31, "to": 71 } }
        }
      }
    ],
    [
      "89ad9b99-d365-4268-bc8b-5da4d3dd1b45",
      {
        "pageContent": "```\n\nError | Description\n--- | ---\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Field PayflowProTokenInput.cart_id of required type String! was not provided.` | You must specify the `cart_id` attribute.\n`Field PayflowProTokenInput.urls of required type PayflowProUrlInput! was not provided.` | You must specify the `urls` attribute.\n`Field PayflowProUrlInput.return_url of required type String! was not provided.` | You must specify the `return_url` attribute.\n`Field PayflowProUrlInput.error_url of required type String! was not provided.` | You must specify the `error_url` attribute.\n`Field PayflowProUrlInput.cancel_url of required type String! was not provided.` | You must specify the `cancel_url` attribute.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-payflow-pro-token.md",
          "loc": { "lines": { "from": 72, "to": 81 } }
        }
      }
    ],
    [
      "01af9377-4120-411d-911c-492110d811e4",
      {
        "pageContent": "---\ntitle: createPaymentOrder mutation\n---\n\n# createPaymentOrder mutation\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThis mutation is available only if you have installed [Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 or higher.\n\nThe `createPaymentOrder` mutation creates a payment order for later processing with Payment Services enabled.\n\nThe mutation can return details about the following payment methods supported in [Payment Services](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/payments-options.html):\n\n* Apple Pay\n* PayPal Hosted Fields\n* PayPal Smart Buttons\n\nEach of these payment methods can have a different payment source, for example, PayPal Hosted Fields only works with credit cards. You need to run `getPaymentConfig` and `setPaymentMethodOnCart` endpoints before running the `createPaymentOrder` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-payment-order.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "100e54df-2c4b-4e11-acdb-f575c5d7a71e",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation { \n    createPaymentOrder(\n        input: CreatePaymentOrderInput! \n    ) CreatePaymentOrderOutput    \n}\n```\n\n## Example usage\n\nThe following example creates a payment order. The payment method was previously set to `payment_services_paypal_hosted_fields`.\n\n**Request:**\n\n```graphql\nmutation {\n  createPaymentOrder(input: {\n    cartId: \"AJCY8dhIfuch9LcDHAxEkw7oG3DjGdKt\"\n    methodCode: \"payment_services_paypal_hosted_fields\"\n    paymentSource: \"cc\"\n    location: CHECKOUT\n    vaultIntent: false\n  }) {\n    id\n    mp_order_id\n    status\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createPaymentOrder\": {\n      \"id\": \"9SA28234K9340625D\",\n      \"mp_order_id\": \"mp-order-8b0488f9-46c5-4640-b577-c5f7d90cf224\",\n      \"status\": \"CREATED\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-payment-order.md",
          "loc": { "lines": { "from": 21, "to": 65 } }
        }
      }
    ],
    [
      "f5017cdc-cb77-479f-b2f3-970451637a30",
      {
        "pageContent": "## Input attributes\n\nThe `CreatePaymentOrderinput` object contains the following input attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cartId` | String! | The unique ID of the cart\n`location` | PaymentLocation! | The origin location for that payment request. The possible values are\nPRODUCT_DETAIL, MINICART, CART, CHECKOUT, ADMIN\n`methodCode` | String! | The code for the selected payment method\n`paymentSource` | String! | The payment source for the payment method. The possible values are credit card (cc), PayPal (paypal), and Apple Pay (applepay)\n`vaultIntent` | Boolean | Indicates whether the payment information should be vaulted. This attribute is only applicable to the `hosted_fields` payment method. The default value is `false`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-payment-order.md",
          "loc": { "lines": { "from": 67, "to": 78 } }
        }
      }
    ],
    [
      "4ce0d311-3e80-4b6f-8648-1d9749b7e86f",
      {
        "pageContent": "## Output attributes\n\nThe `CreatePaymentOrderOutput` object contains the payment order details that are needed to fulfill a payment.\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`id` | String | The unique order ID generated by PayPal\n`mp_order_id` | String | The unique order ID generated in Commerce if Payment Services is enabled after PayPal returns the `id`\n`status` | String | The status of the payment order. See [order status](https://experienceleague.adobe.com/docs/commerce-admin/stores-sales/order-management/orders/order-status.html) for more information",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-payment-order.md",
          "loc": { "lines": { "from": 80, "to": 88 } }
        }
      }
    ],
    [
      "62fa5551-a94d-4f10-a48f-502b65bcbce3",
      {
        "pageContent": "---\ntitle: createPaypalExpressToken mutation\n---\n\n# createPaypalExpressToken mutation\n\nThe `createPaypalExpressToken` mutation begins the authorization process for the following payment methods:\n\n*  PayPal Express Checkout\n*  PayPal Payflow Pro with Express Checkout\n*  PayPal Payflow Link with Express Checkout\n\nThe `PaypalExpressUrlsInput` object contains a set of relative URLs that PayPal will use in response to various actions during the authorization process. The application prepends the base URL to this value to create a full URL. For example, if the full URL is `https://www.example.com/path/to/page.html`, the relative URL is `path/to/page.html`. Use this input for Express Checkout and Payments Standard payment methods.\n\nIf the request is successful, PayPal returns a token. The [`setPaymentMethodOnCart`](../../cart/mutations/set-payment-method.md) mutation uses this token later in the authorization process.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-paypal-express-token.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "3b5a43bd-f7e0-45a1-bc93-1373062a205c",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  createPaypalExpressToken(\n    input: PaypalExpressTokenInput!\n  ) {\n    PaypalExpressTokenOutput\n  }\n}\n```\n\n## Reference\n\nThe [`createPaypalExpressToken`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createPaypalExpressToken) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-paypal-express-token.md",
          "loc": { "lines": { "from": 17, "to": 31 } }
        }
      }
    ],
    [
      "d2333e1e-7dda-48fa-adc7-c50d878e2fcc",
      {
        "pageContent": "## Example usage\n\n**Request:**\n\n```graphql\nmutation {\n  createPaypalExpressToken(\n    input: {\n      cart_id: \"rMQdWEecBZr4SVWZwj2AF6y0dNCKQ8uH\"\n      code: \"paypal_express\"\n      express_button: true\n      urls: {\n        return_url: \"paypal/action/return.html\"\n        cancel_url: \"paypal/action/cancel.html\"\n      }\n    }\n  ) {\n    token\n    paypal_urls {\n      start\n      edit\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createPaypalExpressToken\": {\n      \"token\": \"<PayPal_Token>\",\n      \"paypal_urls\": {\n        \"start\": \"https://www.sandbox.paypal.com/checkoutnow?token=<PayPal_Token>\",\n        \"edit\": \"https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_express-checkout&useraction=continue&token=<PayPal_Token>\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-paypal-express-token.md",
          "loc": { "lines": { "from": 33, "to": 73 } }
        }
      }
    ],
    [
      "ac5aeb0c-dbe5-438b-a52b-a6407f846d03",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Required parameter \"cart_id\" is missing` | The mutation does not contain a `cart_id` argument.\n`Could not find a cart with ID \"XXX\"` | The specified `cart_id` value does not exist in the `quote_id_mask` table.\n`Field PaypalExpressTokenInput.code of required type String! was not provided.` | The required attribute `code` is missing.\n`The requested Payment Method is not available.` | The payment method is not configured.\n`Field PaypalExpressUrlsInput.cancel_url of required type String! was not provided.` | The required attribute `cancel_url` is missing.\n`Field PaypalExpressUrlsInput.return_url of required type String! was not provided.` | The required attribute `return_url` is missing.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/create-paypal-express-token.md",
          "loc": { "lines": { "from": 75, "to": 84 } }
        }
      }
    ],
    [
      "097fa441-1471-41f6-a0ff-ddf8fcedee03",
      {
        "pageContent": "---\ntitle: deletePaymentToken mutation\n---\n\n# deletePaymentToken mutation\n\nThe `deletePaymentToken` mutation deletes a payment token from the system. Use the [customerPaymentTokens query](../queries/customer-payment-tokens.md) to retrieve all stored payment methods associated with a particular customer.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nYou must specify the customer's authorization token in the header of the call.\n\n## Syntax\n\n```graphql\nmutation {\n  deletePaymentToken(\n    public_hash: String!\n  ) {\n    DeletePaymentTokenOutput\n  }\n}\n```\n\n## Reference\n\nThe [`deletePaymentToken`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deletePaymentToken) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/delete-payment-token.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "a3df105b-fe00-4cfc-a734-93e45692df39",
      {
        "pageContent": "## Example usage\n\nThe following example deletes the Discover Card listed in the results of the `customerPaymentTokens` query. The `public_hash` you specify will be unique to your application.\n\n**Request:**\n\n```graphql\nmutation {\n  deletePaymentToken(\n    public_hash: \"377c1514e0...\"\n  ) {\n    result\n    customerPaymentTokens {\n      items {\n        details\n        public_hash\n        payment_method_code\n        type\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deletePaymentToken\": {\n      \"result\": true,\n      \"customerPaymentTokens\": {\n        \"items\": [\n          {\n            \"details\": \"{\\\"type\\\":\\\"VI\\\",\\\"maskedCC\\\":\\\"1111\\\",\\\"expirationDate\\\":\\\"09\\\\/2022\\\"}\",\n            \"public_hash\": \"f5816fe2ab...\",\n            \"payment_method_code\": \"braintree\",\n            \"type\": \"card\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/delete-payment-token.md",
          "loc": { "lines": { "from": 29, "to": 73 } }
        }
      }
    ],
    [
      "799a97e1-4cdf-4860-8d2b-cd668f63704c",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a token using public hash: xxxxxxxx` | The customer token specified in the `public_hash` argument does not exist in the `vault_payment_token` table.\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.\n\n## Related topics\n\n[customerPaymentTokens query](../queries/customer-payment-tokens.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/delete-payment-token.md",
          "loc": { "lines": { "from": 75, "to": 84 } }
        }
      }
    ],
    [
      "0ed47421-71fd-4e63-a7fa-2d239f91f2e6",
      {
        "pageContent": "---\ntitle: handlePayflowProResponse mutation\n---\n\n# handlePayflowProResponse mutation\n\nThe `handlePayflowProResponse` mutation sends the silent post data that the client received from the Payflow Pro gateway to the application server. The content of this payload varies based on factors such as the merchant's location, the items purchased, and the billing/shipping addresses. The following is an example payload:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/handle-payflow-pro-response.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "54e7c087-af66-48d3-8c45-8d0f23ccdbfd",
      {
        "pageContent": "```text\n'BILLTOCITY=CityM&AMT=0.00&BILLTOSTREET=Green+str,+67&VISACARDLEVEL=12&SHIPTOCITY=CityM'\n'&NAMETOSHIP=John+Smith&ZIP=75477&BILLTOLASTNAME=Smith&BILLTOFIRSTNAME=John'\n'&RESPMSG=Verified&PROCCVV2=M&STATETOSHIP=AL&NAME=John+Smith&BILLTOZIP=75477&CVV2MATCH=Y'\n'&PNREF=B70CCC236815&ZIPTOSHIP=75477&SHIPTOCOUNTRY=US&SHIPTOSTREET=Green+str,+67&CITY=CityM'\n'&HOSTCODE=A&LASTNAME=Smith&STATE=AL&SECURETOKEN=MYSECURETOKEN&CITYTOSHIP=CityM&COUNTRYTOSHIP=US'\n'&AVSDATA=YNY&ACCT=1111&AUTHCODE=111PNI&FIRSTNAME=John&RESULT=0&IAVS=N&POSTFPSMSG=No+Rules+Triggered&'\n'BILLTOSTATE=AL&BILLTOCOUNTRY=US&EXPDATE=0222&CARDTYPE=0&PREFPSMSG=No+Rules+Triggered&SHIPTOZIP=75477&'\n'PROCAVS=A&COUNTRY=US&AVSZIP=N&ADDRESS=Green+str,+67&BILLTONAME=John+Smith&'\n'ADDRESSTOSHIP=Green+str,+67&'\n'AVSADDR=Y&SECURETOKENID=MYSECURETOKENID&SHIPTOSTATE=AL&TRANSTIME=2019-06-24+07%3A53%3A10'",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/handle-payflow-pro-response.md",
          "loc": { "lines": { "from": 9, "to": 19 } }
        }
      }
    ],
    [
      "a9238d5d-fc67-4089-992b-e1b10c7eb92f",
      {
        "pageContent": "```\n\nSee [Paypal Payflow Pro payment method](../../../payment-methods/payflow-pro.md) for detailed information about the workflow of PayPal Payflow Pro transactions.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/handle-payflow-pro-response.md",
          "loc": { "lines": { "from": 20, "to": 22 } }
        }
      }
    ],
    [
      "34776497-0b78-470a-bcda-ed36f6e8ab2c",
      {
        "pageContent": "## Syntax\n\n`handlePayflowProResponse(input: PayflowProResponseInput!): PayflowProResponseOutput`\n\n## Reference\n\nThe [`handlePayflowProResponse`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-handlePayflowProResponse) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example sends the Payflow Pro payload to Magento:\n\n**Request:**\n\n```graphql\nmutation {\n  handlePayflowProResponse(\n    input: {\n      cart_id: \"Po1WkfK7d3vZE0qga610NwJIbxgqllpt\"\n      paypal_payload: \"$payload\"\n    }\n  ){\n    cart {\n      selected_payment_method {\n        code\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"handlePayflowProResponse\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"payflowpro\",\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/handle-payflow-pro-response.md",
          "loc": { "lines": { "from": 24, "to": 69 } }
        }
      }
    ],
    [
      "4c761b71-eb01-4414-be29-0b8f2ab0c7b3",
      {
        "pageContent": "---\ntitle: Checkout mutations\n---\n\n# Checkout mutations\n\nThe checkout mutations create or otherwise manage the payment tokens needed to complete checkout for an online payment method.\n\nIf you have installed [Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 or higher, you can use the following mutations:\n\n* [`createPaymentOrder`](create-payment-order.md)\n\n* [`syncPaymentOrder`](sync-payment-order.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "a1cadca5-2966-4ecb-93f4-2fe529bbcbcf",
      {
        "pageContent": "---\ntitle: syncPaymentOrder mutation\n---\n\n# syncPaymentOrder mutation\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThis mutation is available only if you have installed [Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 or higher.\n\nThe `syncPaymentOrder` mutation synchronizes the payment order details for the PayPal Smart Buttons and Apple Pay payment methods. This mutation updates the quote with the shipping, billing, email, and phone number details. It returns a Boolean value indicating whether the synchronization was successful.\n\nYou must run this mutation after running the [`createPaymentOrder`](create-payment-order.md) mutation.\n\n## Syntax\n\n```graphql\nmutation {\n  syncPaymentOrder(\n    input: syncPaymentOrderInput!\n  )\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/sync-payment-order.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "7fb74f53-b129-4b91-86d0-33776b3afdbd",
      {
        "pageContent": "## Example usage\n\nThe following example runs the `syncPaymentOrder` mutation.\n\n**Request:**\n\n```graphql\nmutation {\n  syncPaymentOrder(input: {\n    cartId: \"AJCY8dhIfuch9LcDHAxEkw7oG3DjGdKt\"\n    id: \"8J864634M9466143S\"\n  })\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"syncPaymentOrder\": true\n  }\n}\n```\n\n## Input attributes\n\nThe `SyncPaymentOrderInput` object must contain the following input attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cartId` | String! | The unique ID of the cart\n`id` | String! | The unique order ID generated by PayPal",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/mutations/sync-payment-order.md",
          "loc": { "lines": { "from": 25, "to": 57 } }
        }
      }
    ],
    [
      "80ed3e13-e1e7-48f7-9b4c-81b0ec5fcf2b",
      {
        "pageContent": "---\ntitle: checkoutAgreements query\ncontributor_name: Something Digital\ncontributor_link: https://www.somethingdigital.com/\n---\n\n# checkoutAgreements query\n\nThe `checkoutAgreements` query retrieves checkout agreements. The query will always return an empty array when the **Enable Terms and Conditions** option is set to **No**.  (The config path is `checkout/options/enable_agreements`.)\n\nThe `content` field can contain HTML or plain text. Use the `is_html` field determine the text type.\n\n## Syntax\n\n`{checkoutAgreements [CheckoutAgreement]}`\n\n## Reference\n\nThe [`checkoutAgreements`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-checkoutAgreements) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/agreements.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "509a879f-8992-4d53-9716-246425a4330f",
      {
        "pageContent": "## Example usage\n\nThe following query returns enabled checkout agreements.\n\n**Request:**\n\n```graphql\n{\n  checkoutAgreements {\n    agreement_id\n    checkbox_text\n    content\n    content_height\n    is_html\n    mode\n    name\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"checkoutAgreements\": [\n      {\n        \"agreement_id\": 1,\n        \"checkbox_text\": \"I agree to the terms of sale\",\n        \"content\": \"<p><strong>Agreement Contents</strong></p>\\r\\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\",\n        \"content_height\": \"22px\",\n        \"is_html\": true,\n        \"mode\": \"AUTO\",\n        \"name\": \"My Agreement\"\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/agreements.md",
          "loc": { "lines": { "from": 21, "to": 59 } }
        }
      }
    ],
    [
      "f12a5779-b41d-4bbf-a4f7-d4fdbd0fe96d",
      {
        "pageContent": "---\ntitle: customerPaymentTokens query\n---\n\n# customerPaymentTokens query\n\nWhen the [vault](https://developer.adobe.com/commerce/php/development/payments-integrations/vault/) feature is supported by a payment integration and enabled, customers have the option during checkout to save their credit card information. (Braintree supports the vault feature. Third-party payment integrations may support this feature as well.) During subsequent checkouts, the customer is presented with a list of saved payment options. If Instant Purchase is enabled, customers can even by-pass the two-step checkout process and place the order from the product page.\n\nThe `customerPaymentTokens` query returns an array of stored payment methods. Use the [deletePaymentToken mutation](../mutations/delete-payment-token.md) to delete a payment token from the system.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nYou must specify the customer's authorization token in the header of the call.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/customer-payment-tokens.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "525d04f9-fc9a-42d5-b535-e1e6d88585d5",
      {
        "pageContent": "## Syntax\n\n`{customerPaymentTokens{CustomerPaymentTokens}}`\n\n## Reference\n\nThe [`customerPaymentTokens`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-customerPaymentTokens) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/customer-payment-tokens.md",
          "loc": { "lines": { "from": 15, "to": 21 } }
        }
      }
    ],
    [
      "d7db7c23-bb08-4e1d-b1d5-7d03527f3fc3",
      {
        "pageContent": "## Example usage\n\nThe following example returns all the current customer's payment tokens. The `public_hash` output values will be unique to your application.\n\n**Request:**\n\n```graphql\nquery {\n  customerPaymentTokens {\n    items {\n      details\n      public_hash\n      payment_method_code\n      type\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customerPaymentTokens\": {\n      \"items\": [\n        {\n          \"details\": \"{\\\"type\\\":\\\"VI\\\",\\\"maskedCC\\\":\\\"1111\\\",\\\"expirationDate\\\":\\\"09\\\\/2022\\\"}\",\n          \"public_hash\": \"377c1514e0...\",\n          \"payment_method_code\": \"braintree\",\n          \"type\": \"card\"\n        },\n        {\n          \"details\": \"{\\\"type\\\":\\\"DI\\\",\\\"maskedCC\\\":\\\"1117\\\",\\\"expirationDate\\\":\\\"11\\\\/2023\\\"}\",\n          \"public_hash\": \"f5816fe2ab...\",\n          \"payment_method_code\": \"braintree\",\n          \"type\": \"card\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/customer-payment-tokens.md",
          "loc": { "lines": { "from": 23, "to": 65 } }
        }
      }
    ],
    [
      "9817819a-4b31-4d84-8f66-cf2bc1882d61",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.\n\n## Related topics\n\n[deletePaymentToken mutation](../mutations/delete-payment-token.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/customer-payment-tokens.md",
          "loc": { "lines": { "from": 67, "to": 75 } }
        }
      }
    ],
    [
      "0628463c-1c40-48b6-a3ec-6306a81f015b",
      {
        "pageContent": "---\ntitle: getHostedProUrl query\n---\n\n# getHostedProUrl query\n\nThe `getHostedProUrl` query is required to complete a transaction when the [PayPal Website Payments Pro Hosted Solution payment method](../../../payment-methods/hosted-pro.md) is selected. The query retrieves a PayPal-generated URL that the PWA client connects to, enabling the customer to enter their PayPal credentials and complete the transaction. Run this query after you [set the payment method](../../cart/mutations/set-payment-method.md) and [place the order](../../cart/mutations/place-order.md).\n\n## Syntax\n\n`getHostedProUrl(input: HostedProUrlInput!): HostedProUrl`\n\n## Reference\n\nThe [`getHostedProUrl`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-getHostedProUrl) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-hosted-pro-url.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "efa0001e-b4d3-477f-926c-e026dcb8a371",
      {
        "pageContent": "## Example usage\n\nThe following query returns the secure URL generated by PayPal:\n\n**Request:**\n\n```graphql\nquery {\n  getHostedProUrl(input: { cart_id: \"mwqoyxgbibvgkr3udszfzomxpoj2gmj6\" }) {\n    secure_form_url\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"getHostedProUrl\": {\n      \"secure_form_url\": \"https://securepayments.sandbox.paypal.com/webapps/HostedSoleSolutionApp/webflow/sparta/hostedSoleSolutionProcess?hosted_button_id=HSSS-iKGrv2XMlHcGGj8u.hlOHA2AeoQHcIQOvoqTEbvgBlKTLXcS8tAg0BRg1AklvfIhU5ip0g\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-hosted-pro-url.md",
          "loc": { "lines": { "from": 17, "to": 41 } }
        }
      }
    ],
    [
      "1225935a-e133-4389-bb7b-9d6453c806d0",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Could not find a cart with ID \\\"xxxxx\\\"` | The ID provided in the `cart_id` field is invalid or the cart does not exist for the customer.\n`The cart isn't active` | The cart with the specified cart ID is unavailable, because the items have been purchased and the cart ID becomes inactive.\n`Field HostedProUrlInput.cart_id of required type String! was not provided` | The value specified in the `HostedProUrlInput.cart_id` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-hosted-pro-url.md",
          "loc": { "lines": { "from": 43, "to": 49 } }
        }
      }
    ],
    [
      "a8dfb090-8273-4cb0-b9aa-f81f08c10ed7",
      {
        "pageContent": "---\ntitle: getPayflowLinkToken query\n---\n\n# getPayflowLinkToken query\n\nThe `getPayflowLinkToken` query retrieves PayPal payment credentials for a PayPal Payflow transaction. You must run this query after you [set the payment method](../../cart/mutations/set-payment-method.md) and [place the order](../../cart/mutations/place-order.md).\n\nSee [Paypal Payflow Link payment method](../../../payment-methods/payflow-link.md) for detailed information about the workflow of PayPal Payflow Link transactions.\n\n## Syntax\n\n`getPayflowLinkToken(input: PayflowLinkTokenInput): PayflowLinkToken`\n\n## Reference\n\nThe [`getPayflowLinkToken`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-getPayflowLinkToken) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payflow-link-token.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "0cbfa04f-cda5-44ae-b918-5c920560733d",
      {
        "pageContent": "## Example\n\nThe following example requests a token in a Payflow Link transaction.\n\n**Request:**\n\n```graphql\n{\n  getPayflowLinkToken(input: {cart_id: \"123\"}) {\n    secure_token\n    secure_token_id\n    mode\n    paypal_url\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n    \"data\": {\n        \"getPayflowLinkToken\": {\n            \"secure_token\": \"<token-value>\",\n            \"secure_token_id\": \"<token-value-id>\",\n            \"mode\": \"TEST\",\n            \"paypal_url\": \"https://pilot-payflowlink.paypal.com\"\n        }\n    }\n}\n```\n\n## Errors\n\nError | Description\n--- | ---\n`No such entity with cartId` | An invalid `cartId` was provided",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payflow-link-token.md",
          "loc": { "lines": { "from": 19, "to": 55 } }
        }
      }
    ],
    [
      "17b9e601-5d73-49d9-8abf-2d96d2119b6a",
      {
        "pageContent": "---\ntitle: getPaymentConfig query\n---\n\n# getPaymentConfig query\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThis query is available only if you have installed [Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 or higher.\n\nThe `getPaymentConfig` query returns the payment configuration details from locations in the storefront and Admin where the payment method can be set.\n\nThe query can return details about the following supported payment methods in [Payment Services](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/payments-options.html): :\n\n* Apple Pay\n* PayPal Hosted Fields\n* PayPal Smart Buttons\n\nEach of these payment methods can have a different payment source, for example, `hosted_fields` only works with credit cards.\n\n## Syntax\n\n```graphql\n{ \n    getPaymentConfig(\n        input: getPaymentConfigInput! \n    ) getPaymentConfigOutput    \n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 1, "to": 29 } }
        }
      }
    ],
    [
      "498f5cb5-15f5-4baa-9eda-7ae067f78088",
      {
        "pageContent": "## Example usage\n\nThe following example runs the `getPaymentConfig` query for a `location: CHECKOUT`. This query provides all available payment methods for that location:\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 31, "to": 35 } }
        }
      }
    ],
    [
      "9cc4ae1f-49a5-420e-a5a1-3b24fb8eb094",
      {
        "pageContent": "```graphql\n{\n    getPaymentConfig( location: CHECKOUT ) {\n            hosted_fields {\n                code\n                title\n                payment_intent\n                sort_order\n                sdk_params {\n                    name\n                    value\n                }\n                is_visible\n                payment_source\n                three_ds\n                is_vault_enabled\n                cc_vault_code\n                requires_card_details\n            }\n            smart_buttons {\n                code\n                title\n                payment_intent\n                sort_order\n                sdk_params {\n                    name\n                    value\n                }\n                is_visible\n                message_styles {\n                    layout\n                    logo {\n                        type\n                    }\n                }\n                display_message\n                display_venmo\n                  button_styles {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 37, "to": 74 } }
        }
      }
    ],
    [
      "3037e8e0-07e6-4263-8d2c-b412c22748af",
      {
        "pageContent": "layout\n                    color\n                    shape\n                    label\n                    tagline\n                    height\n                    use_default_height\n                }\n            }\n            apple_pay {\n                payment_source\n                code\n                title\n                payment_intent\n                sort_order\n                sdk_params {\n                    name\n                    value\n                }\n                is_visible\n                button_styles {\n                    layout\n                    color\n                    shape\n                    label\n                    tagline\n                    height\n                    use_default_height\n                }\n            }\n        }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 75, "to": 106 } }
        }
      }
    ],
    [
      "41cd67a5-42e7-4f2c-ae03-edc90734d9cf",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 107, "to": 109 } }
        }
      }
    ],
    [
      "55ac4dcd-fd2b-4005-84fd-9e8e666b1130",
      {
        "pageContent": "```json\n{\n    \"data\": {\n        \"getPaymentConfig\": {\n            \"config\": {\n                \"hosted_fields\": {\n                    \"code\": \"payment_services_paypal_hosted_fields\",\n                    \"title\": \"Credit Card\",\n                    \"payment_intent\": \"capture\",\n                    \"sort_order\": \"1\",\n                    \"sdk_params\": [\n                        {\n                            \"name\": \"src\",\n                            \"value\": \"https:\\/\\/www.paypal.com\\/sdk\\/js?client-id=...\"\n                        },\n                        {\n                            \"name\": \"data-partner-attribution-id\",\n                            \"value\": \"MagentoPayments_SP_PCP_Int\"\n                        },\n                        {\n                            \"name\": \"data-client-token\",\n                            \"value\": \"...\"\n                        },\n                        {\n                            \"name\": \"data-expires-in\",\n                            \"value\": \"3600\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 111, "to": 136 } }
        }
      }
    ],
    [
      "15a91376-6b3e-4274-a7bc-01c7a4f489e4",
      {
        "pageContent": "}\n                    ],\n                    \"is_visible\": true,\n                    \"payment_source\": \"cc\",\n                    \"three_ds\": false,\n                    \"is_commerce_vault_enabled\": true,\n                    \"cc_vault_code\": \"payment_services_paypal_vault\"\n                    \"requires_card_details\": false\n                },\n                \"smart_buttons\": {\n                    \"code\": \"payment_services_paypal_smart_buttons\",\n                    \"title\": \"PayPal\",\n                    \"payment_intent\": \"capture\",\n                    \"sort_order\": \"10\",\n                    \"sdk_params\": [\n                        {\n                            \"name\": \"src\",\n                            \"value\": \"https:\\/\\/www.paypal.com\\/sdk\\/js?client-id=...\"\n                        },\n                        {\n                            \"name\": \"data-partner-attribution-id\",\n                            \"value\": \"MagentoPayments_SP_PCP_Int\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 137, "to": 158 } }
        }
      }
    ],
    [
      "03171b1e-ccac-4829-b192-373fdacd2606",
      {
        "pageContent": "},\n                        {\n                            \"name\": \"data-client-token\",\n                            \"value\": \"...\"\n                        },\n                        {\n                            \"name\": \"data-expires-in\",\n                            \"value\": \"3600\"\n                        }\n                    ],\n                    \"is_visible\": true,\n                    \"display_venmo\": true,\n                    \"message_styles\": {\n                        \"layout\": \"text\",\n                        \"logo\": {\n                            \"type\": \"inline\"\n                        }\n                    },\n                    \"display_message\": true,\n                    \"button_styles\": {\n                        \"layout\": \"vertical\",\n                        \"color\": \"gold\",\n                        \"shape\": \"rect\",\n                        \"height\": null,\n                        \"label\": \"paypal\",\n                        \"tagline\": false",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 159, "to": 184 } }
        }
      }
    ],
    [
      "4dfcb8c6-c1d2-43e5-a2d2-605f42c867b1",
      {
        "pageContent": "}\n                },\n                \"apple_pay\": {\n                    \"code\": \"payment_services_paypal_apple_pay\",\n                    \"title\": \"Apple Pay\",\n                    \"payment_intent\": \"authorize\",\n                    \"sort_order\": \"10\",\n                    \"sdk_params\": [\n                        {\n                            \"name\": \"src\",\n                            \"value\": \"https:\\/\\/www.paypal.com\\/sdk\\/js?client-id=...\"\n                        }\n                    ],\n                    \"is_visible\": true,\n                    \"button_styles\": {\n                        \"layout\": \"vertical\",\n                        \"color\": \"gold\",\n                        \"shape\": \"rect\",\n                        \"height\": null,\n                        \"label\": \"paypal\",\n                        \"tagline\": false\n                    }\n                }\n            }\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 185, "to": 212 } }
        }
      }
    ],
    [
      "b715a806-69fc-4a61-ad3d-99e3333a224f",
      {
        "pageContent": "## Input attributes\n\nThe `getPaymentConfig` query requires the following input attribute:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`location` | PaymentLocation! | The origin location for that payment request. The possible values are PRODUCT_DETAIL, MINICART, CART, CHECKOUT, ADMIN\n\n## Output attributes\n\nThe `PaymentConfigOutput` contains details about each configured payment method:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`ApplePayConfig` | String! | ApplePay payment method configuration\n`HostedFieldsConfig` | String! | PayPal Hosted fields payment method configuration\n`SmartButtonsConfig` | String! | PayPal Smart Buttons payment method configuration\n\nEach of these output attributes implements the `PaymentConfigItem` interface.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 214, "to": 232 } }
        }
      }
    ],
    [
      "5ca94c4b-c222-4398-8d84-27cf9d03e729",
      {
        "pageContent": "## `PaymentConfigItem` interface\n\nThe `PaymentConfigItem` interface contains the fields that are common to all the payment methods. This interface contains the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`code` | String | The payment method code as defined in the payment gateway\n`is_visible` | Boolean | Indicates whether the payment method is shown\n`payment_intent` | String | Defines the payment intent. The possible values are `Authorize` or `Capture`\n`sdk_params` | SDKParams | PayPal parameters required to load the PayPal JavaScript SDK\n`sort_order` | String | The relative order the payment method is displayed on the checkout page\n`title` | String! | The display name of the payment method\n\nThis interface also has the following implementations:\n\n* ApplePayConfig\n* HostedFieldsConfig\n* SmartButtonsConfig\n\nEach implementation contains objects with specific attributes for each of these payment methods.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 234, "to": 253 } }
        }
      }
    ],
    [
      "f7b2fdee-d4f7-4729-bdbf-48bfea5c63cd",
      {
        "pageContent": "### `ApplePayConfig` attributes\n\nThe `ApplePayConfig` payment method configuration has a `button_styles` object containing the following attributes:\n\nAttribute | Data Type | Description\n--- | --- | ---\n`color` | String | The button color\n`height` | Int | The button height in pixels\n`label` | String | The button label\n`layout` | String | The button layout\n`shape` | String | The button shape\n`tagline` | Boolean | Indicates whether the tagline is displayed\n`use_default_height` | Boolean | Defines if button uses default height. If the value is `False`, the value of `height` is used\n\nSee [Payment options](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/payments-options.html) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 255, "to": 269 } }
        }
      }
    ],
    [
      "561ea9bd-1043-457b-9ffb-ca51f28f732b",
      {
        "pageContent": "### `HostedFieldsConfig` attributes\n\nThe `HostedFieldsConfig` payment method configuration contains the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cc_vault_code` | String | The vault payment method code. Hosted fields only works with credit cards (cc)\n`is_vault_enabled` | Boolean | Indicates whether card vaulting is enabled\n`payment_source` | String | The identifiable payment source for the payment method. The possible values are credit card (cc), PayPal (paypal), and Apple Pay (applepay)\n`requires_card_details` | Boolean | Indicates whether card and bin details are required. This value is true when the Signifyd integration is enabled for hosted fields\n`three_ds` | Boolean | Indicates whether 3DS mode is enabled",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 271, "to": 281 } }
        }
      }
    ],
    [
      "c1200e70-37ce-4c05-83e9-ca87e73b90f8",
      {
        "pageContent": "### `SmartButtonsConfig` attributes\n\nThe `SmartButtonsConfig` payment method configuration contains the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`button_styles` | ButtonStyles | The styles for the PayPal Smart Button configuration\n`display_message` | Boolean | Indicates whether the PayPal Pay Later message is shown\n`display_venmo` | Boolean | Defines if the Venmo option is shown\n`message_styles` | MessageStyles | The message styles for the PayPal Pay Later configuration\n\nSee [Payment options](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/payments-options.html) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 283, "to": 294 } }
        }
      }
    ],
    [
      "9910c159-20a3-4556-8dde-7f0175f45796",
      {
        "pageContent": "#### `ButtonStyles` object\n\nThe `SmartButtonsConfig` payment method configuration has a `ButtonStyles` object containing the following attributes:\n\nAttribute | Data Type | Description\n--- | --- | ---\n`color` | String | The button color\n`height` | Int | The button height in pixels\n`label` | String | The button label\n`layout` | String | The button layout\n`shape` | String | The button shape\n`tagline` | Boolean | Indicates whether to display the PayPal tagline\n`use_default_height` | Boolean | Defines if button uses default height. If the value is `False`, the value of `height` is used\n\n#### `MessageStyles` object\n\nThe `SmartButtonsConfig` payment method configuration has a `MessageStyles` object containing the following attributes:\n\nAttribute | Data Type | Description\n--- | --- | ---\n`layout` | String | The message layout\n`logo` | String | The message logo",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 296, "to": 317 } }
        }
      }
    ],
    [
      "6c6f77b0-639c-4638-9bef-5c5ab97df054",
      {
        "pageContent": "#### `SDKParams` attributes\n\nThe `SDKParams` object provides details about the SDK parameters:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`name` | String | The name of the SDK parameter\n`value` | String | The value of the SDK parameter\n\nThese values come from [PayPal JavaScript SDK](https://developer.paypal.com/sdk/js/reference/).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-config.md",
          "loc": { "lines": { "from": 319, "to": 328 } }
        }
      }
    ],
    [
      "9a27437d-c3b8-498f-9953-8eebf2f1df6e",
      {
        "pageContent": "---\ntitle: getPaymentOrder query\n---\n\n# getPaymentOrder query\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThis query is available only if you have installed [Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 or higher.\n\nThe `getPaymentOrder` query retrieves the payment details for the order. You must run the `getPaymentOrder` query  when the Signifyd integration and `hosted_fields` are enabled in [Payment Services](https://experienceleague.adobe.com/docs/commerce-merchant-services/payment-services/payments-checkout/payments-options.html).\n\n## Syntax\n\n```graphql\n{ \n    getPaymentOrder(\n      cartId: String!\n      id: String!\n    ) PaymentOrderOutput\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-order.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "48a0fdb6-69b2-4eeb-9395-ed7ad1b7092d",
      {
        "pageContent": "## Example usage\n\nThe following example runs the `getPaymentOrder` query:\n\n**Request:**\n\n```graphql\n{\n    getPaymentOrder (\n      cartId: \"rPG5SFUQN6ePsfNNDnhrmmr9SNWqpPSS\"\n      id: \"9XD295279E1088104\"\n    ) {\n      mp_order_id\n      id\n      status\n      payment_source_details {\n        card {\n          name\n          last_digits\n          card_expiry_month\n          card_expiry_year\n          bin_details {\n            bin\n          }\n        }         \n      }\n    }\n  }\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"getPaymentOrder\": {\n      \"mp_order_id\": \"mp-order-972b389e-690c-4deb-b68a-f83c9076a6e7\",\n      \"id\": \"9XD295279E1088104\",\n      \"status\": \"APPROVED\",\n      \"payment_source_details\": {\n        \"card\": {\n          \"name\": \"Testf Testl\",\n          \"last_digits\": \"7763\",\n          \"card_expiry_month\": \"12\",\n          \"card_expiry_year\": \"2026\",\n          \"bin_details\": {\n            \"bin\": \"455676\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-order.md",
          "loc": { "lines": { "from": 24, "to": 77 } }
        }
      }
    ],
    [
      "95b950c4-1f77-49e3-83f6-f1fe44491574",
      {
        "pageContent": "## Input attributes\n\nThe `getPaymentOrder` query must contain the following input attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`cartId` | String! | The unique ID of the cart\n`id` | String! | The unique order ID generated by PayPal",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-order.md",
          "loc": { "lines": { "from": 79, "to": 86 } }
        }
      }
    ],
    [
      "518c978e-67d6-439b-a484-6aa8332d2353",
      {
        "pageContent": "## Output attributes\n\nThe `PaymentOrderOutput` object contains the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`id` | String | The unique order ID generated by PayPal\n`mp_order_id` | String | The unique order ID generated in Commerce if Payment Services is enabled after PayPal returns the `id`\n`payment_source_details` | PaymentSourceDetails | The payment source details for the order\n`status` | String | The status of the payment order. See [order status](https://experienceleague.adobe.com/docs/commerce-admin/stores-sales/order-management/orders/order-status.html) for more information",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-order.md",
          "loc": { "lines": { "from": 88, "to": 97 } }
        }
      }
    ],
    [
      "26b270b5-0f9d-4cb3-a2eb-e724f071487d",
      {
        "pageContent": "### `PaymentSourceDetails` attributes\n\nThe `PaymentSourceDetails` object contains the payment details for the order for the type of payment source. Hosted fields only works with credit card. All child attributes are listed in alphabetical order.\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`card` | Card | The payment card details for the order\n\n#### `Card` attributes\n\nThe `PaymentSourceDetails` object has a `Card` object containing the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`bin_details` | CardBin | Card bin details\n`card_expiry_month` | String | Expiry month on the card\n`card_expiry_year` | String | Expiry year on the card\n`last_digits` | String | Last digits of the card\n`name` | String | Name on the card\n\n#### `BinDetails` attributes\n\nThe `bin_details` CardBin contains the following attribute:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`bin` | String | Card bin number",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-order.md",
          "loc": { "lines": { "from": 99, "to": 125 } }
        }
      }
    ],
    [
      "88aaddf6-66ac-4ed1-8c73-f227538c0502",
      {
        "pageContent": "---\ntitle: getPaymentSDK query\n---\n\n# getPaymentSDK query\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThis query is available only if you have installed [Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 or higher.\n\nThe `getPaymentSDK` query gets the payment paypal SDK URLs and other related values.\n\n## Syntax\n\n```graphql\n{\n    getPaymentSDK(\n      location: PaymentLocation!\n    )GetPaymentSDKOutput\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-sdk.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "f746bf0d-dc37-4989-8b6c-884a5fd80ae9",
      {
        "pageContent": "## Example usage\n\nThe following example runs the `getPaymentSDK` query.\n\n**Request:**\n\n```graphql\nquery {\n  getPaymentSDK(input: { location: \"CHECKOUT\" }) {\n    sdkParams {\n      code\n      params {\n        name\n        value\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-sdk.md",
          "loc": { "lines": { "from": 23, "to": 40 } }
        }
      }
    ],
    [
      "48fe6216-6ece-47f2-b162-a04538356ff9",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-sdk.md",
          "loc": { "lines": { "from": 41, "to": 43 } }
        }
      }
    ],
    [
      "741615ce-3047-4001-bc55-6cef7e06d3fa",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"getPaymentSDK\": {\n      \"sdkParams\": [\n        {\n          \"code\": \"payment_services_paypal_hosted_fields\",\n          \"params\": [\n            {\n              \"name\": \"src\",\n              \"value\": \"https://www.paypal.com/sdk/js?client-id=AeFUI2PCqy7MicQ1gLbJf_8T7XUlEG51Pdd7sn2LE3d0_qAVhVBm4VOpPGmV08S9qsMCPXSCiBslhV53&intent=authorize&locale=en_US&merchant-id=2PZE7VHLY4B94&currency=USD&disable-funding=bancontact,boleto,boletobancario,blik,eps,giropay,ideal,itau,mercadopago,multibanco,mybank,oxxo,payu,p24,satispay,sepa,sofort,trustly,wechatpay&components=hosted-fields\"\n            },\n            {\n              \"name\": \"data-partner-attribution-id\",\n              \"value\": \"MagentoPayments_SP_PCP_Int\"\n            },\n            {\n              \"name\": \"data-client-token\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-sdk.md",
          "loc": { "lines": { "from": 45, "to": 62 } }
        }
      }
    ],
    [
      "94a7b9ad-f349-44c6-9da2-eb101b4864b1",
      {
        "pageContent": "\"value\": \"eyJicmFpbnRyZWUiOnsiYXV0aG9yaXphdGlvbkZpbmdlcnByaW50IjoiYmZhNzc0YjUxOTNkZDlmYzI1MTk1ZGUxZGRkZjAwMDJkYjUzMmUyNWU4YjA3YjQwMzFhNTlkMjMyMjA4MTdkNnxtZXJjaGFudF9pZD1yd3dua3FnMnhnNTZobTJuJnB1YmxpY19rZXk9NjNrdm4zN3Z0MjlxYjRkZiZjcmVhdGVkX2F0PTIwMjMtMTAtMTFUMTQ6NDY6MzkuNzI2WiIsInZlcnNpb24iOiIzLXBheXBhbCJ9LCJwYXlwYWwiOnsiaWRUb2tlbiI6bnVsbCwiYWNjZXNzVG9rZW4iOiJBMjFBQUlSQWw2N2tQZm1FVndkYl9fOU1XSEd6OFlHNjVlWmZxdjJTVHhfcUUwTU1kQno3M1NWRDRHSlh1MlNEVGs2dlVhLXZad1R2TmZ6WEF6ZDBkWDFsM1A4UDhlTXN3In19\"\n            },\n            {\n              \"name\": \"data-expires-in\",\n              \"value\": \"3600\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-sdk.md",
          "loc": { "lines": { "from": 63, "to": 75 } }
        }
      }
    ],
    [
      "3593f5ac-46c4-4a90-805b-32f21cbd34af",
      {
        "pageContent": "## Input attributes\n\nThe `getPaymentSDK` query must contain the following attribute:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`location` | PaymentLocation! | The origin location for that payment request. The possible values are PRODUCT_DETAIL, MINICART, CART, CHECKOUT, ADMIN\n\n## Output attributes\n\nThe `GetPaymentSDKOutput` object must contain the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`code` | String | The payment method code as defined in the payment gateway\n`params` | [SDKParams] | PayPal parameters required to load JS SDK\n\n### `SDKParams` object\n\nThe `SDKParams` object provides details about the SDK parameters:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`name` | String! | The name of the SDK parameter\n`value` | String! | The value of the SDK parameter",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/get-payment-sdk.md",
          "loc": { "lines": { "from": 77, "to": 101 } }
        }
      }
    ],
    [
      "e60f91e5-4abd-4abb-b9ea-010d8b3cf96c",
      {
        "pageContent": "---\ntitle: Checkout queries\n---\n\n# Checkout queries\n\nThe checkout queries gather data necessary for completing the checkout process. Each has a limited scope:\n\n* [`checkoutAgreements`](agreements.md) is applicable only if the [**Enable Terms and Conditions** option](https://experienceleague.adobe.com/docs/commerce-admin/stores-sales/point-of-purchase/checkout/checkout-process.html) has been enabled in the Admin.\n\n* [`customerPaymentTokens`](customer-payment-tokens.md) retrieves the customer's stored payment information when the [**Enable Vault for Card Payments**](https://experienceleague.adobe.com/docs/commerce-admin/config/sales/payment-methods/braintree.html) option has been enabled for Braintree.\n\n* [`getHostedProUrl`](get-hosted-pro-url.md) is required for the PayPal Website Payments Pro Hosted Solution payment method.\n\n* [`getPayflowLinkToken`](get-payflow-link-token.md) is required for PayPal Payflow transactions.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "0efa55b9-5b71-43e4-a021-999061bc3c62",
      {
        "pageContent": "If you have installed [Payment Services for Adobe Commerce](https://commercemarketplace.adobe.com/magento-payment-services.html) 2.3.0 or higher, you can also use the following queries:\n\n* [`getPaymentConfig`](get-payment-config.md)\n\n* [`getPaymentOrder`](get-payment-order.md)\n\n* [`getPaymentSDK`](get-payment-sdk.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/checkout/queries/index.md",
          "loc": { "lines": { "from": 17, "to": 23 } }
        }
      }
    ],
    [
      "197b4f2b-ef25-4381-a463-c762fce2996f",
      {
        "pageContent": "---\ntitle: Customer\n---\n\n# Customer\n\nA customer is a shopper who has created an account for the store.\n\nTo return or modify information about a customer, we recommend you use [customer tokens](../../usage/authorization-tokens.md) in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\nB2B for Adobe Commerce adds the following top-level fields to the [`Customer`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-Customer) object for company administrators and users.\n\n* `job_title`\n* `requisition_lists`\n* `role`\n* `status`\n* `team`\n* `telephone`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/index.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "2c109f81-1a94-456a-a890-3857c8f48b32",
      {
        "pageContent": "---\ntitle: assignCompareListToCustomer mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# assignCompareListToCustomer mutation\n\nThe `assignCompareListToCustomer` mutation assigns the specified comparison list to the logged-in customer. Use this mutation when a customer creates a comparison list as a guest, but subsequently logs in.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    assignCompareListToCustomer(\n        uid: ID!\n    ) {\n        AssignCompareListToCustomerOutput\n    }\n}\n```\n\n## Reference\n\nThe [`assignCompareListToCustomer`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-assignCompareListToCustomer) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "49e5071a-d506-4374-9e56-9310147b57d1",
      {
        "pageContent": "## Example usage\n\nThe following example assigns the comparison list with a `uid` value of `sssXyGZkTFksdPnxNoK1ut6OiV4bbchD` to the logged-in customer.\n\n**Request:**\n\n```graphql\nmutation {\n    assignCompareListToCustomer(\n        uid: \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n    ) {\n        result\n        compare_list {\n            uid\n            item_count\n            attributes {\n                code\n                label\n            }\n            items {\n                uid\n                product {\n                    sku\n                    name\n                    description {\n                        html\n                    }\n                }\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 29, "to": 60 } }
        }
      }
    ],
    [
      "18cc3190-0298-46b1-a28b-ccf92c0d1872",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 61, "to": 63 } }
        }
      }
    ],
    [
      "53dd5ed7-426e-4bd3-8389-1e66e1fd3e55",
      {
        "pageContent": "```json\n{\n    \"data\": {\n        \"assignCompareListToCustomer\": {\n            \"result\": true,\n            \"compare_list\": {\n                \"uid\": \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n                \"item_count\": 2,\n                \"attributes\": [\n                    {\n                        \"code\": \"sku\",\n                        \"label\": \"SKU\"\n                    },\n                    {\n                        \"code\": \"description\",\n                        \"label\": \"Description\"\n                    },\n                    {\n                        \"code\": \"short_description\",\n                        \"label\": \"Short Description\"\n                    },\n                    {\n                        \"code\": \"activity\",\n                        \"label\": \"Activity\"\n                    }\n                ],\n                \"items\": [\n                    {\n                        \"uid\": \"3\",\n                        \"product\": {\n                            \"sku\": \"24-MB03\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 65, "to": 95 } }
        }
      }
    ],
    [
      "2e92504e-76e6-451a-b45e-a15efdc15b54",
      {
        "pageContent": "\"name\": \"Crown Summit Backpack\",\n                            \"description\": {\n                                \"html\": \"<p>The Crown Summit Backpack is equally at home in a gym locker, study cube or a pup tent, so be sure yours is packed with books, a bag lunch, water bottles, yoga block, laptop, or whatever else you want in hand. Rugged enough for day hikes and camping trips, it has two large zippered compartments and padded, adjustable shoulder straps.</p>\\n<ul>\\n<li>Top handle.</li>\\n<li>Grommet holes.</li>\\n<li>Two-way zippers.</li>\\n<li>H 20\\\" x W 14\\\" x D 12\\\".</li>\\n<li>Weight: 2 lbs, 8 oz. Volume: 29 L.</li>\\n<ul>\"\n                            }\n                        }\n                    },\n                    {\n                        \"uid\": \"4\",\n                        \"product\": {\n                            \"sku\": \"24-MB05\",\n                            \"name\": \"Wayfarer Messenger Bag\",\n                            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 96, "to": 107 } }
        }
      }
    ],
    [
      "8ccea376-935d-4d4a-95a4-087c630b8fd1",
      {
        "pageContent": "\"html\": \"<p>Perfect for class, work or the gym, the Wayfarer Messenger Bag is packed with pockets. The dual-buckle flap closure reveals an organizational panel, and the roomy main compartment has spaces for your laptop and a change of clothes. An adjustable shoulder strap and easy-grip handle promise easy carrying.</p>\\n<ul>\\n<li>Multiple internal zip pockets.</li>\\n<li>Made of durable nylon.</li>\\n</ul>\"\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 108, "to": 117 } }
        }
      }
    ],
    [
      "04f355e1-5a78-4c2f-8d1d-8a375d9dbe69",
      {
        "pageContent": "## Related topics\n\n*  [compareList query](../../products/queries/compare-list.md)\n*  [addProductsToCompareList mutation](../../products/mutations/add-products-to-compare-list.md)\n*  [createCompareList mutation](../../products/mutations/create-compare-list.md)\n*  [deleteCompareList mutation](../../products/mutations/delete-compare-list.md)\n*  [removeProductsFromCompareList mutation](../../products/mutations/remove-from-compare-list.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 119, "to": 125 } }
        }
      }
    ],
    [
      "5cfc1b15-84ea-4543-8b32-47d9c24a01f4",
      {
        "pageContent": "---\ntitle: changeCustomerPassword mutation\n---\n\n# changeCustomerPassword mutation\n\nUse the `changeCustomerPassword` mutation to change the password for the logged-in customer.\n\nTo return or modify information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n`mutation: {changeCustomerPassword(currentPassword: String! newPassword: String!) {Customer}}`\n\n## Reference\n\nThe [`changeCustomerPassword`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-changeCustomerPassword) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/change-password.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "982d708e-b385-4826-9c91-6525cc4fcc11",
      {
        "pageContent": "## Example usage\n\nThe following call updates the customer's password.\n\n**Request:**\n\n```graphql\nmutation {\n  changeCustomerPassword(\n    currentPassword: \"roni_cost3@example.com\"\n    newPassword: \"roni_cost4@example.com\"\n  ) {\n    id\n    email\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"changeCustomerPassword\": {\n      \"id\": 1,\n      \"email\": \"roni_cost@example.com\"\n    }\n  }\n}\n```\n\n## Errors\n\nError | Description\n--- | ---\n`The current customer isn't authorized.` | The customer's token does not exist in the `oauth_token` table.\n`Invalid login or password.` | The password specified in the `currentPassword` argument is not valid.\n`Specify the \"currentPassword\" value.` | The password specified in the `currentPassword` argument is empty.\n`Specify the \"newPassword\" value.` | The password specified in the `newPassword` argument is empty.\n`The account is locked.` | The customer's password cannot be changed because the account is locked.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/change-password.md",
          "loc": { "lines": { "from": 19, "to": 58 } }
        }
      }
    ],
    [
      "6d10091f-f4e9-4293-a051-782bee8658dc",
      {
        "pageContent": "## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [createCustomer mutation](create.md)\n*  [updateCustomer mutation](update.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/change-password.md",
          "loc": { "lines": { "from": 60, "to": 64 } }
        }
      }
    ],
    [
      "69305cc9-54fe-440f-b531-1ffa8591d853",
      {
        "pageContent": "---\ntitle: createCustomerAddress mutation\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n# createCustomerAddress mutation\n\nUse the `createCustomerAddress` mutation to create the customer's address.\n\nTo return or modify information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n`mutation: {createCustomerAddress(input: CustomerAddressInput!) {CustomerAddress}}`\n\n## Reference\n\nThe [`createCustomerAddress`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createCustomerAddress) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "633ed940-8282-4889-97d2-a4a82093d8da",
      {
        "pageContent": "## Example usage",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 21, "to": 21 } }
        }
      }
    ],
    [
      "2d554977-b475-4c85-af67-0258c74cde7a",
      {
        "pageContent": "### Create a customer address\n\nThe following call creates an address for the specified customer.\n\n**Request:**\n\n```graphql\nmutation {\n  createCustomerAddress(input: {\n    region: {\n      region: \"Arizona\"\n      region_code: \"AZ\"\n    }\n    country_code: US\n    street: [\"123 Main Street\"]\n    telephone: \"7777777777\"\n    postcode: \"77777\"\n    city: \"Phoenix\"\n    firstname: \"Bob\"\n    lastname: \"Loblaw\"\n    default_shipping: true\n    default_billing: false\n  }) {\n    id\n    region {\n      region\n      region_code\n    }\n    country_code\n    street\n    telephone\n    postcode\n    city\n    default_shipping\n    default_billing\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 23, "to": 59 } }
        }
      }
    ],
    [
      "31e25021-aa66-4847-b617-7fd59390d2e8",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCustomerAddress\": {\n      \"id\": 4,\n      \"region\": {\n        \"region\": \"Arizona\",\n        \"region_code\": \"AZ\"\n      },\n      \"country_code\": \"US\",\n      \"street\": [\n        \"123 Main Street\"\n      ],\n      \"telephone\": \"7777777777\",\n      \"postcode\": \"77777\",\n      \"city\": \"Phoenix\",\n      \"default_shipping\": true,\n      \"default_billing\": false\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 60, "to": 85 } }
        }
      }
    ],
    [
      "6e3b91d4-1fae-458d-8a40-18c14f9ccdd7",
      {
        "pageContent": "### Create an address with custom attributes\n\n<BetaNote />\n\nThe following call creates an address for the specified customer, assigning values for custom attributes.\n\nThe merchant has previously created the custom attributes `station` and `services` for customer addresses.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 87, "to": 93 } }
        }
      }
    ],
    [
      "741f9906-2f3d-4e44-96cd-c29700d080c5",
      {
        "pageContent": "#### Request",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 95, "to": 95 } }
        }
      }
    ],
    [
      "15c336bc-98a7-452b-b1c9-6c2083229bd3",
      {
        "pageContent": "```graphql\nmutation {\n  createCustomerAddress(input: {\n    region: {\n      region_id: 4\n      region: \"Arizona\"\n      region_code: \"AZ\"\n    }\n    country_code: US\n    street: [\"123 Main Street\"]\n    telephone: \"7777777777\"\n    postcode: \"77777\"\n    city: \"Phoenix\"\n    firstname: \"Bob\"\n    lastname: \"Loblaw\"\n    default_shipping: true\n    default_billing: false\n    custom_attributesV2: [\n      {\n        attribute_code: \"station\"\n        value: \"Encanto/Central Ave\"\n      },\n      {\n        attribute_code: \"services\"\n        value: \"507,508\"\n        selected_options: [\n          {\n            uid: \"NTA3\"\n            value: \"507\"\n          },\n          {\n            uid: \"NTA4\"\n            value: \"508\"\n          }\n        ]\n      }\n    ]\n  }) {\n    region {\n      region_id\n      region\n      region_code\n    }\n    country_code\n    street\n    telephone\n    postcode\n    city\n    default_shipping\n    default_billing\n    custom_attributesV2 {\n      code\n      ... on AttributeValue {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 97, "to": 149 } }
        }
      }
    ],
    [
      "c98dbe99-7dc4-4980-acd9-820be5b989ea",
      {
        "pageContent": "value\n      }\n      ... on AttributeSelectedOptions {\n        selected_options {\n          label\n          value\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 150, "to": 161 } }
        }
      }
    ],
    [
      "f73356c2-a29e-48cd-85e7-21f30e449def",
      {
        "pageContent": "#### Response\n\n```json\n{\n  \"data\": {\n    \"createCustomerAddress\": {\n      \"id\": 4,\n      \"region\": {\n        \"region\": \"Arizona\",\n        \"region_code\": \"AZ\"\n      },\n      \"country_code\": \"US\",\n      \"street\": [\n        \"123 Main Street\"\n      ],\n      \"telephone\": \"7777777777\",\n      \"postcode\": \"77777\",\n      \"city\": \"Phoenix\",\n      \"default_shipping\": true,\n      \"default_billing\": false,\n      \"custom_attributesV2\": [\n        {\n          \"code\": \"station\",\n          \"value\": \"Encanto/Central Ave\"\n        },\n        {\n          \"code\": \"services\",\n          \"selected_options\": [\n            {\n              \"label\": \"hospital\",\n              \"value\": \"507\"\n            },\n            {\n              \"label\": \"police\",\n              \"value\": \"508\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 163, "to": 205 } }
        }
      }
    ],
    [
      "c4e3a33f-b96c-4e3f-9396-2c15f4552d5d",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Expected type CustomerAddressInput!, found \"\".` | The `input` attribute contains an empty value.\n`\"input\" value should be specified` | The `input` argument is specified but is empty.\n`Required parameters are missing: firstname` | The `input.firstname` argument was omitted or contains an empty value.\n`\"Street Address\" cannot contain more than 2 lines.` | The `input.street` argument contains array with more than two elements.\n`Syntax Error: Expected Name, found )` | The `input` argument was omitted.\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.\n\n## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [createCustomer mutation](create.md)\n*  [updateCustomer mutation](update.md)\n*  [updateCustomerAddress mutation](update-address.md)\n*  [deleteCustomerAddress mutation](delete-address.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-address.md",
          "loc": { "lines": { "from": 207, "to": 224 } }
        }
      }
    ],
    [
      "a925ec5a-be48-4228-b079-62faf0bc6eb9",
      {
        "pageContent": "---\ntitle: createCustomerV2 mutation\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\nimport BetaNote2 from '/src/_includes/graphql/notes/beta.md'\n\n# createCustomerV2 mutation\n\nThe `createCustomerV2` mutation creates a customer account. Use the [`createCustomerAddress` mutation](create-address.md) to complete the customer profile and define billing and shipping addresses.\n\nThe `createCustomerV2` mutation supersedes the `createCustomer` mutation as the means to create a customer account. The input objects differ between these two mutations. The `createCustomer` mutation required the `CustomerInput` object, as did the `updateCustomer` mutation. The attributes required for creating a customer are different than those for updating a customer, but you could not determine this by looking at the schema. The `createCustomerV2` mutation requires the `CustomerCreateInput` object, which it does not share with the [`updateCustomerV2` mutation](create-v2.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "42e1e7d4-a263-4f98-839c-4b6ba1d00946",
      {
        "pageContent": "In keeping with current security and privacy best practices, if you include the `date_of_birth` input attribute, be sure you are aware of any potential legal and security risks associated with the storage of customers' full date of birth (month, day, year) along with other personal identifiers, such as full name, before collecting or processing such data.\n\n<BetaNote />\n\nAs of version 2.4.7, you can use the `custom_attributes` field to define an array of custom attributes to apply to the customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 14, "to": 18 } }
        }
      }
    ],
    [
      "6cbf51bb-e25c-4221-a2a1-7df90f5aba51",
      {
        "pageContent": "## Syntax\n\n`mutation: {createCustomerV2(input: CustomerCreateInput!) {CustomerOutput}}`\n\n## Reference\n\nThe [`createCustomerV2`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createCustomerV2) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 20, "to": 26 } }
        }
      }
    ],
    [
      "4a71e9d9-f4e9-4632-80de-39c228b80b0a",
      {
        "pageContent": "## Example usage\n\n<TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" theme=\"light\"/>\n\n### Create a customer\n\nThe following call creates a new customer.\n\n**Request:**\n\n```graphql\nmutation {\n  createCustomerV2(\n    input: {\n      firstname: \"Bob\"\n      lastname: \"Loblaw\"\n      email: \"bobloblaw@example.com\"\n      password: \"b0bl0bl@w\"\n      is_subscribed: true\n    }\n  ) {\n    customer {\n      firstname\n      lastname\n      email\n      is_subscribed\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCustomer\": {\n      \"customer\": {\n        \"firstname\": \"Bob\",\n        \"lastname\": \"Loblaw\",\n        \"email\": \"bobloblaw@example.com\",\n        \"is_subscribed\": true\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 28, "to": 74 } }
        }
      }
    ],
    [
      "cd84b0a9-b1c4-4e79-a16f-92237b626188",
      {
        "pageContent": "### Create a customer with custom attributes\n\n<BetaNote2 />\n\nThe following call creates a new customer, assigning values for custom attributes.\n\nThe merchant has previously created the custom attributes `alternative_email` and `studies` for customers.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 76, "to": 84 } }
        }
      }
    ],
    [
      "14fa035a-747c-46be-8636-4a73883c5429",
      {
        "pageContent": "**Request:**\n\n```graphql\nmutation {\n  createCustomerV2(\n    input: {\n      firstname: \"Bob\"\n      lastname: \"Loblaw\"\n      email: \"bobloblaw@example.com\"\n      password: \"b0bl0bl@w\"\n      is_subscribed: true\n      custom_attributes: [\n        {\n          attribute_code: \"alternative_email\"\n          value: \"abc@example.com\"\n        },\n        {\n          attribute_code: \"studies\"\n          value: \"501,502\"\n          selected_options: [\n            {\n              uid: \"NTEw\"\n              value: \"501\"\n            },\n            {\n              uid: \"NTEx\"\n              value: \"502\"\n            }\n          ]\n        }\n      ]\n    }\n  ) {\n    customer {\n      firstname\n      lastname\n      email\n      is_subscribed\n      custom_attributes {\n        code\n        ... on AttributeValue {\n          value\n        }\n        ... on AttributeSelectedOptions {\n          selected_options {\n            label\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 84, "to": 136 } }
        }
      }
    ],
    [
      "995d51db-7fb6-448b-baf9-d133198fde80",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCustomer\": {\n      \"customer\": {\n        \"firstname\": \"Bob\",\n        \"lastname\": \"Loblaw\",\n        \"email\": \"bobloblaw@example.com\",\n        \"is_subscribed\": true,\n        \"custom_attributes\": [\n          {\n            \"code\": \"alternative_email\",\n            \"value\": \"abc@example.com\"\n          },\n          {\n            \"code\": \"studies\",\n            \"selected_options\": [\n              {\n                \"label\": \"BSc\",\n                \"value\": \"501\"\n              },\n              {\n                \"label\": \"MBA\",\n                \"value\": \"502\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 137, "to": 173 } }
        }
      }
    ],
    [
      "007e754e-3c63-49e6-a542-865476a1f6a8",
      {
        "pageContent": "## Input attributes\n\nThe following table lists the attributes you can use as input for the `createCustomerV2` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 175, "to": 177 } }
        }
      }
    ],
    [
      "394727c5-03ba-4774-9344-b7b3eb3e3f4e",
      {
        "pageContent": "Attribute |  Data Type | Description\n--- | --- | ---\n`allow_remote_shopping_assistance` | Boolean | Indicates whether the customer has enabled remote shopping assistance\n`date_of_birth` | String | The customer's date of birth. In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customers' full date of birth (month, day, year) along with other personal identifiers, such as full name, before collecting or processing such data.\n`custom_attributes` | [AttributeValueInput!] | The customer's custom attributes (2.4.7-beta only)\n`dob` | String | Deprecated. Use `date_of_birth` instead. The customer's date of birth\n`email` | String! | The customer's email address\n`firstname` | String! | The customer's first name\n`gender` | Int | The customer's gender (Male - 1, Female - 2)\n`is_subscribed` | Boolean | Indicates whether the customer subscribes to the store's newsletter",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 179, "to": 188 } }
        }
      }
    ],
    [
      "0770e0f6-65d7-4f3f-a01f-0be7b510f692",
      {
        "pageContent": "`lastname` | String! | The customer's last name\n`middlename` | String | The customer's middle name\n`password` | String | The customer's password\n`prefix` | String | An honorific, such as Dr., Mr., or Mrs.\n`suffix` | String | A value such as Sr., Jr., or III\n`taxvat` | String | The customer's Tax/VAT number (for corporate customers)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 189, "to": 194 } }
        }
      }
    ],
    [
      "81629f95-b7a6-40e1-a137-8793986cd6d4",
      {
        "pageContent": "The `AttributeValueInput` object contains the following attributes:\n\n<BetaNote />\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`attribute_code` | String! | The code of the attribute\n`selected_options` | [AttributeInputSelectedOption!] | An array containing selected options for a select or multiselect attribute\n`value` | String | The value assigned to the attribute\n\nThe `AttributeInputSelectedOption` specifies selected option for dropdown or multiselect attribute value.\nThis object contains the following attributes:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`value` | String! | The attribute option value",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 196, "to": 211 } }
        }
      }
    ],
    [
      "e95207cf-6a2e-4568-8d09-8ff8caa8b90c",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`A customer with the same email address already exists in an associated website.` | The email provided in the `input`.`email` argument belongs to an existing customer.\n`\"Email\" is not a valid email address.` | The value provided in the `input`.`email` argument has an invalid format.\n`Field CustomerInput.email of required type String! was not provided` | The `input`.`email` argument was omitted.\n`Field \"xxx\" is not defined by type CustomerInput.` | The `input`.`xxx` argument is undefined.\n`Required parameters are missing: First Name` | The `input`.`firstname` argument was omitted or contains an empty value.\n\n## Related topics\n\n*  [customer query](../../customer/queries/customer.md)\n*  [updateCustomerV2 mutation](update-v2.md)\n*  [createCustomerAddress mutation](create-address.md)\n*  [updateCustomerAddress mutation](update-address.md)\n*  [deleteCustomerAddress mutation](delete-address.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create-v2.md",
          "loc": { "lines": { "from": 213, "to": 229 } }
        }
      }
    ],
    [
      "25e34cfb-266d-4c85-bea9-e6ac27b4584b",
      {
        "pageContent": "---\ntitle: createCustomer mutation\n---\n\n# createCustomer mutation\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nWe recommend using the [createCustomerV2 mutation](create-v2.md) to create a customer.\n\nThe `createCustomer` mutation creates a new customer.\n\nIn keeping with current security and privacy best practices, if you include the `date_of_birth` input attribute, be sure you are aware of any potential legal and security risks associated with the storage of customers' full date of birth (month, day, year) along with other personal identifiers, such as full name, before collecting or processing such data.\n\nTo return or modify information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n`mutation: {createCustomer(input: CustomerInput!) {CustomerOutput}}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "7e59c083-72dd-4c93-ae0f-6b04ec78dd2a",
      {
        "pageContent": "## Reference\n\nThe [`createCustomer`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createCustomer) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following call creates a new customer.\n\n**Request:**\n\n```graphql\nmutation {\n  createCustomer(\n    input: {\n      firstname: \"Bob\"\n      lastname: \"Loblaw\"\n      email: \"bobloblaw@example.com\"\n      password: \"b0bl0bl@w\"\n      is_subscribed: true\n    }\n  ) {\n    customer {\n      firstname\n      lastname\n      email\n      is_subscribed\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCustomer\": {\n      \"customer\": {\n        \"firstname\": \"Bob\",\n        \"lastname\": \"Loblaw\",\n        \"email\": \"bobloblaw@example.com\",\n        \"is_subscribed\": true\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create.md",
          "loc": { "lines": { "from": 21, "to": 67 } }
        }
      }
    ],
    [
      "dd55bc7d-34ae-492d-81ba-84721676b9d0",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`A customer with the same email address already exists in an associated website.` | The email provided in the `input`.`email` argument belongs to an existing customer.\n`\"Email\" is not a valid email address.` | The value provided in the `input`.`email` argument has an invalid format.\n`Field CustomerInput.email of required type String! was not provided` | The `input`.`email` argument was omitted.\n`Field \"xxx\" is not defined by type CustomerInput.` | The `input`.`xxx` argument is undefined.\n`Required parameters are missing: First Name` | The `input`.`firstname` argument was omitted or contains an empty value.\n\n## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [updateCustomer mutation](update.md)\n*  [createCustomerAddress mutation](create-address.md)\n*  [updateCustomerAddress mutation](update-address.md)\n*  [deleteCustomerAddress mutation](delete-address.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/create.md",
          "loc": { "lines": { "from": 69, "to": 85 } }
        }
      }
    ],
    [
      "5a2ff4dc-ae50-44ec-a3c2-4d893596719e",
      {
        "pageContent": "---\ntitle: deleteCustomerAddress mutation\n---\n\n# deleteCustomerAddress mutation\n\nUse the `deleteCustomerAddress` mutation to delete the specified customer address. It returns a Boolean value that indicates whether the operation was successful.\n\nWe recommend you use a customer token in the header of your call to delete a customer. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n```graphql\nmutation {\n  deleteCustomerAddress(\n    id: Int!\n  ) {\n    Boolean\n  }\n}\n```\n\n## Reference\n\nThe [`deleteCustomerAddress`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteCustomerAddress) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/delete-address.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "f9cc1e67-1f01-4de6-a026-f29f0380cc84",
      {
        "pageContent": "## Example usage\n\nThe following call deletes a customer's address.\n\n**Request:**\n\n```graphql\nmutation {\n  deleteCustomerAddress(id: 4)\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deleteCustomerAddress\": true\n  }\n}\n```\n\n## Input attributes\n\nThe `deleteCustomerAddress` mutation requires the following input:\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`id` | Int! | The ID assigned to the address object\n\n## Output attributes\n\nThe `deleteCustomerAddress` mutation returns a Boolean value that indicates whether the operation was successful.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/delete-address.md",
          "loc": { "lines": { "from": 27, "to": 59 } }
        }
      }
    ],
    [
      "bd816418-f5e2-40d9-af04-f4bdff303cba",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Address \"id\" value should be specified` | The `id` argument is zero.\n`Could not find a address with ID \"XXX\"` | The customer address specified in the `id` argument does not exist.\n`Customer Address XXX is set as default billing address and cannot be deleted` | You cannot delete a default billing address.\n`Customer Address XXX is set as default shipping address and cannot be deleted` | You cannot delete a default shipping address.\n`Field \"deleteCustomerAddress\" argument \"id\" requires type Int!, found \"XXX\".` | The specified `id` argument value has the wrong type.\n`Syntax Error: Expected Name, found )` | The `id` argument was omitted or does not have a value.\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/delete-address.md",
          "loc": { "lines": { "from": 61, "to": 71 } }
        }
      }
    ],
    [
      "5b5e1b75-bc49-4e6b-880b-ac725509589e",
      {
        "pageContent": "## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [createCustomer mutation](create.md)\n*  [updateCustomer mutation](update.md)\n*  [createCustomerAddress mutation](create-address.md)\n*  [updateCustomerAddress mutation](update-address.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/delete-address.md",
          "loc": { "lines": { "from": 73, "to": 79 } }
        }
      }
    ],
    [
      "213edac4-a76f-4fd8-9ecb-4edbc0411d8a",
      {
        "pageContent": "---\ntitle: generateCustomerTokenAsAdmin mutation\ncontributor_name: EY \n---\n\n# generateCustomerTokenAsAdmin mutation\n\nThe `generateCustomerTokenAsAdmin` mutation generates a new customer token as an admin so that an administrator can perform remote shopping assistance on behalf of the customer. For example, if a customer has asked for help adding a product into their cart, you would specify the token returned by the `generateCustomerTokenAsAdmin` mutation in the header of your [`addProductsToCart` mutation](../../cart/mutations/add-products.md).\n\nTo run this mutation, the customer must have enabled the **Allow remote shopping assistance** feature. You can specify the `allow_remote_shopping_assistance` attribute in a [`customer` query](../../customer/queries/customer.md) to determine whether the customer enabled this feature.\n\n## Syntax\n\n```graphql\nmutation {generateCustomerTokenAsAdmin(input: GenerateCustomerTokenAsAdminInput!) {GenerateCustomerTokenAsAdminOutput}}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/generate-token-as-admin.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "7fcd4b19-7e90-45d1-8335-687663495001",
      {
        "pageContent": "## Reference\n\nThe [`generateCustomerTokenAsAdmin`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-generateCustomerTokenAsAdmin) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following call creates a new customer token.\n\n**Request:**\n\n```graphql\nmutation{\n  generateCustomerTokenAsAdmin(input: {\n    customer_email: \"customer1@mail.com\"\n  }){\n    customer_token\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"generateCustomerTokenAsAdmin\": {\n      \"customer_token\": \"cr0717abzoagxty1xjn4lj13kim36r6x\"\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [revokeCustomerToken mutation](revoke-token.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/generate-token-as-admin.md",
          "loc": { "lines": { "from": 18, "to": 53 } }
        }
      }
    ],
    [
      "149a8bb7-6ad0-42a7-8d43-e5ded50af704",
      {
        "pageContent": "---\ntitle: generateCustomerToken mutation\n---\n\n# generateCustomerToken mutation\n\nUse the `generateCustomerToken` mutation to create a new customer token.\n\nTo return or modify information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n```graphql\nmutation {\n  generateCustomerToken(\n    email: String!\n    password: String!\n  ) {\n    token\n  }\n}\n```\n\n## Reference\n\nThe [`generateCustomerToken`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-generateCustomerToken) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/generate-token.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "fc7f77a2-8bb1-4f56-948d-0b09dfbe86bd",
      {
        "pageContent": "## Example usage\n\nThe following call creates a new customer token.\n\n**Request:**\n\n```graphql\nmutation {\n  generateCustomerToken(\n    email: \"bobloblaw@example.com\"\n    password: \"b0bl0bl@w\"\n  ) {\n    token\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"generateCustomerToken\": {\n      \"token\": \"ar4116zozoagxty1xjn4lj13kim36r6x\"\n    }\n  }\n}\n```\n\n## Errors\n\nError | Description\n--- | ---\n`Specify the \"email\" value.` | The value specified in the `email` argument is empty.\n`Specify the \"password\" value.` | The value specified value in the `password` argument is empty.\n`The account sign-in was incorrect or your account is disabled temporarily. Please wait and try again later.` | Authentication error. The email or password is incorrect, or the customer account is locked.\n\n## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [revokeCustomerToken mutation](revoke-token.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/generate-token.md",
          "loc": { "lines": { "from": 28, "to": 68 } }
        }
      }
    ],
    [
      "fe5da527-408d-49f2-ac37-f0fd34ac63b5",
      {
        "pageContent": "---\ntitle: Customer mutations\n---\n\n# Customer mutations\n\nThe customer mutations allow you to perform the following operations:\n\n* Manage customers\n\n  * [`createCustomer`](create.md)\n  * [`createCustomerAddress`](create-address.md)\n  * [`createCustomerV2`](create-v2.md)\n  * [`deleteCustomerAddress`](delete-address.md)\n  * [`updateCustomer`](update.md)\n  * [`updateCustomerAddress`](update-address.md)\n  * [`updateCustomerEmail`](update-email.md)\n  * [`updateCustomerV2`](update-v2.md)\n\n* Manage customer tokens and passwords\n\n  * [`changeCustomerPassword`](change-password.md)\n  * [`generateCustomerTokenAsAdmin`](generate-token-as-admin.md)\n  * [`generateCustomerToken`](generate-token.md)\n  * [`requestPasswordResetEmail`](request-password-reset-email.md)\n  * [`resetPassword`](reset-password.md)\n  * [`revokeCustomerToken`](revoke-token.md)\n\n* Miscellaneous",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 29 } }
        }
      }
    ],
    [
      "5981201b-d483-4429-9816-fdf6085bc27a",
      {
        "pageContent": "* Miscellaneous\n\n  * [`assignCompareListToCustomer`](assign-compare-list.md)\n  * [`sendEmailToFriend`](send-email-to-friend.md)\n  * [`subscribeEmailToNewsletter`](subscribe-email-to-newsletter.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/index.md",
          "loc": { "lines": { "from": 29, "to": 33 } }
        }
      }
    ],
    [
      "6cbf7532-e462-4453-9ed4-1e299d75961f",
      {
        "pageContent": "---\ntitle: requestPasswordResetEmail mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# requestPasswordResetEmail mutation\n\nThe `requestPasswordResetEmail` mutation triggers the password reset email by the provided email address. Use it to initiate the process to reset the registered customer's password before calling the [resetPassword](reset-password.md) mutation.\n\nThe mutation returns `true` if both of the following operations are successful:\n\n-  The reset password operation initiates.\n-  The application sends an email containing a reset link.\n\nOtherwise, the mutation returns `false`.\n\nWhen the customer clicks the `Set a New Password` button, the application sends an email to the customer that contains a URL for resetting their password.\n\n![Reset password email](../../../../_images/graphql/reset-password-email.png)\n\nThe URL has the following format:\n\n```text\nhttps://<HOST>/customer/account/createPassword/?token=gh80pkjGdsPyiXc0sUUXswX1uGN7crUr",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/request-password-reset-email.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "560b27f4-67e1-454d-9bab-982303268633",
      {
        "pageContent": "```\n\nUse the value of the token in the `resetPassword` mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/request-password-reset-email.md",
          "loc": { "lines": { "from": 26, "to": 28 } }
        }
      }
    ],
    [
      "3673240b-73ef-4ea2-8d2b-03a2330b0341",
      {
        "pageContent": "## Syntax\n\n`mutation: {requestPasswordResetEmail(email: String!): Boolean}`\n\n## Reference\n\nThe [`requestPasswordResetEmail`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-requestPasswordResetEmail) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following call triggers the password reset email.\n\n**Request:**\n\n```graphql\nmutation {\n  requestPasswordResetEmail(\n    email: \"roni_cost@example.com\"\n  )\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"requestPasswordResetEmail\": true\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/request-password-reset-email.md",
          "loc": { "lines": { "from": 30, "to": 60 } }
        }
      }
    ],
    [
      "e2ea9873-7999-4ae8-a1bd-d4c4b3518e72",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Cannot reset the customer's password` | A general error message that appears on some internal system errors. The original error is logged and can be found in the application logs.\n`The account is locked` | You cannot modify a locked customer account.\n`The email address has an invalid format.` | The value provided in the `email` argument has an invalid format.\n`You must specify an email address.` | An empty value is provided in the `email` argument.\n\n## Related topics\n\n[resetPassword mutation](reset-password.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/request-password-reset-email.md",
          "loc": { "lines": { "from": 62, "to": 73 } }
        }
      }
    ],
    [
      "369e3b03-d241-48c8-9cc9-ef13d0ce0723",
      {
        "pageContent": "---\ntitle: resetPassword mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# resetPassword mutation\n\nThe `resetPassword` mutation resets customer password using a reset password token and the customer's email address. Use it to set a new password for the registered customer after calling the [requestPasswordResetEmail](request-password-reset-email.md) mutation.\n\nThe new password must satisfy the password policies set for the store.\n\nThe mutation returns `true` if the request was successful. Otherwise, it returns `false`.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe reset password token value can also be found in the `customer_entity`.`rp_token` database table.\n\n## Syntax\n\n`mutation: {resetPassword(email: String!, resetPasswordToken: String!, newPassword: String!): Boolean}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/reset-password.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "dad6bce5-5e2c-4dfb-8d41-4718d9c5fb4f",
      {
        "pageContent": "## Reference\n\nThe [`resetPassword`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-resetPassword) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following call sets a new customer password.\n\n**Request:**\n\n```graphql\nmutation {\n  resetPassword(\n    email: \"roni_cost@example.com\",\n    resetPasswordToken: \"gh80pkjGdsPyiXc0sUUXswX1uGN7crUr\",\n    newPassword: \"new_password\"\n  )\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"resetPassword\": true\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/reset-password.md",
          "loc": { "lines": { "from": 23, "to": 51 } }
        }
      }
    ],
    [
      "ba975ae8-081d-49bc-89fc-7d781a91138f",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Cannot set the customer's password` | A general error message that appears on some internal system errors. The original error is logged and can be found in the application logs.\n`newPassword must be specified` | The `newPassword` argument is empty.\n`resetPasswordToken must be specified` | The `resetPasswordToken` argument is empty.\n`The account is locked` | You cannot modify a locked customer account.\n`The email address has an invalid format.` | The value provided in the `email` argument has an invalid format.\n`You must specify an email address.` | The `email` argument is empty.\n\n## Related topics\n\n-  [requestPasswordResetEmail mutation](request-password-reset-email.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/reset-password.md",
          "loc": { "lines": { "from": 53, "to": 66 } }
        }
      }
    ],
    [
      "900590e4-718a-4636-9c91-65c8ce413491",
      {
        "pageContent": "---\ntitle: revokeCustomerToken mutation\n---\n\n# revokeCustomerToken mutation\n\nThe `revokeCustomerToken` mutation revokes the customer's token. It returns `true` if the token was successfully revoked.\n\nWe recommend you specify a customer token in the header of your call. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n```graphql\nmutation {\n  revokeCustomerToken {\n    RevokeCustomerTokenOutput\n  }\n}\n```\n\n## Reference\n\nThe [`revokeCustomerToken`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-revokeCustomerToken) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/revoke-token.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "b67d7cb2-dc85-4311-b8b6-1c93e48de7cd",
      {
        "pageContent": "## Example usage\n\nThe following call revokes the customer's token.\n\n**Request:**\n\n```graphql\nmutation {\n  revokeCustomerToken {\n    result\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"revokeCustomerToken\": {\n      \"result\": true\n    }\n  }\n}\n```\n\n## Errors\n\nError | Description\n--- | ---\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.\n\n## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [generateCustomerToken mutation](generate-token.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/revoke-token.md",
          "loc": { "lines": { "from": 25, "to": 60 } }
        }
      }
    ],
    [
      "d0c00d87-3e67-4567-8518-ae5d7f009e2e",
      {
        "pageContent": "---\ntitle: sendEmailToFriend mutation\n---\n\n# sendEmailToFriend mutation\n\nUse the `sendEmailToFriend` mutation to allow the application send a message on behalf of a customer to the specified email addresses.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe **Stores** > **Configuration** > **Catalog** > **Email to a friend** > **Enabled** field must be set to **Yes** to implement this mutation.\n\n## Syntax\n\n```graphql\nmutation {\n  sendEmailToFriend(\n    input: SendEmailToFriendInput\n  ) {\n    SendEmailToFriendOutput\n  }\n}\n```\n\n## Reference\n\nThe [`sendEmailToFriend`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-sendEmailToFriend) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/send-email-to-friend.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "d46ad285-7e4c-4e9a-a03e-9a31f71c7422",
      {
        "pageContent": "## Example usage\n\nThe following example sends a message to two friends.\n\n**Request:**\n\n```graphql\nmutation {\n  sendEmailToFriend(\n    input: {\n      product_id: 10\n      sender: {\n        name: \"Veronica Cost\"\n        email: \"roni_cost@example.com\"\n        message: \"Sarah needs this! http://luma.example.com/savvy-shoulder-tote.html\"\n      }\n      recipients: [\n        { name: \"Amie Franklin\", email: \"afranklin@example.com\" }\n        { name: \"Tomoko\", email: \"tomoko@example.com\" }\n      ]\n    }\n  ) {\n    sender {\n      name\n      email\n    }\n    recipients {\n      name\n      email\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/send-email-to-friend.md",
          "loc": { "lines": { "from": 29, "to": 60 } }
        }
      }
    ],
    [
      "5cecfb4e-ac60-476b-a492-ac462ebda4d5",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"sendEmailToFriend\": {\n      \"sender\": {\n        \"name\": \"Veronica Cost\",\n        \"email\": \"roni_cost@example.com\",\n      },\n      \"recipients\": [\n        {\n          \"name\": \"Amie Franklin\",\n          \"email\": \"afranklin@example.com\"\n        },\n        {\n          \"name\": \"Tomoko\",\n          \"email\": \"tomoko@example.com\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/send-email-to-friend.md",
          "loc": { "lines": { "from": 61, "to": 86 } }
        }
      }
    ],
    [
      "efbdccb7-6396-479c-923c-c708f2a8bc74",
      {
        "pageContent": "## Errors\n\nSome errors occur because the **Email a friend** feature is not properly configured. Go to **Stores** > **Configuration** > **Catalog** > **Email to a friend** in the Admin to adjust the settings.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/send-email-to-friend.md",
          "loc": { "lines": { "from": 88, "to": 90 } }
        }
      }
    ],
    [
      "30c70770-3148-4b4e-a405-e0613391a753",
      {
        "pageContent": "Error | Description\n--- | ---\n`\"Email to a Friend\" is not enabled.` | \"Email to a Friend\" is disabled.  To activate it, use the Admin to set the **Enabled** field to **Yes**.\n`Please provide Name of sender.` | The value specified in the `input`.`sender`.`name` argument is empty.\n`Please provide Email of sender.` | The value specified in the `input`.`sender`.`email` argument is empty.\n`Please provide Message.` | The value specified in the `input`.`sender`.`message` argument is empty.\n`Please provide Name for all of recipients.` | The value specified in the `input`.`recipients`[].`name` argument is empty.\n`Please provide Email for all of recipients.` | The value specified in the `input`.`recipients`[].`email` argument is empty.\n`The current customer isn't authorized.` | \"Email to a Friend\" is available for registered users only. To make it available for guests, use the Admin to set the  **Allow for Guests** option to **Yes**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/send-email-to-friend.md",
          "loc": { "lines": { "from": 92, "to": 100 } }
        }
      }
    ],
    [
      "89ef63dc-813e-4dfc-9e6f-511d3facc094",
      {
        "pageContent": "`The product that was requested doesn't exist. Verify the product and try again.` | The product specified in the `product_id` argument is not visible in the current website.\n`You can't send messages more than XXX times an hour.` | The user cannot send more messages in an hour than specified in the  **Max Products Sent in 1 Hour** option in the Admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/send-email-to-friend.md",
          "loc": { "lines": { "from": 101, "to": 102 } }
        }
      }
    ],
    [
      "9931ea2c-aee9-4434-84c1-6f98536c0bdc",
      {
        "pageContent": "---\ntitle: subscribeEmailToNewsletter mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# subscribeEmailToNewsletter mutation\n\nThe `subscribeEmailToNewsletter` mutation allows guests and registered customers to sign up to receive newsletters. It can return a value of `NOT_ACTIVE` or `SUBSCRIBED`.\n\n## Syntax\n\n`mutation: {subscribeEmailToNewsletter(email: String!): SubscribeEmailToNewsletterOutput}`\n\n## Reference\n\nThe [`subscribeEmailToNewsletter`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-subscribeEmailToNewsletter) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/subscribe-email-to-newsletter.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "0024b6a1-f63a-463b-8d7c-70cb5fc4af44",
      {
        "pageContent": "## Example usage\n\nThe following call subscribes an email to the store's newsletter.\n\n**Request:**\n\n```graphql\nmutation {\n  subscribeEmailToNewsletter(\n    email: \"email@example.com\"\n  ) {\n    status\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"subscribeEmailToNewsletter\": {\n      \"status\": \"SUBSCRIBED\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/subscribe-email-to-newsletter.md",
          "loc": { "lines": { "from": 19, "to": 45 } }
        }
      }
    ],
    [
      "b5fe1c6a-dfef-4de0-8382-31d4348aa026",
      {
        "pageContent": "## Errors",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/subscribe-email-to-newsletter.md",
          "loc": { "lines": { "from": 47, "to": 47 } }
        }
      }
    ],
    [
      "f057ecac-cc2a-49d2-8828-a0d44a914aa6",
      {
        "pageContent": "Error | Description\n--- | ---\n`Cannot create a newsletter subscription.` | A general error message that appears on some internal system errors. The original error is logged and can be found in the application logs.\n`Enter a valid email address.` | The value provided in the `email` argument has an invalid format.\n`Guests can not subscribe to the newsletter. You must create an account to subscribe.` | Guest subscription is disabled. Go to **Stores** > **Configuration** > **Customers** > **Newsletter** > **Subscription Options** > **Allow Guest Subscription** in the Admin to adjust the setting.\n`The account sign-in was incorrect or your account is disabled temporarily.` | The email address provided in the `email` argument is that of a customer account pending confirmation.\n`This email address is already subscribed.` | The email address provided in the `email` argument is already subscribed.\n`You must specify an email address to subscribe to a newsletter.`| The `email` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/subscribe-email-to-newsletter.md",
          "loc": { "lines": { "from": 49, "to": 56 } }
        }
      }
    ],
    [
      "c34cc3e1-2177-4762-8b9e-d8630993d057",
      {
        "pageContent": "---\ntitle: updateCustomerAddress mutation\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n# updateCustomerAddress mutation\n\nUse the `updateCustomerAddress` mutation to update the customer's address.\n\nTo return or modify information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n`mutation: {updateCustomerAddress(id: Int!, input: CustomerAddressInput) {CustomerAddress}}`\n\n## Reference\n\nThe [`updateCustomerAddress`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCustomerAddress) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-address.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "e8293c75-56db-4698-b0c3-aae77eb40382",
      {
        "pageContent": "## Example usage\n\n### Update a customer address\n\nThe following call updates the customer's city and postcode.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCustomerAddress(id:3, input: {\n    city: \"New City\"\n    postcode: \"55555\"\n  }) {\n    id\n    city\n    postcode\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCustomerAddress\": {\n      \"id\": 3,\n      \"city\": \"New City\",\n      \"postcode\": 55555\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-address.md",
          "loc": { "lines": { "from": 21, "to": 54 } }
        }
      }
    ],
    [
      "a233a562-a96e-48d6-a06d-fcb70b0a2e9e",
      {
        "pageContent": "### Update a customer address with custom attributes\n\n<BetaNote />\n\nThe following call updates the customer's city, postcode, and custom attributes. The merchant has previously created the `station` and `services` attributes for customer addresses.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCustomerAddress(id:3, input: {\n    city: \"New City\"\n    postcode: \"55555\"\n    custom_attributesV2: [\n      {\n        attribute_code: \"station\",\n        value: \"Times Sq - 42 St\"\n      },\n      {\n        attribute_code: \"services\"\n        value: \"507\"\n        selected_options: [\n          {\n            uid: \"NTA3\"\n            value: \"507\"\n          }\n        ]\n      }\n    ]\n  }) {\n    id\n    city\n    postcode\n    custom_attributesV2 {\n      code\n      ... on AttributeValue {\n        value\n      }\n      ... on AttributeSelectedOptions {\n        selected_options {\n          label\n          value\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-address.md",
          "loc": { "lines": { "from": 56, "to": 102 } }
        }
      }
    ],
    [
      "686e7857-c617-4877-b8e8-0767b987f744",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCustomerAddress\": {\n      \"id\": 3,\n      \"city\": \"New City\",\n      \"postcode\": 55555,\n      \"custom_attributesV2\": [\n        {\n          \"code\": \"station\",\n          \"value\": \"Times Sq - 42 St\"\n        },\n        {\n          \"code\": \"services\",\n          \"selected_options\": [\n            {\n              \"label\": \"hospital\",\n              \"value\": \"507\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-address.md",
          "loc": { "lines": { "from": 103, "to": 132 } }
        }
      }
    ],
    [
      "3af13eff-2ca5-4019-8808-004b7bb4a334",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Address \"id\" value should be specified` | The `id` argument is zero.\n`Could not find a address with ID \"XXX\"` | The customer address specified in the `id` argument does not exist.\n`Current customer does not have permission to address with ID \"XXX\"` | The customer tries to update the address of another customer.\n`Field \"updateCustomerAddress\" argument \"id\" of type \"Int!\" is required but not provided.` | The `id` argument was omitted.\n`Field \"updateCustomerAddress\" argument \"id\" requires type Int!, found \"XXX\".` | The specified `id` argument value has the wrong type.\n`\"input\" value must be specified` | The `input` argument was omitted or was specified but is empty.\n`Syntax Error: Expected Name, found )` | The `id` and `input` arguments are omitted.\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-address.md",
          "loc": { "lines": { "from": 134, "to": 145 } }
        }
      }
    ],
    [
      "99475f81-ec5f-4137-8ea1-b2f306357f5c",
      {
        "pageContent": "## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [createCustomer mutation](create.md)\n*  [updateCustomer mutation](update.md)\n*  [createCustomerAddress mutation](create-address.md)\n*  [deleteCustomerAddress mutation](delete-address.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-address.md",
          "loc": { "lines": { "from": 147, "to": 153 } }
        }
      }
    ],
    [
      "9e64f107-bf85-4de5-b3ee-946836420363",
      {
        "pageContent": "---\ntitle: updateCustomerEmail mutation\n---\n\n# updateCustomerEmail mutation\n\nUse the `updateCustomerEmail` mutation to change the email address for the logged-in customer.\n\nTo return or modify information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n`mutation: updateCustomerEmail(email: String! password: String!): CustomerOutput`\n\n## Reference\n\nThe [`updateCustomerEmail`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCustomerEmail) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-email.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "dac0a531-5418-4c24-895c-81eafb9a8f47",
      {
        "pageContent": "## Example usage\n\nThe following call updates the customer's email address.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCustomerEmail(email: \"new_email@example.com\", password: \"roni_cost3@example.com\") {\n    customer {\n      email\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCustomerEmail\": {\n      \"customer\": {\n        \"email\": \"new_email@example.com\"\n      }\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [updateCustomerV2 mutation](create-v2.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-email.md",
          "loc": { "lines": { "from": 19, "to": 52 } }
        }
      }
    ],
    [
      "10e9b9eb-c392-459a-bb38-43c7d1cf53fc",
      {
        "pageContent": "---\ntitle: updateCustomerV2 mutation\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\nimport BetaNote2 from '/src/_includes/graphql/notes/beta.md'\n\n# updateCustomerV2 mutation\n\nThe `updateCustomerV2` mutation updates the personal information in an existing customer account. Use the [`updateCustomerEmail` mutation](update-email.md) to update the customer's email address.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "7cd48054-28a8-4ebb-900a-4bbee1cee760",
      {
        "pageContent": "The `updateCustomerV2` mutation supersedes the `updateCustomer` mutation as the means to update a customer account. The input objects differ between these two mutations. The `updateCustomer` mutation required the `CustomerInput` object, as did the `createCustomer` mutation. Updating a customer does not require any specific attribute, while several attributes are required when you create a customer. You could not determine this by looking at the schema for those mutations. The `updateCustomerV2` mutation requires the `CustomerUpdateInput` object, which it does not share with the [`createCustomerV2` mutation](create-v2.md).\n\nTo return or modify information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 12, "to": 14 } }
        }
      }
    ],
    [
      "7e7b64f7-e386-4f01-8615-47398bf7d6fe",
      {
        "pageContent": "In keeping with current security and privacy best practices, if you include the `date_of_birth` input attribute, be sure you are aware of any potential legal and security risks associated with the storage of customers' full date of birth (month, day, year) along with other personal identifiers, such as full name, before collecting or processing such data.\n\n<BetaNote />\n\nAs of version 2.4.7, you can use the `custom_attributes` field to define an array of custom attributes to update.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 16, "to": 20 } }
        }
      }
    ],
    [
      "3b78d283-a8ba-44a1-a3e0-502cc7c82fe4",
      {
        "pageContent": "## Syntax\n\n`mutation: {updateCustomerV2(input: CustomerUpdateInput!) {CustomerOutput}}`\n\n## Reference\n\nThe [`updateCustomerV2`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCustomerV2) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 22, "to": 28 } }
        }
      }
    ],
    [
      "11db5076-117f-462a-a507-2e3d2dec5694",
      {
        "pageContent": "## Example usage\n\n### Update a customer\n\nThe following call updates the first name and the newsletter subscription status for a specific customer.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCustomerV2(\n    input: {\n      firstname: \"Robert\"\n      is_subscribed: false\n    }\n  ) {\n    customer {\n      firstname\n      is_subscribed\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCustomerV2\": {\n      \"customer\": {\n        \"firstname\": \"Robert\",\n        \"is_subscribed\": false\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 30, "to": 67 } }
        }
      }
    ],
    [
      "08a92d77-e154-4fd9-9e98-517acb2c5140",
      {
        "pageContent": "### Update a customer with custom attributes\n\n<BetaNote2 />\n\nThe following call updates the first name, newsletter subscription status, and custom attribute values for a specific customer. The merchant has previously created the `random_attribute` and `studies` attributes for customer addresses.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 69, "to": 75 } }
        }
      }
    ],
    [
      "64612f9d-4963-4ef9-b77e-b662eb3eedb9",
      {
        "pageContent": "**Request:**\n\n```graphql\nmutation {\n  updateCustomerV2(\n    input: {\n      firstname: \"Robert\"\n      is_subscribed: false\n      custom_attributes: [\n        {\n          attribute_code: \"random_attribute\"\n          value: \"abc123\"\n        },\n        {\n          attribute_code: \"studies\"\n          value: \"502\"\n          selected_options: [\n            {\n              uid: \"NTEx\"\n              value: \"502\"\n            }\n          ]\n        }\n      ]\n    }\n  ) {\n    customer {\n      firstname\n      is_subscribed\n      custom_attributes {\n        code\n        ... on AttributeValue {\n          value\n        }\n        ... on AttributeSelectedOptions {\n          selected_options {\n            label\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 75, "to": 118 } }
        }
      }
    ],
    [
      "0509b02b-3686-4f21-9e56-3ac4339925ad",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCustomerV2\": {\n      \"customer\": {\n        \"firstname\": \"Robert\",\n        \"is_subscribed\": false,\n        \"custom_attributes\": [\n          {\n            \"code\": \"random_attribute\",\n            \"value\": \"abc123\"\n          },\n          {\n            \"code\": \"studies\",\n            \"selected_options\": [\n              {\n                \"label\": \"MBA\",\n                \"value\": \"502\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 119, "to": 149 } }
        }
      }
    ],
    [
      "911b60d9-09b8-425c-a24f-1c9f2c7b93ad",
      {
        "pageContent": "## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [createCustomerV2 mutation](create-v2.md)\n*  [createCustomerAddress mutation](create-address.md)\n*  [updateCustomerAddress mutation](update-address.md)\n*  [updateCustomerEmail mutation](update-email.md)\n*  [deleteCustomerAddress mutation](delete-address.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update-v2.md",
          "loc": { "lines": { "from": 151, "to": 158 } }
        }
      }
    ],
    [
      "c141666e-80be-4d52-a7d8-16a780abc7ad",
      {
        "pageContent": "---\ntitle: updateCustomer mutation\n---\n\n# updateCustomer mutation\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nWe recommend using the [updateCustomerV2 mutation](update-v2.md) to update a customer.\n\nThe `updateCustomer` mutation updates the customer's personal information.\n\nTo return or modify information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n`mutation: {updateCustomer(input: CustomerInput!) {CustomerOutput}}`\n\n## Reference\n\nThe [`updateCustomer`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateCustomer) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "c6c9b3e7-4b19-4f24-8395-bcff52373669",
      {
        "pageContent": "## Example usage\n\nThe following call updates the first name and email address for a specific customer.\n\n**Request:**\n\n```graphql\nmutation {\n  updateCustomer(\n    input: {\n      firstname: \"Rob\"\n      email: \"robloblaw@example.com\"\n    }\n  ) {\n    customer {\n      firstname\n      email\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateCustomer\": {\n      \"customer\": {\n        \"firstname\": \"Rob\",\n        \"email\": \"robloblaw@example.com\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update.md",
          "loc": { "lines": { "from": 23, "to": 58 } }
        }
      }
    ],
    [
      "498f6855-a371-4883-b50b-94e9b706f563",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`\"input\" value should be specified` | The `input` argument is empty.\n`\"Email\" is not a valid email address.` | The value provided in the `input`.`email` argument has an invalid format.\n`Provide the current \"password\" to change \"email\".` | To change an email address, specify the correct customer password in the `password` argument.\n`A customer with the same email address already exists in an associated website.` | You cannot apply a new email address to a current customer because another user has the same email address.\n`Invalid login or password.` | The value specified in the `password` argument is incorrect.\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update.md",
          "loc": { "lines": { "from": 60, "to": 69 } }
        }
      }
    ],
    [
      "828b6fde-fd66-45bd-8154-f0ade7dc18b7",
      {
        "pageContent": "## Related topics\n\n*  [customer query](../queries/customer.md)\n*  [createCustomer mutation](create.md)\n*  [createCustomerAddress mutation](create-address.md)\n*  [updateCustomerAddress mutation](update-address.md)\n*  [deleteCustomerAddress mutation](delete-address.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/mutations/update.md",
          "loc": { "lines": { "from": 71, "to": 77 } }
        }
      }
    ],
    [
      "2d8ac390-2164-486c-9f45-7debc2b27fa6",
      {
        "pageContent": "---\ntitle: customerCart query\n---\n\n# customerCart query\n\nThe `customerCart` query returns the active cart for the logged-in customer. If the cart does not exist, the query creates one. The customer's authorization token must be specified in the headers.\n\nThe `customerCart` query differs from the `cart` query in the following ways:\n\n-  The `customerCart` query must be run on behalf of a logged-in customer. If you run this query on behalf of a guest, an exception will be thrown.\n-  The `cart` query requires a `cart_id` value as input. The `customerCart` query does not take any input parameters.\n\nYou can define the query to return the `id` attribute. You can use the value of this attribute as the `destination_cart_id` input parameter in the [`mergeCarts` mutation](../../cart/mutations/merge.md). (The `mergeCarts` mutation provides the ability to merge a guest cart with the logged-in customer's cart.)\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/cart.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "f8eabda7-e36a-48f2-a423-b88b52c09816",
      {
        "pageContent": "If you know the value of the logged-in customer's cart ID, you can allow the customer to start an order on one device and complete it on another.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/cart.md",
          "loc": { "lines": { "from": 18, "to": 18 } }
        }
      }
    ],
    [
      "0e56e08b-be93-44a8-9193-d7473ac8a41a",
      {
        "pageContent": "## Syntax\n\n`customerCart: Cart!`\n\n## Reference\n\nThe [`customerCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-customerCart) reference provides detailed information about the types and fields defined in this query.\n\n## Example usage\n\nThe following query lists the products in the logged-in customer's cart:\n\n**Request:**\n\n```graphql\n{\n  customerCart {\n    id\n    items {\n      id\n      product {\n        name\n        sku\n      }\n      quantity\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customerCart\": {\n      \"id\": \"CYmiiQRjPVc2gJUc5r7IsBmwegVIFO43\",\n      \"items\": [\n        {\n           \"uid\": \"MjI=\",\n          \"product\": {\n            \"name\": \"Strive Shoulder Pack\",\n            \"sku\": \"24-MB04\"\n          },\n          \"quantity\": 1\n        },\n        {\n          \"uid\": \"MjQ=\",\n          \"product\": {\n            \"name\": \"Radiant Tee\",\n            \"sku\": \"WS12\"\n          },\n          \"quantity\": 1\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/cart.md",
          "loc": { "lines": { "from": 20, "to": 78 } }
        }
      }
    ],
    [
      "fa623e2c-b010-4cd0-b923-3650484b7c3c",
      {
        "pageContent": "---\ntitle: customer query\n---\n\nimport BetaNote1 from '/src/_includes/graphql/notes/beta.md'\nimport BetaNote2 from '/src/_includes/graphql/notes/beta.md'\nimport BetaNote3 from '/src/_includes/graphql/notes/beta.md'\nimport BetaNote4 from '/src/_includes/graphql/notes/beta.md'\nimport BetaNote5 from '/src/_includes/graphql/notes/beta.md'\nimport CustomAttributeCustomer from '/src/_includes/graphql/examples/custom-attribute-customer.md'\n\n# customer query\n\nThe `customer` query returns information about the logged-in customer, store credit history and customer's wishlist.\n\nTo retrieve information about a customer, we recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n`{customer: {Customer}}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "403645c6-b042-4c2b-ae48-fce3b27d6453",
      {
        "pageContent": "## Reference\n\nThe [`customer`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-customer) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 22, "to": 24 } }
        }
      }
    ],
    [
      "3e3827c3-9c4a-4b8d-83f8-61183114562f",
      {
        "pageContent": "## Example usage",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 26, "to": 26 } }
        }
      }
    ],
    [
      "28f90059-73e3-4c5c-ab08-ff821a99a33e",
      {
        "pageContent": "### Retrieve basic information about the logged-in customer\n\nThe following call returns information about the logged-in customer. Provide the customer's token in the header section of the query.\n\n**Request:**\n\n```graphql\n{\n  customer {\n    firstname\n    lastname\n    suffix\n    email\n    addresses {\n      firstname\n      lastname\n      street\n      city\n      region {\n        region_code\n        region\n      }\n      postcode\n      country_code\n      telephone\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 28, "to": 55 } }
        }
      }
    ],
    [
      "d4715959-a49e-477e-952c-392c7569c543",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customer\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"suffix\": null,\n      \"email\": \"jdoe@example.com\",\n      \"addresses\": [\n       {\n         \"firstname\": \"John\",\n         \"lastname\": \"Doe\",\n         \"street\": [\n           \"123 Elm Street\"\n         ],\n         \"city\": \"Anytown\",\n         \"region\": {\n           \"region_code\": \"MI\",\n           \"region\": \"Michigan\"\n         },\n         \"postcode\": \"78758\",\n         \"country_code\": \"US\",\n         \"telephone\": \"512 555-1212\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 56, "to": 88 } }
        }
      }
    ],
    [
      "6bce13a6-31c9-4b18-968b-fa27c15cdbfa",
      {
        "pageContent": "### Retrieve custom attributes metadata from a customer\n\n<BetaNote1 />\n\n< CustomAttributeCustomer />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 90, "to": 94 } }
        }
      }
    ],
    [
      "2ee4bf1d-4cb4-4c27-beb3-33a8d2befcda",
      {
        "pageContent": "### Retrieve custom attributes metadata from a customer address\n\n<BetaNote2 />\n\nThe following call returns the customer address custom attributes for the logged-in customer. Provide the customer's token in the header section of the query.\n\n**Request:**\n\n```graphql\n{\n  customer {\n    email\n    addresses {\n      city\n      custom_attributesV2 {\n        code\n        ... on AttributeValue {\n            value\n        }\n        ... on AttributeSelectedOptions {\n          selected_options {\n            label\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 96, "to": 124 } }
        }
      }
    ],
    [
      "6ec5c2cc-2ae8-4db5-a39c-b1f4d9c5a7e7",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customer\": {\n      \"email\": \"jdoe@example.com\",\n      \"addresses\": [\n        {\n          \"city\": \"Marseille\",\n          \"custom_attributesV2\": [\n            {\n              \"code\": \"neighbourhood\",\n              \"value\": \"St Barnabé\"\n            },\n            {\n              \"code\": \"services\",\n              \"selected_options\": [\n                {\n                  \"label\": \"hospital\",\n                  \"value\": \"507\"\n                },\n                {\n                  \"label\": \"police\",\n                  \"value\": \"508\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 125, "to": 161 } }
        }
      }
    ],
    [
      "61cc4d9d-9441-4928-b119-014e5faa1492",
      {
        "pageContent": "### Retrieve custom attributes metadata filtered by `code`\n\n<BetaNote5 />\n\nThe following call returns the customer and customer address custom attributes for the logged-in customer filtered by `code`. Provide the customer's token in the header section of the query.\n\n**Request:**\n\n```graphql\n{\n  customer {\n    email\n    custom_attributes(attributeCodes: [\"studies\"]) {\n      code\n      ... on AttributeValue {\n        value\n      }\n      ... on AttributeSelectedOptions {\n        selected_options {\n          label\n          value\n        }\n      }\n    }\n    addresses {\n      city\n      custom_attributesV2(attributeCodes: [\"services\"]) {\n        code\n        ... on AttributeValue {\n            value\n        }\n        ... on AttributeSelectedOptions {\n          selected_options {\n            label\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 163, "to": 203 } }
        }
      }
    ],
    [
      "2e9194db-fe06-4df1-ab8f-dfce8ccbce7e",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customer\": {\n      \"email\": \"jdoe@example.com\",\n      \"custom_attributes\": [\n        {\n          \"code\": \"studies\",\n          \"selected_options\": [\n            {\n              \"label\": \"BSc\",\n              \"value\": \"501\"\n            },\n            {\n              \"label\": \"MBA\",\n              \"value\": \"502\"\n            }\n          ]\n        }\n      ],\n      \"addresses\": [\n        {\n          \"city\": \"Marseille\",\n          \"custom_attributesV2\": [\n            {\n              \"code\": \"services\",\n              \"selected_options\": [\n                {\n                  \"label\": \"hospital\",\n                  \"value\": \"507\"\n                },\n                {\n                  \"label\": \"police\",\n                  \"value\": \"508\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 204, "to": 251 } }
        }
      }
    ],
    [
      "aa23e352-b59e-4e56-bd51-e3ac954b0d5b",
      {
        "pageContent": "### Retrieve a summary of the customer's order history\n\nThe following example returns a summary of the logged-in customer's previous orders.\n\n**Request:**\n\n```graphql\nquery {\n  customer {\n    orders(\n      pageSize: 20\n    ) {\n      items {\n        id\n        order_date\n        total {\n          grand_total {\n            value\n            currency\n          }\n        }\n        status\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 253, "to": 278 } }
        }
      }
    ],
    [
      "30ff7ea2-8b3a-4dca-8386-100f902bc5fe",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 279, "to": 281 } }
        }
      }
    ],
    [
      "45712273-9f2d-48de-aa92-8e760dfcba3b",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"customer\": {\n      \"orders\": {\n        \"items\": [\n          {\n            \"id\": \"MQ==\",\n            \"order_date\": \"2020-03-18 17:25:20\",\n            \"total\": {\n              \"grand_total\": {\n                \"value\": 36.39,\n                \"currency\": \"USD\"\n              }\n            },\n            \"status\": \"Complete\"\n          },\n          {\n            \"id\": \"Mg==\",\n            \"order_date\": \"2020-03-18 17:25:20\",\n            \"total\": {\n              \"grand_total\": {\n                \"value\": 39.64,\n                \"currency\": \"USD\"\n              }\n            },\n            \"status\": \"Closed\"\n          },\n          {\n            \"id\": \"Mw==\",\n            \"order_date\": \"2020-03-21 22:41:38\",\n            \"total\": {\n              \"grand_total\": {\n                \"value\": 205.68,\n                \"currency\": \"USD\"\n              }\n            },\n            \"status\": \"Pending\"\n          },\n          {\n            \"id\": \"NA==\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 283, "to": 323 } }
        }
      }
    ],
    [
      "d5607978-e116-4384-8949-bd8f71ed59e9",
      {
        "pageContent": "\"order_date\": \"2020-08-03 02:35:35\",\n            \"total\": {\n              \"grand_total\": {\n                \"value\": 159.13,\n                \"currency\": \"USD\"\n              }\n            },\n            \"status\": \"Complete\"\n          },\n          {\n            \"id\": \"NQ==\",\n            \"order_date\": \"2020-09-08 03:57:11\",\n            \"total\": {\n              \"grand_total\": {\n                \"value\": 132.57,\n                \"currency\": \"USD\"\n              }\n            },\n            \"status\": \"Complete\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 324, "to": 349 } }
        }
      }
    ],
    [
      "475b4590-0f68-434c-87bb-873d0e9ebaf7",
      {
        "pageContent": "### Retrieve orders based on scope argument:\n\nThe following query returns all customer orders, across all store view codes. The value of GLOBAL in the scope field overrides the store view code specified in the Store header.\n\n**Request:**\n\n```graphql\n{\n    customer {\n        orders(\n            pageSize: 20,\n            scope: GLOBAL\n        ) {\n            items {\n                id\n                order_number\n                order_date\n                total {\n                    grand_total\n                    { value currency }\n                }\n                status\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 351, "to": 376 } }
        }
      }
    ],
    [
      "45bb4cae-34a8-4238-8fa5-909539dbcb79",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n    \"data\": {\n        \"customer\": {\n            \"orders\": {\n                \"items\": [\n                    {\n                        \"id\": \"ODg=\",\n                        \"order_number\": \"48000000001\",\n                        \"order_date\": \"2022-07-27 18:01:38\",\n                        \"total\": {\n                            \"grand_total\": {\n                                \"value\": 15,\n                                \"currency\": \"USD\"\n                            }\n                        },\n                        \"status\": \"Pending\"\n                    }\n                ]\n            }\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 377, "to": 404 } }
        }
      }
    ],
    [
      "4c7cf246-7516-4d18-bb25-ca089ae59d69",
      {
        "pageContent": "### Retrieve detailed information about a specific order\n\nThe following example returns details about one of the customer's previous orders.\n\nThese topics contain examples with fragments and provide even more details:\n\n*  [CreditMemoItemInterface attributes and implementations](../../orders/interfaces/credit-memo-item.md)\n*  [InvoiceItemInterface attributes and implementations](../../orders/interfaces/invoice-item.md)\n*  [OrderItemInterface attributes and implementations](../../orders/interfaces/order-item.md)\n*  [ShipmentItemInterface attributes and implementations](../../orders/interfaces/shipment-item.md)\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 406, "to": 417 } }
        }
      }
    ],
    [
      "c0c689fa-ca6b-4417-a42b-8e3e8b3347f2",
      {
        "pageContent": "```graphql\n{\n  customer {\n    orders(filter: {number: {eq: \"000000001\"}}) {\n      total_count\n      items {\n        id\n        number\n        order_date\n        status\n        items {\n          product_name\n          product_sku\n          product_url_key\n          product_sale_price {\n            value\n            currency\n          }\n          quantity_ordered\n          quantity_invoiced\n          quantity_shipped\n          eligible_for_return\n        }\n        carrier\n        shipments {\n          id\n          number\n          items {\n            product_name\n            quantity_shipped\n          }\n        }\n        total {\n          base_grand_total {\n            value\n            currency\n          }\n          grand_total {\n            value\n            currency\n          }\n          total_tax {\n            value\n          }\n          subtotal {\n            value\n            currency\n          }\n          taxes {\n            amount {\n              value\n              currency",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 419, "to": 470 } }
        }
      }
    ],
    [
      "ec13cc76-3095-4e71-a55e-9a63d5ed02a1",
      {
        "pageContent": "}\n            title\n            rate\n          }\n          total_shipping {\n            value\n          }\n          shipping_handling {\n            amount_including_tax {\n              value\n            }\n            amount_excluding_tax {\n              value\n            }\n            total_amount {\n              value\n            }\n            taxes {\n              amount {\n                value\n              }\n              title\n              rate\n            }\n          }\n          discounts {\n            amount {\n              value\n              currency\n            }\n            label\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 471, "to": 507 } }
        }
      }
    ],
    [
      "cbf48f9a-fa39-41a9-9256-cb29239c7c59",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 508, "to": 510 } }
        }
      }
    ],
    [
      "859a4708-dce0-4511-b90c-15c91df0f3e2",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"customer\": {\n      \"orders\": {\n        \"total_count\": 1,\n        \"items\": [\n          {\n            \"id\": \"MQ==\",\n            \"number\": \"000000001\",\n            \"order_date\": \"2020-11-14 22:25:48\",\n            \"status\": \"Processing\",\n            \"items\": [\n              {\n                \"product_name\": \"Iris Workout Top\",\n                \"product_sku\": \"WS03-XS-Red\",\n                \"product_url_key\": \"iris-workout-top\",\n                \"product_sale_price\": {\n                  \"value\": 29,\n                  \"currency\": \"USD\"\n                },\n                \"quantity_ordered\": 1,\n                \"quantity_invoiced\": 1,\n                \"quantity_shipped\": 1,\n                \"eligible_for_return\": true\n              }\n            ],\n            \"carrier\": \"Flat Rate\",\n            \"shipments\": [\n              {\n                \"id\": \"MDAwMDAwMDAx\",\n                \"number\": \"000000001\",\n                \"items\": [\n                  {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 512, "to": 545 } }
        }
      }
    ],
    [
      "ca9e79e4-b749-4d21-9bc4-92dba6e52223",
      {
        "pageContent": "{\n                    \"product_name\": \"Iris Workout Top\",\n                    \"quantity_shipped\": 1\n                  }\n                ]\n              }\n            ],\n            \"total\": {\n              \"base_grand_total\": {\n                \"value\": 36.39,\n                \"currency\": \"USD\"\n              },\n              \"grand_total\": {\n                \"value\": 36.39,\n                \"currency\": \"USD\"\n              },\n              \"total_tax\": {\n                \"value\": 2.39\n              },\n              \"subtotal\": {\n                \"value\": 29,\n                \"currency\": \"USD\"\n              },\n              \"taxes\": [\n                {\n                  \"amount\": {\n                    \"value\": 2.39,\n                    \"currency\": \"USD\"\n                  },\n                  \"title\": \"US-MI-*-Rate 1\",\n                  \"rate\": 8.25\n                }\n              ],\n              \"total_shipping\": {\n                \"value\": 5\n              },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 545, "to": 580 } }
        }
      }
    ],
    [
      "79de9e18-87eb-4dda-8d36-89e0f7c094c6",
      {
        "pageContent": "},\n              \"shipping_handling\": {\n                \"amount_including_tax\": {\n                  \"value\": 5\n                },\n                \"amount_excluding_tax\": {\n                  \"value\": 5\n                },\n                \"total_amount\": {\n                  \"value\": 5\n                },\n                \"taxes\": []\n              },\n              \"discounts\": []\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 580, "to": 601 } }
        }
      }
    ],
    [
      "a46f8448-156d-4034-a29a-38533f510a4a",
      {
        "pageContent": "### Retrieve the store credit history\n\nThe following example returns the store credit history for the logged-in user.\n\n**Request:**\n\n```graphql\nquery {\n  customer {\n    firstname\n    lastname\n    store_credit {\n      enabled\n      balance_history(pageSize: 10) {\n        items {\n          action\n          actual_balance {\n            currency\n            value\n          }\n          balance_change {\n            currency\n            value\n          }\n          date_time_changed\n        }\n        page_info {\n          page_size\n          current_page\n          total_pages\n        }\n        total_count\n      }\n      current_balance {\n        currency\n        value\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 603, "to": 642 } }
        }
      }
    ],
    [
      "7002c574-42b3-4ef7-a807-1c191e35df17",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 643, "to": 645 } }
        }
      }
    ],
    [
      "2a7d7bab-7c3a-4568-b80a-34d66f7c43cb",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"customer\": {\n      \"firstname\": \"John\",\n      \"lastname\": \"Doe\",\n      \"store_credit\": {\n        \"enabled\": true,\n        \"balance_history\": {\n          \"items\": [\n            {\n              \"action\": \"Updated\",\n              \"actual_balance\": {\n                \"currency\": \"USD\",\n                \"value\": 10\n              },\n              \"balance_change\": {\n                \"currency\": \"USD\",\n                \"value\": -100\n              },\n              \"date_time_changed\": \"2019-07-15 21:47:59\"\n            },\n            {\n              \"action\": \"Updated\",\n              \"actual_balance\": {\n                \"currency\": \"USD\",\n                \"value\": 110\n              },\n              \"balance_change\": {\n                \"currency\": \"USD\",\n                \"value\": 10\n              },\n              \"date_time_changed\": \"2019-07-15 21:47:18\"\n            },\n            {\n              \"action\": \"Created\",\n              \"actual_balance\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 647, "to": 683 } }
        }
      }
    ],
    [
      "5e28bd3d-d29f-4b4c-b395-bb864b3d2f20",
      {
        "pageContent": "\"currency\": \"USD\",\n                \"value\": 100\n              },\n              \"balance_change\": {\n                \"currency\": \"USD\",\n                \"value\": 100\n              },\n              \"date_time_changed\": \"2019-07-15 16:31:05\"\n            }\n          ],\n          \"page_info\": {\n            \"page_size\": 10,\n            \"current_page\": 1,\n            \"total_pages\": 1\n          },\n          \"total_count\": 3\n        },\n        \"current_balance\": {\n          \"currency\": \"USD\",\n          \"value\": 10\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 684, "to": 709 } }
        }
      }
    ],
    [
      "0eec9b91-0a5d-485d-b7b7-ae59e0d776c5",
      {
        "pageContent": "### Retrieve the customer's wish list\n\nThe following query returns the customer's wish lists. Adobe Commerce allows customers to have multiple wish lists.\n\n**Request:**\n\n```graphql\n{\n  customer {\n    wishlists {\n      id\n      name\n      items_count\n      items_v2 {\n        items {\n          id\n          product {\n            uid\n            name\n            sku\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 711, "to": 736 } }
        }
      }
    ],
    [
      "36630706-c3db-4344-b8a4-de2e1b77dd45",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 737, "to": 739 } }
        }
      }
    ],
    [
      "e126a7f6-5c4d-4bc9-a73d-1d77c9a7866a",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"customer\": {\n      \"wishlists\": [\n        {\n          \"id\": \"1\",\n          \"name\": \"Vacation Wants\",\n          \"items_count\": 10,\n          \"items_v2\": {\n            \"items\": [\n              {\n                \"id\": \"1\",\n                \"product\": {\n                  \"uid\": \"MTM=\",\n                  \"name\": \"Overnight Duffle\",\n                  \"sku\": \"24-WB07\"\n                }\n              },\n              {\n                \"id\": \"2\",\n                \"product\": {\n                  \"uid\": \"MTA=\",\n                  \"name\": \"Savvy Shoulder Tote\",\n                  \"sku\": \"24-WB05\"\n                }\n              },\n              {\n                \"id\": \"3\",\n                \"product\": {\n                  \"uid\": \"MTE=\",\n                  \"name\": \"Endeavor Daytrip Backpack\",\n                  \"sku\": \"24-WB06\"\n                }\n              },\n              {\n                \"id\": \"4\",\n                \"product\": {\n                  \"uid\": \"MTA5OA==\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 741, "to": 779 } }
        }
      }
    ],
    [
      "dbfbde93-ad7f-48e0-bc86-f1492386601a",
      {
        "pageContent": "\"name\": \"Miko Pullover Hoodie\",\n                  \"sku\": \"WH04\"\n                }\n              },\n              {\n                \"id\": \"5\",\n                \"product\": {\n                  \"uid\": \"MTIyNg==\",\n                  \"name\": \"Stellar Solar Jacket\",\n                  \"sku\": \"WJ01\"\n                }\n              },\n              {\n                \"id\": \"6\",\n                \"product\": {\n                  \"uid\": \"MTcyMg==\",\n                  \"name\": \"Nora Practice Tank\",\n                  \"sku\": \"WT03\"\n                }\n              },\n              {\n                \"id\": \"7\",\n                \"product\": {\n                  \"uid\": \"MTY5MA==\",\n                  \"name\": \"Bella Tank\",\n                  \"sku\": \"WT01\"\n                }\n              },\n              {\n                \"id\": \"17\",\n                \"product\": {\n                  \"uid\": \"MTg=\",\n                  \"name\": \"Pursuit Lumaflex&trade; Tone Band\",\n                  \"sku\": \"24-UG02\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 780, "to": 813 } }
        }
      }
    ],
    [
      "09b0eb3c-9037-4ea0-aed3-d22a854cbbe5",
      {
        "pageContent": "}\n              },\n              {\n                \"id\": \"18\",\n                \"product\": {\n                  \"uid\": \"MQ==\",\n                  \"name\": \"Joust Duffle Bag\",\n                  \"sku\": \"24-MB01\"\n                }\n              },\n              {\n                \"id\": \"20\",\n                \"product\": {\n                  \"uid\": \"NTI=\",\n                  \"name\": \"Sprite Yoga Companion Kit\",\n                  \"sku\": \"24-WG080\"\n                }\n              }\n            ]\n          }\n        },\n        {\n          \"id\": \"2\",\n          \"name\": \"Lose the Muffintop\",\n          \"items_count\": 5,\n          \"items_v2\": {\n            \"items\": [\n              {\n                \"id\": \"8\",\n                \"product\": {\n                  \"uid\": \"NDk=\",\n                  \"name\": \"Advanced Pilates & Yoga (Strength)\",\n                  \"sku\": \"240-LV08\"\n                }\n              },\n              {\n                \"id\": \"10\",\n                \"product\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 814, "to": 851 } }
        }
      }
    ],
    [
      "8e272f0f-b5db-402f-9bb4-ca99ef63a242",
      {
        "pageContent": "\"uid\": \"MTQ1MA==\",\n                  \"name\": \"Layla Tee\",\n                  \"sku\": \"WS04\"\n                }\n              },\n              {\n                \"id\": \"11\",\n                \"product\": {\n                  \"uid\": \"MTU2Mg==\",\n                  \"name\": \"Radiant Tee\",\n                  \"sku\": \"WS12\"\n                }\n              },\n              {\n                \"id\": \"12\",\n                \"product\": {\n                  \"uid\": \"MTYxMA==\",\n                  \"name\": \"Electra Bra Top\",\n                  \"sku\": \"WB01\"\n                }\n              },\n              {\n                \"id\": \"13\",\n                \"product\": {\n                  \"uid\": \"MTY0Mg==\",\n                  \"name\": \"Celeste Sports Bra\",\n                  \"sku\": \"WB03\"\n                }\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 852, "to": 888 } }
        }
      }
    ],
    [
      "c24083db-0e92-4769-9eb1-5f87c3f21be3",
      {
        "pageContent": "### List a company user's purchase orders\n\nThe following example returns information about all purchase orders the company user has made since January 1, 2023.\n\nThe [Purchase orders](../../b2b/purchase-order/) topic contains additional examples that query purchase order functionality.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 890, "to": 896 } }
        }
      }
    ],
    [
      "fb84fb7d-805d-4c79-9c85-1f0457ce2d6e",
      {
        "pageContent": "**Request:**\n\n```graphql\n{\n    customer {\n        purchase_orders(\n            currentPage: 1,\n            pageSize: 20,\n            filter: {\n                created_date: {\n                  from: \"2023-01-21 00:00:00\"\n            }\n      }\n        ) {\n            total_count\n            page_info {\n                current_page\n                page_size\n                total_pages\n            }\n            items {\n                uid\n                number\n              order {\n                id\n              }\n              created_at\n              updated_at\n              created_by {\n                firstname\n                lastname\n              }\n              status\n              order {\n                total {\n                  grand_total {\n                    value\n                    currency\n                  }\n                }\n              }\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 896, "to": 940 } }
        }
      }
    ],
    [
      "53037742-d261-4791-9d09-fc70b4f3dc6e",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_orders\": {\n        \"total_count\": 2,\n        \"page_info\": {\n          \"current_page\": 1,\n          \"page_size\": 20,\n          \"total_pages\": 1\n        },\n        \"items\": [\n          {\n            \"uid\": \"MTE=\",\n            \"number\": \"000000011\",\n            \"order\": null,\n            \"created_at\": \"2023-02-01 18:01:40\",\n            \"updated_at\": \"2023-02-01 18:01:40\",\n            \"created_by\": {\n              \"firstname\": \"John\",\n              \"lastname\": \"Doe\"\n            },\n            \"status\": \"PENDING\"\n          },\n          {\n            \"uid\": \"MTA=\",\n            \"number\": \"000000010\",\n            \"order\": null,\n            \"created_at\": \"2023-01-31 20:46:16\",\n            \"updated_at\": \"2023-01-31 21:10:38\",\n            \"created_by\": {\n              \"firstname\": \"John\",\n              \"lastname\": \"Doe\"\n            },\n            \"status\": \"REJECTED\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 941, "to": 986 } }
        }
      }
    ],
    [
      "752852d9-6495-4508-9cac-49559e2c2d0f",
      {
        "pageContent": "### List purchase order approval rules\n\nThe following example returns the list of purchase order approval rules.\n\nThe [Purchase order approval rules](../../b2b/purchase-order-rule/) topic contains additional examples that query approval rule functionality.\n\n**Request:**\n\n```graphql\n{\n  customer {\n    purchase_order_approval_rules {\n      items {\n        name\n        uid\n      }\n      page_info {\n        page_size\n        current_page\n        total_pages\n      }\n      total_count\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 988, "to": 1012 } }
        }
      }
    ],
    [
      "8e01680c-4f80-4ef7-8937-b0be39884d87",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customer\": {\n      \"purchase_order_approval_rules\": {\n        \"items\": [\n          {\n            \"name\": \"Autoapprove order\",\n            \"uid\": \"OQ==\"\n          },\n          {\n            \"name\": \"Over 10 SKUs\",\n            \"uid\": \"Ng==\"\n          },\n          {\n            \"name\": \"Purchase order over $1000\",\n            \"uid\": \"NQ==\"\n          }\n        ],\n        \"page_info\": {\n          \"page_size\": 20,\n          \"current_page\": 1,\n          \"total_pages\": 1\n        },\n        \"total_count\": 3\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 1013, "to": 1046 } }
        }
      }
    ],
    [
      "aec6703a-b166-44cc-b890-697f5e02ebd7",
      {
        "pageContent": "## Related topics\n\n*  [isEmailAvailable query](../../b2b/company/queries/is-company-email-available.md)\n*  [generateCustomerToken mutation](../mutations/generate-token.md)\n*  [createCustomerV2 mutation](../mutations/create-v2.md)\n*  [createCustomerAddress mutation](../mutations/create-address.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/customer.md",
          "loc": { "lines": { "from": 1048, "to": 1053 } }
        }
      }
    ],
    [
      "7653c9e8-b6a2-4499-87f1-8be504fe6ea2",
      {
        "pageContent": "---\ntitle: customerDownloadableProducts query\n---\n\n# customerDownloadableProducts query\n\nUse the `customerDownloadableProducts` query to retrieve the list of purchased downloadable products for the logged-in customer.\n\n## Syntax\n\n`{customerDownloadableProducts: {CustomerDownloadableProducts}}`\n\n## Reference\n\nThe [`customerDownloadableProducts`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-customerDownloadableProducts) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/downloadable-products.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "7829cfef-8c4c-41c8-8426-5685fc208e55",
      {
        "pageContent": "## Example usage\n\nThe following example returns the list of purchased downloadable products for the logged-in customer.\n\n**Request:**\n\n```graphql\n{\n  customerDownloadableProducts {\n    items {\n      date\n      download_url\n      order_increment_id\n      remaining_downloads\n      status\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/downloadable-products.md",
          "loc": { "lines": { "from": 17, "to": 34 } }
        }
      }
    ],
    [
      "2d1db522-21bb-4ab5-9728-547b17b65230",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customerDownloadableProducts\": {\n      \"items\": [\n        {\n          \"date\": \"2019-03-04 20:48:32\",\n          \"download_url\": \"https://<M2_INSTANCE>/downloadable/download/link/id/MC44NTcwMTEwMCAxNTUxNzMyNTEyMTExNTE%2C/\",\n          \"order_increment_id\": \"000000004\",\n          \"remaining_downloads\": \"Unlimited\",\n          \"status\": \"pending\"\n        },\n        {\n          \"date\": \"2019-03-04 20:48:32\",\n          \"download_url\": \"https://<M2_INSTANCE>/downloadable/download/link/id/MC44NzM0OTkwMCAxNTUxNzMyNTEyMjEyNTA%2C/\",\n          \"order_increment_id\": \"000000004\",\n          \"remaining_downloads\": \"Unlimited\",\n          \"status\": \"pending\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/downloadable-products.md",
          "loc": { "lines": { "from": 35, "to": 62 } }
        }
      }
    ],
    [
      "35c4266e-347e-4dbc-8371-9fa721ca8cfb",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/downloadable-products.md",
          "loc": { "lines": { "from": 64, "to": 68 } }
        }
      }
    ],
    [
      "5697be08-b8df-4404-b42e-7273e04cafe4",
      {
        "pageContent": "---\ntitle: giftCardAccount query\nedition: ee\n---\n\n# giftCardAccount query\n\nThe `giftCardAccount` query returns information for a specific gift card.\n\n## Syntax\n\n `giftCardAccount(code: String!): GiftCardAccount`\n\n## Reference\n\nThe [`giftCardAccount`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-giftCardAccount) reference provides detailed information about the types and fields defined in this query.\n\n## Example usage\n\nThe following example returns information about the `01PNC9L76H4H` gift card code.\n\n**Request:**\n\n```graphql\nquery {\n  giftCardAccount(input: {gift_card_code: \"01PNC9L76H4H\"}){\n    code\n    balance {\n      currency\n      value\n    }\n    expiration_date\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"giftCardAccount\": {\n      \"code\": \"01PNC9L76H4H\",\n      \"balance\": {\n        \"currency\": \"USD\",\n        \"value\": 25\n      },\n      \"expiration_date\": null\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/giftcard-account.md",
          "loc": { "lines": { "from": 1, "to": 52 } }
        }
      }
    ],
    [
      "a336832b-1949-4be4-bf1a-ced832496c13",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Gift card not found` | The specified `gift_card_code` value does not exist in the `giftcardaccount` table, or the full amount has already been redeemed.\n`Field GiftCardAccountInput.gift_card_code of required type String! was not provided` | The value specified in the `GiftCardAccountInput.gift_card_code` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/giftcard-account.md",
          "loc": { "lines": { "from": 54, "to": 59 } }
        }
      }
    ],
    [
      "9c20ae1f-0c0d-4e65-b0eb-b42bc1459f3e",
      {
        "pageContent": "---\ntitle: Customer queries\n---\n\n# Customer queries\n\nAdobe Commerce provides the following customer-related queries:\n\n* [`customer`](customer.md)\n* [`customerCart`](cart.md)\n* [`customerDownloadableProducts`](downloadable-products.md)\n* [`customerOrders`](orders.md)\n* [`giftCardAccount`](giftcard-account.md)\n* [`isEmailAvailable`](is-email-available.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "ed125d4f-a15c-4ae6-853f-3a9bcbea8f7d",
      {
        "pageContent": "---\ntitle: isEmailAvailable query\n---\n\n# isEmailAvailable query\n\nThe `isEmailAvailable` query checks whether the specified email has already been used to create a customer account. As of Commerce 2.4.7, by default the query always returns a value of `true` for all email addresses. You can change this behavior by setting the **Stores** > **Configuration** > **Sales** > **Checkout** > **Enable Guest Checkout Login** field in the Admin to **Yes**. However, doing this can expose customer information to unauthenticated users.\n\nWhen guest checkout logins are enabled, or in versions prior to 2.4.7, a value of `true` indicates the email address is available, and the customer can use the email address to create an account. The value of `false` indicates the email address is not available, and the customer cannot use the email address to create an account.\n\n## Syntax\n\n`{isEmailAvailable (email): {IsEmailAvailableOutput}}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/is-email-available.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "fe13a0b6-8d39-4cab-bc2f-336f5b5c163d",
      {
        "pageContent": "## Reference\n\nThe [`isEmailAvailable`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-isEmailAvailable) reference provides detailed information about the types and fields defined in this query.\n\n## Example usage\n\nThe following example checks whether the email address `customer@example.com` is available to create a customer account.\n\n**Request:**\n\n```graphql\n{\n  isEmailAvailable(email: \"customer@example.com\") {\n    is_email_available\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"isEmailAvailable\": {\n      \"is_email_available\": true\n    }\n  }\n}\n```\n\n## Errors\n\nError | Description\n--- | ---\n`Email is invalid` | The given email-id is not in a proper format.\n`Field isEmailAvailable.email of required type String! was not provided` | The value specified in the `isEmailAvailable.email` argument is empty.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/is-email-available.md",
          "loc": { "lines": { "from": 15, "to": 50 } }
        }
      }
    ],
    [
      "6ec6971e-0fe3-47a7-aef1-7796ba3d0d4b",
      {
        "pageContent": "## Related topics\n\n[customer Query](customer.md)\n\n[Backward incompatible change of isEmailAvailable query](https://developer.adobe.com/commerce/php/development/backward-incompatible-changes/highlights/#isemailavailable-api)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/is-email-available.md",
          "loc": { "lines": { "from": 52, "to": 56 } }
        }
      }
    ],
    [
      "43353a74-0aee-4ffb-87c1-8db0ea63c5ea",
      {
        "pageContent": "---\ntitle: customerOrders query\n---\n\n# customerOrders query\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nThe `customerOrders` query has been deprecated. Specify the `orders` object in the [`customer`](../../customer/queries/customer.md) query instead.\n\nThe Sales module performs a wide variety of functions, including order, invoice, and shipment management. However, most of these functions are performed on the backend, and the customer does not have access to this information. By returning a list of customer orders, the `customerOrders` query allows a customer to retrieve their order histories.\n\nWe recommend you use customer tokens in the header of your GraphQL calls. However, you also can use [session authentication](https://developer.adobe.com/commerce/webapi/get-started/authentication/gs-authentication-session).\n\n## Syntax\n\n`{customerOrders {CustomerOrders}}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/orders.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "93339dee-bc7f-43eb-84c2-a6d0f8da26d1",
      {
        "pageContent": "## Reference\n\nThe [`customerOrders`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-customerOrders) reference provides detailed information about the types and fields defined in this query.\n\n## Example usage\n\nThe following query returns the order history of the logged in customer.\n\n**Request:**\n\n```graphql\n{\n  customerOrders {\n    items {\n      order_number\n      id\n      created_at\n      grand_total\n      status\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customerOrders\": {\n      \"items\": [\n        {\n          \"order_number\": \"000000001\",\n          \"id\": 1,\n          \"created_at\": \"2019-02-21 00:24:34\",\n          \"grand_total\": 36.39,\n          \"status\": \"processing\"\n        },\n        {\n          \"order_number\": \"000000002\",\n          \"id\": 2,\n          \"created_at\": \"2019-02-21 00:24:35\",\n          \"grand_total\": 39.64,\n          \"status\": \"closed\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/orders.md",
          "loc": { "lines": { "from": 19, "to": 68 } }
        }
      }
    ],
    [
      "d48bbfb8-a405-4814-9528-35106040b0e5",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The current customer isn't authorized.` | The current customer is not currently logged in, or the customer's token does not exist in the `oauth_token` table.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/customer/queries/orders.md",
          "loc": { "lines": { "from": 70, "to": 74 } }
        }
      }
    ],
    [
      "d1d6d2af-be93-4bf0-bd12-f045bafb74d3",
      {
        "pageContent": "---\ntitle: Gift registry\nedition: ee\n---\n\n# Gift registry\n\nOnce gift registry functionality is enabled and configured from the Admin, customers use the following workflow to create registries:\n\n1. The customer creates a gift registry from their account for an upcoming occasion and completes the required fields in each section of the gift registry. After adding items to the registry, it can be shared with friends and family.\n\n1. The customer shares their registry. A link to the gift registry is included in each invitation. If Gift Registry Search is enabled in the store, shoppers can search for specific gift registries by name, email address, or gift registry ID.\n\n1. Invitation recipients place orders. Those who receive an invitation or information about the registry can place an order for any item directly from the gift registry. As items are sold, Adobe Commerce updates the gift registry item counts, and notifies the gift registry owner.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/index.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "e999e5f8-c557-4b20-90d6-055b6fafd55c",
      {
        "pageContent": "---\ntitle: addGiftRegistryRegistrants mutation\nedition: ee\n---\n\n# addGiftRegistryRegistrants mutation\n\nThe `addGiftRegistryRegistrants` mutation adds a registrant to the specified gift registry.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  addGiftRegistryRegistrants(\n    giftRegistryUid: ID!,\n    registrants: [AddGiftRegistryRegistrantInput!]!\n  ) {\n    AddGiftRegistryRegistrantsOutput\n  }\n}\n```\n\n## Reference\n\nThe [`addGiftRegistryRegistrants`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addGiftRegistryRegistrants) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/add-registrants.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "7323acb3-0d2a-46ac-8d85-346c175dd728",
      {
        "pageContent": "## Example usage\n\nThe following example adds a registrant to the specified gift registry.\n\n**Request:**\n\n```graphql\nmutation {\n  addGiftRegistryRegistrants (\n    giftRegistryUid: \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n    registrants: {\n        firstname: \"Monica\"\n        lastname: \"Resendez\"\n        email: \"monica@example.com\"\n    }\n  ){\n    gift_registry {\n      uid\n      event_name\n      registrants {\n        uid\n        firstname\n        lastname\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addGiftRegistryRegistrants\": {\n      \"gift_registry\": {\n        \"uid\": \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n        \"event_name\": \"Theo's 45th Birthday\",\n        \"registrants\": [\n          {\n            \"uid\": \"Mg==\",\n            \"firstname\": \"Stacey\",\n            \"lastname\": \"Gaines\"\n          },\n          {\n            \"uid\": \"OA==\",\n            \"firstname\": \"Monica\",\n            \"lastname\": \"Resendez\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/add-registrants.md",
          "loc": { "lines": { "from": 29, "to": 83 } }
        }
      }
    ],
    [
      "a49f20a4-e3dd-45f9-b213-fb85bf103ace",
      {
        "pageContent": "---\ntitle: createGiftRegistry mutation\nedition: ee\ncontributor_name: EY\n---\n\n# createGiftRegistry mutation\n\nThe `createGiftRegistry` mutation creates a gift registry for the logged in customer.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\nThe `id` input attribute is optional. If a value is not specified, the application creates one. If you specify a value, then you can create a gift registry and make multiple updates in a single call.\n\nThe `dynamic_attributes` input field contains an array of attributes that define elements of the gift registry. Each attribute is specified as a code-value pair.\n\nWhen assigning a shipping address, you must specify only one of `address_data` or `address_id`.\n\nOnly the gift registry owner can view the following output attributes:\n\n*  `created_at`\n*  `privacy_settings`\n*  `shipping_address`\n*  `status`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/create.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "75a71f58-2ed9-4d09-94e3-85ae4f1b2fd7",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  createGiftRegistry(\n    giftRegistry: CreateGiftRegistryInput!\n  ) {\n    CreateGiftRegistryOutput\n  }\n}\n```\n\n## Reference\n\nThe [`createGiftRegistry`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createGiftRegistry) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/create.md",
          "loc": { "lines": { "from": 26, "to": 40 } }
        }
      }
    ],
    [
      "491943f8-5437-4e2e-bdb2-ca600ab9407b",
      {
        "pageContent": "## Example usage\n\nThe following example creates a gift registry.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/create.md",
          "loc": { "lines": { "from": 42, "to": 46 } }
        }
      }
    ],
    [
      "5c7d79a1-c974-449a-baf6-da07836ad5ad",
      {
        "pageContent": "```graphql\nmutation {\n  createGiftRegistry(\n    giftRegistry: {\n      gift_registry_type_uid: \"Mw==\"\n      event_name: \"Bill and Julie's wedding\"\n      message: \"Help us celebrate Bill and Julie's wedding, which will be held on May 1, 2021\"\n      privacy_settings: PRIVATE\n      status: ACTIVE\n      shipping_address: {\n        address_id: 1\n      }\n      registrants: [\n        {\n          firstname: \"Julie\"\n          lastname: \"Rao\"\n          email: \"julierao@example.com\"\n          dynamic_attributes: [{\n            code: \"role\"\n            value: \"Bride\" }]\n        }\n        {\n          firstname: \"Bill\"\n          lastname: \"Preston\"\n          email: \"bpreston@example.com\"\n          dynamic_attributes: [{\n            code: \"role\"\n            value: \"Groom\" }]\n        }\n      ]\n      dynamic_attributes: [\n        {\n          code: \"number_of_guests\"\n          value: \"101\"\n        }\n        {\n          code: \"event_date\"\n          value: \"2021-05-01\"\n        }\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/create.md",
          "loc": { "lines": { "from": 48, "to": 87 } }
        }
      }
    ],
    [
      "3d1b1be6-105a-46b7-8ff4-00ff06f52123",
      {
        "pageContent": "}\n        {\n          code: \"event_country\"\n          value: \"US\"\n        }\n        {\n          code: \"event_location\"\n          value: \"Ann Arbor, MI\"\n        }\n      ]\n    }\n  ) {\n    gift_registry {\n      uid\n      event_name\n      message\n      owner_name\n      privacy_settings\n      status\n      registrants {\n        uid\n        firstname\n        lastname\n        email\n        dynamic_attributes {\n          code\n          label\n          value\n        }\n      }\n      type {\n        uid\n        label\n      }\n      items {\n        uid\n        product {\n          uid\n          sku\n          name\n        }\n        quantity\n        quantity_fulfilled\n      }\n      shipping_address {\n        firstname\n        lastname\n        street\n        region {\n          region\n        }\n        postcode\n        country_code\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/create.md",
          "loc": { "lines": { "from": 86, "to": 142 } }
        }
      }
    ],
    [
      "9a621834-91ee-4946-aa83-45a6157118cc",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/create.md",
          "loc": { "lines": { "from": 143, "to": 145 } }
        }
      }
    ],
    [
      "b0bb1c47-7cf2-4e65-a181-3ad727750e21",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"createGiftRegistry\": {\n      \"gift_registry\": {\n        \"uid\": \"iSJHFdAtF8YBM5ALgNyNIgQmnbOW9t69\",\n        \"event_name\": \"Bill and Julie's wedding\",\n        \"message\": \"Help us celebrate Bill and Julie's wedding, which will be held on May 1, 2021\",\n        \"owner_name\": \"Veronica Costello\",\n        \"privacy_settings\": \"PRIVATE\",\n        \"status\": \"ACTIVE\",\n        \"registrants\": [\n          {\n            \"uid\": \"OQ==\",\n            \"firstname\": \"Julie\",\n            \"lastname\": \"Rao\",\n            \"email\": \"julierao@example.com\",\n            \"dynamic_attributes\": [\n              {\n                \"code\": \"role\",\n                \"label\": \"Role\",\n                \"value\": \"Bride\"\n              }\n            ]\n          },\n          {\n            \"uid\": \"MTA=\",\n            \"firstname\": \"Bill\",\n            \"lastname\": \"Preston\",\n            \"email\": \"bpreston@example.com\",\n            \"dynamic_attributes\": [\n              {\n                \"code\": \"role\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/create.md",
          "loc": { "lines": { "from": 147, "to": 179 } }
        }
      }
    ],
    [
      "62f56b76-7df9-4a26-a5f4-43b89b719a59",
      {
        "pageContent": "\"label\": \"Role\",\n                \"value\": \"Groom\"\n              }\n            ]\n          }\n        ],\n        \"type\": {\n          \"uid\": \"Mw==\",\n          \"label\": \"Wedding\"\n        },\n        \"items\": [],\n        \"shipping_address\": {\n          \"firstname\": \"Veronica\",\n          \"lastname\": \"Costello\",\n          \"street\": [\n            \"6146 Honey Bluff Parkway\"\n          ],\n          \"region\": {\n            \"region\": \"Michigan\"\n          },\n          \"postcode\": \"49628-7978\",\n          \"country_code\": \"US\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/create.md",
          "loc": { "lines": { "from": 180, "to": 207 } }
        }
      }
    ],
    [
      "bb9dc6e4-db5d-473f-96fd-e26b2e631033",
      {
        "pageContent": "---\ntitle: Gift registry mutations\n---\n\n# Gift registry mutations\n\nUse the gift registry mutations to create and manage gift registries and their contents. The `shareGiftRegistry` mutation sends an invitation to a list of email addresses to shop from the customer's gift registry. All mutations require a customer authentication token.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "a34b321d-5e31-4dad-a64a-8c9f64a15820",
      {
        "pageContent": "---\ntitle: moveCartItemsToGiftRegistry mutation\nedition: ee\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# moveCartItemsToGiftRegistry mutation\n\nThe `moveCartItemsToGiftRegistry` mutation moves all items from the cart to a gift registry.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    moveCartItemsToGiftRegistry (\n        cartUid: ID!,\n        giftRegistryUid: ID!\n    ) {\n        MoveCartItemsToGiftRegistryOutput\n    }\n}\n```\n\n## Reference\n\nThe [`moveCartItemsToGiftRegistry`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-moveCartItemsToGiftRegistry) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/move-cart-items.md",
          "loc": { "lines": { "from": 1, "to": 29 } }
        }
      }
    ],
    [
      "f44a7f79-5435-40b2-97b9-ec4ebf458585",
      {
        "pageContent": "## Example usage\n\nThe following example moves all items from the cart to a gift registry.\n\n**Request:**\n\n``` graphql\nmutation {\n  moveCartItemsToGiftRegistry (\n      cartUid:\"8k0Q4MpH2IGahWrTRtqM61YV2MtLPApz\",\n      giftRegistryUid:\"Owu5mdQ3uyfOAWzj8lFlHZW4uCDaMWC6\"\n  ) {\n  gift_registry {\n      uid\n      created_at\n      owner_name\n      status\n      type {\n        label\n      }\n      message\n      items {\n        product {\n          sku\n          name\n        }\n      }\n    }\n    status\n    user_errors {\n      code\n      message\n      product_uid\n      gift_registry_uid\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/move-cart-items.md",
          "loc": { "lines": { "from": 31, "to": 67 } }
        }
      }
    ],
    [
      "795ce941-65a3-4e6f-a313-465eabd702de",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"moveCartItemsToGiftRegistry\": {\n      \"gift_registry\": {\n        \"uid\": \"Owu5mdQ3uyfOAWzj8lFlHZW4uCDaMWC6\",\n        \"status\": \"ACTIVE\",\n        \"created_at\": \"2021-05-06 21:19:05\",\n        \"owner_name\": \"Veronica Costello\",\n        \"type\": {\n          \"label\": \"Birthday\"\n        },\n        \"message\": \"Birthday\",\n        \"items\": [\n          {\n            \"product\": {\n              \"sku\": \"24-UG06\",\n              \"name\": \"Affirm Water Bottle \"\n            }\n          }\n        ]\n      },\n      \"status\": true,\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/move-cart-items.md",
          "loc": { "lines": { "from": 68, "to": 99 } }
        }
      }
    ],
    [
      "69318b89-55f3-412a-ba7b-59b60399acfd",
      {
        "pageContent": "---\ntitle: removeGiftRegistryItems mutation\nedition: ee\n---\n\n# removeGiftRegistryItems mutation\n\nThe `removeGiftRegistryItems` mutation removes one or more items from the specified gift registry.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  removeGiftRegistryItems(\n    giftRegistryUid: ID!,\n    itemsUid: [ID!]!\n  ) {\n    RemoveGiftRegistryItemsOutput\n  }\n}\n```\n\n## Reference\n\nThe [`removeGiftRegistryItems`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeGiftRegistryItems) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/remove-items.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "0c8572a4-cb5c-4866-ab61-f50b1144535f",
      {
        "pageContent": "## Example usage\n\nThe following example removes an item from the specified gift registry.\n\n**Request:**\n\n```graphql\nmutation{\n  removeGiftRegistryItems(\n    giftRegistryUid: \"iSJHFdAtF8YBM5ALgNyNIgQmnbOW9t69\",\n    itemsUid: [\"MTM=\"]\n  ){\n    gift_registry {\n      uid\n      event_name\n      items {\n        uid\n        product {\n          sku\n        }\n        quantity\n        quantity_fulfilled\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeGiftRegistryItems\": {\n      \"gift_registry\": {\n        \"uid\": \"iSJHFdAtF8YBM5ALgNyNIgQmnbOW9t69\",\n        \"event_name\": \"Bill and Julie's wedding\",\n        \"items\": [\n          {\n            \"uid\": \"OQ==\",\n            \"product\": {\n              \"sku\": \"24-WB03\"\n            },\n            \"quantity\": 3,\n            \"quantity_fulfilled\": 0\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/remove-items.md",
          "loc": { "lines": { "from": 29, "to": 80 } }
        }
      }
    ],
    [
      "b655499f-3dff-48e9-b394-4b785dc57204",
      {
        "pageContent": "---\ntitle: removeGiftRegistryRegistrants mutation\nedition: ee\n---\n\n# removeGiftRegistryRegistrants mutation\n\nThe `removeGiftRegistryRegistrants` mutation removes one or more registrants from the specified gift registry.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  removeGiftRegistryRegistrants(\n    giftRegistryUid: ID!,\n    registrantsUid: [ID!]!\n  ) {\n    RemoveGiftRegistryRegistrantsOutput\n  }\n}\n```\n\n## Reference\n\nThe [`removeGiftRegistryRegistrants`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeGiftRegistryRegistrants) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/remove-registrants.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "233bf488-f284-4169-b513-c680a51b5e8e",
      {
        "pageContent": "## Example usage\n\nThe following example removes a registrant from the specified gift registry.\n\n**Request:**\n\n```graphql\nmutation{\n  removeGiftRegistryRegistrants(\n      giftRegistryUid: \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n      registrantsUid: \"OA==\"\n    ){\n    gift_registry {\n      uid\n      registrants {\n        uid\n        firstname\n        lastname\n        email\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeGiftRegistryRegistrants\": {\n      \"gift_registry\": {\n        \"uid\": \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n        \"registrants\": [\n          {\n            \"uid\": \"Mg==\",\n            \"firstname\": \"Stacey\",\n            \"lastname\": \"Gaines\",\n            \"email\": \"staceyg@example.com\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/remove-registrants.md",
          "loc": { "lines": { "from": 29, "to": 74 } }
        }
      }
    ],
    [
      "27e1b070-5da8-40af-8ddd-0697bcd752c9",
      {
        "pageContent": "---\ntitle: removeGiftRegistry mutation\nedition: ee\n---\n\n# removeGiftRegistry mutation\n\nThe `removeGiftRegistry` mutation deletes the specified registry from the customers list of gift registries.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nremoveGiftRegistry ( giftRegistryUid ID! ) RemoveGiftRegistryOutput\n```\n\n## Reference\n\nThe [`removeGiftRegistry`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeGiftRegistry) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example deletes the specified gift registry.\n\n**Request:**\n\n```graphql\nmutation{\n  removeGiftRegistry(giftRegistryUid: \"lobehNsInxfDeTt290DO5vH6DVltN74S\"){\n    success\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeGiftRegistry\": {\n      \"success\": true\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/remove.md",
          "loc": { "lines": { "from": 1, "to": 46 } }
        }
      }
    ],
    [
      "a77d39cd-1f46-4c38-99fd-c50c1aae1eb0",
      {
        "pageContent": "---\ntitle: shareGiftRegistry mutation\nedition: ee\ncontributor_name: EY\n---\n\n# shareGiftRegistry mutation\n\nThe `shareGiftRegistry` mutation sends an invitation to a list email addresses to shop from the customer's gift registry.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  shareGiftRegistry(\n    giftRegistryUid: ID!\n    sender: ShareGiftRegistrySenderInput!\n    invitees: [ShareGiftRegistryInviteeInput!]!\n  ) {\n    ShareGiftRegistryOutput\n  }\n}\n```\n\n## Reference\n\nThe [`shareGiftRegistry`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-shareGiftRegistry) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/share.md",
          "loc": { "lines": { "from": 1, "to": 29 } }
        }
      }
    ],
    [
      "614ba1a2-68e9-406a-a7e2-28a114403170",
      {
        "pageContent": "## Example usage\n\nThe following example creates a gift registry.\n\n**Request:**\n\n```graphql\nmutation{\n  shareGiftRegistry(\n    giftRegistryUid: \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n    sender: {\n      name: \"Roni Costello\"\n      message: \"Help us celebrate Theo's 45th Birthday\"\n    }\n    invitees: [\n      {\n        name: \"Brenda Vazquez\"\n        email: \"brenda@example.com\"\n      }\n      {\n        name: \"Alex Brunner\"\n        email: \"alex1@example.com\"\n      }\n    ]){\n    is_shared\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"shareGiftRegistry\": {\n     \"is_shared\": true\n     }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/share.md",
          "loc": { "lines": { "from": 31, "to": 70 } }
        }
      }
    ],
    [
      "7f63b4c7-434d-4b44-9a8e-cc6aed1e15a8",
      {
        "pageContent": "---\ntitle: updateGiftRegistryItems mutation\nedition: ee\n---\n\n# updateGiftRegistryItems mutation\n\nThe `updateGiftRegistryItems` mutation modifies the requested quantity of an item in the specified gift registry. It can also change the description of the item.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    updateGiftRegistryItems(\n        giftRegistryUid: ID!,\n        items: [UpdateGiftRegistryItemInput!]!\n    ) {\n    UpdateGiftRegistryItemsOutput\n    }\n}\n```\n\n## Reference\n\nThe [`updateGiftRegistryItems`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateGiftRegistryItems) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update-items.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "c6311a51-46b5-4fb5-8865-ce1a9bbb5026",
      {
        "pageContent": "## Example usage\n\nThe following example changes the quantity and description of an item in a gift registry\n\n**Request:**\n\n```graphql\nmutation{\n  updateGiftRegistryItems(giftRegistryUid: \"iSJHFdAtF8YBM5ALgNyNIgQmnbOW9t69\",\n    items: [{\n      gift_registry_item_uid: \"OQ==\"\n      quantity: 3\n      note:  \"This is the number one thing on our list.\"}\n    ]){\n    gift_registry {\n      uid\n      event_name\n      items {\n        uid\n        product {\n          sku\n        }\n        quantity\n        quantity_fulfilled\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update-items.md",
          "loc": { "lines": { "from": 29, "to": 56 } }
        }
      }
    ],
    [
      "060fcb37-9a7c-4042-96e0-2f542cd7a08a",
      {
        "pageContent": "```\n\n**Response:**\n\n``` json\n{\n  \"data\": {\n    \"updateGiftRegistryItems\": {\n      \"gift_registry\": {\n        \"uid\": \"iSJHFdAtF8YBM5ALgNyNIgQmnbOW9t69\",\n        \"event_name\": \"Bill and Julie's wedding\",\n        \"items\": [\n          {\n            \"uid\": \"OQ==\",\n            \"product\": {\n              \"sku\": \"24-WB03\"\n            },\n            \"quantity\": 3,\n            \"quantity_fulfilled\": 0\n          },\n          {\n            \"uid\": \"MTM=\",\n            \"product\": {\n              \"sku\": \"24-WB02\"\n            },\n            \"quantity\": 1,\n            \"quantity_fulfilled\": 0\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update-items.md",
          "loc": { "lines": { "from": 57, "to": 90 } }
        }
      }
    ],
    [
      "7bf513c2-8afa-4231-abf2-036cc88dbf7a",
      {
        "pageContent": "---\ntitle: updateGiftRegistryRegistrants mutation\nedition: ee\n---\n\n# updateGiftRegistryRegistrants mutation\n\nThe `updateGiftRegistryRegistrants` mutation updates properties of one or more registrants of the specified gify registry.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  updateGiftRegistryRegistrants(\n    giftRegistryUid: ID!,\n    registrants: [UpdateGiftRegistryRegistrantInput!]!\n  ) {\n    UpdateGiftRegistryRegistrantsOutput\n  }\n}\n```\n\n## Reference\n\nThe [`updateGiftRegistryRegistrants`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateGiftRegistryRegistrants) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update-registrants.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "6952705a-dee1-4d91-8aa9-c79e9a779f43",
      {
        "pageContent": "## Example usage\n\nThe following example updates a registrant's e-mail address.\n\n**Request:**\n\n```graphql\nmutation{\n  updateGiftRegistryRegistrants(\n      giftRegistryUid: \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n      registrants: {\n          giftRegistryRegistrantUid: \"OA==\"\n          email: \"new-email@example.com\"\n        }\n    )\n    {\n    gift_registry {\n      uid\n      registrants {\n        uid\n        firstname\n        lastname\n        email\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update-registrants.md",
          "loc": { "lines": { "from": 29, "to": 55 } }
        }
      }
    ],
    [
      "2aaffbe1-106f-409f-913a-65ab8e1a11a6",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateGiftRegistryRegistrants\": {\n      \"gift_registry\": {\n        \"uid\": \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n        \"registrants\": [\n          {\n            \"uid\": \"Mg==\",\n            \"firstname\": \"Stacey\",\n            \"lastname\": \"Gaines\",\n            \"email\": \"staceyg@example.com\"\n          },\n          {\n            \"uid\": \"OA==\",\n            \"firstname\": \"Monica\",\n            \"lastname\": \"Resendez\",\n            \"email\": \"new-email@example.com\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update-registrants.md",
          "loc": { "lines": { "from": 56, "to": 84 } }
        }
      }
    ],
    [
      "756aba3b-08e8-4657-905c-bf1a721d1cbc",
      {
        "pageContent": "---\ntitle: updateGiftRegistry mutation\nedition: ee\n---\n\n# updateGiftRegistry mutation\n\nThe `updateGiftRegistry` mutation modifies properties of specified gift registry. It does not update the items in a gift registry or registrants. Use the `updateGiftRegistryItems` or `updateGiftRegistryRegistrants` mutation to modify gift registry items or registrants.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\nThe `dynamic_attributes` input field contains an array of attributes that define elements of the gift registry. Each attribute is specified as a code-value pair\n\n## Syntax\n\n```graphql\nmutation {\n  updateGiftRegistry(\n    giftRegistryUid: ID!\n    giftRegistry: UpdateGiftRegistryInput!\n  ) {\n    UpdateGiftRegistryOutput\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "d0699707-0185-40b6-b480-80e40e1387f6",
      {
        "pageContent": "## Reference\n\nThe [`updateGiftRegistry`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateGiftRegistry) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update.md",
          "loc": { "lines": { "from": 27, "to": 29 } }
        }
      }
    ],
    [
      "2606ef13-5d8a-4e09-9476-ea780ca95500",
      {
        "pageContent": "## Example usage\n\nThe following example changes the privacy, the message, and the event date for a gift registry.\n\n**Request:**\n\n```graphql\nmutation{\n  updateGiftRegistry(\n    giftRegistryUid: \"D0R6d2B7aZWOQuuWftHZ0iwuexQPgaei\",\n    giftRegistry: {\n      privacy_settings: PUBLIC\n      message: \"Help us celebrate Bill and Julie's wedding, which will be held on May 8, 2021\"\n      dynamic_attributes: {\n        code: \"event_date\"\n        value: \"2021-05-08\"\n      }\n    })\n  {\n    gift_registry {\n      uid\n      event_name\n      message\n      status\n      privacy_settings\n      dynamic_attributes {\n        code\n        label\n        value\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update.md",
          "loc": { "lines": { "from": 31, "to": 63 } }
        }
      }
    ],
    [
      "bc7ffab5-26d7-4bc7-89a4-ae3c84cdb1e6",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateGiftRegistry\": {\n      \"gift_registry\": {\n        \"uid\": \"D0R6d2B7aZWOQuuWftHZ0iwuexQPgaei\",\n        \"event_name\": \"Bill and Julie's wedding\",\n        \"message\": \"Help us celebrate Bill and Julie's wedding, which will be held on May 8, 2021\",\n        \"status\": \"ACTIVE\",\n        \"privacy_settings\": \"PUBLIC\",\n        \"dynamic_attributes\": [\n          {\n            \"code\": \"event_country\",\n            \"label\": \"Country\",\n            \"value\": \"US\"\n          },\n          {\n            \"code\": \"event_date\",\n            \"label\": \"Wedding Date\",\n            \"value\": \"2021-05-08\"\n          },\n          {\n            \"code\": \"event_location\",\n            \"label\": \"Location\",\n            \"value\": \"Ann Arbor, MI\"\n          },\n          {\n            \"code\": \"number_of_guests\",\n            \"label\": \"Number of Guests\",\n            \"value\": \"101\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/mutations/update.md",
          "loc": { "lines": { "from": 64, "to": 104 } }
        }
      }
    ],
    [
      "8af42c49-2b29-492d-9398-d7ecc0a5af5a",
      {
        "pageContent": "---\ntitle: giftRegistryEmailSearch query\nedition: ee   \n---\n\n# giftRegistryEmailSearch query\n\nThe `giftRegistryEmailSearch` query returns a list of gift registries that match the specified registrant email address. The query does not return registries based on owner email address.\n\n## Syntax\n\n```graphql\ngiftRegistryEmailSearch(email: String!): [GiftRegistrySearchResult]\n```\n\n## Reference\n\nThe [`giftRegistryEmailSearch`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-giftRegistryEmailSearch) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/email-search.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "b6564d06-7dd7-4a55-abba-676d48fda0e4",
      {
        "pageContent": "## Example usage\n\nThe following example returns details about gift registries in which `staceyg@example.com` is a registrant.\n\n**Request:**\n\n```graphql\nquery{\n  giftRegistryEmailSearch(email: \"staceyg@example.com\"){\n    event_date\n    event_title\n    gift_registry_uid\n    name\n    type\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"giftRegistryEmailSearch\": [\n      {\n        \"event_date\": \"2021-01-28\",\n        \"event_title\": \"Theo's 45th Birthday\",\n        \"gift_registry_uid\": \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n        \"name\": \"Stacey Gaines\",\n        \"type\": \"Birthday\"\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/email-search.md",
          "loc": { "lines": { "from": 20, "to": 54 } }
        }
      }
    ],
    [
      "ce809b56-ca2a-4e11-87e7-88a81bbf25c1",
      {
        "pageContent": "---\ntitle: giftRegistry query\nedition: ee   \ncontributor_name: EY\n---\n\n# giftRegistry query\n\nThe `giftRegistry` query retrieves details about the specified gift registry. Use the [`customer` query](../../customer/queries/customer.md) to return a list of valid `uid` values.\n\nThis query requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\ngiftRegistry(uid: ID!): GiftRegistry\n```\n\n## Reference\n\nThe [`giftRegistry`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-giftRegistry) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/gift-registry.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "cd8d87d2-d575-4830-b760-4137aba69621",
      {
        "pageContent": "## Example usage\n\nThe following example returns information about the gift registry with the ID of 1.\n\n**Request:**\n\n```graphql\nquery{\n  giftRegistry(giftRegistryUid: \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\"){\n    uid\n    type {\n      uid\n      label\n    }\n    event_name\n    owner_name\n    status\n    privacy_settings\n    registrants {\n     uid\n      firstname\n      lastname\n    }\n    shipping_address {\n      street\n      city\n      region {\n        region\n      }\n      postcode\n      country_code\n    }\n    dynamic_attributes {\n      code\n      group\n      label\n      value\n    }\n    event_name\n    items {\n      uid\n      quantity\n      quantity_fulfilled\n      product {\n        uid\n        name\n        sku\n      }\n    }\n    message\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/gift-registry.md",
          "loc": { "lines": { "from": 23, "to": 74 } }
        }
      }
    ],
    [
      "776aa6f9-f6e3-4e02-9efb-59c8aecdf65c",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/gift-registry.md",
          "loc": { "lines": { "from": 75, "to": 77 } }
        }
      }
    ],
    [
      "c8f4ed0f-8030-49e3-a8e1-096a457c6a80",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"giftRegistry\": {\n      \"uid\": \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n      \"type\": {\n        \"uid\": \"MQ==\",\n        \"label\": \"Birthday\"\n      },\n      \"event_name\": \"Theo's 45th Birthday\",\n      \"owner_name\": \"Veronica Costello\",\n      \"status\": \"ACTIVE\",\n      \"privacy_settings\": \"PUBLIC\",\n      \"registrants\": [\n        {\n          \"uid\": \"Mg==\",\n          \"firstname\": \"Stacey\",\n          \"lastname\": \"Gaines\"\n        }\n      ],\n      \"shipping_address\": {\n        \"street\": [\n          \"6146 Honey Bluff Parkway\"\n        ],\n        \"city\": \"Calder\",\n        \"region\": {\n          \"region\": \"Michigan\"\n        },\n        \"postcode\": \"49628-7978\",\n        \"country_code\": \"US\"\n      },\n      \"dynamic_attributes\": [\n        {\n          \"code\": \"event_country\",\n          \"group\": \"EVENT_INFORMATION\",\n          \"label\": \"Country\",\n          \"value\": \"US\"\n        },\n        {\n          \"code\": \"event_date\",\n          \"group\": \"EVENT_INFORMATION\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/gift-registry.md",
          "loc": { "lines": { "from": 79, "to": 119 } }
        }
      }
    ],
    [
      "68e024bb-963d-49e3-ab9b-3694fa77f7b8",
      {
        "pageContent": "\"label\": \"Event Date\",\n          \"value\": \"2021-01-28\"\n        }\n      ],\n      \"items\": [\n        {\n          \"uid\": \"MQ==\",\n          \"quantity\": 1,\n          \"quantity_fulfilled\": 0,\n          \"product\": {\n            \"uid\": \"Nw==\",\n            \"name\": \"Impulse Duffle\",\n            \"sku\": \"24-UB02\"\n          }\n        },\n        {\n          \"uid\": \"Mg==\",\n          \"quantity\": 1,\n          \"quantity_fulfilled\": 0,\n          \"product\": {\n            \"uid\": \"Mg==\",\n            \"name\": \"Strive Shoulder Pack\",\n            \"sku\": \"24-MB04\"\n          }\n        },\n        {\n          \"uid\": \"Mw==\",\n          \"quantity\": 1,\n          \"quantity_fulfilled\": 0,\n          \"product\": {\n            \"uid\": \"Nzg0\",\n            \"name\": \"Supernova Sport Pant\",\n            \"sku\": \"MP04\"\n          }\n        },\n        {\n          \"uid\": \"NA==\",\n          \"quantity\": 1,\n          \"quantity_fulfilled\": 0,\n          \"product\": {\n            \"uid\": \"OTcx\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/gift-registry.md",
          "loc": { "lines": { "from": 120, "to": 160 } }
        }
      }
    ],
    [
      "a741e11c-4f0e-4132-abfe-49996fa064ce",
      {
        "pageContent": "\"name\": \"Rapha  Sports Short\",\n            \"sku\": \"MSH07\"\n          }\n        },\n        {\n          \"uid\": \"NQ==\",\n          \"quantity\": 1,\n          \"quantity_fulfilled\": 0,\n          \"product\": {\n            \"uid\": \"OTQ1\",\n            \"name\": \"Hawkeye Yoga Short\",\n            \"sku\": \"MSH05\"\n          }\n        },\n        {\n          \"uid\": \"Ng==\",\n          \"quantity\": 1,\n          \"quantity_fulfilled\": 0,\n          \"product\": {\n            \"uid\": \"NDk=\",\n            \"name\": \"Yoga Adventure\",\n            \"sku\": \"240-LV06\"\n          }\n        },\n        {\n          \"uid\": \"Nw==\",\n          \"quantity\": 1,\n          \"quantity_fulfilled\": 0,\n          \"product\": {\n            \"uid\": \"MTk=\",\n            \"name\": \"Go-Get'r Pushup Grips\",\n            \"sku\": \"24-UG05\"\n          }\n        }\n      ],\n      \"message\": \"Theo's 45th Birthday\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/gift-registry.md",
          "loc": { "lines": { "from": 161, "to": 200 } }
        }
      }
    ],
    [
      "34471f7d-6da3-433f-9c31-4dd96710f8f8",
      {
        "pageContent": "---\ntitle: giftRegistryIdSearch query\nedition: ee   \n---\n\n# giftRegistryIdSearch query\n\nThe `giftRegistryIdSearch` query returns a list of gift registries that match the specified registry ID. The ID is included in the email the application sends to invitees on behalf of the registrant.\n\n## Syntax\n\n```graphql\ngiftRegistryIdSearch(giftRegistryUid: String!): [GiftRegistrySearchResult]\n```\n\n## Reference\n\nThe [`giftRegistryIdSearch`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-giftRegistryIdSearch) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/id-search.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "3a15df2f-9c9c-4300-af4b-d37fabd961f5",
      {
        "pageContent": "## Example usage\n\nThe following example returns details about the specified gift registry.\n\n**Request:**\n\n```graphql\nquery{\n  giftRegistryIdSearch(giftRegistryUid: \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\"){\n    event_date\n    event_title\n    gift_registry_uid\n    name\n    type\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"giftRegistryIdSearch\": [\n      {\n        \"event_date\": \"2021-01-28\",\n        \"event_title\": \"Theo's 45th Birthday\",\n        \"gift_registry_uid\": \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n        \"name\": \"Stacey Gaines\",\n        \"type\": \"Birthday\"\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/id-search.md",
          "loc": { "lines": { "from": 20, "to": 54 } }
        }
      }
    ],
    [
      "50215f8f-d31d-4b0b-b16f-ba2ce5a3ed6f",
      {
        "pageContent": "---\ntitle: Gift registry queries\n---\n\n# Gift registry queries\n\nThe `giftRegistry` query retrieves details about the specified gift registry and requires a customer authentication token. All other queries in this category can be used by guests and customers to find gift registries.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "0ca3ef76-968a-428f-8dd2-c486f37d1e31",
      {
        "pageContent": "---\ntitle: giftRegistryTypeSearch query\nedition: ee   \n---\n\n# giftRegistryTypeSearch query\n\nThe `giftRegistryTypeSearch` query returns a list of gift registries that match the specified registrant name and, optionally, registry type ID. Use the [`giftRegistryTypes` query](types.md) to return list of registry type IDs.\n\n## Syntax\n\n```graphql\ngiftRegistryTypeSearch(\n    firstName: String!\n    lastName: String!\n    giftRegistryTypeUid: String\n): [GiftRegistrySearchResult]\n```\n\n## Reference\n\nThe [`giftRegistryTypeSearch`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-giftRegistryTypeSearch) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/type-search.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "7720c816-8b4a-4e7f-81a7-57917a117e08",
      {
        "pageContent": "## Example usage\n\nThe following example returns all gift registries in which the specified person is a registrant.\n\n**Request:**\n\n```graphql\nquery{\n  giftRegistryTypeSearch(firstName: \"Stacey\", lastName: \"Gaines\"){\n    event_date\n    event_title\n    gift_registry_uid\n    name\n    type\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"giftRegistryTypeSearch\": [\n      {\n        \"event_date\": \"2021-01-28\",\n        \"event_title\": \"Theo's 45th Birthday\",\n        \"gift_registry_uid\": \"W9YcRai9JmzGglqP3p0USodTTM3BmjjY\",\n        \"name\": \"Stacey Gaines\",\n        \"type\": \"Birthday\"\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/type-search.md",
          "loc": { "lines": { "from": 24, "to": 58 } }
        }
      }
    ],
    [
      "4533c764-99f9-4eac-81fa-945f33a9fbb2",
      {
        "pageContent": "---\ntitle: giftRegistryTypes query\nedition: ee\ncontributor_name: Zilker Technology\ncontributor_link: https://www.ztech.io/\n---\n\n# giftRegistryTypes query\n\nThe `giftRegistryTypes` query returns a list of available gift registry types.\n\n## Syntax\n\n```graphql\ngiftRegistryTypes: [GiftRegistryType]\n```\n\n## Reference\n\nThe [`giftRegistryTypes`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-giftRegistryTypes) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/types.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "ea5c263c-59ee-438f-85b6-d0fa7b6092fd",
      {
        "pageContent": "## Example usage\n\nThe following example returns information about the list of available gift registry types.\n\n**Request:**\n\n```graphql\nquery{\n  giftRegistryTypes{\n    label\n    uid\n    dynamic_attributes_metadata {\n      label\n      input_type\n      is_required\n      code\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/types.md",
          "loc": { "lines": { "from": 22, "to": 40 } }
        }
      }
    ],
    [
      "f27e6063-fb74-4ca7-bf74-f47393c1e2cf",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/types.md",
          "loc": { "lines": { "from": 41, "to": 43 } }
        }
      }
    ],
    [
      "a3a1981b-e2c4-44a7-ada7-94dcc5938271",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"giftRegistryTypes\": [\n      {\n        \"label\": \"Birthday\",\n        \"uid\": \"MQ==\",\n        \"dynamic_attributes_metadata\": [\n          {\n            \"label\": \"Country\",\n            \"input_type\": \"country\",\n            \"is_required\": true,\n            \"code\": \"event_country\"\n          },\n          {\n            \"label\": \"Event Date\",\n            \"input_type\": \"date\",\n            \"is_required\": true,\n            \"code\": \"event_date\"\n          }\n        ]\n      },\n      {\n        \"label\": \"Baby Registry\",\n        \"uid\": \"Mg==\",\n        \"dynamic_attributes_metadata\": [\n          {\n            \"label\": \"Role\",\n            \"input_type\": \"select\",\n            \"is_required\": true,\n            \"code\": \"role\"\n          },\n          {\n            \"label\": \"Country\",\n            \"input_type\": \"country\",\n            \"is_required\": true,\n            \"code\": \"event_country\"\n          },\n          {\n            \"label\": \"Baby Gender\",\n            \"input_type\": \"select\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/types.md",
          "loc": { "lines": { "from": 45, "to": 85 } }
        }
      }
    ],
    [
      "85020d7b-07d1-4184-a93b-1b9402dbbaf0",
      {
        "pageContent": "\"is_required\": true,\n            \"code\": \"baby_gender\"\n          }\n        ]\n      },\n      {\n        \"label\": \"Wedding\",\n        \"uid\": \"Mw==\",\n        \"dynamic_attributes_metadata\": [\n          {\n            \"label\": \"Role\",\n            \"input_type\": \"select\",\n            \"is_required\": true,\n            \"code\": \"role\"\n          },\n          {\n            \"label\": \"Country\",\n            \"input_type\": \"country\",\n            \"is_required\": true,\n            \"code\": \"event_country\"\n          },\n          {\n            \"label\": \"Wedding Date\",\n            \"input_type\": \"date\",\n            \"is_required\": true,\n            \"code\": \"event_date\"\n          },\n          {\n            \"label\": \"Location\",\n            \"input_type\": \"text\",\n            \"is_required\": true,\n            \"code\": \"event_location\"\n          },\n          {\n            \"label\": \"Number of Guests\",\n            \"input_type\": \"text\",\n            \"is_required\": true,\n            \"code\": \"number_of_guests\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/types.md",
          "loc": { "lines": { "from": 86, "to": 123 } }
        }
      }
    ],
    [
      "3d25c510-0112-435a-9483-d48fe6ba2a69",
      {
        "pageContent": "}\n        ]\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/gift-registry/queries/types.md",
          "loc": { "lines": { "from": 124, "to": 130 } }
        }
      }
    ],
    [
      "c85815a5-1e28-4258-9d9b-31798c3458e1",
      {
        "pageContent": "---\ntitle: GraphQL schema\n---\n\n# GraphQL schema\n\nWe have reorganized the Adobe Commerce and Magento Open Source GraphQL reference documentation to make it easier to find related queries, mutations, interfaces, and other data types. Use the left navigation to review usage information and examples for each entity in the Commerce schema.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe Catalog Service, Live Search, and Product Recommendations services have schemas that are independent from the core schema for Adobe Commerce and Magento Open Source. You can find the schema reference documentation and examples for these services in [Storefront Services GraphQL](https://developer.adobe.com/commerce/services/graphql/).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/index.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "ae62a662-1ebd-4e78-9864-018813bc4b90",
      {
        "pageContent": "---\ntitle: Orders\ndescription:\n---\n\n# Orders\n\nThe Orders mutations primarily manage returns, although the [`reorderItems` mutation](mutations/reorder-items.md) enables a customer to place the contents of a previous order into their cart. The interfaces allow you to access details about a customer's order history.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/index.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "b22641c4-21ee-46a2-baaf-73daf1625bdf",
      {
        "pageContent": "---\ntitle: CreditMemoItemInterface attributes and implementations\n---\n\n# CreditMemoItemInterface attributes and implementations\n\n`CreditMemoItemInterface` provides details about items in a customer's order history that were refunded. It has the following implementations:\n\n*  `BundleCreditMemoItem`\n*  `CreditMemoItem`\n*  `DownloadableCreditMemoItem`\n*  `GiftCardCreditMemoItem`\n\n## Reference\n\nThe [`CreditMemoItemInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-CreditMemoItemInterface) reference provides detailed information about the types and fields defined in this interface.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/credit-memo-item.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "43c8a7c2-1cf8-41a1-be0f-6169c1954995",
      {
        "pageContent": "## Example usage\n\nThe following query returns items that were refunded in order ID `000000005`. The `BundleOrderItem` and `DownloadableOrderItem` fragments can contain item-specific information, but the only refunded item is a configurable product.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/credit-memo-item.md",
          "loc": { "lines": { "from": 18, "to": 22 } }
        }
      }
    ],
    [
      "4ea83e16-97af-47a1-840c-970514d24395",
      {
        "pageContent": "**Request:**\n\n```graphql\n{\n  customer {\n    firstname\n    lastname\n    email\n    orders(\n      filter: {\n        number: {\n          match: \"000000005\"\n        }\n      }) {\n      items {\n        id\n        credit_memos {\n          id\n          items {\n            id\n            product_sku\n            product_name\n            order_item {\n              product_type\n            }\n            quantity_refunded\n            ... on BundleCreditMemoItem {\n              bundle_options {\n                id\n                values {\n                  id\n                  product_name\n                  product_sku\n                  quantity\n                  price {\n                    value\n                    currency\n                  }\n                }\n              }\n            }\n            ... on DownloadableCreditMemoItem {\n              downloadable_links {\n                uid\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/credit-memo-item.md",
          "loc": { "lines": { "from": 22, "to": 74 } }
        }
      }
    ],
    [
      "67f0b9da-823f-4f22-b937-d8f8e2fdf23d",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customer\": {\n      \"firstname\": \"Roni\",\n      \"lastname\": \"Costello\",\n      \"email\": \"roni_cost@example.com\",\n      \"orders\": {\n        \"items\": [\n          {\n            \"id\": \"NQ==\",\n            \"credit_memos\": [\n              {\n                \"id\": \"Mg==\",\n                \"items\": [\n                  {\n                    \"id\": \"Mg==\",\n                    \"product_sku\": \"WS12-XS-Orange\",\n                    \"product_name\": \"Radiant Tee\",\n                    \"order_item\": {\n                      \"product_type\": \"configurable\"\n                    },\n                    \"quantity_refunded\": 1\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/credit-memo-item.md",
          "loc": { "lines": { "from": 75, "to": 112 } }
        }
      }
    ],
    [
      "e6dfe523-53a3-4640-9e68-3638ec6b3212",
      {
        "pageContent": "---\ntitle: Order interfaces\n---\n\n# Orders interfaces\n\nUse the following interfaces to return details about customer orders:\n\n* [CreditMemoItemInterface](credit-memo-item.md)\n* [InvoiceItemInterface](invoice-item.md)\n* [OrderItemInterface](order-item.md)\n* [ShipmentItemInterface](shipment-item.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/index.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "c372b72e-840b-4041-8ad4-b22c2a58f5b6",
      {
        "pageContent": "---\ntitle: InvoiceItemInterface attributes and implementations\n---\n\n# InvoiceItemInterface attributes and implementations\n\n`InvoiceItemInterface` provides details about items in a customer's order history that were invoiced. It has the following implementations:\n\n*  `BundleInvoiceItem`\n*  `DownloadableInvoiceItem`\n*  `GiftCardInvoiceItem`\n*  `InvoiceItem`\n\n## Reference\n\nThe [`InvoiceItemInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-InvoiceItemInterface) reference provides detailed information about the types and fields defined in this interface.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/invoice-item.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "02d80349-ed07-481a-9f99-9ec61446334b",
      {
        "pageContent": "## Example usage\n\nThe following query returns invoice details about order ID `000000005`. The `BundleOrderItem` and `DownloadableOrderItem` fragments return item-specific information.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/invoice-item.md",
          "loc": { "lines": { "from": 18, "to": 22 } }
        }
      }
    ],
    [
      "4ff225b2-037d-4028-885f-f5e01a46f2a1",
      {
        "pageContent": "**Request:**\n\n```graphql\n{\n  customer {\n    firstname\n    lastname\n    email\n    orders(\n      filter: {\n        number: {\n          match: \"000000005\"\n        }\n      }) {\n      items {\n        id\n        invoices {\n          id\n          items {\n            id\n            product_sku\n            product_name\n            quantity_invoiced\n            ... on BundleInvoiceItem {\n              bundle_options {\n                id\n                values {\n                  id\n                  product_name\n                  product_sku\n                  quantity\n                  price {\n                    value\n                    currency\n                  }\n                }\n              }\n            }\n            ... on DownloadableInvoiceItem {\n              id\n              downloadable_links {\n                uid\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/invoice-item.md",
          "loc": { "lines": { "from": 22, "to": 72 } }
        }
      }
    ],
    [
      "072dad45-27d3-4f02-860a-ace15a900ec7",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/invoice-item.md",
          "loc": { "lines": { "from": 74, "to": 76 } }
        }
      }
    ],
    [
      "caddd0f2-6230-46ea-8819-978a63a07494",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"customer\": {\n      \"firstname\": \"Roni\",\n      \"lastname\": \"Costello\",\n      \"email\": \"roni_cost@example.com\",\n      \"orders\": {\n        \"items\": [\n          {\n            \"id\": \"NQ==\",\n            \"invoices\": [\n              {\n                \"id\": \"NA==\",\n                \"items\": [\n                  {\n                    \"id\": \"OQ==\",\n                    \"product_sku\": \"240-LV06\",\n                    \"product_name\": \"Yoga Adventure\",\n                    \"quantity_invoiced\": 1,\n                    \"downloadable_links\": [\n                      {\n                        \"uid\": \"ZG93bmxvYWRhYmxlLzM=\",\n                        \"title\": \"Yoga Adventure\"\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"MTA=\",\n                    \"product_sku\": \"24-WG080-24-WG082-blue-24-WG084-24-WG087-24-WG088\",\n                    \"product_name\": \"Sprite Yoga Companion Kit\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/invoice-item.md",
          "loc": { "lines": { "from": 78, "to": 108 } }
        }
      }
    ],
    [
      "de220aea-baa4-4985-a920-5288518fdb0c",
      {
        "pageContent": "\"quantity_invoiced\": 1,\n                    \"bundle_options\": [\n                      {\n                        \"id\": \"Mg==\",\n                        \"values\": [\n                          {\n                            \"id\": \"MTg=\",\n                            \"product_name\": \"Sprite Foam Yoga Brick\",\n                            \"product_sku\": \"24-WG084\",\n                            \"quantity\": 1,\n                            \"price\": {\n                              \"value\": 5,\n                              \"currency\": \"USD\"\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        \"id\": \"NA==\",\n                        \"values\": [\n                          {\n                            \"id\": \"MjA=\",\n                            \"product_name\": \"Sprite Foam Roller\",\n                            \"product_sku\": \"24-WG088\",\n                            \"quantity\": 1,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/invoice-item.md",
          "loc": { "lines": { "from": 109, "to": 133 } }
        }
      }
    ],
    [
      "7af31f15-a067-4811-a542-f8c6ada8d03a",
      {
        "pageContent": "\"price\": {\n                              \"value\": 19,\n                              \"currency\": \"USD\"\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        \"id\": \"MQ==\",\n                        \"values\": [\n                          {\n                            \"id\": \"MTc=\",\n                            \"product_name\": \"Sprite Stasis Ball 65 cm\",\n                            \"product_sku\": \"24-WG082-blue\",\n                            \"quantity\": 1,\n                            \"price\": {\n                              \"value\": 27,\n                              \"currency\": \"USD\"\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        \"id\": \"Mw==\",\n                        \"values\": [\n                          {\n                            \"id\": \"MTk=\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/invoice-item.md",
          "loc": { "lines": { "from": 134, "to": 160 } }
        }
      }
    ],
    [
      "9539cd7f-aeab-4159-bd00-6b188664a89b",
      {
        "pageContent": "\"product_name\": \"Sprite Yoga Strap 10 foot\",\n                            \"product_sku\": \"24-WG087\",\n                            \"quantity\": 1,\n                            \"price\": {\n                              \"value\": 21,\n                              \"currency\": \"USD\"\n                            }\n                          }\n                        ]\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"MTU=\",\n                    \"product_sku\": \"WS12-XS-Orange\",\n                    \"product_name\": \"Radiant Tee\",\n                    \"quantity_invoiced\": 1\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/invoice-item.md",
          "loc": { "lines": { "from": 161, "to": 188 } }
        }
      }
    ],
    [
      "14ff16e6-1a8e-4954-91d6-aa43f9755c15",
      {
        "pageContent": "---\ntitle: OrderItemInterface attributes and implementations\n---\n\n# OrderItemInterface attributes and implementations\n\n`OrderItemInterface` provides details about items in a customer's order history. It has the following implementations:\n\n*  `OrderItem`\n*  `BundleOrderItem`\n*  `DownloadableOrderItem`\n*  `GiftCardOrderItem`\n\n## Reference\n\nThe [`OrderItemInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-OrderItemInterface) reference provides detailed information about the types and fields defined in this interface.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "887cfbdb-495b-44b3-91a2-92317b5379e1",
      {
        "pageContent": "## Example usage\n\nThe following query returns details about order ID `000000005`. The `BundleOrderItem` and `DownloadableOrderItem` fragments return item-specific information.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 18, "to": 22 } }
        }
      }
    ],
    [
      "80793a29-40ce-4aaa-a534-602ac59ad4e3",
      {
        "pageContent": "**Request:**\n\n```graphql\n{\n  customer {\n    firstname\n    lastname\n    email\n    orders(\n      filter: {\n        number: {\n          eq: \"000000005\"\n        }\n      }) {\n      items {\n        id\n        items {\n          id\n          product_name\n          product_sku\n          product_type\n          quantity_ordered\n          quantity_invoiced\n          quantity_shipped\n          quantity_refunded\n          ...on BundleOrderItem {\n            bundle_options {\n              id\n              label\n              values {\n                id\n                product_name\n                product_sku\n                quantity\n                price {\n                  value\n                  currency\n                }\n              }\n            }\n          }\n          ...on DownloadableOrderItem {\n            downloadable_links {\n              uid\n              title\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 22, "to": 73 } }
        }
      }
    ],
    [
      "359b97e7-4c47-4e58-a193-18b089280aea",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 74, "to": 76 } }
        }
      }
    ],
    [
      "bf85f1ee-ff24-4dea-8900-d7f69b7014ea",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"customer\": {\n      \"firstname\": \"Roni\",\n      \"lastname\": \"Costello\",\n      \"email\": \"roni_cost@example.com\",\n      \"orders\": {\n        \"items\": [\n          {\n            \"id\": \"NQ==\",\n            \"items\": [\n              {\n                \"id\": \"MTU=\",\n                \"product_name\": \"Yoga Adventure\",\n                \"product_sku\": \"240-LV06\",\n                \"product_type\": \"downloadable\",\n                \"quantity_ordered\": 1,\n                \"quantity_invoiced\": 1,\n                \"quantity_shipped\": 0,\n                \"quantity_refunded\": 0,\n                \"downloadable_links\": [\n                  {\n                    \"uid\": \"ZG93bmxvYWRhYmxlLzM=\",\n                    \"title\": \"Yoga Adventure\"\n                  }\n                ]\n              },\n              {\n                \"id\": \"MTY=\",\n                \"product_name\": \"Sprite Yoga Companion Kit\",\n                \"product_sku\": \"24-WG080-24-WG082-blue-24-WG084-24-WG087-24-WG088\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 78, "to": 109 } }
        }
      }
    ],
    [
      "01525790-164c-4dcf-8677-0f817bca89f7",
      {
        "pageContent": "\"product_type\": \"bundle\",\n                \"quantity_ordered\": 1,\n                \"quantity_invoiced\": 1,\n                \"quantity_shipped\": 1,\n                \"quantity_refunded\": 0,\n                \"bundle_options\": [\n                  {\n                    \"id\": \"Mg==\",\n                    \"label\": \"Sprite Foam Yoga Brick\",\n                    \"values\": [\n                      {\n                        \"id\": \"MTg=\",\n                        \"product_name\": \"Sprite Foam Yoga Brick\",\n                        \"product_sku\": \"24-WG084\",\n                        \"quantity\": 1,\n                        \"price\": {\n                          \"value\": 5,\n                          \"currency\": \"USD\"\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"NA==\",\n                    \"label\": \"Sprite Foam Roller\",\n                    \"values\": [\n                      {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 110, "to": 136 } }
        }
      }
    ],
    [
      "7e6d32e4-2b9a-4787-bb05-33ffa8ef2afc",
      {
        "pageContent": "\"id\": \"MjA=\",\n                        \"product_name\": \"Sprite Foam Roller\",\n                        \"product_sku\": \"24-WG088\",\n                        \"quantity\": 1,\n                        \"price\": {\n                          \"value\": 19,\n                          \"currency\": \"USD\"\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    \"id\": \"MQ==\",\n                    \"label\": \"Sprite Stasis Ball\",\n                    \"values\": [\n                      {\n                        \"id\": \"MTc=\",\n                        \"product_name\": \"Sprite Stasis Ball 65 cm\",\n                        \"product_sku\": \"24-WG082-blue\",\n                        \"quantity\": 1,\n                        \"price\": {\n                          \"value\": 27,\n                          \"currency\": \"USD\"\n                        }\n                      }\n                    ]\n                  },\n                  {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 137, "to": 164 } }
        }
      }
    ],
    [
      "73e0b5c6-0d49-45eb-8b82-19d172eef541",
      {
        "pageContent": "{\n                    \"id\": \"Mw==\",\n                    \"label\": \"Sprite Yoga Strap\",\n                    \"values\": [\n                      {\n                        \"id\": \"MTk=\",\n                        \"product_name\": \"Sprite Yoga Strap 10 foot\",\n                        \"product_sku\": \"24-WG087\",\n                        \"quantity\": 1,\n                        \"price\": {\n                          \"value\": 21,\n                          \"currency\": \"USD\"\n                        }\n                      }\n                    ]\n                  }\n                ]\n              },\n              {\n                \"id\": \"MjE=\",\n                \"product_name\": \"Radiant Tee\",\n                \"product_sku\": \"WS12-XS-Orange\",\n                \"product_type\": \"configurable\",\n                \"quantity_ordered\": 1,\n                \"quantity_invoiced\": 1,\n                \"quantity_shipped\": 1,\n                \"quantity_refunded\": 1\n              }\n            ]\n          }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 164, "to": 193 } }
        }
      }
    ],
    [
      "79c5acb1-1256-4055-9ad6-4812aedb2364",
      {
        "pageContent": "}\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/order-item.md",
          "loc": { "lines": { "from": 193, "to": 199 } }
        }
      }
    ],
    [
      "ad3d3534-2014-4184-8bd8-a3c028c38f8f",
      {
        "pageContent": "---\ntitle: ShipmentItemInterface attributes and implementations\n---\n\n# ShipmentItemInterface attributes and implementations\n\n`ShipmentItemInterface` provides details about items in a customer's order history that were shipped. It has the following implementations:\n\n*  `BundleShipmentItem`\n*  `GiftCardShipmentItem`\n*  `ShipmentItem`\n\n## Reference\n\nThe [`ShipmentItemInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-ShipmentItemInterface) reference provides detailed information about the types and fields defined in this interface.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/shipment-item.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "47a3d91f-bd6e-4703-9835-d4d7c9e74fec",
      {
        "pageContent": "## Example usage\n\nThe following query returns shipping details about order ID `000000005`. The `BundleOrderItem`  fragment returns item-specific information. The order also included a downloadable product, but downloadable products are not shipped.\n\n**Request:**\n\n```graphql\n{\n  customer {\n    firstname\n    lastname\n    email\n    orders(\n      filter: {\n        number: {\n          match: \"000000005\"\n        }\n      }) {\n      items {\n        id\n        shipments {\n          id\n          items {\n            id\n            product_sku\n            product_name\n            ... on BundleShipmentItem {\n              bundle_options {\n                id\n                values {\n                  id\n                  product_name\n                  product_sku\n                  quantity\n                  price {\n                    value\n                    currency\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/shipment-item.md",
          "loc": { "lines": { "from": 17, "to": 63 } }
        }
      }
    ],
    [
      "edbcec5b-ea0e-4222-880c-bccaf954398a",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/shipment-item.md",
          "loc": { "lines": { "from": 65, "to": 67 } }
        }
      }
    ],
    [
      "16804412-8053-405f-a4f2-47ef27ce708e",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"customer\": {\n      \"firstname\": \"Roni\",\n      \"lastname\": \"Costello\",\n      \"email\": \"roni_cost@example.com\",\n      \"orders\": {\n        \"items\": [\n          {\n            \"id\": \"NQ==\",\n            \"shipments\": [\n              {\n                \"id\": \"MDAwMDAwMDA0\",\n                \"items\": [\n                  {\n                    \"id\": \"Ng==\",\n                    \"product_sku\": \"24-WG080-24-WG082-blue-24-WG084-24-WG087-24-WG088\",\n                    \"product_name\": \"Sprite Yoga Companion Kit\",\n                    \"bundle_options\": [\n                      {\n                        \"id\": \"Mg==\",\n                        \"values\": [\n                          {\n                            \"id\": \"MTg=\",\n                            \"product_name\": \"Sprite Foam Yoga Brick\",\n                            \"product_sku\": \"24-WG084\",\n                            \"quantity\": 1,\n                            \"price\": {\n                              \"value\": 5,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/shipment-item.md",
          "loc": { "lines": { "from": 69, "to": 98 } }
        }
      }
    ],
    [
      "6024e3f1-ba2f-4fbc-ab21-06e5302875b4",
      {
        "pageContent": "\"currency\": \"USD\"\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        \"id\": \"NA==\",\n                        \"values\": [\n                          {\n                            \"id\": \"MjA=\",\n                            \"product_name\": \"Sprite Foam Roller\",\n                            \"product_sku\": \"24-WG088\",\n                            \"quantity\": 1,\n                            \"price\": {\n                              \"value\": 19,\n                              \"currency\": \"USD\"\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        \"id\": \"MQ==\",\n                        \"values\": [\n                          {\n                            \"id\": \"MTc=\",\n                            \"product_name\": \"Sprite Stasis Ball 65 cm\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/shipment-item.md",
          "loc": { "lines": { "from": 99, "to": 124 } }
        }
      }
    ],
    [
      "028caaf7-52a8-40b3-af25-5f8fb900a42e",
      {
        "pageContent": "\"product_sku\": \"24-WG082-blue\",\n                            \"quantity\": 1,\n                            \"price\": {\n                              \"value\": 27,\n                              \"currency\": \"USD\"\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        \"id\": \"Mw==\",\n                        \"values\": [\n                          {\n                            \"id\": \"MTk=\",\n                            \"product_name\": \"Sprite Yoga Strap 10 foot\",\n                            \"product_sku\": \"24-WG087\",\n                            \"quantity\": 1,\n                            \"price\": {\n                              \"value\": 21,\n                              \"currency\": \"USD\"\n                            }\n                          }\n                        ]\n                      }\n                    ]\n                  },\n                  {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/shipment-item.md",
          "loc": { "lines": { "from": 125, "to": 151 } }
        }
      }
    ],
    [
      "5c09092f-e697-435e-869e-b5d91dd47c52",
      {
        "pageContent": "{\n                    \"id\": \"Nw==\",\n                    \"product_sku\": \"WS12-XS-Orange\",\n                    \"product_name\": \"Radiant Tee\"\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/interfaces/shipment-item.md",
          "loc": { "lines": { "from": 151, "to": 165 } }
        }
      }
    ],
    [
      "31b6e365-fa7e-4455-97e6-ab4d14e25538",
      {
        "pageContent": "---\ntitle: addReturnComment mutation\n---\n\n# addReturnComment mutation\n\nThe `addReturnComment` mutation adds a comment to an existing return request.\n\n## Syntax\n\n```graphql\nmutation: {\n    addReturnComment(input: AddReturnCommentInput!): AddReturnCommentOutput\n}\n```\n\n## Reference\n\nThe [`addReturnComment`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addReturnComment) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/add-return-comment.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "998e075d-53fc-4bd8-a098-e99c4d81569e",
      {
        "pageContent": "## Example usage\n\nThe following example adds a comment in response to the merchant.\n\n**Request:**\n\n```graphql\nmutation{\n  addReturnComment(input: {\n    return_uid: \"Mw==\"\n    comment_text: \"I'd like a refund\"})\n    {\n    return {\n      uid\n      status\n      comments {\n        uid\n        author_name\n        text\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/add-return-comment.md",
          "loc": { "lines": { "from": 21, "to": 43 } }
        }
      }
    ],
    [
      "5ee012a5-0cec-42fe-98a1-8f52ae36012c",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addReturnComment\": {\n      \"return\": {\n        \"uid\": \"Mw==\",\n        \"status\": \"PENDING\",\n        \"comments\": [\n          {\n            \"uid\": \"NQ==\",\n            \"author_name\": \"Customer Service\",\n            \"text\": \"We placed your Return request.\"\n          },\n          {\n            \"uid\": \"Ng==\",\n            \"author_name\": \"Bob Loblaw\",\n            \"text\": \"I want to return the shirt because I don't like the texture of the fabric\"\n          },\n          {\n            \"uid\": \"Nw==\",\n            \"author_name\": \"Customer Service\",\n            \"text\": \"OK. Would you like a refund or store credit?\"\n          },\n          {\n            \"uid\": \"OA==\",\n            \"author_name\": \"Bob Loblaw\",\n            \"text\": \"I'd like a refund\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/add-return-comment.md",
          "loc": { "lines": { "from": 44, "to": 81 } }
        }
      }
    ],
    [
      "39440ec2-abe2-4878-9a27-3e25c2144806",
      {
        "pageContent": "## Related topics\n\n*  [`requestReturn` mutation](request-return.md)\n*  [`addReturnTracking` mutation](add-return-tracking.md)\n*  [`removeReturnTracking` mutation](remove-return-tracking.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/add-return-comment.md",
          "loc": { "lines": { "from": 83, "to": 87 } }
        }
      }
    ],
    [
      "23653ddb-3508-40c0-8803-9c5bf71b9aa1",
      {
        "pageContent": "---\ntitle: addReturnTracking mutation\n---\n\n# addReturnTracking mutation\n\nThe `addReturnTracking` mutation adds customer-entered shipping tracking information to the specified return request. Use the `available_shipping_carriers` object in the [`customer` query](../../customer/queries/customer.md) to retrieve valid `carrier_uid` values.\n\n## Syntax\n\n```graphql\nmutation: {\n    addReturnTracking(input: AddReturnTrackingInput!): AddReturnTrackingOutput\n}\n```\n\n## Reference\n\nThe [`addReturnTracking`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addReturnTracking) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/add-return-tracking.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "5330bda9-8995-4d83-88eb-ec8183a4fcee",
      {
        "pageContent": "## Example usage\n\nThe following example adds the shipping carrier and a tracking number for the specified return request.\n\n**Request:**\n\n```graphql\nmutation{\n  addReturnTracking(input: {\n    return_uid: \"Mw==\"\n    carrier_uid: \"dXBzLTE=\"\n    tracking_number: \"1Z9876543\"\n  }){\n    return_shipping_tracking {\n      uid\n      carrier {\n        uid\n        label\n      }\n      tracking_number\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addReturnTracking\": {\n      \"return_shipping_tracking\": {\n        \"uid\": \"Mw==\",\n        \"carrier\": {\n          \"uid\": \"dXBzLTE=\",\n          \"label\": \"United Parcel Service\"\n        },\n        \"tracking_number\": \"1Z9876543\"\n      }\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [`requestReturn` mutation](request-return.md)\n*  [`addReturnComment` mutation](add-return-comment.md)\n*  [`removeReturnTracking` mutation](remove-return-tracking.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/add-return-tracking.md",
          "loc": { "lines": { "from": 21, "to": 69 } }
        }
      }
    ],
    [
      "5e85a72f-575a-4d33-a936-6dae68bf919c",
      {
        "pageContent": "---\ntitle: cancelOrder mutation | Commerce Web APIs\n---\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n<BetaNote />\n\n# cancelOrder mutation\n\nThe `cancelOrder` mutation allows a customer to cancel an order, passing its identifier and a cancellation reason.\n\nA customer can cancel an order only if the following conditions are true:\n\n * The customer has previously placed the order.\n * The `order_cancellation_enabled` configuration setting is `true`.\n * The order has a status of **RECEIVED**, **PENDING**, or **PROCESSING**.\n\nIf the customer has been charged for the order, the order is placed in the CLOSED state, and the customer will be issued a refund. Otherwise, the status of the order is set to CANCELED.\n\nThe mutation returns an error if the order cannot be cancelled.\n\n## Syntax\n\n`mutation: {cancelOrder(input: CanceOrderInput!) {CancelOrderOutput}}`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/cancel-order.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "0e090f07-e8b0-4619-a389-373324b778ab",
      {
        "pageContent": "## Reference\n\nThe [`cancelOrder`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-cancelOrder) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example cancels order ID `99999999` and includes the reason for its cancellation.\n\n**Request:**\n\n```graphql\nmutation {\n    cancelOrder(\n        input: {\n            order_id: \"99999999\",\n            reason: \"The order was placed by mistake\"\n        }\n    ){\n        error\n        order {\n            status\n        }\n    }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"cancelOrder\": {\n      \"error\": null,\n      \"order\": {\n        \"status\": \"Canceled\"\n      }\n    }\n  }\n}\n```\n\n## Related topics\n\n * [order cancellation](/src/pages/graphql/schema/store/queries/store-config.md#query-a-stores-order-cancellation-configuration) configuration example on `storeConfig` page.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/cancel-order.md",
          "loc": { "lines": { "from": 26, "to": 69 } }
        }
      }
    ],
    [
      "ff6b0e3d-aa0a-4eae-8ec7-4629fea3066d",
      {
        "pageContent": "---\ntitle: Order mutations\n---\n\n# Orders mutations\n\nWith the exception of the [`reorderItems` mutation](reorder-items.md), the Orders mutations create and manage returns (RMAs). Use the [`requestReturn` mutation](request-return.md) to initiate an RMA. You can subsequently add or remove shipment tracking information or add a comment to the RMA.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "7735416b-8db7-415f-96ee-0f479ac5f3d1",
      {
        "pageContent": "---\ntitle: removeReturnTracking mutation\n---\n\n# removeReturnTracking mutation\n\nThe `removeReturnTracking` mutation deletes a customer-entered entry that defines the shipping carrier and tracking number for a return request. Use the [`customer` query](../../customer/queries/customer.md) to retrieve valid `carrier_uid` values.\n\n## Syntax\n\n```graphql\nmutation: {\n    removeReturnTracking(input: RemoveReturnTrackingInput!): RemoveReturnTrackingOutput\n}\n```\n\n## Reference\n\nThe [`removeReturnTracking`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeReturnTracking) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/remove-return-tracking.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "4a3c2846-c2d8-43c2-acf2-5b42f070fb7f",
      {
        "pageContent": "## Example usage\n\nThe following example removes customer-entered tracking information for the specified return request. In the response, the `shipping` object is empty because the tracking information has been deleted.\n\n**Request:**\n\n```graphql\n\nmutation{\n  removeReturnTracking(input: {\n    return_shipping_tracking_uid: \"Mw==\"\n  }){\n    return {\n      uid\n      shipping {\n        tracking {\n          carrier {\n            uid\n            label\n          }\n          tracking_number\n          status {\n            text\n            type\n          }\n        }\n      }\n      items {\n        order_item {\n          product_name\n          product_sku\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/remove-return-tracking.md",
          "loc": { "lines": { "from": 21, "to": 56 } }
        }
      }
    ],
    [
      "f3914e44-ce4d-4782-a5ba-62effecde915",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeReturnTracking\": {\n      \"return\": {\n        \"uid\": \"Mw==\",\n        \"shipping\": {\n          \"tracking\": []\n        },\n        \"items\": [\n          {\n            \"order_item\": {\n              \"product_name\": \"Ryker LumaTech&trade; Tee (Crew-neck)\",\n              \"product_sku\": \"MS09-M-Red\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/remove-return-tracking.md",
          "loc": { "lines": { "from": 57, "to": 82 } }
        }
      }
    ],
    [
      "9e7843de-05ad-437e-8143-f664f44fa5fb",
      {
        "pageContent": "## Related topics\n\n*  [`requestReturn` mutation](request-return.md)\n*  [`addReturnComment` mutation](add-return-comment.md)\n*  [`addReturnTracking` mutation](add-return-tracking.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/remove-return-tracking.md",
          "loc": { "lines": { "from": 84, "to": 88 } }
        }
      }
    ],
    [
      "8712a2c1-a7c5-4711-a85b-8c85aaf31612",
      {
        "pageContent": "---\ntitle: reorderItems mutation\n---\n\n# reorderItems mutation\n\nThe `reorderItems` mutation allows a logged-in user to add all the products from a previous order into their cart. The **Stores** > Settings > **Sales** > **Sales** > **Reorder** > **Allow Reorder** field must be set to **Yes** to enable reorders. You must provide a customer authorization token with the call. The customer associated with the authorization token must match the customer who placed the specified order.\n\nThe mutation returns an error if it cannot add a product to the customer's cart:\n\nError code | Description\n--- | ---\nINSUFFICIENT_STOCK | The requested quantity is greater than the available stock.\nNOT_SALABLE | The product is out of stock, disabled, or otherwise prevented from being sold.\nREORDER_NOT_AVAILABLE | Reorders have been disabled.\nPRODUCT_NOT_FOUND | The product has been deleted.\nUNDEFINED | An unknown error occurred.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/reorder-items.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "97c3f645-55b7-418b-a950-a0c5e11c52a6",
      {
        "pageContent": "The `reorderItems` mutation will not add any products to the cart if it encounters the REORDER_NOT_AVAILABLE error. For any other error code, the mutation will add the product to the cart, if possible, and it will continue adding other products, if applicable.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/reorder-items.md",
          "loc": { "lines": { "from": 19, "to": 19 } }
        }
      }
    ],
    [
      "5387140a-c2b9-4a3d-8885-bc5e14f42aca",
      {
        "pageContent": "## Syntax\n\n`mutation: {reorderItems(orderNumber: String!) {ReorderItemsOutput}}`\n\n## Reference\n\nThe [`reorderItems`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-reorderItems) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/reorder-items.md",
          "loc": { "lines": { "from": 21, "to": 27 } }
        }
      }
    ],
    [
      "311a773b-539d-4ecd-b46e-6c797fa0c886",
      {
        "pageContent": "## Example usage\n\nIn the following example, the customer previously created an order containing the following items:\n\nItem Name | SKU | Quantity Ordered\n--- | --- | ---\nAeon Capri | WP07-29-Black | 3\nDual Handle Cardio Ball | 24-UG07 | 1\nElisa EverCool Tee | WS06-S-Gray | 1\nSprite Foam Yoga Brick | 24-WG084 | 1\n\nThe customer wants to reorder these items, but the status of some of these items has changed:\n\n-  Aeon Capri (WP07-29-Black) is in stock, but fewer than three items are available for sale.\n-  The Sprite Foam Yoga Brick (24-WG084) is out of stock.\n\nThese items will not be added to the cart.\n\n**Request:**\n\n```graphql\nmutation{\n  reorderItems(orderNumber: \"000000003\"){\n    cart {\n      id\n      items {\n        uid\n        product {\n          sku\n        }\n        quantity\n        prices {\n          price {\n            value\n          }\n        }\n      }\n    }\n    userInputErrors{\n      code\n      message\n      path\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/reorder-items.md",
          "loc": { "lines": { "from": 29, "to": 73 } }
        }
      }
    ],
    [
      "83e9adda-3116-423c-af0e-a95f8d84445e",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/reorder-items.md",
          "loc": { "lines": { "from": 74, "to": 76 } }
        }
      }
    ],
    [
      "66677b34-a549-4e42-9615-dfb805877f6e",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"reorderItems\": {\n      \"cart\": {\n        \"id\": \"LrMHhWHUaOqiBGC6S0KOcnYKsINUHTWz\",\n        \"items\": [\n          {\n            \"uid\": \"NDQ=\",\n            \"product\": {\n              \"sku\": \"24-UG07\"\n            },\n            \"quantity\": 1,\n            \"prices\": {\n              \"price\": {\n                \"value\": 12\n              }\n            }\n          },\n          {\n            \"uid\": NDU=,\n            \"product\": {\n              \"sku\": \"WS06\"\n            },\n            \"quantity\": 1,\n            \"prices\": {\n              \"price\": {\n                \"value\": 29\n              }\n            }\n          }\n        ]\n      },\n      \"userInputErrors\": [\n        {\n          \"code\": \"NOT_SALABLE\",\n          \"message\": \"Could not add the product with SKU \\\"24-WG084\\\" to the shopping cart: Product that you are trying to add is not available.\",\n          \"path\": [\n            \"orderNumber\"\n          ]\n        },\n        {\n          \"code\": \"INSUFFICIENT_STOCK\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/reorder-items.md",
          "loc": { "lines": { "from": 78, "to": 120 } }
        }
      }
    ],
    [
      "abcaa063-dccc-4e91-ab5d-1d2d3a42d006",
      {
        "pageContent": "\"message\": \"Could not add the product with SKU \\\"WP07-29-Black\\\" to the shopping cart: The requested qty is not available\",\n          \"path\": [\n            \"orderNumber\"\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/reorder-items.md",
          "loc": { "lines": { "from": 121, "to": 130 } }
        }
      }
    ],
    [
      "1b27b5b6-9e3e-4ab1-ac18-a311d993b806",
      {
        "pageContent": "## Related topics\n\n-  [customer](../../customer/queries/customer.md) query",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/reorder-items.md",
          "loc": { "lines": { "from": 132, "to": 134 } }
        }
      }
    ],
    [
      "57168b9c-5828-41d1-9e55-4b32f162c634",
      {
        "pageContent": "---\ntitle: requestReturn mutation\nedition: ee\n---\n\n# requestReturn mutation\n\nThe `requestReturn` mutation initiates a buyer's request to return an item for replacement or refund. The merchant subsequently decides whether to accept or reject the request.\n\nThe following examples illustrate how to retrieve the order ID and item ID values needed to run the `requestReturn` mutation:\n\n*  [Retrieve a summary of the customer's order history](../../customer/queries/customer.md#retrieve-a-summary-of-the-customers-order-history)\n*  [Retrieve detailed information about a specific order](../../customer/queries/customer.md#retrieve-detailed-information-about-a-specific-order)\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [`storeConfig` query](../../store/queries/store-config.md) with the `returns_enabled` attribute to determine whether returned merchandise authorization (RMAs) are enabled.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/request-return.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "9543bdc6-1c74-4536-b930-f18d5f0db421",
      {
        "pageContent": "## Syntax\n\n```graphql\nmutation {\n  requestReturn(input: RequestReturnInput!): RequestReturnOutput\n}\n```\n\n## Reference\n\nThe [`requestReturn`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-requestReturn) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/request-return.md",
          "loc": { "lines": { "from": 19, "to": 29 } }
        }
      }
    ],
    [
      "cd1adf60-b6da-4881-8e2e-27d5c273d859",
      {
        "pageContent": "## Example usage\n\nThe following example requests a product return. At this point, the merchant hasn't taken action, but the response acknowledges the request was received.\n\n**Request:**\n\n```graphql\nmutation{\n  requestReturn(input: {\n    order_uid: \"NQ==\"\n    contact_email: \"test1@example.com\"\n    comment_text: \"I want to return the shirt because I don't like the texture of the fabric\"\n    items: {\n      order_item_uid: \"MTE=\"\n      quantity_to_return: 1\n    }\n  }){\n    return {\n      uid\n      items {\n        uid\n        status\n        request_quantity\n        quantity\n        order_item {\n          id\n          eligible_for_return\n          product_sku\n          product_sku\n          product_type\n          quantity_returned\n          status\n        }\n      }\n      number\n      status\n      comments {\n        uid\n        author_name\n        text\n        created_at\n      }\n      customer {\n        firstname\n        lastname\n        email\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/request-return.md",
          "loc": { "lines": { "from": 31, "to": 80 } }
        }
      }
    ],
    [
      "43591b09-df93-4202-8045-3c9ae992b438",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/request-return.md",
          "loc": { "lines": { "from": 81, "to": 83 } }
        }
      }
    ],
    [
      "95cba5e7-a558-4140-8516-ed3632aa84dd",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"requestReturn\": {\n      \"return\": {\n        \"uid\": \"Mw==\",\n        \"items\": [\n          {\n            \"uid\": \"Mw==\",\n            \"status\": \"PENDING\",\n            \"request_quantity\": 1,\n            \"quantity\": 0,\n            \"order_item\": {\n              \"id\": \"MTE=\",\n              \"eligible_for_return\": true,\n              \"product_sku\": \"MS09-M-Red\",\n              \"product_type\": \"configurable\",\n              \"quantity_returned\": 0,\n              \"status\": \"Shipped\"\n            }\n          }\n        ],\n        \"number\": \"000000003\",\n        \"status\": \"PENDING\",\n        \"comments\": [\n          {\n            \"uid\": \"NQ==\",\n            \"author_name\": \"Customer Service\",\n            \"text\": \"We placed your Return request.\",\n            \"created_at\": \"2020-11-19 18:20:28\"\n          },\n          {\n            \"uid\": \"Ng==\",\n            \"author_name\": \"Bob Loblaw\",\n            \"text\": \"I want to return the shirt because I don't like the texture of the fabric\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/request-return.md",
          "loc": { "lines": { "from": 85, "to": 119 } }
        }
      }
    ],
    [
      "16eed20c-9951-4f29-ae05-c915f59b5501",
      {
        "pageContent": "\"created_at\": \"2020-11-19 18:20:28\"\n          }\n        ],\n        \"customer\": {\n          \"firstname\": \"Bob\",\n          \"lastname\": \"Loblaw\",\n          \"email\": \"test1@example.com\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/request-return.md",
          "loc": { "lines": { "from": 120, "to": 132 } }
        }
      }
    ],
    [
      "7a64ae88-5a80-49f3-90dc-69ff6e80e0a6",
      {
        "pageContent": "### Returns attributes\n\nThe `Returns` object contains an array of `Return` objects and pagination information.\n\nAttribute |  Data Type | Description\n--- | --- | ---\n`items` | [Return] | A list of return requests\n`page_info` SearchResultPageInfo | Pagination metadata\n`total_count` | Int | The total number of return requests",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/request-return.md",
          "loc": { "lines": { "from": 134, "to": 142 } }
        }
      }
    ],
    [
      "679a1af7-1895-43cd-8938-11827ba869e6",
      {
        "pageContent": "## Related topics\n\n*  [`addReturnComment` mutation](add-return-comment.md)\n*  [`addReturnTracking` mutation](add-return-tracking.md)\n*  [`removeReturnTracking` mutation](remove-return-tracking.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/orders/mutations/request-return.md",
          "loc": { "lines": { "from": 144, "to": 148 } }
        }
      }
    ],
    [
      "d073b4ed-6bfe-471f-8af0-4db89035783d",
      {
        "pageContent": "---\ntitle: Products\ndescription:\n---\n\n# Products",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/index.md",
          "loc": { "lines": { "from": 1, "to": 6 } }
        }
      }
    ],
    [
      "e5e6854c-74a2-40ca-936d-cd4513e3b984",
      {
        "pageContent": "---\ntitle: AttributeMetadataInterface\nedition: pwa\n---\n\n# AttributeMetadataInterface\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThis interface is available only if you have installed the PWA Metapackage for Magento Open Source Extensions. This metapackage has been deprecated.\n\nThe `AttributeMetadataInterface` data type defines properties of custom attribute metadata.\n\n## AttributeMetadataInterface object\n\nimport AttributeMetadata from '/src/_includes/graphql/attribute-metadata.md'\n\n<AttributeMetadata />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/attribute-metadata.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "3396953d-4ce4-460a-a419-eee13e5b52e9",
      {
        "pageContent": "---\ntitle: ProductInterface attributes\n---\n\n# ProductInterface attributes\n\nAny type that implements [`ProductInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface) contains all the base attributes necessary for the frontend of the product model.\nThe `items` that are returned in a `ProductInterface` array can also contain attributes from resources external to the `CatalogGraphQl` module:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/attributes.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "808422a8-7fb2-47a3-ade9-8ab7d80bcf5c",
      {
        "pageContent": "-  Custom and extension attributes defined in any attribute set\n-  The attribute is defined in the [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-PhysicalProductInterface) or [CustomizableOptionInterface](customizable-option.md)\n-  Product types that define their own implementation of `ProductInterface` including:\n   -  [SimpleProduct](types/simple.md)\n   -  [BundleProduct](types/bundle.md)\n   -  [ConfigurableProduct](types/configurable.md)\n   -  [DownloadableProduct](types/downloadable.md)\n   -  [GiftCardProduct](types/gift-card.md)\n   -  [GroupedProduct](types/grouped.md)\n   -  [VirtualProduct](types/virtual.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/attributes.md",
          "loc": { "lines": { "from": 10, "to": 19 } }
        }
      }
    ],
    [
      "c83210d5-ba5c-4051-82e4-29b444a547e3",
      {
        "pageContent": "---\ntitle: CategoryInterface attributes\n---\n\n# CategoryInterface attributes\n\n[`CategoryInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CategoryInterface) defines attributes that can be returned in the [`categoryList` query](../queries/category-list.md), [`categories` query](../queries/categories.md), and the [`products` query](../queries/products.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/category.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "ded8c955-8fab-4c81-8527-cab902297367",
      {
        "pageContent": "---\ntitle: CustomizableOptionInterface\n---\n\n# CustomizableOptionInterface\n\nCustomizable options for a product provide a way to offer customers a selection of options with a variety of text, selection, and date input types. All product types can contain customizable options.\n\n[`CustomizableOptionInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomizableOptionInterface) is defined in the `CatalogGraphQl` module, and its attributes can be used in any `products` query. This interface returns basic information about a customizable option and can be implemented by several types of configurable options:\n\n*  Text area\n*  Checkbox\n*  Date picker\n*  Drop-down menu\n*  Text field\n*  File picker\n*  Multiple select box\n*  Radio buttons\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/customizable-option.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "e35e52aa-0571-4712-a456-7314a7b60605",
      {
        "pageContent": "Adobe has not implemented all possible customizable product options for GraphQL. For example, the `CustomizableFileOption` and `CustomizableFileValue` objects are currently not supported.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/customizable-option.md",
          "loc": { "lines": { "from": 22, "to": 22 } }
        }
      }
    ],
    [
      "68e9bd34-da01-4d15-a6ec-f4e408f36fd4",
      {
        "pageContent": "## Example usage\n\nThe following query returns information about the customizable options configured for the product with a `sku` of `xyz`.\n\n**Request:**\n\n```graphql\n{\n  products(filter: {sku: {eq: \"xyz\"}}) {\n    items {\n      uid\n      name\n      sku\n      __typename\n      ... on CustomizableProductInterface {\n        options {\n          title\n          required\n          sort_order\n          uid\n        }\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"uid\": \"Mw==\",\n          \"name\": \"T-shirt\",\n          \"sku\": \"xyz\",\n          \"__typename\": \"SimpleProduct\",\n          \"options\": [\n            {\n              \"title\": \"Image\",\n              \"required\": false,\n              \"sort_order\": 1,\n              \"uid\": \"Mx==\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/customizable-option.md",
          "loc": { "lines": { "from": 24, "to": 75 } }
        }
      }
    ],
    [
      "96dd1334-d033-4ded-a2d6-3e703aa19110",
      {
        "pageContent": "```\n\nThe following query returns information about the customizable options configured for the product with a `sku` of `xyz` with Custom Option type Text Field.\n\n*  Custom option Option Type is text field with required field.\n*  Option Title is `Favorite Color`.\n*  Price is `$5`, Price Type is `Fixed`, Option SKU is `favoriteColorSku` and Max. Characters is `20`.\n\n**Request:**\n\n```graphql\n{\n  products(filter: { sku: { eq: \"xyz\" } }) {\n    items {\n      id\n      name\n      sku\n      __typename\n      ... on CustomizableProductInterface {\n        options {\n          title\n          required\n          sort_order\n          option_id\n          ... on CustomizableFieldOption {\n            value {\n              uid\n              sku\n              price\n              price_type\n              max_characters\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/customizable-option.md",
          "loc": { "lines": { "from": 76, "to": 113 } }
        }
      }
    ],
    [
      "03493e7f-d70d-43c7-bd0d-abacadfe7482",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"id\": 10,\n          \"name\": \"Savvy Shoulder Tote\",\n          \"sku\": \"24-WB05\",\n          \"__typename\": \"SimpleProduct\",\n          \"options\": [\n            {\n              \"title\": \"Favorite Color\",\n              \"required\": true,\n              \"sort_order\": 2,\n              \"option_id\": 2,\n              \"value\": {\n                \"uid\": \"Y3VzdG9tLW9wdGlvbi8y\",\n                \"sku\": \"favoriteColorSku\",\n                \"price\": 5,\n                \"price_type\": \"FIXED\",\n                \"max_characters\": 20\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/customizable-option.md",
          "loc": { "lines": { "from": 114, "to": 148 } }
        }
      }
    ],
    [
      "56217501-66fc-48dd-91cb-4c23b28948d6",
      {
        "pageContent": "---\ntitle: Product interfaces and attributes\n---\n\n# Product interfaces and attributes\n\nAny type that implements [`ProductInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface) contains all the base attributes necessary for the frontend of the product model.\nThe `items` that are returned in a `ProductInterface` array can also contain attributes from resources external to the `CatalogGraphQl` module:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/index.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "ec3faec7-3486-46eb-b230-bcac6c699ea2",
      {
        "pageContent": "-  Custom and extension attributes defined in any attribute set\n-  The attribute is defined in the [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-PhysicalProductInterface) or [CustomizableOptionInterface](customizable-option.md)\n-  Product types that define their own implementation of `ProductInterface` including:\n   -  [`SimpleProduct`](types/simple.md)\n   -  [`BundleProduct`](types/bundle.md)\n   -  [`ConfigurableProduct`](types/configurable.md)\n   -  [`DownloadableProduct`](types/downloadable.md)\n   -  [`GiftCardProduct`](types/gift-card.md)\n   -  [`GroupedProduct`](types/grouped.md)\n   -  [`VirtualProduct`](types/virtual.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/index.md",
          "loc": { "lines": { "from": 10, "to": 19 } }
        }
      }
    ],
    [
      "33d68f31-e412-4b3c-a64f-025db862deaf",
      {
        "pageContent": "## Deprecated interfaces\n\nThe following interfaces are available only if you have installed the PWA Metapackage for Magento Open Source Extensions. This metapackage has been deprecated.\n\n- [`AttributeMetadataInterface`](attribute-metadata.md)\n- [`AttributeOptionsInterface`, `SelectableInputTypeInterface`, `UiInputTypeInterface`](pwa-implementations.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/index.md",
          "loc": { "lines": { "from": 21, "to": 26 } }
        }
      }
    ],
    [
      "646e30fc-f74f-4703-bbd0-efa27a73cac5",
      {
        "pageContent": "## Sample query\n\nThe `custom_attributesV2` attribute is defined in `ProductInterface`. In this example, the attribute's `filters` object determines which custom attributes will be used to narrow the results when using `products` query. It contains at least one attribute and the value that is being searched for. The following example searches for custom attributes of a product where `is_comparable` is `true`.\n\n```graphql\n{\n    products(filter: {sku: {eq: \"24-MB02\"}})\n    {\n        items\n        {\n            custom_attributesV2(filters: {is_comparable: true})                                 {\n                items {\n                    code\n                }\n                errors {\n                    type\n                    message\n                }\n            }\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/index.md",
          "loc": { "lines": { "from": 28, "to": 50 } }
        }
      }
    ],
    [
      "adcc4297-3b3f-4b9b-a76b-9abf6a7cd694",
      {
        "pageContent": "---\ntitle: PWA implementations and attributes\nedition: pwa\n---\n\n# PWA implementations and attributes\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nDeprecated. Check [ProductInterface attributes](../interfaces/attributes.md).\n\n## Interfaces\n\n### AttributeOptionsInterface\n\nAttribute | Data Type | Description\n--- | --- | ---\n`attribute_options`| [AttributeOptionInterface] | An array of attribute options\n\n### SelectableInputTypeInterface\n\nAttribute | Data Type | Description\n--- | --- | ---\n`attribute_options` | [AttributeOptionInterface] | An array of attribute options\n\n### UiInputTypeInterface\n\nAttribute | Data Type | Description\n--- | --- | ---\n`is_html_allowed` | Boolean | Indicates whether the attribute value is allowed to have html content\n`ui_input_type` | UiInputTypeEnum | The frontend input type of the attribute",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 1, "to": 31 } }
        }
      }
    ],
    [
      "8cc38a46-333e-422b-995b-d38898d24197",
      {
        "pageContent": "## Types\n\n### CustomAttribute\n\nAttribute | Data Type | Description\n--- | --- | ---\n`attribute_metadata` | AttributeMetadataInterface | Attribute metadata details\n`entered_attribute_value` | EnteredAttributeValue | Attribute value represented as entered data using input type like text field\n`selected_attribute_options` | SelectedAttributeOption | Attribute value represented as selected options using input type like select\n\n### EnteredAttributeValue\n\nAttribute | Data Type | Description\n--- | --- | ---\n`value` | String | Attribute value",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 33, "to": 47 } }
        }
      }
    ],
    [
      "7b061923-ea12-4082-9ffb-4f40c2794229",
      {
        "pageContent": "### ProductAttributeMetadata\n\n`ProductAttributeMetadata` implements [`AttributeMetadataInterface`](attribute-metadata.md).\n\nAttribute | Data Type | Description\n--- | --- | ---\n`used_in_components` | [CustomAttributesListsEnum!] | Places in the store front where the attribute is used",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 49, "to": 55 } }
        }
      }
    ],
    [
      "8b71f43d-a089-4c5c-b041-5f0de6df2330",
      {
        "pageContent": "#### Example usage\n\n**Request:**\n\n```graphql\nproducts(filter: { sku: { eq: \"VA08\" } }) {\n    items {\n      name\n      sku\n      custom_attributes {\n        attribute_metadata {\n          ... on ProductAttributeMetadata {\n            label\n            code\n            data_type\n            ... on AttributeMetadataInterface {\n              attribute_labels {\n                label\n              }\n            }\n          }\n          ui_input {\n            ui_input_type\n            ... on SelectableInputTypeInterface {\n              attribute_options {\n                label\n                ... on AttributeOption {\n                  value\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 57, "to": 93 } }
        }
      }
    ],
    [
      "b6d3dee1-7169-481f-9a64-dd2688b28531",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 94, "to": 96 } }
        }
      }
    ],
    [
      "9f92f594-a60a-4543-96a2-0884dd7fb04a",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"name\": \"Thick Leather Braided Belt\",\n          \"sku\": \"VA08\",\n          \"custom_attributes\": [\n            {\n              \"attribute_metadata\": {\n                \"label\": \"Fashion Color\",\n                \"code\": \"fashion_color\",\n                \"data_type\": \"INT\",\n                \"attribute_labels\": [\n                  {\n                    \"label\": \"Fashion Color\"\n                  }\n                ],\n                \"ui_input\": {\n                  \"ui_input_type\": \"SELECT\",\n                  \"attribute_options\": [\n                    {\n                      \"label\": \"Gold\",\n                      \"value\": \"40\"\n                    },\n                    {\n                      \"label\": \"Peach\",\n                      \"value\": \"61\"\n                    },\n                    {\n                      \"label\": \"Khaki\",\n                      \"value\": \"64\"\n                    },\n                    {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 98, "to": 132 } }
        }
      }
    ],
    [
      "29dda794-7d2c-417a-bcf8-3f7caa518595",
      {
        "pageContent": "\"label\": \"Silver\",\n                      \"value\": \"43\"\n                    },\n                    {\n                      \"label\": \"Lilac\",\n                      \"value\": \"67\"\n                    },\n                    {\n                      \"label\": \"Rain\",\n                      \"value\": \"70\"\n                    },\n                    {\n                      \"label\": \"Mint\",\n                      \"value\": \"73\"\n                    },\n                    {\n                      \"label\": \"Lily\",\n                      \"value\": \"76\"\n                    },\n                    {\n                      \"label\": \"Latte\",\n                      \"value\": \"79\"\n                    },\n                    {\n                      \"label\": \"Cocoa\",\n                      \"value\": \"82\"\n                    }\n                  ]\n                }\n              }\n            },\n            {\n              \"attribute_metadata\": {\n                \"label\": \"Fashion Material\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 133, "to": 166 } }
        }
      }
    ],
    [
      "a8c7047f-dbc1-4da4-adfc-ed517d176a3c",
      {
        "pageContent": "\"code\": \"fashion_material\",\n                \"data_type\": \"STRING\",\n                \"attribute_labels\": [\n                  {\n                    \"label\": \"Fashion Material\"\n                  }\n                ],\n                \"ui_input\": {\n                  \"ui_input_type\": \"MULTISELECT\",\n                  \"attribute_options\": [\n                    {\n                      \"label\": \"14K Gold\",\n                      \"value\": \"46\"\n                    },\n                    {\n                      \"label\": \"Acrylic\",\n                      \"value\": \"118\"\n                    },\n                    {\n                      \"label\": \"Cashmere\",\n                      \"value\": \"121\"\n                    },\n                    {\n                      \"label\": \"Sterling Silver\",\n                      \"value\": \"49\"\n                    },\n                    {\n                      \"label\": \"Cotton\",\n                      \"value\": \"124\"\n                    },\n                    {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 167, "to": 197 } }
        }
      }
    ],
    [
      "f6a0204b-0244-47f0-b65e-1559051976d9",
      {
        "pageContent": "\"label\": \"Linen\",\n                      \"value\": \"127\"\n                    },\n                    {\n                      \"label\": \"Leather\",\n                      \"value\": \"130\"\n                    },\n                    {\n                      \"label\": \"Nylon\",\n                      \"value\": \"133\"\n                    },\n                    {\n                      \"label\": \"Organic Cotton\",\n                      \"value\": \"136\"\n                    },\n                    {\n                      \"label\": \"Polyester\",\n                      \"value\": \"139\"\n                    },\n                    {\n                      \"label\": \"Rayon\",\n                      \"value\": \"142\"\n                    },\n                    {\n                      \"label\": \"Silk\",\n                      \"value\": \"145\"\n                    },\n                    {\n                      \"label\": \"Spandex\",\n                      \"value\": \"148\"\n                    },\n                    {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 198, "to": 229 } }
        }
      }
    ],
    [
      "535d95fa-6b29-4e9c-82af-4ea1d6536546",
      {
        "pageContent": "\"label\": \"Viscose\",\n                      \"value\": \"151\"\n                    },\n                    {\n                      \"label\": \"Wool\",\n                      \"value\": \"154\"\n                    }\n                  ]\n                }\n              }\n            },\n            {\n              \"attribute_metadata\": {\n                \"label\": \"Fashion Size\",\n                \"code\": \"fashion_size\",\n                \"data_type\": \"INT\",\n                \"attribute_labels\": [\n                  {\n                    \"label\": \"Fashion Size\"\n                  }\n                ],\n                \"ui_input\": {\n                  \"ui_input_type\": \"SELECT\",\n                  \"attribute_options\": [\n                    {\n                      \"label\": \"10\",\n                      \"value\": \"109\"\n                    },\n                    {\n                      \"label\": \"12\",\n                      \"value\": \"112\"\n                    },\n                    {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 230, "to": 262 } }
        }
      }
    ],
    [
      "c3480b2c-bf25-401e-92ae-4ed361e2b2f7",
      {
        "pageContent": "\"label\": \"2\",\n                      \"value\": \"97\"\n                    },\n                    {\n                      \"label\": \"4\",\n                      \"value\": \"100\"\n                    },\n                    {\n                      \"label\": \"6\",\n                      \"value\": \"103\"\n                    },\n                    {\n                      \"label\": \"8\",\n                      \"value\": \"106\"\n                    },\n                    {\n                      \"label\": \"L\",\n                      \"value\": \"85\"\n                    },\n                    {\n                      \"label\": \"M\",\n                      \"value\": \"88\"\n                    },\n                    {\n                      \"label\": \"S\",\n                      \"value\": \"91\"\n                    },\n                    {\n                      \"label\": \"XS\",\n                      \"value\": \"94\"\n                    }\n                  ]\n                }\n              }\n            },\n            {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 263, "to": 298 } }
        }
      }
    ],
    [
      "56aa6862-0219-4a14-a8ad-0be12cc2390e",
      {
        "pageContent": "{\n              \"attribute_metadata\": {\n                \"label\": \"Has Video\",\n                \"code\": \"has_video\",\n                \"data_type\": \"INT\",\n                \"attribute_labels\": [],\n                \"ui_input\": {\n                  \"ui_input_type\": \"BOOLEAN\",\n                  \"attribute_options\": [\n                    {\n                      \"label\": \"Yes\",\n                      \"value\": \"1\"\n                    },\n                    {\n                      \"label\": \"No\",\n                      \"value\": \"0\"\n                    }\n                  ]\n                }\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 298, "to": 325 } }
        }
      }
    ],
    [
      "04603ee7-c036-4271-bf39-e680835bc0f3",
      {
        "pageContent": "### SelectedAttributeOption\n\nAttribute | Data Type | Description\n--- | --- | ---\n`attribute_option` | [AttributeOptionInterface!] | Selected attribute option details",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 327, "to": 331 } }
        }
      }
    ],
    [
      "b25a3bfb-990c-4c5d-9a5b-cede88662dcb",
      {
        "pageContent": "### StoreLabels\n\nAttribute | Data Type | Description\n--- | --- | ---\n`label`| String | The label assigned to the attribute\n`store_code`| String | The assigned store code\n\nType | Implements\n--- | ---\nAttributeOption | AttributeOptionInterface\nAttributeOptions | AttributeOptionsInterface\nUiAttributeTypeAny | UiInputTypeInterface\nUiAttributeTypeBoolean | UiInputTypeInterface, AttributeOptionsInterface, SelectableInputTypeInterface\nUiAttributeTypeFixedProductTax | UiInputTypeInterface\nUiAttributeTypeMultiSelect | UiInputTypeInterface, AttributeOptionsInterface, SelectableInputTypeInterface\nUiAttributeTypePageBuilder | UiInputTypeInterface\nUiAttributeTypeSelect | UiInputTypeInterface, AttributeOptionsInterface, SelectableInputTypeInterface\nUiAttributeTypeTextarea | UiInputTypeInterface\nUiAttributeTypeTextEditor | UiInputTypeInterface",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/pwa-implementations.md",
          "loc": { "lines": { "from": 333, "to": 351 } }
        }
      }
    ],
    [
      "cd11c691-579a-43a8-be1c-d0ae27dc9640",
      {
        "pageContent": "---\ntitle: RoutableInterface attributes\n---\n\n# RoutableInterface attributes\n\nSome entities are \"routable\", meaning that they have URLs and can serve as the model for a rendered page. The following implementations of the [`RoutableInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RoutableInterface) allow you to return details in the [`route` query](../queries/route.md). `RoutableUrl` is returned when the URL is not linked to an entity.\n\n*  [BundleProduct](types/bundle.md)\n*  [CategoryTree](../queries/category-list.md#return-the-category-tree-of-a-top-level-category)\n*  [CmsPage](../../store/queries/cms-page.md)\n*  [ConfigurableProduct](types/configurable.md)\n*  [DownloadableProduct](types/downloadable.md)\n*  [GiftCardProduct](types/gift-card.md)\n*  [GroupedProduct](types/grouped.md)\n*  [SimpleProduct](types/simple.md)\n*  [VirtualProduct](types/virtual.md)\n*  [RoutableUrl](#routable-url) (2.4.7-beta only)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "c78ae469-33c1-4ed4-bc2d-8643914392e6",
      {
        "pageContent": "## Routable URL\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n<BetaNote />\n\n`RoutableUrl` is the default implementation of RoutableInterface. This type is returned when the URL is not linked to a product or CMS page or to a category. As a result, the `RoutableUrl.type` field always returns `null`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 20, "to": 26 } }
        }
      }
    ],
    [
      "e80c52b2-3a58-4189-afe8-605b1bc3eb34",
      {
        "pageContent": "## Sample queries",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 28, "to": 28 } }
        }
      }
    ],
    [
      "850eedc3-07f5-43cf-b4c7-6987fc577126",
      {
        "pageContent": "### Return information about a URL key\n\nThe following query returns information about the specified URL key. The query contains multiple fragments so that it can be used for categories, CMS pages, and multiple product types.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 30, "to": 34 } }
        }
      }
    ],
    [
      "f0590ee2-a0ff-4566-aa08-98676992332f",
      {
        "pageContent": "```graphql\n{\n  route(url: \"teton-pullover-hoodie.html\") {\n    __typename\n    relative_url\n    redirect_code\n    type\n    ... on SimpleProduct {\n      sku\n      url_key\n      uid\n      url_rewrites {\n        url\n        parameters {\n          name\n          value\n        }\n      }\n    }\n    ... on ConfigurableProduct {\n      sku\n      image {\n        label\n      }\n      uid\n      url_key\n      url_suffix\n      url_rewrites {\n        parameters {\n          name\n          value\n        }\n      }\n      media_gallery {\n        url\n      }\n    }\n    ... on CategoryTree {\n      uid\n      product_count\n      canonical_url\n      products {\n        total_count\n        items {\n          sku\n          uid\n        }\n      }\n    }\n    ... on CmsPage {\n      content\n      content_heading\n      meta_title\n      meta_keywords\n      meta_description\n      page_layout\n      identifier\n      title\n      url_key\n    }\n    ... on GroupedProduct {\n      canonical_url\n      sku\n      items {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 36, "to": 99 } }
        }
      }
    ],
    [
      "0e3a41dd-2128-4c7a-bf6c-ceb49c7465ef",
      {
        "pageContent": "items {\n        product {\n          uid\n          url_key\n        }\n      }\n    }\n    ... on BundleProduct {\n      items {\n        sku\n        required\n        type\n        title\n        options {\n          uid\n          is_default\n          can_change_quantity\n          price_type\n          quantity\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 99, "to": 122 } }
        }
      }
    ],
    [
      "52d7d650-d59e-4dcd-b7db-8a721e7c1ac0",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 123, "to": 125 } }
        }
      }
    ],
    [
      "325f6b3a-f61c-4a17-a754-8508c27beb97",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"route\": {\n      \"__typename\": \"ConfigurableProduct\",\n      \"relative_url\": \"teton-pullover-hoodie.html\",\n      \"redirect_code\": 0,\n      \"type\": \"PRODUCT\",\n      \"sku\": \"MH02\",\n      \"image\": {\n        \"label\": \"Teton Pullover Hoodie\"\n      },\n      \"uid\": \"ODY=\",\n      \"url_key\": \"teton-pullover-hoodie\",\n      \"url_suffix\": \".html\",\n      \"url_rewrites\": [\n        {\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"86\"\n            }\n          ]\n        },\n        {\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"86\"\n            },\n            {\n              \"name\": \"category\",\n              \"value\": \"16\"\n            }\n          ]\n        },\n        {\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"86\"\n            },\n            {\n              \"name\": \"category\",\n              \"value\": \"13\"\n            }\n          ]\n        }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 127, "to": 174 } }
        }
      }
    ],
    [
      "a4f3e996-e8ea-4871-a27b-f6c67e6eaec6",
      {
        "pageContent": "}\n      ],\n      \"media_gallery\": [\n        {\n          \"url\": \"http://example.com/media/catalog/product/cache/3103a735c131a485a1ff51c24439c39b/m/h/mh02-black_main_1.jpg\"\n        },\n        {\n          \"url\": \"http://example.com/media/catalog/product/cache/3103a735c131a485a1ff51c24439c39b/m/h/mh02-black_alt1_1.jpg\"\n        },\n        {\n          \"url\": \"http://example.com/media/catalog/product/cache/3103a735c131a485a1ff51c24439c39b/m/h/mh02-black_back_1.jpg\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 174, "to": 190 } }
        }
      }
    ],
    [
      "01d50a68-e062-4cb1-88fc-88456eb13711",
      {
        "pageContent": "### Find the external redirect URL\n\nIn the following example, an internal URL `support.html` is configured to redirect to an external URL `https://support.example.com/` using URL Rewrite.\n\n**Request:**\n\n```graphql\n{\n  route(url: \"support.html\") {\n    __typename\n    relative_url\n    redirect_code\n    type\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"route\": {\n      \"__typename\": \"RoutableUrl\",\n      \"relative_url\": \"https://support.example.com/\",\n      \"redirect_code\": 302,\n      \"type\": null\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/routable.md",
          "loc": { "lines": { "from": 192, "to": 222 } }
        }
      }
    ],
    [
      "bb32d583-11dc-48bc-b230-13982e0121e4",
      {
        "pageContent": "---\ntitle: Bundle product data types\n---\n\n# Bundle product data types\n\nThe [`BundleProduct`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-BundleProduct) data type implements the following interfaces:\n\n-  [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface)\n-  [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-PhysicalProductInterface)\n-  [CustomizableProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomizableProductInterface)\n-  [RoutableInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RoutableInterface)\n\nAttributes that are specific to bundle products can be used when performing a [`products`](../../queries/products.md) query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "f3a70bde-9189-414b-9043-131548e822af",
      {
        "pageContent": "## Sample query\n\nThe following query returns information about bundle product `24-WG080`, which is defined in the sample data.\n\n```graphql\n{\n  products(filter: {sku:\n    {eq: \"24-WG080\"}\n  })\n   {\n      items{\n         sku\n         __typename\n         uid\n         name\n          ... on BundleProduct {\n          dynamic_sku\n          dynamic_price\n          dynamic_weight\n          price_view\n          ship_bundle_items\n          items {\n            uid\n            title\n            required\n            type\n            position\n            sku\n            options {\n              uid\n              quantity\n              position\n              is_default\n              price\n              price_type\n              can_change_quantity\n              label\n              product {\n                uid\n                name\n                sku\n                __typename\n              }\n            }\n          }\n        }\n      }\n   }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 16, "to": 64 } }
        }
      }
    ],
    [
      "30936d86-b41b-4fa0-b13b-67d00ae6bc0f",
      {
        "pageContent": "```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 20, "to": 20 } }
        }
      }
    ],
    [
      "fdf483e4-f21a-430b-9331-1beb28d762ed",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"sku\": \"24-WG080\",\n          \"__typename\": \"BundleProduct\",\n          \"uid\": \"NDY=\",\n          \"name\": \"Sprite Yoga Companion Kit\",\n          \"dynamic_sku\": true,\n          \"dynamic_price\": true,\n          \"dynamic_weight\": true,\n          \"price_view\": \"PRICE_RANGE\",\n          \"ship_bundle_items\": \"TOGETHER\",\n          \"items\": [\n            {\n              \"uid\": \"YnVuZGxlLzE=\",\n              \"title\": \"Sprite Stasis Ball\",\n              \"required\": true,\n              \"type\": \"radio\",\n              \"position\": 1,\n              \"sku\": \"24-WG080\",\n              \"options\": [\n                {\n                  \"uid\": \"YnVuZGxlLzEvMS8x\",\n                  \"quantity\": 1,\n                  \"position\": 1,\n                  \"is_default\": true,\n                  \"price\": 0,\n                  \"price_type\": \"FIXED\",\n                  \"can_change_quantity\": true,\n                  \"label\": \"Sprite Stasis Ball 55 cm\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 67, "to": 99 } }
        }
      }
    ],
    [
      "d0dd6b55-1489-4358-af29-57c58a94caad",
      {
        "pageContent": "\"product\": {\n                    \"uid\": \"MjY=\",\n                    \"name\": \"Sprite Stasis Ball 55 cm\",\n                    \"sku\": \"24-WG081-blue\",\n                    \"__typename\": \"SimpleProduct\"\n                  }\n                },\n                {\n                  \"uid\": \"YnVuZGxlLzEvMi8x\",\n                  \"quantity\": 1,\n                  \"position\": 2,\n                  \"is_default\": false,\n                  \"price\": 0,\n                  \"price_type\": \"FIXED\",\n                  \"can_change_quantity\": true,\n                  \"label\": \"Sprite Stasis Ball 65 cm\",\n                  \"product\": {\n                    \"uid\": \"Mjk=\",\n                    \"name\": \"Sprite Stasis Ball 65 cm\",\n                    \"sku\": \"24-WG082-blue\",\n                    \"__typename\": \"SimpleProduct\"\n                  }\n                },\n                {\n                  \"uid\": \"YnVuZGxlLzEvMy8x\",\n                  \"quantity\": 1,\n                  \"position\": 3,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 100, "to": 126 } }
        }
      }
    ],
    [
      "45910386-e8c4-4c7c-ba0e-91bb89e48341",
      {
        "pageContent": "\"is_default\": false,\n                  \"price\": 0,\n                  \"price_type\": \"FIXED\",\n                  \"can_change_quantity\": true,\n                  \"label\": \"Sprite Stasis Ball 75 cm\",\n                  \"product\": {\n                    \"uid\": \"MzI=\",\n                    \"name\": \"Sprite Stasis Ball 75 cm\",\n                    \"sku\": \"24-WG083-blue\",\n                    \"__typename\": \"SimpleProduct\"\n                  }\n                }\n              ]\n            },\n            {\n              \"uid\": \"YnVuZGxlLzI=\",\n              \"title\": \"Sprite Foam Yoga Brick\",\n              \"required\": true,\n              \"type\": \"radio\",\n              \"position\": 2,\n              \"sku\": \"24-WG080\",\n              \"options\": [\n                {\n                  \"uid\": \"YnVuZGxlLzIvNC8x\",\n                  \"quantity\": 1,\n                  \"position\": 1,\n                  \"is_default\": true,\n                  \"price\": 0,\n                  \"price_type\": \"FIXED\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 127, "to": 155 } }
        }
      }
    ],
    [
      "a2663aeb-38cd-45d0-adad-c123d0ee066c",
      {
        "pageContent": "\"can_change_quantity\": true,\n                  \"label\": \"Sprite Foam Yoga Brick\",\n                  \"product\": {\n                    \"uid\": \"MjE=\",\n                    \"name\": \"Sprite Foam Yoga Brick\",\n                    \"sku\": \"24-WG084\",\n                    \"__typename\": \"SimpleProduct\"\n                  }\n                }\n              ]\n            },\n            {\n              \"uid\": \"YnVuZGxlLzM=\",\n              \"title\": \"Sprite Yoga Strap\",\n              \"required\": true,\n              \"type\": \"radio\",\n              \"position\": 3,\n              \"sku\": \"24-WG080\",\n              \"options\": [\n                {\n                  \"uid\": \"YnVuZGxlLzMvNS8x\",\n                  \"quantity\": 1,\n                  \"position\": 1,\n                  \"is_default\": true,\n                  \"price\": 0,\n                  \"price_type\": \"FIXED\",\n                  \"can_change_quantity\": true,\n                  \"label\": \"Sprite Yoga Strap 6 foot\",\n                  \"product\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 156, "to": 184 } }
        }
      }
    ],
    [
      "e7006210-975d-4fef-bbee-e89fc0a3eea5",
      {
        "pageContent": "\"uid\": \"MzM=\",\n                    \"name\": \"Sprite Yoga Strap 6 foot\",\n                    \"sku\": \"24-WG085\",\n                    \"__typename\": \"SimpleProduct\"\n                  }\n                },\n                {\n                  \"uid\": \"YnVuZGxlLzMvNi8x\",\n                  \"quantity\": 1,\n                  \"position\": 2,\n                  \"is_default\": false,\n                  \"price\": 0,\n                  \"price_type\": \"FIXED\",\n                  \"can_change_quantity\": true,\n                  \"label\": \"Sprite Yoga Strap 8 foot\",\n                  \"product\": {\n                    \"uid\": \"MzQ=\",\n                    \"name\": \"Sprite Yoga Strap 8 foot\",\n                    \"sku\": \"24-WG086\",\n                    \"__typename\": \"SimpleProduct\"\n                  }\n                },\n                {\n                  \"uid\": \"YnVuZGxlLzMvNy8x\",\n                  \"quantity\": 1,\n                  \"position\": 3,\n                  \"is_default\": false,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 185, "to": 211 } }
        }
      }
    ],
    [
      "ae2962a3-934b-4a15-a854-ada9c2a631b7",
      {
        "pageContent": "\"price\": 0,\n                  \"price_type\": \"FIXED\",\n                  \"can_change_quantity\": true,\n                  \"label\": \"Sprite Yoga Strap 10 foot\",\n                  \"product\": {\n                    \"uid\": \"MzU=\",\n                    \"name\": \"Sprite Yoga Strap 10 foot\",\n                    \"sku\": \"24-WG087\",\n                    \"__typename\": \"SimpleProduct\"\n                  }\n                }\n              ]\n            },\n            {\n              \"uid\": \"YnVuZGxlLzQ=\",\n              \"title\": \"Sprite Foam Roller\",\n              \"required\": true,\n              \"type\": \"radio\",\n              \"position\": 4,\n              \"sku\": \"24-WG080\",\n              \"options\": [\n                {\n                  \"uid\": \"YnVuZGxlLzQvOC8x\",\n                  \"quantity\": 1,\n                  \"position\": 1,\n                  \"is_default\": true,\n                  \"price\": 0,\n                  \"price_type\": \"FIXED\",\n                  \"can_change_quantity\": true,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 212, "to": 240 } }
        }
      }
    ],
    [
      "dc14ea1f-0ce2-4e37-a961-039bd4cebc5e",
      {
        "pageContent": "\"label\": \"Sprite Foam Roller\",\n                  \"product\": {\n                    \"uid\": \"MjI=\",\n                    \"name\": \"Sprite Foam Roller\",\n                    \"sku\": \"24-WG088\",\n                    \"__typename\": \"SimpleProduct\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 241, "to": 257 } }
        }
      }
    ],
    [
      "4d9ef0e8-a0a7-492d-8ca0-b2e11d5d972f",
      {
        "pageContent": "## Related topics\n\n-  [addBundleProductsToCart mutation](../../../cart/mutations/add-bundle-products.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/bundle.md",
          "loc": { "lines": { "from": 259, "to": 261 } }
        }
      }
    ],
    [
      "8b3e4b91-3c94-4498-938f-81b78f86ff78",
      {
        "pageContent": "---\ntitle: Configurable product data types\n---\n\n# Configurable product data types\n\nThe `ConfigurableProduct` data type implements the following interfaces:\n\n-  [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface)\n-  [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-PhysicalProductInterface)\n-  [CustomizableProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomizableProductInterface)\n-  [RoutableInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RoutableInterface)\n\nAttributes that are specific to configurable products can be used when performing a [`products`](../../queries/products.md) query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "517f365d-d975-490e-a8f3-86859f15c011",
      {
        "pageContent": "The `ConfigurableProductOptionsSelection` object contains metadata corresponding to the selectable configurable options for a product. Use this object in a `products` query to minimize the number of media gallery items that are displayed as the shopper selects configurable product options. [Limit the number of retrieved media gallery items](#limit-the-number-of-retrieved-media-gallery-items) demonstrates its use.\n\nSwatches allow the shopper to view the color, texture, or other visual aspect of a configurable product. The application displays these options as color, graphic, or text swatches.\n\nThe following data types implement `SwatchDataInterface`:\n\n-  `ColorSwatchData`\n-  `ImageSwatchData`\n-  `TextSwatchData`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 16, "to": 24 } }
        }
      }
    ],
    [
      "86cdecb9-ed4c-4c06-91e1-7f29d55be038",
      {
        "pageContent": "## Sample queries\n\nAdd the following inline fragment to the output section of your `products` query to return information specific to configurable products:\n\n```text\n... on ConfigurableProduct {\n  configurable_options {\n   <attributes>\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 26, "to": 36 } }
        }
      }
    ],
    [
      "b244c57c-904f-4fe4-a0e9-f5052db66498",
      {
        "pageContent": "### Extended example\n\nThe following `products` query returns `ConfigurableProduct` information about the `WH01` configurable product, which is defined in the sample data.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 38, "to": 42 } }
        }
      }
    ],
    [
      "2afb7e6d-e7c3-4572-aae9-e03d28e381b7",
      {
        "pageContent": "```graphql\n{\n  products(filter: { sku: { eq: \"WH01\" } }) {\n    items {\n      id\n      attribute_set_id\n      name\n      sku\n      __typename\n      price_range{\n        minimum_price{\n          regular_price{\n            value\n            currency\n          }\n        }\n      }\n      categories {\n        id\n      }\n      ... on ConfigurableProduct {\n        configurable_options {\n          id\n          attribute_id_v2\n          label\n          position\n          use_default\n          attribute_code\n          values {\n            value_index\n            label\n          }\n          product_id\n        }\n        variants {\n          product {\n            id\n            name\n            sku\n            attribute_set_id\n            ... on PhysicalProductInterface {\n              weight\n            }\n            price_range{\n              minimum_price{\n                regular_price{\n                  value\n                  currency\n                }\n              }\n            }\n          }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 44, "to": 95 } }
        }
      }
    ],
    [
      "c508454a-a0b2-48cd-b312-898cee0e9a97",
      {
        "pageContent": "}\n          attributes {\n            uid\n            label\n            code\n            value_index\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 95, "to": 106 } }
        }
      }
    ],
    [
      "dee4b9a5-afef-4669-ae5c-9d7a024006e2",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 108, "to": 110 } }
        }
      }
    ],
    [
      "27e7ac4d-0e7f-4852-9523-3295c867a421",
      {
        "pageContent": "``` json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"uid\": \"MTA1Mg==\",\n          \"attribute_set_id\": 9,\n          \"name\": \"Mona Pullover Hoodlie\",\n          \"sku\": \"WH01\",\n          \"__typename\": \"ConfigurableProduct\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 57,\n                \"currency\": \"USD\"\n              }\n            }\n          },\n          \"categories\": [\n            {\n              \"uid\": \"OA==\"\n            },\n            {\n              \"uid\": \"MjI=\"\n            },\n            {\n              \"uid\": \"MjU=\"\n            },\n            {\n              \"uid\": \"MzU=\"\n            }\n          ],\n          \"configurable_options\": [\n            {\n              \"uid\": \"Y29uZmlndXJhYmxlLzEwNTIvOTM=\",\n              \"attribute_uid\": \"OTM=\",\n              \"label\": \"Color\",\n              \"position\": 1,\n              \"use_default\": false,\n              \"attribute_code\": \"color\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 112, "to": 152 } }
        }
      }
    ],
    [
      "b708c82d-fc3a-4c98-bf71-87f635a393d0",
      {
        "pageContent": "\"values\": [\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                  \"label\": \"Green\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU2\",\n                  \"label\": \"Orange\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU3\",\n                  \"label\": \"Purple\"\n                }\n              ]\n            },\n            {\n              \"uid\": \"Y29uZmlndXJhYmxlLzEwNTIvMTYx\",\n              \"attribute_uid\": \"MTYx\",\n              \"label\": \"Size\",\n              \"position\": 0,\n              \"use_default\": false,\n              \"attribute_code\": \"size\",\n              \"values\": [\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNjk=\",\n                  \"label\": \"XS\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzA=\",\n                  \"label\": \"S\"\n                },\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 153, "to": 184 } }
        }
      }
    ],
    [
      "8fa52e6e-686d-44bc-8e0b-a24254e60e36",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzE=\",\n                  \"label\": \"M\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzI=\",\n                  \"label\": \"L\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzM=\",\n                  \"label\": \"XL\"\n                }\n              ]\n            }\n          ],\n          \"variants\": [\n            {\n              \"product\": {\n                \"uid\": \"MTAzNw==\",\n                \"name\": \"Mona Pullover Hoodlie-XS-Green\",\n                \"sku\": \"WH01-XS-Green\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 184, "to": 217 } }
        }
      }
    ],
    [
      "8032d0ee-0158-431c-b529-e836e8f983aa",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                  \"label\": \"Green\",\n                  \"code\": \"color\",\n                  \"value_index\": 53\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNjk=\",\n                  \"label\": \"XS\",\n                  \"code\": \"size\",\n                  \"value_index\": 169\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTAzOA==\",\n                \"name\": \"Mona Pullover Hoodlie-XS-Orange\",\n                \"sku\": \"WH01-XS-Orange\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 217, "to": 248 } }
        }
      }
    ],
    [
      "f10cdd04-ec68-4e8c-aea5-4125b17a82d0",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU2\",\n                  \"label\": \"Orange\",\n                  \"code\": \"color\",\n                  \"value_index\": 56\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNjk=\",\n                  \"label\": \"XS\",\n                  \"code\": \"size\",\n                  \"value_index\": 169\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTAzOQ==\",\n                \"name\": \"Mona Pullover Hoodlie-XS-Purple\",\n                \"sku\": \"WH01-XS-Purple\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 248, "to": 279 } }
        }
      }
    ],
    [
      "baaa3d44-1286-44eb-8f25-bbc93a5f2c7c",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU3\",\n                  \"label\": \"Purple\",\n                  \"code\": \"color\",\n                  \"value_index\": 57\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNjk=\",\n                  \"label\": \"XS\",\n                  \"code\": \"size\",\n                  \"value_index\": 169\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0MA==\",\n                \"name\": \"Mona Pullover Hoodlie-S-Green\",\n                \"sku\": \"WH01-S-Green\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 279, "to": 310 } }
        }
      }
    ],
    [
      "dda3fa2b-82b9-46d2-936a-2eff5c0fb681",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                  \"label\": \"Green\",\n                  \"code\": \"color\",\n                  \"value_index\": 53\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzA=\",\n                  \"label\": \"S\",\n                  \"code\": \"size\",\n                  \"value_index\": 170\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0MQ==\",\n                \"name\": \"Mona Pullover Hoodlie-S-Orange\",\n                \"sku\": \"WH01-S-Orange\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 310, "to": 341 } }
        }
      }
    ],
    [
      "170ad1c9-8833-44e1-bbf3-5ca0fc799fc6",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU2\",\n                  \"label\": \"Orange\",\n                  \"code\": \"color\",\n                  \"value_index\": 56\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzA=\",\n                  \"label\": \"S\",\n                  \"code\": \"size\",\n                  \"value_index\": 170\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0Mg==\",\n                \"name\": \"Mona Pullover Hoodlie-S-Purple\",\n                \"sku\": \"WH01-S-Purple\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 341, "to": 372 } }
        }
      }
    ],
    [
      "4281352c-3fb9-413d-bdb2-6b47e034fa2f",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU3\",\n                  \"label\": \"Purple\",\n                  \"code\": \"color\",\n                  \"value_index\": 57\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzA=\",\n                  \"label\": \"S\",\n                  \"code\": \"size\",\n                  \"value_index\": 170\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0Mw==\",\n                \"name\": \"Mona Pullover Hoodlie-M-Green\",\n                \"sku\": \"WH01-M-Green\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 372, "to": 403 } }
        }
      }
    ],
    [
      "0a651561-ba32-4a70-b662-98b19b6c4c28",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                  \"label\": \"Green\",\n                  \"code\": \"color\",\n                  \"value_index\": 53\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzE=\",\n                  \"label\": \"M\",\n                  \"code\": \"size\",\n                  \"value_index\": 171\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0NA==\",\n                \"name\": \"Mona Pullover Hoodlie-M-Orange\",\n                \"sku\": \"WH01-M-Orange\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 403, "to": 434 } }
        }
      }
    ],
    [
      "e46db2f7-843a-4e3d-871c-b925b6570bb9",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU2\",\n                  \"label\": \"Orange\",\n                  \"code\": \"color\",\n                  \"value_index\": 56\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzE=\",\n                  \"label\": \"M\",\n                  \"code\": \"size\",\n                  \"value_index\": 171\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0NQ==\",\n                \"name\": \"Mona Pullover Hoodlie-M-Purple\",\n                \"sku\": \"WH01-M-Purple\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 434, "to": 465 } }
        }
      }
    ],
    [
      "69405be3-2f9a-4e7b-9c43-a67d9f6a786a",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU3\",\n                  \"label\": \"Purple\",\n                  \"code\": \"color\",\n                  \"value_index\": 57\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzE=\",\n                  \"label\": \"M\",\n                  \"code\": \"size\",\n                  \"value_index\": 171\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0Ng==\",\n                \"name\": \"Mona Pullover Hoodlie-L-Green\",\n                \"sku\": \"WH01-L-Green\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 465, "to": 496 } }
        }
      }
    ],
    [
      "65e9fb0f-7137-4ecf-bf33-9c846aa32140",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                  \"label\": \"Green\",\n                  \"code\": \"color\",\n                  \"value_index\": 53\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzI=\",\n                  \"label\": \"L\",\n                  \"code\": \"size\",\n                  \"value_index\": 172\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0Nw==\",\n                \"name\": \"Mona Pullover Hoodlie-L-Orange\",\n                \"sku\": \"WH01-L-Orange\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 496, "to": 527 } }
        }
      }
    ],
    [
      "4646c49a-7030-4306-a900-2e5b167bb99b",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU2\",\n                  \"label\": \"Orange\",\n                  \"code\": \"color\",\n                  \"value_index\": 56\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzI=\",\n                  \"label\": \"L\",\n                  \"code\": \"size\",\n                  \"value_index\": 172\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0OA==\",\n                \"name\": \"Mona Pullover Hoodlie-L-Purple\",\n                \"sku\": \"WH01-L-Purple\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 527, "to": 558 } }
        }
      }
    ],
    [
      "5f63e141-a6d3-4533-9234-b03e22730b82",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU3\",\n                  \"label\": \"Purple\",\n                  \"code\": \"color\",\n                  \"value_index\": 57\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzI=\",\n                  \"label\": \"L\",\n                  \"code\": \"size\",\n                  \"value_index\": 172\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA0OQ==\",\n                \"name\": \"Mona Pullover Hoodlie-XL-Green\",\n                \"sku\": \"WH01-XL-Green\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 558, "to": 589 } }
        }
      }
    ],
    [
      "99862fd2-607c-45de-909b-c4386ca154ab",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                  \"label\": \"Green\",\n                  \"code\": \"color\",\n                  \"value_index\": 53\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzM=\",\n                  \"label\": \"XL\",\n                  \"code\": \"size\",\n                  \"value_index\": 173\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA1MA==\",\n                \"name\": \"Mona Pullover Hoodlie-XL-Orange\",\n                \"sku\": \"WH01-XL-Orange\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 589, "to": 620 } }
        }
      }
    ],
    [
      "bf376f72-c840-4196-bb34-43c5779be2e9",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU2\",\n                  \"label\": \"Orange\",\n                  \"code\": \"color\",\n                  \"value_index\": 56\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzM=\",\n                  \"label\": \"XL\",\n                  \"code\": \"size\",\n                  \"value_index\": 173\n                }\n              ]\n            },\n            {\n              \"product\": {\n                \"uid\": \"MTA1MQ==\",\n                \"name\": \"Mona Pullover Hoodlie-XL-Purple\",\n                \"sku\": \"WH01-XL-Purple\",\n                \"attribute_set_id\": 9,\n                \"weight\": 1,\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"value\": 57,\n                      \"currency\": \"USD\"\n                    }\n                  }\n                }\n              },\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 620, "to": 651 } }
        }
      }
    ],
    [
      "d31999ca-d2a7-481a-b3b7-695e8d5ff44f",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU3\",\n                  \"label\": \"Purple\",\n                  \"code\": \"color\",\n                  \"value_index\": 57\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MS8xNzM=\",\n                  \"label\": \"XL\",\n                  \"code\": \"size\",\n                  \"value_index\": 173\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 651, "to": 671 } }
        }
      }
    ],
    [
      "1a1d28cb-29bf-4b76-a00b-2619ee2fbcc2",
      {
        "pageContent": "### Limit the number of retrieved media gallery items\n\nThis example shows how the the media gallery items change as a shopper selects configurable options for the product with the SKU `MS10`. The configurable product attributes in the Luma sample data are limited to size and color, and these attributes have a small number of options (five and three, respectively). However, some storefronts will have products with dozens of selectable options. Returning detailed information about all media gallery items in such a storefront would create performance issues.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 673, "to": 675 } }
        }
      }
    ],
    [
      "43c1ebd4-80cc-4456-886a-0766226ab2cf",
      {
        "pageContent": "#### Step 1. Get the images on the parent page\n\nThe following query returns media gallery information on the parent configurable product and the `uid` values of each configurable option.\n\nNote that file names of the images are `ms10-blue_main_1.jpg`, `ms10-blue_alt1_1.jpg`, and `ms10-blue_back_1.jpg`.\n\n**Request:**\n\n```graphql\nquery {\n  products(search: \"MS10\" ) {\n    items {\n      ... on ConfigurableProduct {\n        media_gallery {\n          url\n          label\n          position\n        }\n        configurable_options {\n          attribute_code\n          values {\n            label\n            uid\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 677, "to": 705 } }
        }
      }
    ],
    [
      "304f1954-e3bf-4e1b-abe9-8d8214eaa18f",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 706, "to": 708 } }
        }
      }
    ],
    [
      "60e58dfc-d941-4417-a83d-42a6a7dce21f",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"media_gallery\": [\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_main_1.jpg\",\n              \"label\": \"\",\n              \"position\": 1\n            },\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_alt1_1.jpg\",\n              \"label\": \"\",\n              \"position\": 2\n            },\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_back_1.jpg\",\n              \"label\": \"\",\n              \"position\": 3\n            }\n          ],\n          \"configurable_options\": [\n            {\n              \"attribute_code\": \"color\",\n              \"values\": [\n                {\n                  \"label\": \"Black\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzQ5\"\n                },\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 710, "to": 741 } }
        }
      }
    ],
    [
      "eac073a2-81b0-4ad5-ad8a-59833e0598db",
      {
        "pageContent": "{\n                  \"label\": \"Blue\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUw\"\n                },\n                {\n                  \"label\": \"Red\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU4\"\n                }\n              ]\n            },\n            {\n              \"attribute_code\": \"size\",\n              \"values\": [\n                {\n                  \"label\": \"XS\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjY=\"\n                },\n                {\n                  \"label\": \"S\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjc=\"\n                },\n                {\n                  \"label\": \"M\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjg=\"\n                },\n                {\n                  \"label\": \"L\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjk=\"\n                },\n                {\n                  \"label\": \"XL\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzA=\"\n                }\n              ]",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 741, "to": 774 } }
        }
      }
    ],
    [
      "582a3d0c-52e1-47ef-9627-85cec75c2387",
      {
        "pageContent": "]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 774, "to": 782 } }
        }
      }
    ],
    [
      "178a2426-082c-443c-94b8-1ccc07336b7d",
      {
        "pageContent": "#### Step 2. Select the color\n\nIn this example, the shopper has selected the red variant. The query has been expanded to include the `configurable_product_options_selection` object, which filters on the `uid` of the red variant. Within that object, notice:\n\n-  The `options_available_for_selection` shows that all available `size` attributes with the red variant can be selected.\n-  The `media_gallery` object contains the `ms10-red_main_1.jpg` image, which can then be displayed with the parent images.\n-  The `variant` object is null, because the shopper has not selected a size. The variant is not fully defined until the shopper makes a selection for all attributes.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 784, "to": 792 } }
        }
      }
    ],
    [
      "1f7b7daa-6380-4164-81a9-425b34f123bf",
      {
        "pageContent": "**Request:**\n\n```graphql\nquery {\n  products(search: \"MS10\" ) {\n    items {\n      ... on ConfigurableProduct {\n        media_gallery {\n          url\n          label\n          position\n        }\n        configurable_options {\n          uid\n          attribute_code\n          values {\n            label\n            uid\n          }\n        }\n        configurable_product_options_selection(configurableOptionValueUids: [\"Y29uZmlndXJhYmxlLzkzLzU4\"]) {\n          options_available_for_selection {\n            attribute_code\n            option_value_uids\n          }\n          media_gallery {\n            url\n            label\n            position\n          }\n          variant {\n            uid\n            sku\n            name\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 792, "to": 831 } }
        }
      }
    ],
    [
      "1b9dca35-7383-41fe-a689-1724f28d51b2",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 832, "to": 834 } }
        }
      }
    ],
    [
      "10fe8d57-ccbc-4d4a-a2d6-41c7f5de2092",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"media_gallery\": [\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_main_1.jpg\",\n              \"label\": \"\",\n              \"position\": 1\n            },\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_alt1_1.jpg\",\n              \"label\": \"\",\n              \"position\": 2\n            },\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_back_1.jpg\",\n              \"label\": \"\",\n              \"position\": 3\n            }\n          ],\n          \"configurable_options\": [\n            {\n              \"uid\": \"Y29uZmlndXJhYmxlLzYwMi85Mw==\",\n              \"attribute_code\": \"color\",\n              \"values\": [\n                {\n                  \"label\": \"Black\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 836, "to": 865 } }
        }
      }
    ],
    [
      "bef3e04b-db39-44ef-9657-57cd55184d42",
      {
        "pageContent": "\"uid\": \"Y29uZmlndXJhYmxlLzkzLzQ5\"\n                },\n                {\n                  \"label\": \"Blue\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUw\"\n                },\n                {\n                  \"label\": \"Red\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU4\"\n                }\n              ]\n            },\n            {\n              \"uid\": \"Y29uZmlndXJhYmxlLzYwMi8xNjA=\",\n              \"attribute_code\": \"size\",\n              \"values\": [\n                {\n                  \"label\": \"XS\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjY=\"\n                },\n                {\n                  \"label\": \"S\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjc=\"\n                },\n                {\n                  \"label\": \"M\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjg=\"\n                },\n                {\n                  \"label\": \"L\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjk=\"\n                },\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 866, "to": 898 } }
        }
      }
    ],
    [
      "b5202ab0-2328-4ad2-b50b-6cd9e7ea9eb1",
      {
        "pageContent": "{\n                  \"label\": \"XL\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzA=\"\n                }\n              ]\n            }\n          ],\n          \"configurable_product_options_selection\": {\n            \"options_available_for_selection\": [\n              {\n                \"attribute_code\": \"size\",\n                \"option_value_uids\": [\n                  \"Y29uZmlndXJhYmxlLzE2MC8xNjY=\",\n                  \"Y29uZmlndXJhYmxlLzE2MC8xNjc=\",\n                  \"Y29uZmlndXJhYmxlLzE2MC8xNjg=\",\n                  \"Y29uZmlndXJhYmxlLzE2MC8xNjk=\",\n                  \"Y29uZmlndXJhYmxlLzE2MC8xNzA=\"\n                ]\n              },\n              {\n                \"attribute_code\": \"color\",\n                \"option_value_uids\": [\n                  \"Y29uZmlndXJhYmxlLzkzLzU4\"\n                ]\n              }\n            ],\n            \"media_gallery\": [\n              {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 898, "to": 925 } }
        }
      }
    ],
    [
      "b44e4c0c-5f43-49a7-8e8d-3d8e66c0a03b",
      {
        "pageContent": "{\n                \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-red_main_1.jpg\",\n                \"label\": \"\",\n                \"position\": 1\n              }\n            ],\n            \"variant\": null\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 925, "to": 938 } }
        }
      }
    ],
    [
      "0a0dcc19-d49b-426d-b389-ea2c592d5910",
      {
        "pageContent": "#### Step 3. Select the size\n\nIn this example, the shopper has selected the Medium option for the size attribute. Therefore, the query adds the corresponding `uid` to the `configurable_product_options_selection` filter.\n\n-  The `options_available_for_selection` shows that a `size` and a `color` option has been selected.\n-  The Luma sample data does not include any images that are specific to a size, so the content of the `media_gallery` object is unchanged.\n-  The `variant` object contains a few details about the selected variant.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 940, "to": 948 } }
        }
      }
    ],
    [
      "72dfb44e-bd6a-4546-a734-e6951e597a0a",
      {
        "pageContent": "**Request:**\n\n```graphql\nquery {\n  products(search: \"MS10\" ) {\n    items {\n      ... on ConfigurableProduct {\n        media_gallery {\n          url\n          label\n          position\n        }\n        configurable_options {\n          uid\n          attribute_code\n          values {\n            label\n            uid\n          }\n        }\n        configurable_product_options_selection(configurableOptionValueUids: [\"Y29uZmlndXJhYmxlLzkzLzU4\", \"Y29uZmlndXJhYmxlLzE2MC8xNjg=\"]) {\n          options_available_for_selection {\n            attribute_code\n            option_value_uids\n          }\n          media_gallery {\n            url\n            label\n            position\n          }\n          variant {\n            uid\n            sku\n            name\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 948, "to": 987 } }
        }
      }
    ],
    [
      "78f50b39-b7b0-46aa-9753-b7a47f695691",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 988, "to": 990 } }
        }
      }
    ],
    [
      "52b940d3-7ede-4880-8f40-6edf91ee3258",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"media_gallery\": [\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_main_1.jpg\",\n              \"label\": \"\",\n              \"position\": 1\n            },\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_alt1_1.jpg\",\n              \"label\": \"\",\n              \"position\": 2\n            },\n            {\n              \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-blue_back_1.jpg\",\n              \"label\": \"\",\n              \"position\": 3\n            }\n          ],\n          \"configurable_options\": [\n            {\n              \"uid\": \"Y29uZmlndXJhYmxlLzYwMi85Mw==\",\n              \"attribute_code\": \"color\",\n              \"values\": [\n                {\n                  \"label\": \"Black\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 992, "to": 1021 } }
        }
      }
    ],
    [
      "fb6b3b58-e059-44e0-9ede-ffe855d60187",
      {
        "pageContent": "\"uid\": \"Y29uZmlndXJhYmxlLzkzLzQ5\"\n                },\n                {\n                  \"label\": \"Blue\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUw\"\n                },\n                {\n                  \"label\": \"Red\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU4\"\n                }\n              ]\n            },\n            {\n              \"uid\": \"Y29uZmlndXJhYmxlLzYwMi8xNjA=\",\n              \"attribute_code\": \"size\",\n              \"values\": [\n                {\n                  \"label\": \"XS\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjY=\"\n                },\n                {\n                  \"label\": \"S\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjc=\"\n                },\n                {\n                  \"label\": \"M\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjg=\"\n                },\n                {\n                  \"label\": \"L\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNjk=\"\n                },\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1022, "to": 1054 } }
        }
      }
    ],
    [
      "b9ce5f0b-519a-4e28-ae20-1741c452ca2b",
      {
        "pageContent": "{\n                  \"label\": \"XL\",\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzA=\"\n                }\n              ]\n            }\n          ],\n          \"configurable_product_options_selection\": {\n            \"options_available_for_selection\": [\n              {\n                \"attribute_code\": \"size\",\n                \"option_value_uids\": [\n                  \"Y29uZmlndXJhYmxlLzE2MC8xNjg=\"\n                ]\n              },\n              {\n                \"attribute_code\": \"color\",\n                \"option_value_uids\": [\n                  \"Y29uZmlndXJhYmxlLzkzLzU4\"\n                ]\n              }\n            ],\n            \"media_gallery\": [\n              {\n                \"url\": \"http://<host>/media/catalog/product/cache/816455256c48217ab8c5c822a6039d1a/m/s/ms10-red_main_1.jpg\",\n                \"label\": \"\",\n                \"position\": 1\n              }\n            ],\n            \"variant\": {\n              \"uid\": \"NTg5\",\n              \"sku\": \"MS10-M-Red\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1054, "to": 1085 } }
        }
      }
    ],
    [
      "4affd8dc-aa08-491b-aa0b-779d98122089",
      {
        "pageContent": "\"name\": \"Logan  HeatTec&reg; Tee-M-Red\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1086, "to": 1094 } }
        }
      }
    ],
    [
      "e610acba-2526-4bd3-a7e4-a310a59baac5",
      {
        "pageContent": "### Return swatch information\n\nThe following query returns the color and text swatches assigned to configurable product `MJ06`.\n\n**Request:**\n\n```graphql\n{\n  products(filter: {sku: {eq: \"MJ06\"}}) {\n    items {\n        ... on ConfigurableProduct{\n      configurable_options{\n          values {\n            label\n            swatch_data{\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1096, "to": 1118 } }
        }
      }
    ],
    [
      "976232a5-d107-4c8b-9054-8ca1f9a739cd",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1119, "to": 1121 } }
        }
      }
    ],
    [
      "6a9be059-cd09-4d9a-93ee-511059d12fa4",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"configurable_options\": [\n            {\n              \"values\": [\n                {\n                  \"label\": \"Blue\",\n                  \"swatch_data\": {\n                    \"value\": \"#1857f7\"\n                  }\n                },\n                {\n                  \"label\": \"Green\",\n                  \"swatch_data\": {\n                    \"value\": \"#53a828\"\n                  }\n                },\n                {\n                  \"label\": \"Purple\",\n                  \"swatch_data\": {\n                    \"value\": \"#ef3dff\"\n                  }\n                }\n              ]\n            },\n            {\n              \"values\": [\n                {\n                  \"label\": \"XS\",\n                  \"swatch_data\": {\n                    \"value\": \"XS\"\n                  }\n                },\n                {\n                  \"label\": \"S\",\n                  \"swatch_data\": {\n                    \"value\": \"S\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1123, "to": 1163 } }
        }
      }
    ],
    [
      "91360299-8bc5-4522-9b2d-cca200df36e1",
      {
        "pageContent": "}\n                },\n                {\n                  \"label\": \"M\",\n                  \"swatch_data\": {\n                    \"value\": \"M\"\n                  }\n                },\n                {\n                  \"label\": \"L\",\n                  \"swatch_data\": {\n                    \"value\": \"L\"\n                  }\n                },\n                {\n                  \"label\": \"XL\",\n                  \"swatch_data\": {\n                    \"value\": \"XL\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1164, "to": 1192 } }
        }
      }
    ],
    [
      "cd0adf15-ea3f-4b6a-885c-23587102acda",
      {
        "pageContent": "## Related topics\n\n-  [addConfigurableProductsToCart mutation](../../../cart/mutations/add-configurable-products.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/configurable.md",
          "loc": { "lines": { "from": 1194, "to": 1196 } }
        }
      }
    ],
    [
      "cc698e6b-7fff-4031-b397-8a4172af916c",
      {
        "pageContent": "---\ntitle: Downloadable product data types\n---\n\n# Downloadable product data types\n\nThe `DownloadableProduct` data type implements [`ProductInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface) and [`CustomizableProductInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomizableProductInterface). As a result, attributes that are specific to downloadable products can be used when performing a [`products`](../../queries/products.md) query. It also implements [RoutableInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RoutableInterface).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/downloadable.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "edd16f3f-47ca-4fca-bac3-809986d255b0",
      {
        "pageContent": "## Sample query\n\nAdd the following inline fragment to the output section of your `products` query to return information specific to downloadable products:\n\n```text\n... on DownloadableProduct {\n  items {\n   <attributes>\n  }\n}\n```\n\nThe following query returns information about downloadable product `240-LV04`, which is defined in the sample data.\n\n**Request:**\n\n```graphql\n{\n  products(filter: { sku: { eq: \"240-LV04\" } }) {\n    items {\n      uid\n      name\n      sku\n      __typename\n      price_range{\n        minimum_price{\n          regular_price{\n            value\n            currency\n          }\n        }\n      }\n      ... on DownloadableProduct {\n        links_title\n        links_purchased_separately\n        downloadable_product_links {\n          sample_url\n          sort_order\n          title\n          uid\n          price\n        }\n        downloadable_product_samples {\n          title\n          sort_order\n          sample_url\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/downloadable.md",
          "loc": { "lines": { "from": 9, "to": 59 } }
        }
      }
    ],
    [
      "7d2fa808-2444-4338-a095-325818892988",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/downloadable.md",
          "loc": { "lines": { "from": 60, "to": 62 } }
        }
      }
    ],
    [
      "b185a179-bf61-4afd-8673-c0ebd91df53f",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"uid\": \"NDc=\",\n          \"name\": \"Beginner's Yoga\",\n          \"sku\": \"240-LV04\",\n          \"__typename\": \"DownloadableProduct\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 6,\n                \"currency\": \"USD\"\n              }\n            }\n          },\n          \"links_title\": \"Downloads\",\n          \"links_purchased_separately\": 0,\n          \"downloadable_product_links\": [\n            {\n              \"sample_url\": \"http://example.com/downloadable/download/linkSample/link_id/1/\",\n              \"sort_order\": 1,\n              \"title\": \"Beginner's Yoga\",\n              \"uid\": \"ZG93bmxvYWRhYmxlLzE=\",\n              \"price\": 6\n            }\n          ],\n          \"downloadable_product_samples\": [\n            {\n              \"title\": \"Trailer #1\",\n              \"sort_order\": 1,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/downloadable.md",
          "loc": { "lines": { "from": 64, "to": 96 } }
        }
      }
    ],
    [
      "c146506b-8698-4446-ae86-d770f4bae225",
      {
        "pageContent": "\"sample_url\": \"http://example.com/downloadable/download/sample/sample_id/1/\"\n            },\n            {\n              \"title\": \"Trailer #2\",\n              \"sort_order\": 1,\n              \"sample_url\": \"http://example.com/downloadable/download/sample/sample_id/2/\"\n            },\n            {\n              \"title\": \"Trailer #3\",\n              \"sort_order\": 1,\n              \"sample_url\": \"http://example.com/downloadable/download/sample/sample_id/3/\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/downloadable.md",
          "loc": { "lines": { "from": 97, "to": 115 } }
        }
      }
    ],
    [
      "d7faf3f6-d076-41ab-b27e-00f908ea1cec",
      {
        "pageContent": "## Related topics\n\n-  [customerDownloadableProducts query](../../../customer/queries/downloadable-products.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/downloadable.md",
          "loc": { "lines": { "from": 117, "to": 119 } }
        }
      }
    ],
    [
      "4e8daf53-ea3f-4d8a-a802-84984944e09c",
      {
        "pageContent": "---\ntitle: Gift card product data types\nedition: ee\n---\n\n# Gift card product data types\n\nThe `GiftCardProduct` data type defines properties of a gift card, including the minimum and maximum values and an array that contains the current and past values on the specific gift card\n\nIt implements the following interfaces:\n\n-  [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface)\n-  [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-PhysicalProductInterface)\n-  [CustomizableProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomizableProductInterface)\n-  [RoutableInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RoutableInterface)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/gift-card.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "1b32116c-b668-4f2a-9740-e1849cf59dc2",
      {
        "pageContent": "## Sample query\n\nThe following query returns information about gift card product `GiftCard25`. (It is not defined in the sample data.)\n\n**Request:**\n\n```graphql\n{\n  products(filter: { sku: { eq: \"GiftCard25\" } }) {\n    items {\n      uid\n      __typename\n      name\n      sku\n      ... on GiftCardProduct {\n        allow_message\n        message_max_length\n        allow_open_amount\n        open_amount_min\n        open_amount_max\n        is_returnable\n        is_redeemable\n        giftcard_type\n        giftcard_amounts {\n          uid\n          website_id\n          value\n          attribute_id\n          website_value\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/gift-card.md",
          "loc": { "lines": { "from": 17, "to": 50 } }
        }
      }
    ],
    [
      "aeb15aff-8963-4e24-8a7f-6a74781ac553",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"uid\": \"MjA0OQ==\",\n          \"__typename\": \"GiftCardProduct\",\n          \"name\": \"GiftCard25\",\n          \"sku\": \"GiftCard25\",\n          \"allow_message\": true,\n          \"message_max_length\": 255,\n          \"allow_open_amount\": false,\n          \"open_amount_min\": null,\n          \"open_amount_max\": null,\n          \"is_returnable\": \"2\",\n          \"is_redeemable\": true,\n          \"giftcard_type\": \"VIRTUAL\",\n          \"giftcard_amounts\": [\n            {\n              \"value_id\": \"Mg==\",\n              \"website_id\": 0,\n              \"value\": 25,\n              \"attribute_id\": 129,\n              \"website_value\": 25\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/gift-card.md",
          "loc": { "lines": { "from": 51, "to": 87 } }
        }
      }
    ],
    [
      "4c75eca6-0240-4082-b59e-7054f2a0d904",
      {
        "pageContent": "## Related topics\n\n-  [applyGiftCardToCart mutation](../../../cart/mutations/apply-giftcard.md)\n-  [redeemGiftCardBalanceAsStoreCredit mutation](../../../cart/mutations/redeem-giftcard-balance.md)\n-  [removeGiftCardFromCart mutation](../../../cart/mutations/remove-giftcard.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/gift-card.md",
          "loc": { "lines": { "from": 89, "to": 93 } }
        }
      }
    ],
    [
      "bdf3c103-bd89-42ae-b0cb-457551b8b561",
      {
        "pageContent": "---\ntitle: Grouped product data types\n---\n\n# Grouped product data types\n\nThe `GroupedProduct` data type implements [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface) and [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-PhysicalProductInterface). As a result, attributes that are specific to grouped products can be used when performing a [products](../../queries/products.md) query. It also implements [RoutableInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RoutableInterface).\n\n## Sample query\n\nThe following query returns information about downloadable product `24-WG085_Group`, which is defined in the sample data.\n\nimport GroupedProductSample from '/src/_includes/graphql/examples/grouped-product-sample-24.md'\n\n<GroupedProductSample />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/grouped.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "74f7c346-438f-4277-8ac8-6d56ec54f368",
      {
        "pageContent": "---\ntitle: Product interface implementations\n---\n\n# Product interface implementations\n\nAdobe Commerce and Magento Open Source provides multiple product types, and most of these product types have specialized attributes that are not defined in the [`ProductInterface`(https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface)].",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "1ad9dde9-ed29-4296-8ecd-79630ee3b22a",
      {
        "pageContent": "Product type | Implements | Has product-specific attributes?\n--- | --- | ---\n[BundleProduct](bundle.md) | ProductInterface, [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface), [CustomizableProductInterface](../customizable-option.md), [RoutableInterface](../routable.md) | Yes\n[ConfigurableProduct](configurable.md) | [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface), [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface), [CustomizableProductInterface](../customizable-option.md), [RoutableInterface](../routable.md) | Yes",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/index.md",
          "loc": { "lines": { "from": 9, "to": 12 } }
        }
      }
    ],
    [
      "640fbf81-a876-40f7-a531-28e90f5d543b",
      {
        "pageContent": "[DownloadableProduct](downloadable.md) | [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface),  [CustomizableProductInterface](../customizable-option.md), [RoutableInterface](../routable.md)  | Yes\n[GiftCardProduct](gift-card.md) | [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface),  [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface), [CustomizableProductInterface](../customizable-option.md), [RoutableInterface](../routable.md)| Yes",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/index.md",
          "loc": { "lines": { "from": 13, "to": 14 } }
        }
      }
    ],
    [
      "645f73a1-34c1-4b9d-a727-b37c9cef292f",
      {
        "pageContent": "[GroupedProduct](grouped.md) | [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface), [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface), [CustomizableProductInterface](../customizable-option.md), [RoutableInterface](../routable.md) | Yes\n[SimpleProduct](simple.md) | [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface), [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface), [CustomizableProductInterface](../customizable-option.md), [RoutableInterface](../routable.md) | No",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/index.md",
          "loc": { "lines": { "from": 15, "to": 16 } }
        }
      }
    ],
    [
      "44ee3c76-0f15-4452-97fa-c3fa2fd169fa",
      {
        "pageContent": "[VirtualProduct](virtual.md) | [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface),  [CustomizableProductInterface](../customizable-option.md), [RoutableInterface](../routable.md) | No",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/index.md",
          "loc": { "lines": { "from": 17, "to": 17 } }
        }
      }
    ],
    [
      "9da2b0f5-3fdd-4f66-b6bb-7c2d3d32c44a",
      {
        "pageContent": "## Query for product-specific attributes\n\nTo return attributes that are specific to a product type, append a structure similar to the following to the end of the `Products` output object:\n\n```text\n... on <ProductType> {\n  items{\n    <ProductType-attribute1>\n    <ProductType-attribute2>\n    ...\n    }\n  }\n```\n\nFor example, to return `GroupedProduct` attributes, construct your query like this:\n\nimport GroupedProductSample from '/src/_includes/graphql/examples/grouped-product-sample-24.md'\n\n<GroupedProductSample />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/index.md",
          "loc": { "lines": { "from": 19, "to": 37 } }
        }
      }
    ],
    [
      "92006f6f-5970-4c9e-b689-3ba79d0e1545",
      {
        "pageContent": "---\ntitle: Simple product data types\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# Simple product data types\n\nThe `SimpleProduct` data type implements the following interfaces:\n\n-  [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface)\n-  [PhysicalProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-PhysicalProductInterface)\n-  [CustomizableProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomizableProductInterface)\n-  [RoutableInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RoutableInterface)\n\nAttributes that are specific to the simple products can be used when performing a [`products`](../../queries/products.md) query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/simple.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "5a6dede6-48e8-4efe-ac0f-d57d189d3f74",
      {
        "pageContent": "## Sample query\n\nThe following query returns information about simple product `24-MB01`, which is defined in the sample data.\n\n```graphql\n{\n  products(\n    filter: {\n      sku: {\n        eq: \"24-MB01\"\n      }\n    }\n  ) {\n    items {\n      sku\n      __typename\n      uid\n      name\n      categories {\n        uid\n        name\n        path\n      }\n      price_range {\n        minimum_price {\n          final_price {\n            currency\n            value\n          }\n        }\n        maximum_price {\n          final_price {\n            currency\n            value\n          }\n        }\n      }\n      stock_status\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/simple.md",
          "loc": { "lines": { "from": 18, "to": 58 } }
        }
      }
    ],
    [
      "490e3f80-4b55-495b-8480-2c3662da74a6",
      {
        "pageContent": "```\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"sku\": \"24-MB01\",\n          \"__typename\": \"SimpleProduct\",\n          \"uid\": \"MQ==\",\n          \"name\": \"Joust Duffle Bag\",\n          \"categories\": [\n            {\n              \"uid\": \"Mw==\",\n              \"name\": \"Gear\",\n              \"path\": \"1/2/3\"\n            },\n            {\n              \"uid\": \"NA==\",\n              \"name\": \"Bags\",\n              \"path\": \"1/2/3/4\"\n            }\n          ],\n          \"price_range\": {\n            \"minimum_price\": {\n              \"final_price\": {\n                \"currency\": \"USD\",\n                \"value\": 34\n              }\n            },\n            \"maximum_price\": {\n              \"final_price\": {\n                \"currency\": \"USD\",\n                \"value\": 34\n              }\n            }\n          },\n          \"stock_status\": \"IN_STOCK\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/simple.md",
          "loc": { "lines": { "from": 60, "to": 104 } }
        }
      }
    ],
    [
      "c8cf6bcd-ea5c-4a02-ab0d-4d1b273744c4",
      {
        "pageContent": "## Related topics\n\n-  [addSimpleProductsToCart mutation](../../../cart/mutations/add-simple-products.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/simple.md",
          "loc": { "lines": { "from": 106, "to": 108 } }
        }
      }
    ],
    [
      "8556038b-0981-49f8-968e-499a988cb414",
      {
        "pageContent": "---\ntitle: Virtual product data types\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# Virtual product data types\n\nThe `VirtualProduct` data type implements the following interfaces:\n\n-  [ProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-ProductInterface)\n-  [CustomizableProductInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-CustomizableProductInterface)\n-  [RoutableInterface](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#definition-RoutableInterface)\n\nAttributes that are specific to the virtual products can be used when performing a [`products`](../../queries/products.md) query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/virtual.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "d0b512b0-1697-4359-b3f3-c24a9aa59eba",
      {
        "pageContent": "## Sample query\n\nThe following query returns information about virtual product.\n\n```graphql\n{\n  products(\n    filter: {\n      sku: {\n        eq: \"test-virtual-product\"\n      }\n    }\n  ) {\n    items {\n      sku\n      __typename\n      uid\n      name\n      categories {\n        uid\n        name\n        path\n      }\n      price_range {\n        minimum_price {\n          final_price {\n            currency\n            value\n          }\n        }\n        maximum_price {\n          final_price {\n            currency\n            value\n          }\n        }\n      }\n      stock_status\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/virtual.md",
          "loc": { "lines": { "from": 17, "to": 57 } }
        }
      }
    ],
    [
      "e780528c-2fd9-4837-9cc4-446664f5c0db",
      {
        "pageContent": "```\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"sku\": \"test-virtual-product\",\n          \"__typename\": \"VirtualProduct\",\n          \"uid\": \"MjA1MA==\",\n          \"name\": \"test-virtual-product\",\n          \"categories\": [\n            {\n              \"uid\": \"Mzg=\",\n              \"name\": \"Sale\",\n              \"path\": \"1/2/38\"\n            }\n          ],\n          \"price_range\": {\n            \"minimum_price\": {\n              \"final_price\": {\n                \"currency\": \"USD\",\n                \"value\": 123\n              }\n            },\n            \"maximum_price\": {\n              \"final_price\": {\n                \"currency\": \"USD\",\n                \"value\": 123\n              }\n            }\n          },\n          \"stock_status\": \"IN_STOCK\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/virtual.md",
          "loc": { "lines": { "from": 58, "to": 97 } }
        }
      }
    ],
    [
      "70a01181-dfe7-456c-ac70-a2639d13d639",
      {
        "pageContent": "## Related topics\n\n-  [addVirtualProductsToCart mutation](../../../cart/mutations/add-virtual-products.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/interfaces/types/virtual.md",
          "loc": { "lines": { "from": 99, "to": 101 } }
        }
      }
    ],
    [
      "87924101-7324-4aeb-8df0-2c2319c7f613",
      {
        "pageContent": "---\ntitle: addProductsToCompareList mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# addProductsToCompareList mutation\n\nThe `addProductsToCompareList` mutation adds products to the comparison list.\n\nYou must specify the unique ID of the comparison list as well as a list of product IDs to be added to the comparison list.\n\n## Syntax\n\n```graphql\nmutation {\n    addProductsToCompareList(\n        input: AddProductsToCompareListInput\n    ) {\n        CompareList\n    }\n}\n```\n\n## Reference\n\nThe [`addProductsToCompareList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addProductsToCompareList) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "9cde9c3d-838f-4cf4-8fc6-5851e1fa5274",
      {
        "pageContent": "## Example usage\n\nThe following example shows how to add two products to the existing comparison list with the `uid` value of `sssXyGZkTFksdPnxNoK1ut6OiV4bbchD`.\n\n**Request:**\n\n```graphql\nmutation {\n  addProductsToCompareList(\n    input: {\n      uid: \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n      products: [\"3\", \"4\"]\n    }\n  ) {\n    uid\n    item_count\n    attributes {\n      code\n      label\n    }\n    items {\n      uid\n      product {\n        sku\n        name\n        description {\n          html\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 29, "to": 60 } }
        }
      }
    ],
    [
      "d6bbb7f2-f36f-4914-944d-fcffd1eb1439",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 61, "to": 63 } }
        }
      }
    ],
    [
      "76145e7a-87a2-474e-99bb-85d53b39b962",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"addProductsToCompareList\": {\n      \"uid\": \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n      \"item_count\": 4,\n      \"attributes\": [\n        {\n          \"code\": \"sku\",\n          \"label\": \"SKU\"\n        },\n        {\n          \"code\": \"description\",\n          \"label\": \"Description\"\n        },\n        {\n          \"code\": \"short_description\",\n          \"label\": \"Short Description\"\n        },\n        {\n          \"code\": \"activity\",\n          \"label\": \"Activity\"\n        }\n      ],\n      \"items\": [\n        {\n          \"uid\": \"1\",\n          \"product\": {\n            \"sku\": \"24-MB01\",\n            \"name\": \"Joust Duffle Bag\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 65, "to": 95 } }
        }
      }
    ],
    [
      "2ee3bcab-9ea7-4cd2-affa-8aa90feba19f",
      {
        "pageContent": "\"html\": \"<p>The sporty Joust Duffle Bag can't be beat - not in the gym, not on the luggage carousel, not anywhere. Big enough to haul a basketball or soccer ball and some sneakers with plenty of room to spare, it's ideal for athletes with places to go.<p>\\n<ul>\\n<li>Dual top handles.</li>\\n<li>Adjustable shoulder strap.</li>\\n<li>Full-length zipper.</li>\\n<li>L 29\\\" x W 13\\\" x H 11\\\".</li>\\n</ul>\"\n            }\n          }\n        },\n        {\n          \"uid\": \"2\",\n          \"product\": {\n            \"sku\": \"24-MB04\",\n            \"name\": \"Strive Shoulder Pack\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 96, "to": 105 } }
        }
      }
    ],
    [
      "667da511-1b79-4a2c-826e-93c8f4ce74e5",
      {
        "pageContent": "\"html\": \"<p>Convenience is next to nothing when your day is crammed with action. So whether you're heading to class, gym, or the unbeaten path, make sure you've got your Strive Shoulder Pack stuffed with all your essentials, and extras as well.</p>\\n<ul>\\n<li>Zippered main compartment.</li>\\n<li>Front zippered pocket.</li>\\n<li>Side mesh pocket.</li>\\n<li>Cell phone pocket on strap.</li>\\n<li>Adjustable shoulder strap and top carry handle.</li>\\n</ul>\"\n            }\n          }\n        },\n        {\n          \"uid\": \"3\",\n          \"product\": {\n            \"sku\": \"24-MB03\",\n            \"name\": \"Crown Summit Backpack\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 106, "to": 115 } }
        }
      }
    ],
    [
      "ff136aca-cc4b-4008-b511-e082ec0b29b5",
      {
        "pageContent": "\"html\": \"<p>The Crown Summit Backpack is equally at home in a gym locker, study cube or a pup tent, so be sure yours is packed with books, a bag lunch, water bottles, yoga block, laptop, or whatever else you want in hand. Rugged enough for day hikes and camping trips, it has two large zippered compartments and padded, adjustable shoulder straps.</p>\\n<ul>\\n<li>Top handle.</li>\\n<li>Grommet holes.</li>\\n<li>Two-way zippers.</li>\\n<li>H 20\\\" x W 14\\\" x D 12\\\".</li>\\n<li>Weight: 2 lbs, 8 oz. Volume: 29 L.</li>\\n<ul>\"\n            }\n          }\n        },\n        {\n          \"uid\": \"4\",\n          \"product\": {\n            \"sku\": \"24-MB05\",\n            \"name\": \"Wayfarer Messenger Bag\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 116, "to": 125 } }
        }
      }
    ],
    [
      "d6acd99a-3462-408f-9c4b-fd37e9d052b5",
      {
        "pageContent": "\"html\": \"<p>Perfect for class, work or the gym, the Wayfarer Messenger Bag is packed with pockets. The dual-buckle flap closure reveals an organizational panel, and the roomy main compartment has spaces for your laptop and a change of clothes. An adjustable shoulder strap and easy-grip handle promise easy carrying.</p>\\n<ul>\\n<li>Multiple internal zip pockets.</li>\\n<li>Made of durable nylon.</li>\\n</ul>\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 126, "to": 134 } }
        }
      }
    ],
    [
      "c2100a1e-866d-4e95-a8ae-6bc2eb0f61ef",
      {
        "pageContent": "## Related topics\n\n*  [compareList query](../queries/compare-list.md)\n*  [assignCompareListToCustomer mutation](assign-compare-list.md)\n*  [createCompareList mutation](create-compare-list.md)\n*  [deleteCompareList mutation](delete-compare-list.md)\n*  [removeProductsFromCompareList mutation](remove-from-compare-list.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/add-products-to-compare-list.md",
          "loc": { "lines": { "from": 136, "to": 142 } }
        }
      }
    ],
    [
      "88df82a0-af1f-4c5b-a1cc-3821ddbb662a",
      {
        "pageContent": "---\ntitle: assignCompareListToCustomer mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# assignCompareListToCustomer mutation\n\nThe `assignCompareListToCustomer` mutation assigns the specified comparison list to the logged-in customer. Use this mutation when a customer creates a comparison list as a guest, but subsequently logs in.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    assignCompareListToCustomer(\n        uid: ID!\n    ) {\n        AssignCompareListToCustomerOutput\n    }\n}\n```\n\n## Reference\n\nThe [`assignCompareListToCustomer`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-assignCompareListToCustomer) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "9b9bcbac-344a-4038-96a5-8bfb1285b381",
      {
        "pageContent": "## Example usage\n\nThe following example assigns the comparison list with a `uid` value of `sssXyGZkTFksdPnxNoK1ut6OiV4bbchD` to the logged-in customer.\n\n**Request:**\n\n```graphql\nmutation {\n    assignCompareListToCustomer(\n        uid: \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n    ) {\n        result\n        compare_list {\n            uid\n            item_count\n            attributes {\n                code\n                label\n            }\n            items {\n                uid\n                product {\n                    sku\n                    name\n                    description {\n                        html\n                    }\n                }\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 29, "to": 60 } }
        }
      }
    ],
    [
      "b7d90716-159c-4eef-8fdf-82290c1c7149",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 61, "to": 63 } }
        }
      }
    ],
    [
      "003a61e3-b6c9-4e9b-acd5-601e26cdf982",
      {
        "pageContent": "```json\n{\n    \"data\": {\n        \"assignCompareListToCustomer\": {\n            \"result\": true,\n            \"compare_list\": {\n                \"uid\": \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n                \"item_count\": 2,\n                \"attributes\": [\n                    {\n                        \"code\": \"sku\",\n                        \"label\": \"SKU\"\n                    },\n                    {\n                        \"code\": \"description\",\n                        \"label\": \"Description\"\n                    },\n                    {\n                        \"code\": \"short_description\",\n                        \"label\": \"Short Description\"\n                    },\n                    {\n                        \"code\": \"activity\",\n                        \"label\": \"Activity\"\n                    }\n                ],\n                \"items\": [\n                    {\n                        \"uid\": \"3\",\n                        \"product\": {\n                            \"sku\": \"24-MB03\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 65, "to": 95 } }
        }
      }
    ],
    [
      "2c22efc4-b46c-4fb2-910c-eff7f82215e3",
      {
        "pageContent": "\"name\": \"Crown Summit Backpack\",\n                            \"description\": {\n                                \"html\": \"<p>The Crown Summit Backpack is equally at home in a gym locker, study cube or a pup tent, so be sure yours is packed with books, a bag lunch, water bottles, yoga block, laptop, or whatever else you want in hand. Rugged enough for day hikes and camping trips, it has two large zippered compartments and padded, adjustable shoulder straps.</p>\\n<ul>\\n<li>Top handle.</li>\\n<li>Grommet holes.</li>\\n<li>Two-way zippers.</li>\\n<li>H 20\\\" x W 14\\\" x D 12\\\".</li>\\n<li>Weight: 2 lbs, 8 oz. Volume: 29 L.</li>\\n<ul>\"\n                            }\n                        }\n                    },\n                    {\n                        \"uid\": \"4\",\n                        \"product\": {\n                            \"sku\": \"24-MB05\",\n                            \"name\": \"Wayfarer Messenger Bag\",\n                            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 96, "to": 107 } }
        }
      }
    ],
    [
      "4e965224-f275-4871-a69c-f83c8f7c38a7",
      {
        "pageContent": "\"html\": \"<p>Perfect for class, work or the gym, the Wayfarer Messenger Bag is packed with pockets. The dual-buckle flap closure reveals an organizational panel, and the roomy main compartment has spaces for your laptop and a change of clothes. An adjustable shoulder strap and easy-grip handle promise easy carrying.</p>\\n<ul>\\n<li>Multiple internal zip pockets.</li>\\n<li>Made of durable nylon.</li>\\n</ul>\"\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 108, "to": 117 } }
        }
      }
    ],
    [
      "3bdf5df7-8748-4824-b09f-1f49b553763b",
      {
        "pageContent": "## Related topics\n\n*  [compareList query](../queries/compare-list.md)\n*  [addProductsToCompareList mutation](add-products-to-compare-list.md)\n*  [createCompareList mutation](create-compare-list.md)\n*  [deleteCompareList mutation](delete-compare-list.md)\n*  [removeProductsFromCompareList mutation](remove-from-compare-list.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/assign-compare-list.md",
          "loc": { "lines": { "from": 119, "to": 125 } }
        }
      }
    ],
    [
      "00ff8623-8006-49a9-8f3e-f8659f8b3d6c",
      {
        "pageContent": "---\ntitle: createCompareList mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# createCompareList mutation\n\nThe `createCompareList` mutation creates a new comparison list with products specified in the `input` attribute.\n\nLuma uses a widget to display the product name, price, and other information. To present this information without a widget, set the product attributes to be comparable at **Stores** > Attributes > **Product** > `Attribute Name` > **Storefront Properties** > **Comparable on Storefront**.\n\n## Syntax\n\n```graphql\nmutation {\n    createCompareList(\n        input: CreateCompareListInput\n    ) {\n        CompareList\n    }\n}\n```\n\n## Reference\n\nThe [`createCompareList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createCompareList) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-compare-list.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "3ef4b744-fcc1-41b1-bfd0-9f95f1fa1b5b",
      {
        "pageContent": "## Example usage\n\nThe following example shows how to create a comparison list containing two products.\n\n**Request:**\n\n```graphql\nmutation {\n    createCompareList(\n        input: {\n            products: [\"1\", \"2\"]\n        }\n    ) {\n        uid\n        item_count\n        attributes {\n            code\n            label\n        }\n        items {\n            uid\n            product {\n                sku\n                name\n                description {\n                    html\n                }\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-compare-list.md",
          "loc": { "lines": { "from": 29, "to": 59 } }
        }
      }
    ],
    [
      "2b0ca040-29c0-4de5-96f6-6223b7dc5edb",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-compare-list.md",
          "loc": { "lines": { "from": 60, "to": 62 } }
        }
      }
    ],
    [
      "9481d1ea-64e1-4b47-86af-ab61645ec9fe",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"createCompareList\": {\n      \"uid\": \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n      \"item_count\": 2,\n      \"attributes\": [\n        {\n          \"code\": \"sku\",\n          \"label\": \"SKU\"\n        },\n        {\n          \"code\": \"description\",\n          \"label\": \"Description\"\n        },\n        {\n          \"code\": \"short_description\",\n          \"label\": \"Short Description\"\n        },\n        {\n          \"code\": \"activity\",\n          \"label\": \"Activity\"\n        }\n      ],\n      \"items\": [\n        {\n          \"uid\": \"1\",\n          \"product\": {\n            \"sku\": \"24-MB01\",\n            \"name\": \"Joust Duffle Bag\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-compare-list.md",
          "loc": { "lines": { "from": 64, "to": 94 } }
        }
      }
    ],
    [
      "0fe1168c-3f3d-4efb-9466-f0b66a0677d6",
      {
        "pageContent": "\"html\": \"<p>The sporty Joust Duffle Bag can't be beat - not in the gym, not on the luggage carousel, not anywhere. Big enough to haul a basketball or soccer ball and some sneakers with plenty of room to spare, it's ideal for athletes with places to go.<p>\\n<ul>\\n<li>Dual top handles.</li>\\n<li>Adjustable shoulder strap.</li>\\n<li>Full-length zipper.</li>\\n<li>L 29\\\" x W 13\\\" x H 11\\\".</li>\\n</ul>\"\n            }\n          }\n        },\n        {\n          \"uid\": \"2\",\n          \"product\": {\n            \"sku\": \"24-MB04\",\n            \"name\": \"Strive Shoulder Pack\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-compare-list.md",
          "loc": { "lines": { "from": 95, "to": 104 } }
        }
      }
    ],
    [
      "52813a86-daca-4594-b2fd-b5834aae4604",
      {
        "pageContent": "\"html\": \"<p>Convenience is next to nothing when your day is crammed with action. So whether you're heading to class, gym, or the unbeaten path, make sure you've got your Strive Shoulder Pack stuffed with all your essentials, and extras as well.</p>\\n<ul>\\n<li>Zippered main compartment.</li>\\n<li>Front zippered pocket.</li>\\n<li>Side mesh pocket.</li>\\n<li>Cell phone pocket on strap.</li>\\n<li>Adjustable shoulder strap and top carry handle.</li>\\n</ul>\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-compare-list.md",
          "loc": { "lines": { "from": 105, "to": 113 } }
        }
      }
    ],
    [
      "ef13c306-16f9-4e46-a93b-f19d16c9f2ae",
      {
        "pageContent": "## Related topics\n\n*  [compareList query](../queries/compare-list.md)\n*  [addProductsToCompareList mutation](add-products-to-compare-list.md)\n*  [assignCompareListToCustomer mutation](assign-compare-list.md)\n*  [deleteCompareList mutation](delete-compare-list.md)\n*  [removeProductsFromCompareList mutation](remove-from-compare-list.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-compare-list.md",
          "loc": { "lines": { "from": 115, "to": 121 } }
        }
      }
    ],
    [
      "99b8c9de-fe5e-4236-a5a6-7cab8962e3ff",
      {
        "pageContent": "---\ntitle: createProductReview mutation\n---\n\n# createProductReview mutation\n\nThe `createProductReview` mutation adds a review for the specified product. Use the [`productReviewRatingsMetadata` query](../queries/product-review-ratings-metadata.md) to return a list of rating categories and possible values.\n\n## Syntax\n\n`createProductReview(input: CreateProductReviewInput!): CreateProductReviewOutput!`\n\n## Reference\n\nThe [`createProductReview`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createProductReview) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-review.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "3a8fe60b-d7cd-45b9-adc8-8cab6204ab9c",
      {
        "pageContent": "## Example usage\n\nIn the following example, Roni gives product `WH08` four stars overall, three stars for value, and four stars for quality.\n\n**Request:**\n\n```graphql\nmutation {\n  createProductReview(\n    input: {\n      sku: \"WH08\",\n      nickname: \"Roni\",\n      summary: \"Great looking sweatshirt\",\n      text: \"This sweatshirt looks and feels great. The zipper sometimes sticks a bit.\",\n      ratings: [\n        {\n          id: \"NA==\",\n          value_id: \"MTk=\"\n        }, {\n          id: \"MQ==\",\n          value_id: \"NA==\"\n        }, {\n          id: \"Mg==\",\n          value_id: \"OA==\"\n        }\n      ]\n    }\n) {\n    review {\n      nickname\n      summary\n      text\n      average_rating\n      ratings_breakdown {\n        name\n        value\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-review.md",
          "loc": { "lines": { "from": 17, "to": 56 } }
        }
      }
    ],
    [
      "cea36202-7202-406a-b866-2e890792c922",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createProductReview\": {\n      \"review\": {\n        \"nickname\": \"Roni\",\n        \"summary\": \"Great looking sweatshirt\",\n        \"text\": \"This sweatshirt looks and feels great. The zipper sometimes sticks a bit.\",\n        \"average_rating\": 73.33,\n        \"ratings_breakdown\": [\n          {\n            \"name\": \"Quality\",\n            \"value\": \"4\"\n          },\n          {\n            \"name\": \"Value\",\n            \"value\": \"3\"\n          },\n          {\n            \"name\": \"Overall\",\n            \"value\": \"4\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-review.md",
          "loc": { "lines": { "from": 57, "to": 88 } }
        }
      }
    ],
    [
      "db7cbe9c-893d-4017-8b23-07017b70317d",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Field nickname of required type String! was not provided.` | The required attribute `nickname` is missing.\n`Field sku of required type String! was not provided.` | The required attribute `sku` is missing.\n`Field summary of required type String! was not provided.` | The required attribute `summary` is missing.\n`Field text of required type String! was not provided.` | The required attribute `text` is missing.\n`Field ratings of required type ProductReviewRatingInput! was not provided.` | The required attribute `ratings` is missing.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/create-review.md",
          "loc": { "lines": { "from": 90, "to": 98 } }
        }
      }
    ],
    [
      "ba078ed0-71ca-416e-bc27-bdc0da62a2d2",
      {
        "pageContent": "---\ntitle: deleteCompareList mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# deleteCompareList mutation\n\nThe `deleteCompareList` mutation deletes the specified comparison list. Run this mutation in the following circumstances:\n\n*  When the guest or customer clears all entries from the comparison list.\n*  After a guest's session expires.\n\n## Syntax\n\n```graphql\nmutation {\n    deleteCompareList(\n        uid: ID!\n    ) {\n        DeleteCompareListOutput\n    }\n}\n```\n\n## Reference\n\nThe [`deleteCompareList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteCompareList) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/delete-compare-list.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "55e88e5b-70c9-41fd-a907-add4b7ea5ef0",
      {
        "pageContent": "## Example usage\n\nThe following example deletes the comparison list with a `uid` value of `sssXyGZkTFksdPnxNoK1ut6OiV4bbchD`.\n\n**Request:**\n\n```graphql\nmutation {\n    deleteCompareList(\n        uid: \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\"\n    ) {\n        result\n    }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deleteCompareList\": {\n      \"result\": true\n    }\n  }\n}\n```\n\n## Related topics\n\n*  [compareList query](../queries/compare-list.md)\n*  [addProductsToCompareList mutation](add-products-to-compare-list.md)\n*  [assignCompareListToCustomer mutation](assign-compare-list.md)\n*  [createCompareList mutation](create-compare-list.md)\n*  [removeProductsFromCompareList mutation](remove-from-compare-list.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/delete-compare-list.md",
          "loc": { "lines": { "from": 30, "to": 64 } }
        }
      }
    ],
    [
      "29be3e31-9807-41ad-bf20-32f4ebbd9ddb",
      {
        "pageContent": "---\ntitle: Product mutations\n---\n\n# Product mutations\n\nThe product mutations allow you to perform the following operations:\n\n* Manage comparison lists\n\n  * [`addProductsToCompareList`](add-products-to-compare-list.md)\n  * [`assignCompareListToCustomer`](assign-compare-list.md)\n  * [`createCompareList`](create-compare-list.md)\n  * [`deleteCompareList`](delete-compare-list.md)\n  * [`removeProductsFromCompareList`](remove-from-compare-list.md)\n\n* Create a product review\n\n  * [`createProductReview`](create-review.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "70d3fed0-4773-4872-a783-54006526dfb2",
      {
        "pageContent": "---\ntitle: removeProductsFromCompareList mutation\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# removeProductsFromCompareList mutation\n\nThe `removeProductsFromCompareList` mutation removes products from a comparison list.\n\nYou must specify the unique ID of a comparison list along with the list of product IDs to be removed.\n\n## Syntax\n\n```graphql\nmutation {\n    removeProductsFromCompareList(\n        input: RemoveProductsFromCompareListInput\n    ) {\n        CompareList\n    }\n}\n```\n\n## Reference\n\nThe [`removeProductsFromCompareList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeProductsFromCompareList) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/remove-from-compare-list.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "5bfd0289-1a6a-4017-bc16-976913603162",
      {
        "pageContent": "## Example usage\n\nThe following example removes two products from the comparison list with the unique ID \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\".\n\n**Request:**\n\n```graphql\nmutation {\n  removeProductsFromCompareList(\n    input: {\n      uid: \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n      products: [\"1\", \"2\"]\n    }\n  ) {\n    uid\n    item_count\n    attributes {\n      code\n      label\n    }\n    items {\n      uid\n      product {\n        sku\n        name\n        description {\n          html\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/remove-from-compare-list.md",
          "loc": { "lines": { "from": 29, "to": 60 } }
        }
      }
    ],
    [
      "b163b4e6-2002-4d2f-8125-6a2927ca40f9",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/remove-from-compare-list.md",
          "loc": { "lines": { "from": 61, "to": 63 } }
        }
      }
    ],
    [
      "375fc39e-0050-4e4f-ad0f-57af0fa7c0fc",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"removeProductsFromCompareList\": {\n      \"uid\": \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n      \"item_count\": 2,\n      \"attributes\": [\n        {\n          \"code\": \"sku\",\n          \"label\": \"SKU\"\n        },\n        {\n          \"code\": \"description\",\n          \"label\": \"Description\"\n        },\n        {\n          \"code\": \"short_description\",\n          \"label\": \"Short Description\"\n        },\n        {\n          \"code\": \"activity\",\n          \"label\": \"Activity\"\n        }\n      ],\n      \"items\": [\n        {\n          \"uid\": \"3\",\n          \"product\": {\n            \"sku\": \"24-MB03\",\n            \"name\": \"Crown Summit Backpack\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/remove-from-compare-list.md",
          "loc": { "lines": { "from": 65, "to": 95 } }
        }
      }
    ],
    [
      "0cdebdbe-d7e7-4d0a-a026-14da0011f30f",
      {
        "pageContent": "\"html\": \"<p>The Crown Summit Backpack is equally at home in a gym locker, study cube or a pup tent, so be sure yours is packed with books, a bag lunch, water bottles, yoga block, laptop, or whatever else you want in hand. Rugged enough for day hikes and camping trips, it has two large zippered compartments and padded, adjustable shoulder straps.</p>\\n<ul>\\n<li>Top handle.</li>\\n<li>Grommet holes.</li>\\n<li>Two-way zippers.</li>\\n<li>H 20\\\" x W 14\\\" x D 12\\\".</li>\\n<li>Weight: 2 lbs, 8 oz. Volume: 29 L.</li>\\n<ul>\"\n            }\n          }\n        },\n        {\n          \"uid\": \"4\",\n          \"product\": {\n            \"sku\": \"24-MB05\",\n            \"name\": \"Wayfarer Messenger Bag\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/remove-from-compare-list.md",
          "loc": { "lines": { "from": 96, "to": 105 } }
        }
      }
    ],
    [
      "0be1b49d-85de-43ad-afd3-c092545a075b",
      {
        "pageContent": "\"html\": \"<p>Perfect for class, work or the gym, the Wayfarer Messenger Bag is packed with pockets. The dual-buckle flap closure reveals an organizational panel, and the roomy main compartment has spaces for your laptop and a change of clothes. An adjustable shoulder strap and easy-grip handle promise easy carrying.</p>\\n<ul>\\n<li>Multiple internal zip pockets.</li>\\n<li>Made of durable nylon.</li>\\n</ul>\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/remove-from-compare-list.md",
          "loc": { "lines": { "from": 106, "to": 114 } }
        }
      }
    ],
    [
      "75f11390-3080-4f80-8347-d7397951646e",
      {
        "pageContent": "## Related topics\n\n*  [compareList query](../queries/compare-list.md)\n*  [addProductsToCompareList mutation](add-products-to-compare-list.md)\n*  [assignCompareListToCustomer mutation](assign-compare-list.md)\n*  [createCompareList mutation](create-compare-list.md)\n*  [deleteCompareList mutation](delete-compare-list.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/mutations/remove-from-compare-list.md",
          "loc": { "lines": { "from": 116, "to": 122 } }
        }
      }
    ],
    [
      "eba52f2a-3497-417e-b1e5-a128680e5f6e",
      {
        "pageContent": "---\ntitle: categories query\n---\n\n# categories query\n\nThe `categories` query returns a list of categories that match the specified filter. This query differs from the `categoryList` query in that it supports pagination.\n\nThe `categories` query supports the following types of filters. You can specify multiple filters in a query.\n\n-  Category ID\n-  Category name\n-  Parent category ID\n-  URL key\n-  URL path\n\nThe query returns a `CategoryResult` object, which contains pagination information and an array of `CategoryTree` items. The top level of the `CategoryTree` object provides details about the queried category. This object includes the `children` attribute, which contains an array of its immediate subcategories.\n\nIf you omit the `filters` attribute, the query returns the store's default root category.\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/categories.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "de1cf3b0-6a7b-4805-9154-6f0288d99bb0",
      {
        "pageContent": "You cannot return the entire category tree if the total number of nodes in the request exceeds the value specified in the `queryDepth` attribute defined in the GraphQL `di.xml` file. By default, this value is 20. [Query security](../../../usage/security-configuration.md) further describes query depths.\n\nUse the `breadcrumbs` attribute to return information about the parent categories of the queried category.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/categories.md",
          "loc": { "lines": { "from": 23, "to": 25 } }
        }
      }
    ],
    [
      "5b9317a5-dca0-45aa-877d-dbb17132d70e",
      {
        "pageContent": "## Syntax\n\n```graphql\ncategories(filters: CategoryFilterInput pageSize: Int currentPage: Int): CategoryResult\n```\n\n## Reference\n\nThe [`categories`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-categories) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/categories.md",
          "loc": { "lines": { "from": 27, "to": 35 } }
        }
      }
    ],
    [
      "122479dd-fa4f-480d-9cce-fcfabf88dfed",
      {
        "pageContent": "## Example usage\n\nThe following query returns the top-level categories (as well as two levels of children) displayed on the Luma storefront. Because the `currentPage` attribute is set to `2`, the second page of results are returned.\n\n**Request:**\n\n```graphql\n{\n  categories(\n    filters: {\n      ids: {in: [\"3\", \"9\", \"12\", \"21\", \"38\", \"39\"]}\n      parent_id: {in: [\"2\"]}\n    }\n    pageSize:3\n    currentPage: 2\n  ) {\n    total_count\n    items {\n      uid\n      level\n      name\n      path\n      children_count\n      children {\n        uid\n        level\n        name\n        path\n        children_count\n        children {\n          uid\n          level\n          name\n          path\n        }\n      }\n    }\n    page_info {\n      current_page\n      page_size\n      total_pages\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/categories.md",
          "loc": { "lines": { "from": 37, "to": 80 } }
        }
      }
    ],
    [
      "c3d7b2c3-5f54-4b46-94a9-b43013cb1c79",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/categories.md",
          "loc": { "lines": { "from": 81, "to": 83 } }
        }
      }
    ],
    [
      "0694ff2e-8201-401f-bd4e-7124b63a4771",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"categories\": {\n      \"total_count\": 6,\n      \"items\": [\n        {\n          \"uid\": \"Mw==\",\n          \"level\": 2,\n          \"name\": \"Gear\",\n          \"path\": \"1/2/3\",\n          \"children_count\": \"3\",\n          \"children\": [\n            {\n              \"uid\": \"NA==\",\n              \"level\": 3,\n              \"name\": \"Bags\",\n              \"path\": \"1/2/3/4\",\n              \"children_count\": \"0\",\n              \"children\": []\n            },\n            {\n              \"uid\": \"NQ==\",\n              \"level\": 3,\n              \"name\": \"Fitness Equipment\",\n              \"path\": \"1/2/3/5\",\n              \"children_count\": \"0\",\n              \"children\": []\n            },\n            {\n              \"uid\": \"Ng==\",\n              \"level\": 3,\n              \"name\": \"Watches\",\n              \"path\": \"1/2/3/6\",\n              \"children_count\": \"0\",\n              \"children\": []\n            }\n          ]\n        },\n        {\n          \"uid\": \"OQ==\",\n          \"level\": 2,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/categories.md",
          "loc": { "lines": { "from": 85, "to": 126 } }
        }
      }
    ],
    [
      "12114bbf-c655-4991-bc18-a65ec1e58a86",
      {
        "pageContent": "\"name\": \"Training\",\n          \"path\": \"1/2/9\",\n          \"children_count\": \"1\",\n          \"children\": [\n            {\n              \"uid\": \"MTA=\",\n              \"level\": 3,\n              \"name\": \"Video Download\",\n              \"path\": \"1/2/9/10\",\n              \"children_count\": \"0\",\n              \"children\": []\n            }\n          ]\n        },\n        {\n          \"uid\": \"Mzg=\",\n          \"level\": 2,\n          \"name\": \"Sale\",\n          \"path\": \"1/2/38\",\n          \"children_count\": \"0\",\n          \"children\": []\n        }\n      ],\n      \"page_info\": {\n        \"current_page\": 2,\n        \"page_size\": 3,\n        \"total_pages\": 2\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/categories.md",
          "loc": { "lines": { "from": 127, "to": 158 } }
        }
      }
    ],
    [
      "b7f43d56-6e05-4402-8d10-63680ad66731",
      {
        "pageContent": "---\ntitle: categoryList query\n---\n\n# categoryList query\n\nThe `categoryList` query searches for categories that match the criteria specified in filters. It replaces the deprecated `category` query, which allowed you to search by category ID only.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThis query does not support pagination. Use the [`categories` query](categories.md) if you expect to return a large number of categories.\n\nThe `categoryList` query supports the following types of filters. You can specify multiple filters in a query.\n\n-  Category ID\n-  Category name\n-  Parent category ID\n-  URL key\n-  URL path\n\nIf you do not provide any filter input, the query returns the root category.\n\nThe query returns a `CategoryTree` object. The top level of the `CategoryTree` object provides details about the queried category. This object includes the `children` attribute, which contains an array of its immediate subcategories.\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "32c300c9-d3cc-4fb7-91aa-6e30f2166e95",
      {
        "pageContent": "You cannot return the entire category tree if the total number of nodes in the request exceeds the value specified in the `queryDepth` attribute defined in the GraphQL `di.xml` file. By default, this value is 20. [Query security](../../../usage/security-configuration.md) further describes query depths.\n\nUse the `breadcrumbs` attribute to return information about the parent categories of the queried category.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 27, "to": 29 } }
        }
      }
    ],
    [
      "48441524-9dfd-412a-8c41-fd8228991f36",
      {
        "pageContent": "## Syntax\n\n```graphql\ncategoryList (\n   filters: CategoryFilterInput\n): CategoryTree\n```\n\n## Reference\n\nThe [`categoryList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-categoryList) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 31, "to": 41 } }
        }
      }
    ],
    [
      "bca8d54c-7052-4276-83ab-3e4226dd59ec",
      {
        "pageContent": "## Example usage",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 43, "to": 43 } }
        }
      }
    ],
    [
      "346680d9-6820-4da4-877d-8bf2b2ce61df",
      {
        "pageContent": "### Return the category tree of a top-level category\n\nThe following query returns information about category IDs `12` and `21` and two levels of subcategories. In the sample data, category IDs `11` and `20` are assigned to the `Men` and `Women` categories, respectively.\n\n**Request:**\n\n```graphql\n{\n  categoryList(\n    filters: {\n      ids: {in: [\"12\", \"21\"]}\n      parent_id: {in: [\"2\"]}\n    }\n  ) {\n    children_count\n    children {\n      uid\n      level\n      name\n      path\n      url_path\n      url_key\n      children {\n        uid\n        level\n        name\n        path\n        url_path\n        url_key\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 45, "to": 77 } }
        }
      }
    ],
    [
      "623d8771-71eb-4da5-966b-5c6fe04de02c",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 78, "to": 80 } }
        }
      }
    ],
    [
      "772f1673-d42d-4e91-9d02-ff68d26b97dd",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"categoryList\": [\n      {\n        \"children_count\": \"8\",\n        \"children\": [\n          {\n            \"uid\": \"MjM=\",\n            \"level\": 3,\n            \"name\": \"Bottoms\",\n            \"path\": \"1/2/21/23\",\n            \"url_path\": \"women/bottoms-women\",\n            \"url_key\": \"bottoms-women\",\n            \"children\": [\n              {\n                \"uid\": \"Mjg=\",\n                \"level\": 4,\n                \"name\": \"Pants\",\n                \"path\": \"1/2/21/23/28\",\n                \"url_path\": \"women/bottoms-women/pants-women\",\n                \"url_key\": \"pants-women\"\n              },\n              {\n                \"uid\": \"Mjk=\",\n                \"level\": 4,\n                \"name\": \"Shorts\",\n                \"path\": \"1/2/21/23/29\",\n                \"url_path\": \"women/bottoms-women/shorts-women\",\n                \"url_key\": \"shorts-women\"\n              }\n            ]\n          },\n          {\n            \"uid\": \"MjI=\",\n            \"level\": 3,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 82, "to": 117 } }
        }
      }
    ],
    [
      "7272ea5e-f51e-41d9-bdd1-9e8bb3c0da70",
      {
        "pageContent": "\"name\": \"Tops\",\n            \"path\": \"1/2/21/22\",\n            \"url_path\": \"women/tops-women\",\n            \"url_key\": \"tops-women\",\n            \"children\": [\n              {\n                \"uid\": \"MjQ=\",\n                \"level\": 4,\n                \"name\": \"Jackets\",\n                \"path\": \"1/2/21/22/24\",\n                \"url_path\": \"women/tops-women/jackets-women\",\n                \"url_key\": \"jackets-women\"\n              },\n              {\n                \"uid\": \"MjU=\",\n                \"level\": 4,\n                \"name\": \"Hoodies & Sweatshirts\",\n                \"path\": \"1/2/21/22/25\",\n                \"url_path\": \"women/tops-women/hoodies-and-sweatshirts-women\",\n                \"url_key\": \"hoodies-and-sweatshirts-women\"\n              },\n              {\n                \"uid\": \"MjY=\",\n                \"level\": 4,\n                \"name\": \"Tees\",\n                \"path\": \"1/2/21/22/26\",\n                \"url_path\": \"women/tops-women/tees-women\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 118, "to": 144 } }
        }
      }
    ],
    [
      "0d8384aa-6115-4f4d-b477-148c9b2a3719",
      {
        "pageContent": "\"url_key\": \"tees-women\"\n              },\n              {\n                \"uid\": \"Mjc=\",\n                \"level\": 4,\n                \"name\": \"Bras & Tanks\",\n                \"path\": \"1/2/21/22/27\",\n                \"url_path\": \"women/tops-women/tanks-women\",\n                \"url_key\": \"tanks-women\"\n              }\n            ]\n          }\n        ]\n      },\n      {\n        \"children_count\": \"8\",\n        \"children\": [\n          {\n            \"uid\": \"MTQ=\",\n            \"level\": 3,\n            \"name\": \"Bottoms\",\n            \"path\": \"1/2/12/14\",\n            \"url_path\": \"men/bottoms-men\",\n            \"url_key\": \"bottoms-men\",\n            \"children\": [\n              {\n                \"uid\": \"MTk=\",\n                \"level\": 4,\n                \"name\": \"Pants\",\n                \"path\": \"1/2/12/14/19\",\n                \"url_path\": \"men/bottoms-men/pants-men\",\n                \"url_key\": \"pants-men\"\n              },\n              {\n                \"uid\": \"MjA=\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 145, "to": 179 } }
        }
      }
    ],
    [
      "49204163-8732-4fc6-bb8c-f3cb39919886",
      {
        "pageContent": "\"level\": 4,\n                \"name\": \"Shorts\",\n                \"path\": \"1/2/12/14/20\",\n                \"url_path\": \"men/bottoms-men/shorts-men\",\n                \"url_key\": \"shorts-men\"\n              }\n            ]\n          },\n          {\n            \"uid\": \"MTM=\",\n            \"level\": 3,\n            \"name\": \"Tops\",\n            \"path\": \"1/2/12/13\",\n            \"url_path\": \"men/tops-men\",\n            \"url_key\": \"tops-men\",\n            \"children\": [\n              {\n                \"uid\": \"MTU=\",\n                \"level\": 4,\n                \"name\": \"Jackets\",\n                \"path\": \"1/2/12/13/15\",\n                \"url_path\": \"men/tops-men/jackets-men\",\n                \"url_key\": \"jackets-men\"\n              },\n              {\n                \"uid\": \"MTY=\",\n                \"level\": 4,\n                \"name\": \"Hoodies & Sweatshirts\",\n                \"path\": \"1/2/12/13/16\",\n                \"url_path\": \"men/tops-men/hoodies-and-sweatshirts-men\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 180, "to": 209 } }
        }
      }
    ],
    [
      "9424fd19-d654-43f6-8c41-435c2ec419b4",
      {
        "pageContent": "\"url_key\": \"hoodies-and-sweatshirts-men\"\n              },\n              {\n                \"uid\": \"MTc=\",\n                \"level\": 4,\n                \"name\": \"Tees\",\n                \"path\": \"1/2/12/13/17\",\n                \"url_path\": \"men/tops-men/tees-men\",\n                \"url_key\": \"tees-men\"\n              },\n              {\n                \"uid\": \"MTg=\",\n                \"level\": 4,\n                \"name\": \"Tanks\",\n                \"path\": \"1/2/12/13/18\",\n                \"url_path\": \"men/tops-men/tanks-men\",\n                \"url_key\": \"tanks-men\"\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 210, "to": 235 } }
        }
      }
    ],
    [
      "51aafc63-9523-4a24-94c6-e5620debdecd",
      {
        "pageContent": "### Return breadcrumb information\n\nThe following query returns breadcrumb information about categories that have the name `Tops`.\n\n**Request:**\n\n```graphql\n{\n  categoryList(filters: {name: {match: \"Tops\"}}) {\n    uid\n    level\n    name\n    breadcrumbs {\n      category_uid\n      category_name\n      category_level\n      category_url_key\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 237, "to": 256 } }
        }
      }
    ],
    [
      "12e2afa6-ce10-4592-8c82-3830aaad7bc1",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"categoryList\": [\n      {\n        \"uid\": \"MjI=\",\n        \"level\": 3,\n        \"name\": \"Tops\",\n        \"breadcrumbs\": [\n          {\n            \"category_uid\": \"MjE=\",\n            \"category_name\": \"Women\",\n            \"category_level\": 2,\n            \"category_url_key\": \"women\"\n          }\n        ]\n      },\n      {\n        \"uid\": \"MTM=\",\n        \"level\": 3,\n        \"name\": \"Tops\",\n        \"breadcrumbs\": [\n          {\n            \"category_uid\": \"MTI=\",\n            \"category_name\": \"Men\",\n            \"category_level\": 2,\n            \"category_url_key\": \"men\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category-list.md",
          "loc": { "lines": { "from": 257, "to": 294 } }
        }
      }
    ],
    [
      "83325596-a0af-4977-a4aa-172317574550",
      {
        "pageContent": "---\ntitle: category query\n---\n\n# category query\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nThe `category` query has been deprecated. Use the [categories](categories.md) query instead.\n\nThe `category` query allows you to search for a single category definition or the entire category tree.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nYou cannot return the entire category tree if the total number of nodes in the request exceeds the value specified in the `queryDepth` attribute defined in the GraphQL `di.xml` file. By default, this value is 20. [Query security](../../../usage/security-configuration.md) further describes query depths.\n\n## Syntax\n\n```graphql\ncategory (\n  id: int\n): CategoryTree\n```\n\n## Reference\n\nThe [`category`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-category) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "c466d4fe-19ab-49c1-9488-47c0f10d83ce",
      {
        "pageContent": "## Example usage",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category.md",
          "loc": { "lines": { "from": 29, "to": 29 } }
        }
      }
    ],
    [
      "62673172-472d-4f04-acc5-45df31ebdb15",
      {
        "pageContent": "### Return the category tree of a top-level category\n\nThe following query returns information about category ID `20` and four levels of subcategories. In the sample data, category ID `20` is assigned to the `Women` category.\n\n**Request:**\n\n```graphql\n{\n  category(id: 20) {\n    products {\n      total_count\n      page_info {\n        current_page\n        page_size\n      }\n    }\n    children_count\n    children {\n      id\n      level\n      name\n      path\n      children {\n        id\n        level\n        name\n        path\n        children {\n          id\n          level\n          name\n          path\n          children {\n            id\n            level\n            name\n            path\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category.md",
          "loc": { "lines": { "from": 31, "to": 73 } }
        }
      }
    ],
    [
      "012d47ea-15fa-4acd-9832-7d4768bb96b6",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category.md",
          "loc": { "lines": { "from": 74, "to": 76 } }
        }
      }
    ],
    [
      "876cfca2-afd4-46fa-9516-6b2b1545d92f",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"category\": {\n      \"products\": {\n        \"total_count\": 0,\n        \"page_info\": {\n          \"current_page\": 1,\n          \"page_size\": 20\n        }\n      },\n      \"children_count\": \"8\",\n      \"children\": [\n        {\n          \"id\": 22,\n          \"level\": 3,\n          \"name\": \"Bottoms\",\n          \"path\": \"1/2/20/22\",\n          \"children\": [\n            {\n              \"id\": 27,\n              \"level\": 4,\n              \"name\": \"Pants\",\n              \"path\": \"1/2/20/22/27\",\n              \"children\": []\n            },\n            {\n              \"id\": 28,\n              \"level\": 4,\n              \"name\": \"Shorts\",\n              \"path\": \"1/2/20/22/28\",\n              \"children\": []\n            }\n          ]\n        },\n        {\n          \"id\": 21,\n          \"level\": 3,\n          \"name\": \"Tops\",\n          \"path\": \"1/2/20/21\",\n          \"children\": [\n            {\n              \"id\": 23,\n              \"level\": 4,\n              \"name\": \"Jackets\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category.md",
          "loc": { "lines": { "from": 78, "to": 122 } }
        }
      }
    ],
    [
      "bc9831a9-1764-40ee-a81b-6852b3544be2",
      {
        "pageContent": "\"path\": \"1/2/20/21/23\",\n              \"children\": []\n            },\n            {\n              \"id\": 24,\n              \"level\": 4,\n              \"name\": \"Hoodies & Sweatshirts\",\n              \"path\": \"1/2/20/21/24\",\n              \"children\": []\n            },\n            {\n              \"id\": 25,\n              \"level\": 4,\n              \"name\": \"Tees\",\n              \"path\": \"1/2/20/21/25\",\n              \"children\": []\n            },\n            {\n              \"id\": 26,\n              \"level\": 4,\n              \"name\": \"Bras & Tanks\",\n              \"path\": \"1/2/20/21/26\",\n              \"children\": []\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category.md",
          "loc": { "lines": { "from": 123, "to": 153 } }
        }
      }
    ],
    [
      "dfe0cd1a-c535-4761-a3fa-c74d374c1b9d",
      {
        "pageContent": "### Return breadcrumb information\n\nThe following query returns breadcrumb information about the women's `Tops` category (`id` = 25).\n\n**Request:**\n\n```graphql\n{\n  category (\n   id: 25\n) {\n    id\n    level\n    name\n    breadcrumbs {\n      category_id\n      category_name\n      category_level\n      category_url_key\n      category_url_path\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"category\": {\n      \"id\": 25,\n      \"level\": 4,\n      \"name\": \"Tees\",\n      \"breadcrumbs\": [\n        {\n          \"category_id\": 20,\n          \"category_name\": \"Women\",\n          \"category_level\": 2,\n          \"category_url_key\": \"women\",\n          \"category_url_path\": \"women\"\n        },\n        {\n          \"category_id\": 21,\n          \"category_name\": \"Tops\",\n          \"category_level\": 3,\n          \"category_url_key\": \"tops-women\",\n          \"category_url_path\": \"women/tops-women\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category.md",
          "loc": { "lines": { "from": 155, "to": 208 } }
        }
      }
    ],
    [
      "b0962f89-9243-45ec-a8ba-26afe107a568",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`Category doesn't exist` | The specified category ID value does not exist.\n`Field \"category\" argument \"id\" requires type Int, found \"XXX\"` | The specified `id` argument value has the wrong type.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/category.md",
          "loc": { "lines": { "from": 210, "to": 215 } }
        }
      }
    ],
    [
      "bfc72594-64c0-4d56-ac33-5ab985b1d90a",
      {
        "pageContent": "---\ntitle: compareList query\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\n---\n\n# compareList query\n\nThe `compareList` query retrieves information about a list of products so that the shopper can compare those products.\n\n## Syntax\n\n```graphql\ncompareList(\n    uid: ID!\n): CompareList\n```\n\n## Reference\n\nThe [`compareList`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-compareList) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/compare-list.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "a716c9e6-fac9-4ce6-8d56-357693306cd3",
      {
        "pageContent": "## Example usage\n\nThe following query returns the information about products in the comparison list with the unique ID of \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\":\n\n**Request:**\n\n```graphql\n{\n    compareList(\n        uid: \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\"\n    ) {\n        uid\n        item_count\n        attributes {\n            code\n            label\n        }\n        items {\n            uid\n            product {\n                sku\n                name\n                description {\n                    html\n                }\n            }\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/compare-list.md",
          "loc": { "lines": { "from": 23, "to": 51 } }
        }
      }
    ],
    [
      "87317bac-ac57-43e8-9aa4-dd19ea3204d0",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/compare-list.md",
          "loc": { "lines": { "from": 52, "to": 54 } }
        }
      }
    ],
    [
      "d05f9cb9-2016-4b6d-a878-48b18b67eb18",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"compareList\": {\n      \"uid\": \"sssXyGZkTFksdPnxNoK1ut6OiV4bbchD\",\n      \"item_count\": 2,\n      \"attributes\": [\n        {\n          \"code\": \"sku\",\n          \"label\": \"SKU\"\n        },\n        {\n          \"code\": \"description\",\n          \"label\": \"Description\"\n        },\n        {\n          \"code\": \"short_description\",\n          \"label\": \"Short Description\"\n        },\n        {\n          \"code\": \"activity\",\n          \"label\": \"Activity\"\n        }\n      ],\n      \"items\": [\n        {\n          \"uid\": \"3\",\n          \"product\": {\n            \"sku\": \"24-MB03\",\n            \"name\": \"Crown Summit Backpack\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/compare-list.md",
          "loc": { "lines": { "from": 56, "to": 86 } }
        }
      }
    ],
    [
      "ce443491-17fc-4de9-84e0-65688d973a90",
      {
        "pageContent": "\"html\": \"<p>The Crown Summit Backpack is equally at home in a gym locker, study cube or a pup tent, so be sure yours is packed with books, a bag lunch, water bottles, yoga block, laptop, or whatever else you want in hand. Rugged enough for day hikes and camping trips, it has two large zippered compartments and padded, adjustable shoulder straps.</p>\\n<ul>\\n<li>Top handle.</li>\\n<li>Grommet holes.</li>\\n<li>Two-way zippers.</li>\\n<li>H 20\\\" x W 14\\\" x D 12\\\".</li>\\n<li>Weight: 2 lbs, 8 oz. Volume: 29 L.</li>\\n<ul>\"\n            }\n          }\n        },\n        {\n          \"uid\": \"4\",\n          \"product\": {\n            \"sku\": \"24-MB05\",\n            \"name\": \"Wayfarer Messenger Bag\",\n            \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/compare-list.md",
          "loc": { "lines": { "from": 87, "to": 96 } }
        }
      }
    ],
    [
      "fd1837cf-92d0-47cb-8dcb-3bbd365dfdee",
      {
        "pageContent": "\"html\": \"<p>Perfect for class, work or the gym, the Wayfarer Messenger Bag is packed with pockets. The dual-buckle flap closure reveals an organizational panel, and the roomy main compartment has spaces for your laptop and a change of clothes. An adjustable shoulder strap and easy-grip handle promise easy carrying.</p>\\n<ul>\\n<li>Multiple internal zip pockets.</li>\\n<li>Made of durable nylon.</li>\\n</ul>\"\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/compare-list.md",
          "loc": { "lines": { "from": 97, "to": 105 } }
        }
      }
    ],
    [
      "80c8ee23-ea11-47f9-bfa0-dc57b31d932a",
      {
        "pageContent": "## Related topics\n\n*  [addProductsToCompareList mutation](../mutations/add-products-to-compare-list.md)\n*  [assignCompareListToCustomer mutation](../mutations/assign-compare-list.md)\n*  [createCompareList mutation](../mutations/create-compare-list.md)\n*  [deleteCompareList mutation](../mutations/delete-compare-list.md)\n*  [removeProductsFromCompareList mutation](../mutations/remove-from-compare-list.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/compare-list.md",
          "loc": { "lines": { "from": 107, "to": 113 } }
        }
      }
    ],
    [
      "79d93f52-cb14-434e-b921-71f243344fa9",
      {
        "pageContent": "---\ntitle: Product queries\n---\n\n# Product queries\n\nThis section describes the following queries:\n\n* [`categories`](categories.md)\n* [`category`](category.md)\n* [`categoryList`](category-list.md)\n* [`compareList`](compare-list.md)\n* [`productReviewRatingsMetadata`](product-review-ratings-metadata.md)\n* [`products`](products.md)\n* [`route`](route.md)\n* [`urlResolver`](url-resolver.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "74f58b41-f391-4f6b-be2f-c9c511763519",
      {
        "pageContent": "---\ntitle: productReviewRatingsMetadata query\n---\n\n# productReviewRatingsMetadata query\n\nThe `productReviewRatingsMetadata` query returns the active ratings attributes and the values each rating can have. In Luma, these values are one star through five stars.\n\nUse the [`createProductReview` mutation](../mutations/create-review.md) to add a product review.\n\n## Syntax\n\n`productReviewRatingsMetadata: ProductReviewRatingsMetadata!`\n\n## Reference\n\nThe [`productReviewRatingsMetadata`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-productReviewRatingsMetadata) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/product-review-ratings-metadata.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "b0ba1e86-362a-4689-b337-c5b904aa20e1",
      {
        "pageContent": "## Example usage\n\nThe following query returns the metadata for all active ratings attributes. In this example, the default `Rating` attribute has been renamed to `Overall`, and the `Quality` and `Value` attributes have been enabled.\n\n**Request:**\n\n```graphql\nquery {\n  productReviewRatingsMetadata {\n    items {\n      id\n      name\n      values {\n        value_id\n        value\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/product-review-ratings-metadata.md",
          "loc": { "lines": { "from": 19, "to": 37 } }
        }
      }
    ],
    [
      "0258fb0f-cb05-4504-b2f0-ee2bd02c9a4f",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/product-review-ratings-metadata.md",
          "loc": { "lines": { "from": 38, "to": 40 } }
        }
      }
    ],
    [
      "6cefe000-315d-4f38-a6aa-e47c5bfe9209",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"productReviewRatingsMetadata\": {\n      \"items\": [\n        {\n          \"id\": \"NA==\",\n          \"name\": \"Overall\",\n          \"values\": [\n            {\n              \"value_id\": \"MTY=\",\n              \"value\": \"1\"\n            },\n            {\n              \"value_id\": \"MTc=\",\n              \"value\": \"2\"\n            },\n            {\n              \"value_id\": \"MTg=\",\n              \"value\": \"3\"\n            },\n            {\n              \"value_id\": \"MTk=\",\n              \"value\": \"4\"\n            },\n            {\n              \"value_id\": \"MjA=\",\n              \"value\": \"5\"\n            }\n          ]\n        },\n        {\n          \"id\": \"MQ==\",\n          \"name\": \"Quality\",\n          \"values\": [\n            {\n              \"value_id\": \"MQ==\",\n              \"value\": \"1\"\n            },\n            {\n              \"value_id\": \"Mg==\",\n              \"value\": \"2\"\n            },\n            {\n              \"value_id\": \"Mw==\",\n              \"value\": \"3\"\n            },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/product-review-ratings-metadata.md",
          "loc": { "lines": { "from": 42, "to": 88 } }
        }
      }
    ],
    [
      "160566b0-89f3-41b5-abd5-f045c6438c5d",
      {
        "pageContent": "},\n            {\n              \"value_id\": \"NA==\",\n              \"value\": \"4\"\n            },\n            {\n              \"value_id\": \"NQ==\",\n              \"value\": \"5\"\n            }\n          ]\n        },\n        {\n          \"id\": \"Mg==\",\n          \"name\": \"Value\",\n          \"values\": [\n            {\n              \"value_id\": \"Ng==\",\n              \"value\": \"1\"\n            },\n            {\n              \"value_id\": \"Nw==\",\n              \"value\": \"2\"\n            },\n            {\n              \"value_id\": \"OA==\",\n              \"value\": \"3\"\n            },\n            {\n              \"value_id\": \"OQ==\",\n              \"value\": \"4\"\n            },\n            {\n              \"value_id\": \"MTA=\",\n              \"value\": \"5\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/product-review-ratings-metadata.md",
          "loc": { "lines": { "from": 88, "to": 129 } }
        }
      }
    ],
    [
      "adfa2568-3609-4591-9d1b-7fac44cc8478",
      {
        "pageContent": "---\ntitle: products query\n---\n\nimport CustomAttributeFilterProduct from '/src/_includes/graphql/examples/custom-attribute-filter-product.md'\n\n# products query\n\nThe `products` query allows you to search for catalog items.\n\n## Syntax\n\n```graphql\nproducts(\n  search: String\n  filter: ProductAttributeFilterInput\n  pageSize: Int\n  currentPage: Int\n  sort: ProductAttributeSortInput\n): Products\n```\n\n## Reference\n\nThe [`products`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-products) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "5dcf4520-0c11-49e0-9b56-78cf4f00e379",
      {
        "pageContent": "## Input attributes\n\nThe query can contain the following input attributes:\n\n- `search` - Performs a full-text search using the specified key words\n- `filter` - Identifies which attributes to search for and return.\n- `pageSize` - Specifies the maximum number of results to return at once.\n- `currentPage` - Specifies which page of results to return.\n- `sort` - Specifies which attribute to sort on, and whether to return the results in ascending or descending order.\n\nEach attribute is described in detail below.\n\n### search attribute\n\nThe `search` attribute causes the application perform a full text search on the specified keywords. This is the same type of search that is performed from the storefront. If multiple keywords are specified, each keyword is evaluated separately.\n\nEach query must contain a `search` or `filter` attribute, or both.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 27, "to": 43 } }
        }
      }
    ],
    [
      "d502d9dd-7f01-45d5-aeef-59d8b0c8bfee",
      {
        "pageContent": "### filter attribute\n\nThe `ProductAttributeFilterInput` object determines which attributes are used to narrow the results in a `products` query. A filter contains at least one attribute, a comparison operator, and the value that is being searched for. The following example filter searches for products that have a `name` that contains the string `Bag` with a `price` that's less than or equal to `40`.\n\n```graphql\nfilter: {\n  name: {\n    match: \"Bag\"\n  }\n  price: {\n    to: \"40\"\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 45, "to": 57 } }
        }
      }
    ],
    [
      "7eb17989-a2de-4327-a055-cf1b6720f0ca",
      {
        "pageContent": "```\n\nThe application processes the attribute values specified in a `ProductAttributeFilterInput` as simple data types (strings, integers, Booleans). However, returned attributes can be a different, complex data type. For example, in a response, `price` is an object that contains a monetary value and a currency code.\n\nAttribute | Description\n--- | ---\n`category_uid` | Filters by the unique ID of a category for objects that implement `CategoryInterface`\n`description` | Filters on the Description attribute\n`name` | Filters on the Product Name attribute\n`price` | Filters on the Price attribute\n`short_description` | Filters on the Short Description attribute\n`sku` | Filters on the SKU attribute\n`url_key` | The part of the URL that identifies the product\n\nYou can define a custom attribute to be a filter by specifying the `custom_attributesV2` attribute within the output of your query, as shown in [Filter custom_attributesV2 of a product](#filter-custom_attributesv2-of-a-product).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 58, "to": 72 } }
        }
      }
    ],
    [
      "25029e06-f6b9-459b-a3c4-d272772ed8e9",
      {
        "pageContent": "You can also modify the code base and [create a custom attribute](../../../usage/custom-filters.md) that can be used as a top-level filter. Use the `input_type` output attribute of the [`customAttributeMetadata` query](../../attributes/queries/custom-attribute-metadata.md) to determine the type of filter to use.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 74, "to": 74 } }
        }
      }
    ],
    [
      "e05a1caf-9b85-4ad9-a422-f5c07fd1f9e5",
      {
        "pageContent": "#### FilterEqualTypeInput attributes\n\nThe `category_id`, `sku`, and `url_key` filters require a `FilterEqualTypeInput` object as input. You must specify a `FilterEqualTypeInput` object to filter on a custom product attribute of the following types:\n\n-  Boolean\n-  Select\n-  Multiple select\n\nThe comparison operator must be either `eq` or `in`. Use `eq` to exactly match the specified string. For example, to filter on a specific category ID, specify a value like `5`.\nUse `in` to filter on an array of values. For example, to filter on category IDs 4, 5, and 6, specify a value of `[\"4\", \"5\", \"6\"]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 76, "to": 85 } }
        }
      }
    ],
    [
      "9b041f64-c53d-4b7c-889a-dfc2ea9eb4ee",
      {
        "pageContent": "#### FilterMatchTypeInput attributes\n\nUse the `FilterMatchTypeInput` object to construct a filter that returns products that partially fuzzy match a string or contain the specified pattern. This object must contain the `match` attribute. Use this attribute to partially fuzzy match the specified string. For example, to filter on a specific SKU, specify a value such as `24-MB01`\n\nYou must specify a `FilterMatchTypeInput` object to filter on a custom product attribute of the following types:\n\n-  Text field\n-  Text area\n-  Any other type not explicitly listed in `FilterEqualTypeInput`, `FilterMatchTypeInput`, or `FilterRangeTypeInput`\n\n#### FilterRangeTypeInput attributes\n\nUse the `FilterRangeTypeInput` object to construct a filter that returns products that fall within a range of prices or dates. This object contains `from` and `to` attributes.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 87, "to": 99 } }
        }
      }
    ],
    [
      "ebd7fed0-6e9d-4e97-a288-d7ae47450eb6",
      {
        "pageContent": "### pageSize attribute\n\nMagento's GraphQL implementation of pagination uses offsets so that it operates in the same manner as REST and SOAP API requests.\n\nThe `pageSize` attribute specifies the maximum number of items to return. If no value is specified, 20 items are returned.\n\n### currentPage attribute\n\nThe `currentPage` attribute specifies which page of results to return. If no value is specified, the first page is returned. The application returns an error if you specify a value that is greater than the number of available pages.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 101, "to": 109 } }
        }
      }
    ],
    [
      "09b25edc-2924-49f9-ab9e-6879df7f25b3",
      {
        "pageContent": "### sort attribute\n\nThe `sort` attribute allows you to specify which field or fields to use for sorting the results. If you specify more than one field, the application sorts by the first field listed. Then, if any items have the same value, those items will be sorted by the secondary field. The value for each field can be set to either `ASC` or `DESC`.\n\nIf you do not specify a `sort` object, the application sorts as follows:\n\n-  If you specify the `search` attribute, the query sorts by relevance, in descending order.\n-  If you specify the `filter` attribute without specifying the  `search` attribute, the query sorts by position, in ascending order.\n\nIn previous versions, the `sort` attribute required a `ProductSortInput` object as input. The `sort` attribute now requires a `ProductAttributeSortInput` object, which can contain the following attributes:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 111, "to": 120 } }
        }
      }
    ],
    [
      "3704a645-7ae9-4f25-8b8e-38825c343160",
      {
        "pageContent": "Attribute | Description\n--- | ---\n`name` | Sorts by Product Name\n`position` | Sorts by the position of products\n`price` | Sorts by Price\n`relevance` | (Default) Sorts by the search relevance score\n\nTo enable sorting by an attribute that is not in the `ProductAttributeSortInput` object, set the **Stores** > Attributes > **Product** > `Attribute Name` > **Storefront Properties** > **Use in Search** and **Used in Sorting in Product Listing** fields to Yes.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 122, "to": 129 } }
        }
      }
    ],
    [
      "0c9c61c2-27bd-4387-bdf6-46dd456dd6bf",
      {
        "pageContent": "## Output attributes\n\nThe query returns a `Products` object. This can contain an array of aggregations. Each aggregation within the `aggregations` object is a separate bucket that contains the attribute code and label for each filterable option (such as price, category UID, and custom attributes). It also includes the number of products within the filterable option that match the specified search criteria.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nTo enable a custom attribute to return layered navigation and aggregation data from the Admin, set the **Stores** > Attributes > **Product** > `Attribute Name` > **Storefront Properties** > **Use in Layered Navigation** field to **Filterable (with results)** or **Filterable (no results)**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 131, "to": 137 } }
        }
      }
    ],
    [
      "64cac216-c7e7-4996-91a2-58edc345b8cd",
      {
        "pageContent": "When the `category_id` field is specified as part of the `ProductAttributeFilterInput` input object, the `includeDirectChildrenOnly` field of the `AggregationsCategoryFilterInput` object can be used in the response to refine the returned aggregations. If `includeDirectChildrenOnly` is set to true, then the aggregations will contain only direct child categories. Otherwise, the category aggregations will follow the default algorithm. The default value is false.\n\nThe `Products` object also contains an array of items that match the search criteria. [ProductInterface](../interfaces/index.md/) describes the possible contents of this object.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 139, "to": 141 } }
        }
      }
    ],
    [
      "6281b9b4-9b82-41a7-ac9d-096a961db572",
      {
        "pageContent": "## Sample queries\n\nThis section illustrates some of the many ways that you can use the `products` query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 143, "to": 145 } }
        }
      }
    ],
    [
      "a4381ff8-a5bf-4e3c-8edf-f8ed6db3033d",
      {
        "pageContent": "### Full text search\n\nThe following search returns items that contain the word `yoga` or `pants`. The Catalog Search index contains search terms taken from the product `name`, `description`, `short_description` and related attributes.\n\n**Request:**\n\n```graphql\n{\n  products(search: \"Yoga pants\", pageSize: 2) {\n    total_count\n    items {\n      name\n      sku\n      price_range {\n        minimum_price {\n          regular_price {\n            value\n            currency\n          }\n        }\n      }\n    }\n    page_info {\n      page_size\n      current_page\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 147, "to": 174 } }
        }
      }
    ],
    [
      "ff30e4a2-4827-4807-964b-009b30f34db7",
      {
        "pageContent": "```\n\n**Response:**\n\nThe search returns 45 items, but only the first two items are returned on the current page.\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"total_count\": 45,\n      \"items\": [\n        {\n          \"name\": \"Josie Yoga Jacket\",\n          \"sku\": \"WJ02\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 56.25,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Selene Yoga Hoodie\",\n          \"sku\": \"WH05\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 42,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        }\n      ],\n      \"page_info\": {\n        \"page_size\": 2,\n        \"current_page\": 1\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 175, "to": 219 } }
        }
      }
    ],
    [
      "934b5028-23e4-4c30-9485-d41649ac9c12",
      {
        "pageContent": "### Full text search with filter by price attribute\n\nThe following sample query returns a list of products that meets the following criteria:\n\n-  The product name, product description, or related field contains the string `Messenger` (which causes it to be available for full text searches).\n-  The price is less than $50.\n\nThe response for each item includes the `name`, `sku`, and `price` only. Up to 25 results are returned at a time, in decreasing order of price.\n\n**Request:**\n\n```graphql\n{\n  products(\n    search: \"Messenger\"\n    filter: { price: { to: \"50\" } }\n    pageSize: 25\n    sort: { price: DESC }\n  ) {\n    items {\n      name\n      sku\n      price_range {\n        minimum_price {\n          regular_price {\n            value\n            currency\n          }\n        }\n      }\n    }\n    total_count\n    page_info {\n      page_size\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 221, "to": 257 } }
        }
      }
    ],
    [
      "30c5fa5a-d002-4ccd-a652-a1dca75ff74c",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 258, "to": 260 } }
        }
      }
    ],
    [
      "73ff6faa-a752-4eae-9d7a-97e5b521a1cf",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"name\": \"Rival Field Messenger\",\n          \"sku\": \"24-MB06\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 45,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Push It Messenger Bag\",\n          \"sku\": \"24-WB04\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 45,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Wayfarer Messenger Bag\",\n          \"sku\": \"24-MB05\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 45,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        }\n      ],\n      \"total_count\": 3,\n      \"page_info\": {\n        \"page_size\": 25",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 262, "to": 306 } }
        }
      }
    ],
    [
      "07d7e449-a8c3-4cf6-9eae-928536fbbbb4",
      {
        "pageContent": "}\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 307, "to": 311 } }
        }
      }
    ],
    [
      "2eae5497-ed5c-4ee6-9b8f-36109998c0e4",
      {
        "pageContent": "### Query with filter by SKU attribute\n\nThe following sample query returns product by SKU. You have to pass SKU value to return product information.\n\n**Request:**\n\n```graphql\n{\n  products(filter: { sku: { eq: \"24-MB01\" } }) {\n    items {\n      name\n      sku\n      url_key\n      stock_status\n      price_range {\n        minimum_price {\n          regular_price {\n            value\n            currency\n          }\n        }\n      }\n    }\n    total_count\n    page_info {\n      page_size\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 313, "to": 341 } }
        }
      }
    ],
    [
      "f9ed5e3f-125f-42fa-b3b9-3d53860eca46",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"name\": \"Joust Duffle Bag\",\n          \"sku\": \"24-MB01\",\n          \"url_key\": \"joust-duffle-bag\",\n          \"stock_status\": \"IN_STOCK\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 34,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        }\n      ],\n      \"total_count\": 1,\n      \"page_info\": {\n        \"page_size\": 20\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 342, "to": 373 } }
        }
      }
    ],
    [
      "07ca4d0c-e64b-4ada-bc58-86010de0bede",
      {
        "pageContent": "### Query with layered navigation\n\nThe following query returns aggregations for a query that filters on items with these characteristics:\n\n-  Women's pants (category ID `27`)\n-  In the price range of $30 - $39.99\n-  Comes in black (color `49`)\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nBy default, you cannot filter on the `color` attribute. [Filtering with custom attributes](../../../usage/custom-filters.md) describes how to enable this attribute for filtering. You can also run the following query without enabling the attribute by deleting `, color: {eq: \"49\"}`.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 375, "to": 387 } }
        }
      }
    ],
    [
      "f4dace1a-6445-447b-a38e-0092684b56ce",
      {
        "pageContent": "**Request:**\n\n```graphql\n{\n  products(filter: {category_id: {eq: \"27\"}, price: {from: \"30\", to: \"39.99\"}, color: {eq: \"49\"}}, pageSize: 25, sort: {name: DESC}) {\n    aggregations {\n      attribute_code\n      count\n      label\n      options {\n        label\n        value\n        count\n      }\n    }\n    items {\n      name\n      sku\n      price_range {\n        minimum_price {\n          regular_price {\n            value\n            currency\n          }\n        }\n      }\n    }\n    page_info {\n      page_size\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 387, "to": 418 } }
        }
      }
    ],
    [
      "6fc90f60-53b8-4db2-9075-a9e99f9a1dd7",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 419, "to": 421 } }
        }
      }
    ],
    [
      "48c45d45-3103-427a-a0c1-bbc6d223aa3b",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"aggregations\": [\n        {\n          \"attribute_code\": \"price\",\n          \"count\": 1,\n          \"label\": \"Price\",\n          \"options\": [\n            {\n              \"label\": \"30-*\",\n              \"value\": \"30_*\",\n              \"count\": 4\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"category_id\",\n          \"count\": 5,\n          \"label\": \"Category\",\n          \"options\": [\n            {\n              \"label\": \"New Luma Yoga Collection\",\n              \"value\": \"8\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Bottoms\",\n              \"value\": \"22\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Pants\",\n              \"value\": \"27\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Pants\",\n              \"value\": \"32\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Performance Fabrics\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 423, "to": 466 } }
        }
      }
    ],
    [
      "67d25a29-5f56-494d-b878-2c8ab8b357a8",
      {
        "pageContent": "\"value\": \"35\",\n              \"count\": 2\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"color\",\n          \"count\": 8,\n          \"label\": \"Color\",\n          \"options\": [\n            {\n              \"label\": \"Black\",\n              \"value\": \"49\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Blue\",\n              \"value\": \"50\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"Gray\",\n              \"value\": \"52\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Green\",\n              \"value\": \"53\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Orange\",\n              \"value\": \"56\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Purple\",\n              \"value\": \"57\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Red\",\n              \"value\": \"58\",\n              \"count\": 1",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 467, "to": 510 } }
        }
      }
    ],
    [
      "c260478b-2b4d-44b6-87f3-adcaea808cab",
      {
        "pageContent": "},\n            {\n              \"label\": \"White\",\n              \"value\": \"59\",\n              \"count\": 1\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"material\",\n          \"count\": 7,\n          \"label\": \"Material\",\n          \"options\": [\n            {\n              \"label\": \"Nylon\",\n              \"value\": \"37\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Rayon\",\n              \"value\": \"39\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"LumaTech&trade;\",\n              \"value\": \"148\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Microfiber\",\n              \"value\": \"150\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"Spandex\",\n              \"value\": \"151\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"Organic Cotton\",\n              \"value\": \"154\",\n              \"count\": 2\n            },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 511, "to": 553 } }
        }
      }
    ],
    [
      "f04d7aaf-f611-405d-b7c6-ab093b156a79",
      {
        "pageContent": "},\n            {\n              \"label\": \"CoolTech&trade;\",\n              \"value\": \"156\",\n              \"count\": 2\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"size\",\n          \"count\": 2,\n          \"label\": \"Size\",\n          \"options\": [\n            {\n              \"label\": \"28\",\n              \"value\": \"172\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"29\",\n              \"value\": \"173\",\n              \"count\": 4\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"eco_collection\",\n          \"count\": 2,\n          \"label\": \"Eco Collection\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 3\n            },\n            {\n              \"label\": \"1\",\n              \"value\": \"1\",\n              \"count\": 1\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"performance_fabric\",\n          \"count\": 2,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 553, "to": 597 } }
        }
      }
    ],
    [
      "826da1f2-4c2d-4e3c-bc96-6dc28aed0855",
      {
        "pageContent": "\"label\": \"Performance Fabric\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"1\",\n              \"value\": \"1\",\n              \"count\": 2\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"erin_recommends\",\n          \"count\": 1,\n          \"label\": \"Erin Recommends\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 4\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"new\",\n          \"count\": 2,\n          \"label\": \"New\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 3\n            },\n            {\n              \"label\": \"1\",\n              \"value\": \"1\",\n              \"count\": 1\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"sale\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 598, "to": 642 } }
        }
      }
    ],
    [
      "90f9cf74-ffcc-4c04-8d27-73f9707713dc",
      {
        "pageContent": "\"count\": 1,\n          \"label\": \"Sale\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 4\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"style_bottom\",\n          \"count\": 5,\n          \"label\": \"Style Bottom\",\n          \"options\": [\n            {\n              \"label\": \"Capri\",\n              \"value\": \"107\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"Leggings\",\n              \"value\": \"109\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Parachute\",\n              \"value\": \"110\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Sweatpants\",\n              \"value\": \"113\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Track Pants\",\n              \"value\": \"115\",\n              \"count\": 1\n            }\n          ]\n        },\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 643, "to": 685 } }
        }
      }
    ],
    [
      "670e8dca-2852-43d4-b02c-0ad382b97aa2",
      {
        "pageContent": "{\n          \"attribute_code\": \"pattern\",\n          \"count\": 2,\n          \"label\": \"Pattern\",\n          \"options\": [\n            {\n              \"label\": \"Color-Blocked\",\n              \"value\": \"195\",\n              \"count\": 3\n            },\n            {\n              \"label\": \"Solid\",\n              \"value\": \"197\",\n              \"count\": 1\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"climate\",\n          \"count\": 5,\n          \"label\": \"Climate\",\n          \"options\": [\n            {\n              \"label\": \"Indoor\",\n              \"value\": \"205\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Mild\",\n              \"value\": \"206\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Spring\",\n              \"value\": \"208\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Warm\",\n              \"value\": \"209\",\n              \"count\": 2\n            },\n            {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 685, "to": 727 } }
        }
      }
    ],
    [
      "0c3cab8c-31cf-471d-aa6e-34543f44bfaa",
      {
        "pageContent": "{\n              \"label\": \"Hot\",\n              \"value\": \"212\",\n              \"count\": 3\n            }\n          ]\n        }\n      ],\n      \"items\": [\n        {\n          \"name\": \"Karmen Yoga Pant\",\n          \"sku\": \"WP01\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 39,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Ida Workout Parachute Pant\",\n          \"sku\": \"WP03\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 48,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Bardot Capri\",\n          \"sku\": \"WP08\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 48,\n                \"currency\": \"USD\"\n              }\n            }\n          }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 727, "to": 770 } }
        }
      }
    ],
    [
      "8e9a703b-1ec6-433f-98a6-503dcd58ee1e",
      {
        "pageContent": "}\n        },\n        {\n          \"name\": \"Aeon Capri\",\n          \"sku\": \"WP07\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 48,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        }\n      ],\n      \"page_info\": {\n        \"page_size\": 25\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 770, "to": 791 } }
        }
      }
    ],
    [
      "e0c491ab-7c66-40af-b7fc-7ac4c12c908c",
      {
        "pageContent": "### Query with layered navigation and includeDirectChildrenOnly input filter applied\n\nThe following query returns aggregations that filters on items with these characteristics:\n\n-  Women's Bottoms (category ID 22)\n-  In the price range of $40 - $49.99\n-  Comes in black (color 49)\n\nBecause the `includeDirectChildrenOnly` input filter is set to true, the category aggregation in the response will include only the Women's Pants and Shorts categories, which are direct children of the Women's Bottoms category.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nBy default, you cannot filter on the `color` attribute. [Filtering with custom attributes](../../../usage/custom-filters.md) describes how to enable this attribute for filtering. You can also run the following query without enabling the attribute by deleting `, color: {eq: \"49\"}`.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 793, "to": 807 } }
        }
      }
    ],
    [
      "6eceee6f-4e90-4af4-8f71-ca7886e84030",
      {
        "pageContent": "**Request:**\n\n```graphql\n{\nproducts(filter: {category_id: {eq: \"22\"}, price: {from: \"40\", to: \"49.99\"}, color: {eq: \"49\"}}, pageSize: 25, sort: {name: DESC}) {\n    aggregations (filter: {category: {includeDirectChildrenOnly: true}}) {\n      attribute_code\n      count\n      label\n      options {\n        label\n        value\n        count\n      }\n    }\n    items {\n      name\n      sku\n      price_range {\n        minimum_price {\n          regular_price {\n            value\n            currency\n          }\n        }\n      }\n    }\n    page_info {\n      page_size\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 807, "to": 838 } }
        }
      }
    ],
    [
      "7bc0908f-e637-448b-a297-78a74b412962",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 839, "to": 841 } }
        }
      }
    ],
    [
      "a581921c-f99c-4a6a-9555-90c748bd1852",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"aggregations\": [\n        {\n          \"attribute_code\": \"price\",\n          \"count\": 1,\n          \"label\": \"Price\",\n          \"options\": [\n            {\n              \"label\": \"40-50\",\n              \"value\": \"40_50\",\n              \"count\": 5\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"category_id\",\n          \"count\": 2,\n          \"label\": \"Category\",\n          \"options\": [\n            {\n              \"label\": \"Pants\",\n              \"value\": \"27\",\n              \"count\": 3\n            },\n            {\n              \"label\": \"Shorts\",\n              \"value\": \"28\",\n              \"count\": 2\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"climate\",\n          \"count\": 7,\n          \"label\": \"Climate\",\n          \"options\": [\n            {\n              \"label\": \"All-Weather\",\n              \"value\": \"201\",\n              \"count\": 5\n            },\n            {\n              \"label\": \"Cool\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 843, "to": 888 } }
        }
      }
    ],
    [
      "64650929-6374-498e-8b11-0d9c7bf57a46",
      {
        "pageContent": "\"value\": \"203\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Indoor\",\n              \"value\": \"204\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Mild\",\n              \"value\": \"205\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Spring\",\n              \"value\": \"207\",\n              \"count\": 3\n            },\n            {\n              \"label\": \"Warm\",\n              \"value\": \"208\",\n              \"count\": 5\n            },\n            {\n              \"label\": \"Hot\",\n              \"value\": \"211\",\n              \"count\": 1\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"pattern\",\n          \"count\": 3,\n          \"label\": \"Pattern\",\n          \"options\": [\n            {\n              \"label\": \"Color-Blocked\",\n              \"value\": \"194\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Solid\",\n              \"value\": \"196\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 889, "to": 931 } }
        }
      }
    ],
    [
      "022e0a0d-0ffb-4134-90b5-afb5abb51368",
      {
        "pageContent": "\"count\": 2\n            },\n            {\n              \"label\": \"Solid-Highlight\",\n              \"value\": \"197\",\n              \"count\": 2\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"style_bottom\",\n          \"count\": 4,\n          \"label\": \"Style\",\n          \"options\": [\n            {\n              \"label\": \"Basic\",\n              \"value\": \"105\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"Capri\",\n              \"value\": \"106\",\n              \"count\": 3\n            },\n            {\n              \"label\": \"Compression\",\n              \"value\": \"107\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Leggings\",\n              \"value\": \"108\",\n              \"count\": 2\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"sale\",\n          \"count\": 1,\n          \"label\": \"Sale\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 932, "to": 975 } }
        }
      }
    ],
    [
      "ea28a737-438f-4066-a05d-542f77088ebf",
      {
        "pageContent": "\"count\": 5\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"new\",\n          \"count\": 1,\n          \"label\": \"New\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 5\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"erin_recommends\",\n          \"count\": 2,\n          \"label\": \"Erin Recommends\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"1\",\n              \"value\": \"1\",\n              \"count\": 1\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"performance_fabric\",\n          \"count\": 1,\n          \"label\": \"Performance Fabric\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 5\n            }\n          ]\n        },\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 976, "to": 1021 } }
        }
      }
    ],
    [
      "a3f2759f-e2a2-4703-a0ee-88be4d734a1b",
      {
        "pageContent": "{\n          \"attribute_code\": \"eco_collection\",\n          \"count\": 2,\n          \"label\": \"Eco Collection\",\n          \"options\": [\n            {\n              \"label\": \"0\",\n              \"value\": \"0\",\n              \"count\": 3\n            },\n            {\n              \"label\": \"1\",\n              \"value\": \"1\",\n              \"count\": 2\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"size\",\n          \"count\": 5,\n          \"label\": \"Size\",\n          \"options\": [\n            {\n              \"label\": \"28\",\n              \"value\": \"171\",\n              \"count\": 5\n            },\n            {\n              \"label\": \"29\",\n              \"value\": \"172\",\n              \"count\": 5\n            },\n            {\n              \"label\": \"30\",\n              \"value\": \"173\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"31\",\n              \"value\": \"174\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"32\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1021, "to": 1064 } }
        }
      }
    ],
    [
      "a53a2b43-5686-402a-9989-57c985edbe2a",
      {
        "pageContent": "\"value\": \"175\",\n              \"count\": 1\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"material\",\n          \"count\": 7,\n          \"label\": \"Material\",\n          \"options\": [\n            {\n              \"label\": \"Cotton\",\n              \"value\": \"33\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Polyester\",\n              \"value\": \"38\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"Microfiber\",\n              \"value\": \"149\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Spandex\",\n              \"value\": \"150\",\n              \"count\": 4\n            },\n            {\n              \"label\": \"Organic Cotton\",\n              \"value\": \"153\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"CoolTech&trade;\",\n              \"value\": \"155\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Wool\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1065, "to": 1106 } }
        }
      }
    ],
    [
      "0fd0bf30-9ce2-4d80-a9bd-5493e3a3792d",
      {
        "pageContent": "\"value\": \"158\",\n              \"count\": 1\n            }\n          ]\n        },\n        {\n          \"attribute_code\": \"color\",\n          \"count\": 7,\n          \"label\": \"Color\",\n          \"options\": [\n            {\n              \"label\": \"Black\",\n              \"value\": \"49\",\n              \"count\": 5\n            },\n            {\n              \"label\": \"Blue\",\n              \"value\": \"50\",\n              \"count\": 2\n            },\n            {\n              \"label\": \"Gray\",\n              \"value\": \"52\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Green\",\n              \"value\": \"53\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"Orange\",\n              \"value\": \"56\",\n              \"count\": 3\n            },\n            {\n              \"label\": \"Purple\",\n              \"value\": \"57\",\n              \"count\": 1\n            },\n            {\n              \"label\": \"White\",\n              \"value\": \"59\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1107, "to": 1149 } }
        }
      }
    ],
    [
      "8485cb63-7f1b-48cb-9424-3c2288fa5e9a",
      {
        "pageContent": "\"count\": 2\n            }\n          ]\n        }\n      ],\n      \"items\": [\n        {\n          \"name\": \"Diana Tights\",\n          \"sku\": \"WP06\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 59,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Daria Bikram Pant\",\n          \"sku\": \"WP10\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 51,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Carina Basic Capri\",\n          \"sku\": \"WP09\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 51,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Artemis Running Short\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1150, "to": 1193 } }
        }
      }
    ],
    [
      "f8d47a35-ecca-47d7-ac54-1efd577ebe0a",
      {
        "pageContent": "\"sku\": \"WSH04\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 45,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Ana Running Short\",\n          \"sku\": \"WSH10\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 40,\n                \"currency\": \"USD\"\n              }\n            }\n          }\n        }\n      ],\n      \"page_info\": {\n        \"page_size\": 25\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1194, "to": 1223 } }
        }
      }
    ],
    [
      "83458372-d6da-4498-9b47-3302365c13cd",
      {
        "pageContent": "### Return minimum and maximum prices and discount information\n\nIn the following example, a catalog price rule that provides a 10% discount on all fitness equipment is in effect. The product queried, `24-WG080`, is the Sprite Yoga Companion Kit bundle product. This product has two user-selected options that cause the price to vary. If you choose to query a product that is not a composite (bundle, group, or configurable) product, the minimum and maximum prices are the same.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1225, "to": 1229 } }
        }
      }
    ],
    [
      "b2000993-b125-43b1-a19a-ae1f69424a92",
      {
        "pageContent": "**Request:**\n\n```graphql\n{\n  products(filter: {sku: {eq: \"24-WG080\"}}, sort: {name: ASC}) {\n    items {\n      name\n      sku\n      price_range {\n        minimum_price {\n          regular_price {\n            value\n            currency\n          }\n          final_price {\n            value\n            currency\n          }\n          discount {\n            amount_off\n            percent_off\n          }\n        }\n        maximum_price {\n          regular_price {\n            value\n            currency\n          }\n          final_price {\n            value\n            currency\n          }\n          discount {\n            amount_off\n            percent_off\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1229, "to": 1269 } }
        }
      }
    ],
    [
      "93bcbafc-aef1-4352-904d-d1628ca78edc",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1270, "to": 1272 } }
        }
      }
    ],
    [
      "6313a993-1214-483f-865c-306f566e8791",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"name\": \"Sprite Yoga Companion Kit\",\n          \"sku\": \"24-WG080\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"regular_price\": {\n                \"value\": 61,\n                \"currency\": \"USD\"\n              },\n              \"final_price\": {\n                \"value\": 54.9,\n                \"currency\": \"USD\"\n              },\n              \"discount\": {\n                \"amount_off\": 6.1,\n                \"percent_off\": 10\n              }\n            },\n            \"maximum_price\": {\n              \"regular_price\": {\n                \"value\": 77,\n                \"currency\": \"USD\"\n              },\n              \"final_price\": {\n                \"value\": 69.3,\n                \"currency\": \"USD\"\n              },\n              \"discount\": {\n                \"amount_off\": 7.7,\n                \"percent_off\": 10\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1274, "to": 1317 } }
        }
      }
    ],
    [
      "f1b6ca3b-8fb0-4ca7-95ca-eacec22463ec",
      {
        "pageContent": "### Sort by a custom attribute\n\nIn this example, the `description` attribute has been enabled by setting the **Stores** > Attributes > **Product** > description > **Storefront Properties** > **Use in Search** and **Used for Sorting in Product Listing** fields to Yes. The query returns all products with a price range of $28 to $30, sorted by the description.\n\n**Request:**\n\n```graphql\n{\n  products(filter: { price: { from: \"28\" to: \"30\"} }\n  sort: {\n    description: ASC\n  }) {\n    total_count\n    items {\n      name\n      sku\n      description {\n        html\n      }\n      price_range {\n        maximum_price {\n          regular_price {\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1319, "to": 1347 } }
        }
      }
    ],
    [
      "d0a20c84-a272-4d1f-af42-7b4f0f28bf0b",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1348, "to": 1350 } }
        }
      }
    ],
    [
      "3268c98c-c118-4bb8-a924-78777a56feb7",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"total_count\": 25,\n      \"items\": [\n        {\n          \"name\": \"Erikssen CoolTech&trade; Fitness Tank\",\n          \"sku\": \"MT01\",\n          \"description\": {\n            \"html\": \"<p>A good running tank helps make the miles pass by keep you cool. The Erikssen CoolTech&trade; Fitness Tank completes that mission, with performance fabric engineered to wick perspiration and promote airflow.</p>\\n<p>&bull; Red performance tank.<br />&bull; Slight scoop neckline. <br />&bull; Reflectivity. <br />&bull; Machine wash/dry.</p>\"\n          },\n          \"price_range\": {\n            \"maximum_price\": {\n              \"regular_price\": {\n                \"value\": 29\n              }\n            }\n          }\n        },\n        {\n          \"name\": \"Primo Endurance Tank\",\n          \"sku\": \"MT03\",\n          \"description\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1352, "to": 1375 } }
        }
      }
    ],
    [
      "7b853e93-7f4e-4fd9-ada7-bcf3436bd8f4",
      {
        "pageContent": "\"html\": \"<p>Chances are your workout goes beyond free weights, which is why the Primo Endurance Tank employs maximum versatility. Run, lift or play ball &ndash; this breathable mesh top will keep you cool during all your activities.</p>\\n<p>&bull; Red heather tank with gray pocket.<br />&bull; Chafe-resistant flatlock seams. <br />&bull; Relaxed fit. <br />&bull; Contrast topstitching.<br />&bull; Machine wash/dry.</p>\"\n          },\n          \"price_range\": {\n            \"maximum_price\": {\n              \"regular_price\": {\n                \"value\": 29\n              }\n            }\n          }\n        },\n        ...\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1376, "to": 1390 } }
        }
      }
    ],
    [
      "9752f2c5-59e8-42e1-a5cc-9dec6654a308",
      {
        "pageContent": "### Retrieve related products, up-sells, and cross-sells\n\nThe following query shows how to get related products, up-sells, and cross-sells for a product:\n\n**Request:**\n\n```graphql\n{\n  products(filter: { sku: { eq: \"24-WB06\" } }) {\n    items {\n      uid\n      name\n      related_products {\n        uid\n        name\n      }\n      upsell_products {\n        uid\n        name\n      }\n      crosssell_products {\n        uid\n        name\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1392, "to": 1418 } }
        }
      }
    ],
    [
      "35ed2690-b728-4581-940a-7b2888228a0c",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1419, "to": 1421 } }
        }
      }
    ],
    [
      "6cf0340f-7426-4c2c-b2a5-808338c072fb",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"uid\": \"MTE=\",\n          \"name\": \"Endeavor Daytrip Backpack\",\n          \"related_products\": [\n            {\n              \"uid\": \"MTU=\",\n              \"name\": \"Affirm Water Bottle \"\n            },\n            {\n              \"uid\": \"MTg=\",\n              \"name\": \"Pursuit Lumaflex&trade; Tone Band\"\n            },\n            {\n              \"uid\": \"MTY=\",\n              \"name\": \"Dual Handle Cardio Ball\"\n            },\n            {\n              \"uid\": \"MTc=\",\n              \"name\": \"Zing Jump Rope\"\n            }\n          ],\n          \"upsell_products\": [\n            {\n              \"uid\": \"MQ==\",\n              \"name\": \"Joust Duffle Bag\"\n            },\n            {\n              \"uid\": \"Mw==\",\n              \"name\": \"Crown Summit Backpack\"\n            },\n            {\n              \"uid\": \"NA==\",\n              \"name\": \"Wayfarer Messenger Bag\"\n            },\n            {\n              \"uid\": \"NQ==\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1423, "to": 1463 } }
        }
      }
    ],
    [
      "cce83b42-cd63-4e26-87c4-f55f8b3cfffe",
      {
        "pageContent": "\"name\": \"Rival Field Messenger\"\n            },\n            {\n              \"uid\": \"Ng==\",\n              \"name\": \"Fusion Backpack\"\n            },\n            {\n              \"uid\": \"Nw==\",\n              \"name\": \"Impulse Duffle\"\n            },\n            {\n              \"uid\": \"MTI=\",\n              \"name\": \"Driven Backpack\"\n            },\n            {\n              \"uid\": \"MTM=\",\n              \"name\": \"Overnight Duffle\"\n            },\n            {\n              \"uid\": \"MTQ=\",\n              \"name\": \"Push It Messenger Bag\"\n            }\n          ],\n          \"crosssell_products\": [\n            {\n              \"uid\": \"MTI=\",\n              \"name\": \"Driven Backpack\"\n            },\n            {\n              \"uid\": \"OA==\",\n              \"name\": \"Voyage Yoga Bag\"\n            },\n            {\n              \"uid\": \"Ng==\",\n              \"name\": \"Fusion Backpack\"\n            },\n            {\n              \"uid\": \"Nw==\",\n              \"name\": \"Impulse Duffle\"\n            },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1464, "to": 1503 } }
        }
      }
    ],
    [
      "81abbdc1-442f-4513-9f42-b699a2d48508",
      {
        "pageContent": "},\n            {\n              \"uid\": \"OQ==\",\n              \"name\": \"Compete Track Tote\"\n            },\n            {\n              \"uid\": \"Mw==\",\n              \"name\": \"Crown Summit Backpack\"\n            },\n            {\n              \"uid\": \"MTQ=\",\n              \"name\": \"Push It Messenger Bag\"\n            },\n            {\n              \"uid\": \"MQ==\",\n              \"name\": \"Joust Duffle Bag\"\n            },\n            {\n              \"uid\": \"MTA=\",\n              \"name\": \"Savvy Shoulder Tote\"\n            },\n            {\n              \"uid\": \"Mg==\",\n              \"name\": \"Strive Shoulder Pack\"\n            },\n            {\n              \"uid\": \"NA==\",\n              \"name\": \"Wayfarer Messenger Bag\"\n            },\n            {\n              \"uid\": \"MTM=\",\n              \"name\": \"Overnight Duffle\"\n            },\n            {\n              \"uid\": \"NQ==\",\n              \"name\": \"Rival Field Messenger\"\n            },\n            {\n              \"uid\": \"MTg=\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1503, "to": 1541 } }
        }
      }
    ],
    [
      "3ec7799d-be43-46b4-a4e3-871dd7c35c00",
      {
        "pageContent": "\"name\": \"Pursuit Lumaflex&trade; Tone Band\"\n            },\n            {\n              \"uid\": \"MjE=\",\n              \"name\": \"Sprite Foam Yoga Brick\"\n            },\n            {\n              \"uid\": \"MzI=\",\n              \"name\": \"Sprite Stasis Ball 75 cm\"\n            },\n            {\n              \"uid\": \"NDU=\",\n              \"name\": \"Set of Sprite Yoga Straps\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1542, "to": 1562 } }
        }
      }
    ],
    [
      "0a466a16-3001-4ce2-8c1d-52d8cfc9f89e",
      {
        "pageContent": "### Media gallery search\n\nThe following query returns media gallery information about the product with the `sku` of `24-MB01`.\n\n**Request:**\n\n```graphql\nquery {\n  productDetail: products(\n    pageSize: 5\n    filter: {\n       sku: { eq: \"24-MB01\" }\n    }\n  ) {\n    total_count\n    items {\n      sku\n      uid\n      name\n      image {\n        url\n        label\n      }\n      small_image{\n          url\n          label\n      }\n      media_gallery {\n          url\n          label\n          ... on ProductVideo {\n              video_content {\n                  media_type\n                  video_provider\n                  video_url\n                  video_title\n                  video_description\n                  video_metadata\n              }\n          }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1564, "to": 1607 } }
        }
      }
    ],
    [
      "06cc399d-7aa7-43d9-90e6-0336892468e1",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"productDetail\": {\n      \"total_count\": 1,\n      \"items\": [\n        {\n          \"sku\": \"24-MB01\",\n          \"uid\": \"MQ==\",\n          \"name\": \"Joust Duffle Bag\",\n          \"image\": {\n            \"url\": \"http://h3.test/media/catalog/product/cache/f2894681b4002ea001bba48638ea0dbc/m/b/mb01-blue-0.jpg\",\n            \"label\": \"Joust Duffle Bag\"\n          },\n          \"small_image\": {\n            \"url\": \"http://h3.test/media/catalog/product/cache/f2894681b4002ea001bba48638ea0dbc/m/b/mb01-blue-0.jpg\",\n            \"label\": \"Joust Duffle Bag\"\n          },\n          \"media_gallery\": [\n            {\n              \"url\": \"http://h3.test/media/catalog/product/cache/f2894681b4002ea001bba48638ea0dbc/m/b/mb01-blue-0.jpg\",\n              \"label\": \"Image\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1608, "to": 1641 } }
        }
      }
    ],
    [
      "f2a81503-7285-4474-9e3b-5f984fb89989",
      {
        "pageContent": "### Query a URL's rewrite information\n\nThe following product query returns URL rewrite information about the Joust Duffle Bag.\n\n**Request:**\n\n```graphql\n{\n  products(search: \"Joust\") {\n    items {\n      name\n      sku\n      url_rewrites {\n        url\n        parameters {\n          name\n          value\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1643, "to": 1664 } }
        }
      }
    ],
    [
      "462df384-4515-47d2-bcec-28de352b1e6d",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1665, "to": 1667 } }
        }
      }
    ],
    [
      "1f15c6d0-3896-4ae0-a7f5-fdbac3f7156c",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"name\": \"Joust Duffle Bag\",\n          \"sku\": \"24-MB01\",\n          \"url_rewrites\": [\n            {\n              \"url\": \"no-route\",\n              \"parameters\": [\n                {\n                  \"name\": \"page_id\",\n                  \"value\": \"1\"\n                }\n              ]\n            },\n            {\n              \"url\": \"joust-duffle-bag.html\",\n              \"parameters\": [\n                {\n                  \"name\": \"id\",\n                  \"value\": \"1\"\n                }\n              ]\n            },\n            {\n              \"url\": \"gear/joust-duffle-bag.html\",\n              \"parameters\": [\n                {\n                  \"name\": \"id\",\n                  \"value\": \"1\"\n                },\n                {\n                  \"name\": \"category\",\n                  \"value\": \"3\"\n                }\n              ]\n            },\n            {\n              \"url\": \"gear/bags/joust-duffle-bag.html\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1669, "to": 1710 } }
        }
      }
    ],
    [
      "494966ff-3bdb-47f9-a56e-f0a188fdfd10",
      {
        "pageContent": "\"parameters\": [\n                {\n                  \"name\": \"id\",\n                  \"value\": \"1\"\n                },\n                {\n                  \"name\": \"category\",\n                  \"value\": \"4\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1711, "to": 1728 } }
        }
      }
    ],
    [
      "2d90076a-0877-4b19-9e9b-1566e265a851",
      {
        "pageContent": "### Retrieve variant `uid` values\n\nThe following query returns information about each variant of the configurable product `WSH12`. Each variant has a unique combination of color and size values. Specify the `uid` values in the `selected_options` array of the [`addProductsToCart` mutation](../../cart/mutations/add-products.md) to indicate which variants the shopper selected.\n\n**Request:**\n\n```graphql\n{\n  products(filter: {sku: {eq: \"WSH12\"}}) {\n    items {\n      sku\n      ... on ConfigurableProduct {\n        variants {\n          attributes {\n            uid\n            label\n            code\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1730, "to": 1752 } }
        }
      }
    ],
    [
      "17f89777-63db-4dc3-b73f-a335e846b2f8",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1753, "to": 1755 } }
        }
      }
    ],
    [
      "213ddc51-3fb7-4cf1-b4c7-9e72710ede16",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"sku\": \"WSH12\",\n          \"variants\": [\n            {\n              \"attributes\": [\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                  \"label\": \"Green\",\n                  \"code\": \"color\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzE=\",\n                  \"label\": \"28\",\n                  \"code\": \"size\"\n                }\n              ]\n            },\n            {\n              \"attributes\": [\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU3\",\n                  \"label\": \"Purple\",\n                  \"code\": \"color\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzE=\",\n                  \"label\": \"28\",\n                  \"code\": \"size\"\n                }\n              ]\n            },\n            {\n              \"attributes\": [\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1757, "to": 1795 } }
        }
      }
    ],
    [
      "a119a7b7-4ca9-429a-bdde-a4b651ff239c",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU4\",\n                  \"label\": \"Red\",\n                  \"code\": \"color\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzE=\",\n                  \"label\": \"28\",\n                  \"code\": \"size\"\n                }\n              ]\n            },\n            {\n              \"attributes\": [\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzUz\",\n                  \"label\": \"Green\",\n                  \"code\": \"color\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzI=\",\n                  \"label\": \"29\",\n                  \"code\": \"size\"\n                }\n              ]\n            },\n            {\n              \"attributes\": [\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU3\",\n                  \"label\": \"Purple\",\n                  \"code\": \"color\"\n                },\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1795, "to": 1828 } }
        }
      }
    ],
    [
      "ed59569a-0469-4804-a6e3-b9182647f1b0",
      {
        "pageContent": "{\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzI=\",\n                  \"label\": \"29\",\n                  \"code\": \"size\"\n                }\n              ]\n            },\n            {\n              \"attributes\": [\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzkzLzU4\",\n                  \"label\": \"Red\",\n                  \"code\": \"color\"\n                },\n                {\n                  \"uid\": \"Y29uZmlndXJhYmxlLzE2MC8xNzI=\",\n                  \"label\": \"29\",\n                  \"code\": \"size\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1828, "to": 1855 } }
        }
      }
    ],
    [
      "e6b4ddfc-d7ff-480b-881e-cb247ce14a7f",
      {
        "pageContent": "### Filter `custom_attributesV2` of a product\n\n< CustomAttributeFilterProduct />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/products.md",
          "loc": { "lines": { "from": 1857, "to": 1859 } }
        }
      }
    ],
    [
      "c16992f5-5420-4379-9c02-83d9c2b0a9a5",
      {
        "pageContent": "---\ntitle: route query\n---\n\n# route query\n\nA merchant can reconfigure (rewrite) the URL to any product, category, or CMS page. When the rewrite goes into effect, any links that point to the previous URL are redirected to the new address.\n\nThe `route` query returns the canonical URL for a specified product, category, or CMS page. An external app can render a page by a URL without any prior knowledge about the landing page. To query for product and category pages, the `url` value must contain the URL key and suffix. For CMS page queries, the `url` value must contain the URL key only.\n\n## Syntax\n\n`{route(url: String!): RoutableInterface}`\n\n## Reference\n\nThe [`route`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-route) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/route.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "e893a910-f1a0-4c41-b196-118d0a3aaf3a",
      {
        "pageContent": "## Example usage\n\nThe following query returns information about the product with the URL key of `joust-duffle-bag.html`. The response indicates the URL key has been permanently redirected to `new-joust-duffle-bag.html`.\n\n**Request:**\n\n```graphql\n{\n  route(url: \"joust-duffle-bag.html\") {\n    __typename\n    relative_url\n    redirect_code\n    type\n    ... on SimpleProduct {\n      sku\n      url_key\n      uid\n      url_rewrites {\n        url\n        parameters {\n          name\n          value\n        }\n      }\n      relative_url\n      redirect_code\n      type\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/route.md",
          "loc": { "lines": { "from": 19, "to": 48 } }
        }
      }
    ],
    [
      "a9e6fff5-5ade-4c73-be09-d84788f046e2",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/route.md",
          "loc": { "lines": { "from": 49, "to": 51 } }
        }
      }
    ],
    [
      "3ea8eef0-5f8c-4bc4-a50f-258bab914e14",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"route\": {\n      \"__typename\": \"SimpleProduct\",\n      \"relative_url\": \"new-joust-duffle-bag.html\",\n      \"redirect_code\": 301,\n      \"type\": \"PRODUCT\",\n      \"sku\": \"24-MB01\",\n      \"url_key\": \"new-joust-duffle-bag\",\n      \"uid\": \"MQ==\",\n      \"url_rewrites\": [\n        {\n          \"url\": \"new-joust-duffle-bag.html\",\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"1\"\n            }\n          ]\n        },\n        {\n          \"url\": \"gear/new-joust-duffle-bag.html\",\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"category\",\n              \"value\": \"3\"\n            }\n          ]\n        },\n        {\n          \"url\": \"gear/bags/new-joust-duffle-bag.html\",\n          \"parameters\": [\n            {\n              \"name\": \"id\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"category\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/route.md",
          "loc": { "lines": { "from": 53, "to": 95 } }
        }
      }
    ],
    [
      "9d675802-d3a6-4d5c-9e47-a1968381d343",
      {
        "pageContent": "\"value\": \"4\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/route.md",
          "loc": { "lines": { "from": 96, "to": 104 } }
        }
      }
    ],
    [
      "ca991cdb-c8cd-44b1-83cb-7e6d07906830",
      {
        "pageContent": "## Related topics\n\n[RoutableInterface](../interfaces/routable.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/route.md",
          "loc": { "lines": { "from": 106, "to": 108 } }
        }
      }
    ],
    [
      "8730530e-3d73-47fb-abf5-631c165b718b",
      {
        "pageContent": "---\ntitle: urlResolver query\n---\n\n# urlResolver query\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nThe `urlResolver` query has been deprecated. Use the [route](route.md) query instead.\n\nA merchant can reconfigure (rewrite) the URL to any product, category, or CMS page. When the rewrite goes into effect, any links that point to the previous URL are redirected to the new address.\n\nThe `urlResolver` query returns the canonical URL for a specified product, category, or CMS page. An external app can render a page by a URL without any prior knowledge about the landing page.\n\n## Syntax\n\n`{urlResolver(url: String!): EntityUrl}`\n\n## Reference\n\nThe [`urlResolver`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-urlResolver) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/url-resolver.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "51b08e6f-52c4-441d-97b5-2ce14dc3d6ed",
      {
        "pageContent": "## Example usage\n\n### Query the URL's information\n\nThe following query returns information about the URL containing `joust-duffle-bag.html`.\n\n**Request:**\n\n```graphql\n{\n  urlResolver(url: \"joust-duffle-bag.html\") {\n    entity_uid\n    relative_url\n    redirectCode\n    type\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"urlResolver\": {\n      \"entity_uid\": \"MQ==\",\n      \"relative_url\": \"joust-duffle-bag.html\",\n      \"redirectCode\": 0,\n      \"type\": \"PRODUCT\"\n    }\n  }\n}\n```\n\n## Related topics\n\n[products query](products.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/products/queries/url-resolver.md",
          "loc": { "lines": { "from": 23, "to": 59 } }
        }
      }
    ],
    [
      "94415bea-dbce-4fa3-8f55-9a77bf06bbfa",
      {
        "pageContent": "---\ntitle: Store\n---\n\n# Store\n\nThe store schema primarily retrieves system and store configuration data. It also contains the `contactUs` mutation, which enables a shopper to submit feedback to the merchant.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "64e49431-65d0-4844-aad7-16f5373a5b6f",
      {
        "pageContent": "---\ntitle: contactUs mutation\n---\n\nimport BetaPwaNote from '/src/_includes/graphql/notes/beta-pwa.md'\n\n# contactUs mutation\n\nThe `contactUs` mutation submits the contents of the Contact Us form.\n\n## Syntax\n\n`mutation: contactUs(input: ContactUsInput!): ContactUsOutput`\n\n## Reference\n\nThe [`contactUs`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#mutation-contactUs) reference provides detailed information about the types and fields defined in this mutation.\n\n## Example usage\n\nThe following example adds a Contact Us form to the site.\n\n**Request:**\n\n```graphql\nmutation {\n  contactUs(\n    input: {\n      comment: \"My comment\",\n      email: \"bobloblaw@example.com\",\n      telephone: \"(555)-CALL-BOB\",\n      name: \"Bob Loblaw\" }\n      ) {\n    status\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"contactUs\": {\n      \"status\": true\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/mutations/contact-us.md",
          "loc": { "lines": { "from": 1, "to": 49 } }
        }
      }
    ],
    [
      "bf791fa6-c0a4-4d46-bb6c-9b66bb70de02",
      {
        "pageContent": "---\ntitle: Store mutations\n---\n\n# Store mutations\n\nThe `contactUs` mutation enables you to create a Contact Us form on your storefront.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "d27346b8-863e-4036-8a6f-a1ec09cd83b1",
      {
        "pageContent": "---\ntitle: availableStores query\n---\n\n# availableStores query\n\nThe `availableStores` query returns configuration information about multiple store views. Use this query to implement a store switcher.\n\nIf the `useCurrentGroup` input argument is set to `true`, then the `availableStores` query returns configuration information about store views that have the same parent _store_. If the input argument is not specified or is set to `false`, the query returns values for all store views with the same parent _website_.\n\nSpecify the [Store header](../../../usage/headers.md) to determine the scope of the call. Without this header, the query returns values for the default store view and other store views with the same parent _store_.\n\n## Syntax\n\n`availableStores(useCurrentGroup: Boolean): [StoreConfig]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/available-stores.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "a930d59a-fc4c-4729-8cf2-f001768b07e6",
      {
        "pageContent": "## Reference\n\nThe [`availableStores`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-availableStores) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/available-stores.md",
          "loc": { "lines": { "from": 17, "to": 19 } }
        }
      }
    ],
    [
      "5817a6e2-9f7d-4d5f-ba1b-23923c0fa828",
      {
        "pageContent": "## Example usage\n\nThe following query returns information about the store's basic catalog configuration.\n\n**Request:**\n\n```graphql\nquery {\n  availableStores(useCurrentGroup: true) {\n    store_code\n    store_name\n    is_default_store\n    store_group_code\n    is_default_store_group\n    locale\n    base_currency_code\n    default_display_currency_code\n    timezone\n    weight_unit\n    base_url\n    base_link_url\n    base_static_url\n    base_media_url\n    secure_base_url\n    secure_base_link_url\n    secure_base_static_url\n    secure_base_media_url\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/available-stores.md",
          "loc": { "lines": { "from": 21, "to": 49 } }
        }
      }
    ],
    [
      "efac2ffb-2bd6-4651-9c2d-8416dc24faa2",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/available-stores.md",
          "loc": { "lines": { "from": 50, "to": 52 } }
        }
      }
    ],
    [
      "e90333ef-0cf4-4760-bd41-40e0cd549f57",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"availableStores\": [\n      {\n        \"store_code\": \"default\",\n        \"store_name\": \"Default Store View\",\n        \"is_default_store\": true,\n        \"store_group_code\": \"main_website_store\",\n        \"is_default_store_group\": true,\n        \"locale\": \"en_US\",\n        \"base_currency_code\": \"USD\",\n        \"default_display_currency_code\": \"USD\",\n        \"timezone\": \"America/Chicago\",\n        \"weight_unit\": \"lbs\",\n        \"base_url\": \"http://example.com/\",\n        \"base_link_url\": \"http://example.com/\",\n        \"base_static_url\": \"http://example.com/pub/static/version1606976517/\",\n        \"base_media_url\": \"http://example.com/pub/media/\",\n        \"secure_base_url\": \"http://example.com/\",\n        \"secure_base_link_url\": \"http://example.com/\",\n        \"secure_base_static_url\": \"http://example.com/pub/static/version1606976517/\",\n        \"secure_base_media_url\": \"http://example.com/pub/media/\"\n      },\n      {\n        \"store_code\": \"de\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/available-stores.md",
          "loc": { "lines": { "from": 54, "to": 79 } }
        }
      }
    ],
    [
      "96abdfc0-dc6e-4c4d-b838-2cc8183b354f",
      {
        "pageContent": "\"store_name\": \"Europe Store View\",\n        \"is_default_store\": false,\n        \"store_group_code\": \"main_website_store\",\n        \"is_default_store_group\": true,\n        \"locale\": \"de_DE\",\n        \"base_currency_code\": \"USD\",\n        \"default_display_currency_code\": \"EUR\",\n        \"timezone\": \"Europe/Berlin\",\n        \"weight_unit\": \"lbs\",\n        \"base_url\": \"http://example.com/\",\n        \"base_link_url\": \"http://example.com/\",\n        \"base_static_url\": \"http://example.com/pub/static/version1606976517/\",\n        \"base_media_url\": \"http://example.com/pub/media/\",\n        \"secure_base_url\": \"http://example.com/\",\n        \"secure_base_link_url\": \"http://example.com/\",\n        \"secure_base_static_url\": \"http://example.com/pub/static/version1606976517/\",\n        \"secure_base_media_url\": \"http://example.com/pub/media/\"\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/available-stores.md",
          "loc": { "lines": { "from": 80, "to": 101 } }
        }
      }
    ],
    [
      "811a5354-eec3-47fc-a73b-e9e02a8e81c1",
      {
        "pageContent": "---\ntitle: cmsBlocks query\n---\n\n# cmsBlocks query\n\nThe `cmsBlocks` query returns information about blocks that were developed with the Adobe Commerce or Magento Open Source Content Management System (CMS).\n\n## Syntax\n\nReturn the contents of one or more CMS blocks:\n\n`cmsBlocks(identifiers: [String]): CmsBlocks`\n\n## Reference\n\nThe [`cmsBlocks`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-cmsBlocks) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-blocks.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "a95026c7-a0b3-4976-8c18-8c894b03dd66",
      {
        "pageContent": "## Example usage\n\nThe following query returns information about the `login-data` block:\n\n**Request:**\n\n```graphql\n{\n  cmsBlocks(identifiers: \"login-data\") {\n    items {\n      identifier\n      title\n      content\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"cmsBlocks\": {\n      \"items\": [\n        {\n          \"identifier\": \"login-data\",\n          \"title\": \"Login Info Block\",\n          \"content\": \"<div class=\\\"message info\\\" style=\\\"margin-top: 50px;\\\">\\n    <p><strong>Try Demo Customer Access</strong></p>\\n    <p><span style=\\\"display:inline-block; width: 80px; padding-right: 10px;\\\">Email:</span>roni_cost@example.com</p>\\n    <p><span style=\\\"display:inline-block; width: 80px; padding-right: 10px;\\\">Password:</span>roni_cost3@example.com</p>\\n</div>\"\n        }\n      ]\n    }\n  }\n}\n```\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe `content` field may contain HTML markup and CSS styles. Hidden and system elements may be included in the response.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-blocks.md",
          "loc": { "lines": { "from": 19, "to": 57 } }
        }
      }
    ],
    [
      "ff6e6831-ae3e-4198-938d-dd06bfaf2d0a",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The CMS block with the \"XXXX\" ID doesn't exist` | The specified CMS block ID is invalid.\n`\"identifiers\" of CMS blocks should be specified\"` | The `identifiers` array parameter is required for identifying the CMS blocks.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-blocks.md",
          "loc": { "lines": { "from": 59, "to": 64 } }
        }
      }
    ],
    [
      "f79a0c94-132b-4e46-9ded-32007a731bc1",
      {
        "pageContent": "---\ntitle: cmsPage query\n---\n\n# cmsPage query\n\nThe `cmsPage` query returns information about content pages that were developed with the Adobe Commerce or Magento Open Source Content Management System (CMS).\n\n## Syntax\n\nReturn the contents of a CMS page:\n\n`cmsPage(identifier: String): CmsPage`\n\n## Reference\n\nThe [`cmsPage`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-cmsPage) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-page.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "53ec1d24-6098-40b9-b446-6ee5c7b93b9e",
      {
        "pageContent": "## Example usage\n\nYou must include the CMS page identifier value to retrieve the content of a specific CMS page. The following query returns information about the \"404 Not Found\" CMS page:\n\n**Request:**\n\n```graphql\n{\n  cmsPage(identifier: \"no-route\") {\n    identifier\n    url_key\n    title\n    content\n    content_heading\n    page_layout\n    meta_title\n    meta_description\n    meta_keywords\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-page.md",
          "loc": { "lines": { "from": 19, "to": 38 } }
        }
      }
    ],
    [
      "20d9ce15-6f0f-4c2f-be3f-e31bc638897e",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-page.md",
          "loc": { "lines": { "from": 39, "to": 41 } }
        }
      }
    ],
    [
      "b1a01557-eb94-4d86-b0e7-c0705b8f5f50",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"cmsPage\": {\n      \"identifier\": \"no-route\"\n      \"url_key\": \"no-route\",\n      \"title\": \"404 Not Found\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-page.md",
          "loc": { "lines": { "from": 43, "to": 49 } }
        }
      }
    ],
    [
      "30d53375-abf8-4d2a-a3c8-ad42964dedd7",
      {
        "pageContent": "\"content\": \"<dl>\\r\\n<dt>The page you requested was not found, and we have a fine guess why.</dt>\\r\\n<dd>\\r\\n<ul class=\\\"disc\\\">\\r\\n<li>If you typed the URL directly, please make sure the spelling is correct.</li>\\r\\n<li>If you clicked on a link to get here, the link is outdated.</li>\\r\\n</ul></dd>\\r\\n</dl>\\r\\n<dl>\\r\\n<dt>What can you do?</dt>\\r\\n<dd>Have no fear, help is near! There are many ways you can get back on track with the Store.</dd>\\r\\n<dd>\\r\\n<ul class=\\\"disc\\\">\\r\\n<li><a href=\\\"#\\\" onclick=\\\"history.go(-1); return false;\\\">Go back</a> to the previous page.</li>\\r\\n<li>Use the search bar at the top of the page to search for your products.</li>\\r\\n<li>Follow these links to get you back on track!<br /><a href=\\\"http://magento2.vagrant193/\\\">Store Home</a> <span class=\\\"separator\\\">|</span> <a href=\\\"http://magento2.vagrant193/customer/account/\\\">My Account</a></li></ul></dd></dl>\\r\\n\",\n      \"content_heading\": \"Whoops, our bad...\",\n      \"page_layout\": \"2columns-right\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-page.md",
          "loc": { "lines": { "from": 50, "to": 52 } }
        }
      }
    ],
    [
      "b7a10726-889f-4342-adb4-88e4adf2e16c",
      {
        "pageContent": "\"meta_title\": null,\n      \"meta_description\": \"Page description\",\n      \"meta_keywords\": \"Page keywords\"\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-page.md",
          "loc": { "lines": { "from": 53, "to": 58 } }
        }
      }
    ],
    [
      "d76885c9-f8a7-4b58-aa54-33673c69d4e9",
      {
        "pageContent": "```\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe `content` field may contain HTML markup and CSS styles. Hidden and system elements may be included in the response.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-page.md",
          "loc": { "lines": { "from": 59, "to": 63 } }
        }
      }
    ],
    [
      "ad81f461-b871-45fe-afcc-99c3033cb59b",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The CMS page with the \"XXXX\" ID doesn't exist` | The specified CMS page ID is invalid.\n`Page id/identifier should be specified\"` | The `identifier` parameter is required for identifying the CMS page.\n\n## Related topics\n\n[cmsBlocks query](cms-blocks.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/cms-page.md",
          "loc": { "lines": { "from": 65, "to": 74 } }
        }
      }
    ],
    [
      "03b02b1d-2087-4eeb-9ee1-a20803a052ac",
      {
        "pageContent": "---\ntitle: countries query\n---\n\n# countries query\n\nThe `countries` query returns all countries in which the entity can do business.\n\nUse the [country](country.md) query if you want to retrieve information about a specific country.\n\n## Syntax\n\n`{countries {Countries}}`\n\n## Reference\n\nThe [`countries`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-countries) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/countries.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "960c3ed8-ed0f-4643-a29e-bd49f70db3ef",
      {
        "pageContent": "## Example usage\n\nThe following query returns all countries listed for the current instance of Magento:\n\n**Request:**\n\n```graphql\nquery {\n    countries {\n        id\n        two_letter_abbreviation\n        three_letter_abbreviation\n        full_name_locale\n        full_name_english\n        available_regions {\n            id\n            code\n            name\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/countries.md",
          "loc": { "lines": { "from": 19, "to": 39 } }
        }
      }
    ],
    [
      "f58a1a60-f981-4aae-8bed-895eefe9407c",
      {
        "pageContent": "```\n\n**Response:**\n\nIn this example, the response is intentionally truncated. The `available_regions` attribute value will be null if the country does not have any regions available. Otherwise, it contains an array of the country's regions.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/countries.md",
          "loc": { "lines": { "from": 40, "to": 44 } }
        }
      }
    ],
    [
      "36210fb7-7be5-4636-b94d-b6f0a7da67c9",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"countries\": [\n      {\n        \"id\": \"AD\",\n        \"two_letter_abbreviation\": \"AD\",\n        \"three_letter_abbreviation\": \"AND\",\n        \"full_name_locale\": \"Andorra\",\n        \"full_name_english\": \"Andorra\",\n        \"available_regions\": null\n      },\n      {\n        \"id\": \"AE\",\n        \"two_letter_abbreviation\": \"AE\",\n        \"three_letter_abbreviation\": \"ARE\",\n        \"full_name_locale\": \"United Arab Emirates\",\n        \"full_name_english\": \"United Arab Emirates\",\n        \"available_regions\": null\n      },\n      {\n        \"id\": \"AF\",\n        \"two_letter_abbreviation\": \"AF\",\n        \"three_letter_abbreviation\": \"AFG\",\n        \"full_name_locale\": \"Afghanistan\",\n        \"full_name_english\": \"Afghanistan\",\n        \"available_regions\": null\n      },\n      {\n        \"id\": \"AG\",\n        \"two_letter_abbreviation\": \"AG\",\n        \"three_letter_abbreviation\": \"ATG\",\n        \"full_name_locale\": \"Antigua and Barbuda\",\n        \"full_name_english\": \"Antigua and Barbuda\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/countries.md",
          "loc": { "lines": { "from": 46, "to": 79 } }
        }
      }
    ],
    [
      "2b76e265-a87a-47c0-8f7e-b67a9dfdb84e",
      {
        "pageContent": "\"available_regions\": null\n      },\n      {\n        \"id\": \"AT\",\n        \"two_letter_abbreviation\": \"AT\",\n        \"three_letter_abbreviation\": \"AUT\",\n        \"full_name_locale\": \"Austria\",\n        \"full_name_english\": \"Austria\",\n        \"available_regions\": [\n          {\n            \"id\": 102,\n            \"code\": \"BL\",\n            \"name\": \"Burgenland\"\n          },\n          {\n            \"id\": 99,\n            \"code\": \"KN\",\n            \"name\": \"Kärnten\"\n          },\n          {\n            \"id\": 96,\n            \"code\": \"NO\",\n            \"name\": \"Niederösterreich\"\n          },\n          {\n            \"id\": 97,\n            \"code\": \"OO\",\n            \"name\": \"Oberösterreich\"\n          },\n          {\n            \"id\": 98,\n            \"code\": \"SB\",\n            \"name\": \"Salzburg\"\n          },\n          {\n            \"id\": 100,\n            \"code\": \"ST\",\n            \"name\": \"Steiermark\"\n          },\n          {\n            \"id\": 101,\n            \"code\": \"TI\",\n            \"name\": \"Tirol\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/countries.md",
          "loc": { "lines": { "from": 80, "to": 122 } }
        }
      }
    ],
    [
      "fc0e7555-0c13-455d-8071-02d804e33641",
      {
        "pageContent": "},\n          {\n            \"id\": 103,\n            \"code\": \"VB\",\n            \"name\": \"Vorarlberg\"\n          },\n          {\n            \"id\": 95,\n            \"code\": \"WI\",\n            \"name\": \"Wien\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/countries.md",
          "loc": { "lines": { "from": 123, "to": 139 } }
        }
      }
    ],
    [
      "0f068cb6-ab50-46fb-9f83-3825f3eeae52",
      {
        "pageContent": "## Related topics\n\n*  [country query](country.md)\n*  [currency query](currency.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/countries.md",
          "loc": { "lines": { "from": 141, "to": 144 } }
        }
      }
    ],
    [
      "45090cd8-bdfa-444a-a835-d94f572f4c42",
      {
        "pageContent": "---\ntitle: country query\n---\n\n# country query\n\nUse the `country` query to retrieve information about a specific country.\n\nUse the [countries](../../store/queries/countries.md) query to retrieve a list of countries available in the system.\n\n## Syntax\n\n`{country(id: String) {Country}}`\n\n## Reference\n\nThe [`country`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-country) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/country.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "475fc14f-fe2e-4f3c-865d-adbcab632a40",
      {
        "pageContent": "## Example usage\n\nThe following query uses a two-letter abbreviation for the country ID (id: \"AU\"), which returns information about Australia.\n\n**Request:**\n\n```graphql\nquery {\n    country(id: \"AU\") {\n        id\n        two_letter_abbreviation\n        three_letter_abbreviation\n        full_name_locale\n        full_name_english\n        available_regions {\n            id\n            code\n            name\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/country.md",
          "loc": { "lines": { "from": 19, "to": 39 } }
        }
      }
    ],
    [
      "65fb0265-b6e9-4691-909b-6f77154af882",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/country.md",
          "loc": { "lines": { "from": 40, "to": 42 } }
        }
      }
    ],
    [
      "70533ab2-239c-4bb4-be5d-8cc0b35de0eb",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"country\": {\n      \"id\": \"AU\",\n      \"two_letter_abbreviation\": \"AU\",\n      \"three_letter_abbreviation\": \"AUS\",\n      \"full_name_locale\": \"Australia\",\n      \"full_name_english\": \"Australia\",\n      \"available_regions\": [\n        {\n          \"id\": 569,\n          \"code\": \"ACT\",\n          \"name\": \"Australian Capital Territory\"\n        },\n        {\n          \"id\": 570,\n          \"code\": \"NSW\",\n          \"name\": \"New South Wales\"\n        },\n        {\n          \"id\": 576,\n          \"code\": \"NT\",\n          \"name\": \"Northern Territory\"\n        },\n        {\n          \"id\": 572,\n          \"code\": \"QLD\",\n          \"name\": \"Queensland\"\n        },\n        {\n          \"id\": 573,\n          \"code\": \"SA\",\n          \"name\": \"South Australia\"\n        },\n        {\n          \"id\": 574,\n          \"code\": \"TAS\",\n          \"name\": \"Tasmania\"\n        },\n        {\n          \"id\": 571,\n          \"code\": \"VIC\",\n          \"name\": \"Victoria\"\n        },\n        {\n          \"id\": 575,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/country.md",
          "loc": { "lines": { "from": 44, "to": 90 } }
        }
      }
    ],
    [
      "e0105064-f2c8-41eb-9ff0-44bd2982ec6d",
      {
        "pageContent": "\"code\": \"WA\",\n          \"name\": \"Western Australia\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/country.md",
          "loc": { "lines": { "from": 91, "to": 98 } }
        }
      }
    ],
    [
      "3e72c89e-cab2-4eae-959d-d987eb1dafc1",
      {
        "pageContent": "## Related topics\n\n*  [countries query](../../store/queries/countries.md)\n*  [currency query](../../store/queries/currency.md)\n\n## Errors\n\nError | Description\n--- | ---\n`Country \\\"id\\\" value should be specified\"` | The Country ID value must be specified to find the mapped country.\n`The country isn't available` | There is no country mapped to the given country ID.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/country.md",
          "loc": { "lines": { "from": 100, "to": 110 } }
        }
      }
    ],
    [
      "b645fa2e-c0bc-4f37-b9a9-7a73e50dba77",
      {
        "pageContent": "---\ntitle: currency query\n---\n\n# currency query\n\nUse the `currency` query to return information about the store's currency configuration.\n\n## Syntax\n\n`{currency {Currency}}`\n\n## Reference\n\nThe [`currency`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-currency) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/currency.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "14beb424-c2b7-4d80-a3b9-23acf2ee8098",
      {
        "pageContent": "## Example usage\n\nThe following query returns currency information for an instance of the application that is configured for multiple currencies, USD and EUR. The default (base) currency for the store is US Dollar (USD). The response includes a list of currencies in the `available_currency_codes` attribute as well as a set of exchange rates.\n\n**Request:**\n\n```graphql\nquery {\n    currency {\n        base_currency_code\n        base_currency_symbol\n        default_display_currency_code\n        default_display_currency_symbol\n        available_currency_codes\n        exchange_rates {\n            currency_to\n            rate\n        }\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/currency.md",
          "loc": { "lines": { "from": 17, "to": 36 } }
        }
      }
    ],
    [
      "6b799adc-40a3-4691-8c31-eb6458f7079b",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"currency\": {\n      \"base_currency_code\": \"USD\",\n      \"base_currency_symbol\": \"$\",\n      \"default_display_currency_code\": \"USD\",\n      \"default_display_currency_symbol\": \"$\",\n      \"available_currency_codes\": [\n        \"EUR\",\n        \"USD\"\n      ],\n      \"exchange_rates\": [\n        {\n          \"currency_to\": \"EUR\",\n          \"rate\": 0.7067\n        },\n        {\n          \"currency_to\": \"USD\",\n          \"rate\": 1\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/currency.md",
          "loc": { "lines": { "from": 37, "to": 66 } }
        }
      }
    ],
    [
      "605e8ff5-b4af-4697-b72a-4ebbbc4e5808",
      {
        "pageContent": "## Related topics\n\n*  [countries query](../../store/queries/countries.md)\n*  [country query](../../store/queries/country.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/currency.md",
          "loc": { "lines": { "from": 68, "to": 71 } }
        }
      }
    ],
    [
      "58a52d3c-a4a4-4867-8e45-2b45d7455df4",
      {
        "pageContent": "---\ntitle: dynamicBlocks query\n---\n\n# dynamicBlocks query\n\nThe `dynamicBlocks` query returns a list of dynamic blocks that have been placed in a Dynamic Blocks Rotator inline widget and meet the specified criteria.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe Banner functionality was removed from Adobe Commerce and Magento Open Source 2.4.0 and replaced with dynamic blocks.\n\nWhen a [Dynamic Blocks Rotator inline widget is created](https://docs.magento.com/user-guide/cms/dynamic-blocks-rotate.html), the administrator can select the following options:\n\n*  **Specified Dynamic Blocks**\n*  **Cart Price Rule Related**\n*  **Catalog Price Rule Related**\n\nWidgets defined with the **Specified Dynamic Blocks** option affect CMS page rendering. The other two options are used for rendering cart, product, and catalog pages and are not applicable for PWA applications. Therefore, in most cases for a CMS page, your query should assign the value of `SPECIFIED` to the `type` input attribute.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/dynamic-blocks.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "afde5ca7-b9ab-44ff-8916-514fb0a92ab5",
      {
        "pageContent": "<InlineAlert variant=\"info\" slots=\"text\" />\n\nAdobe Commerce and Magento Open Source GraphQL supports the **Display all instead of rotating** rotation mode only.\n\nThe following input fields are available only if specialized modules have been installed:\n\nField | Type | Description\n--- | --- | ---\n`audience_id` field | FilterEqualTypeInput | The Audience ID for this block. Available in the `magento/audiences` module only.\n`cart_id` | String | The unique ID that identifies the customer's cart. Available in the `magento2-pwa-commerce` module only.\n`product_uid` | ID | The unique ID of the currently viewed product. Available in the `magento2-pwa-commerce` module only.\n\nIf the `magento/audiences` module is installed, the following field can be returned:\n\nField | Type | Description\n--- | --- | ---\n`DynamicBlocks.audience_id` | [ID] | An array of Audience IDs for this block. Available in the `magento/audiences` module only.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/dynamic-blocks.md",
          "loc": { "lines": { "from": 21, "to": 37 } }
        }
      }
    ],
    [
      "9fc06c87-da42-4404-a346-009cac3efbaa",
      {
        "pageContent": "## Syntax\n\n```graphql\ndynamicBlocks(\n    input: DynamicBlocksFilterInput\n    pageSize: Int\n    currentPage: Int\n    ): DynamicBlocks!\n```\n\n## Reference\n\nThe [`dynamicBlocks`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-dynamicBlocks) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/dynamic-blocks.md",
          "loc": { "lines": { "from": 39, "to": 51 } }
        }
      }
    ],
    [
      "0804f62c-1de3-4d8a-9be4-504c68cdc8ba",
      {
        "pageContent": "## Example usage\n\nThe following query returns all dynamic blocks of type `SPECIFIED`. The returned item is a dynamic block containing only text. The second item contains a PNG file.\n\n**Request:**\n\n```graphql\n{\n  dynamicBlocks(input:\n  {\n    type: SPECIFIED\n  })\n  {\n    items {\n      uid\n      content {\n        html\n      }\n    }\n    page_info {\n      current_page\n      page_size\n      total_pages\n    }\n    total_count\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/dynamic-blocks.md",
          "loc": { "lines": { "from": 53, "to": 79 } }
        }
      }
    ],
    [
      "5caeba55-1f49-4d6c-835d-82564c0d592d",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"dynamicBlocks\": {\n      \"items\": [\n        {\n          \"uid\": \"MQ==\",\n          \"content\": {\n            \"html\": \"<h2><strong>SAVE 20%</strong></h2>\\r\\n<p>(some restrictions apply)</p>\\r\\n<p>&nbsp;</p>\"\n          }\n        },\n        {\n          \"uid\": \"Mg==\",\n          \"content\": {\n            \"html\": \"<p><img src=\\\"{{media url=&quot;wysiwyg/save20.png&quot;}}\\\" alt=\\\"save 20% red\\\"></p>\"\n          }\n        }\n      ],\n      \"page_info\": {\n        \"current_page\": 1,\n        \"page_size\": 20,\n        \"total_pages\": 1\n      },\n      \"total_count\": 2\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/dynamic-blocks.md",
          "loc": { "lines": { "from": 80, "to": 110 } }
        }
      }
    ],
    [
      "11138bac-c20b-400a-b0c5-9fb50f5e126b",
      {
        "pageContent": "```\n\n**cmsPage query response:**\n\nThe following code illustrates the definition of the dynamic block with the `uid` of `MQ==`, as returned by the [`cmsPage` query](../../store/queries/cms-page.md). The response has been reformatted for readability.\n\n```html\n<div class=\\\"widget block block-banners\\\"\n  data-bind=\\\"scope: 'banner'\\\"\n  data-banner-id=\\\"833e4819d6c46ab41e9910f17dc04f72329cb84f1b0dc3aa76d43bcb11d605a6\\\"\n  data-types=\\\"\\\"\n  data-display-mode=\\\"fixed\\\"\n  data-ids=\\\"1\\\"\n  data-rotate=\\\"\\\"\n  data-store-id=\\\"1\\\"\n  data-uids=\\\"MQ==\\\">\\n\n\n  <ul class=\\\"banner-items\\\"\n    data-bind=\\\"afterRender: registerBanner\\\">\\n\n\n    <!-- ko foreach: getItems833e4819d6c46ab41e9910f17dc04f72329cb84f1b0dc3aa76d43bcb11d605a6() -->\\n\n\n    <li class=\\\"banner-item\\\"\n      data-bind=\\\"attr: {'data-banner-id': $data.bannerId}\\\">\\n\n\n      <div class=\\\"banner-item-content\\\" data-bind=\\\"bindHtml: $data.html\\\"></div>\\n\n    </li>\\n\n\n    <!-- /ko -->\\n\n  </ul>\\n\n</div>\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/dynamic-blocks.md",
          "loc": { "lines": { "from": 111, "to": 142 } }
        }
      }
    ],
    [
      "75b21139-d085-454e-9520-f096566dcab2",
      {
        "pageContent": "---\ntitle: Store queries\n---\n\n# Store queries\n\nThe queries in the store schema fetch store configuration data and content blocks.\n\n- Store configuration\n  - [availableStores](available-stores.md)\n  - [countries](countries.md)\n  - [country](country.md)\n  - [currency](currency.md)\n  - [recaptchaV3Config](recaptcha-v3-config.md)\n  - [storeConfig](store-config.md)\n- Content blocks\n  - [cmsBlocks](cms-blocks.md)\n  - [cmsPage](cms-page.md)\n  - [dynamicBlocks](dynamic-blocks.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "131fbaf3-291a-4a6a-a6a8-9ac95a24e52b",
      {
        "pageContent": "---\ntitle: recaptchaV3Config query\n---\n\nimport BetaPwaNote from '/src/_includes/graphql/notes/beta-pwa.md'\n\n# recaptchaV3Config query\n\n<BetaPwaNote />\n\nThe `recaptchaV3Config` query returns information about the reCaptcha V3 configuration.\n\n## Syntax\n\n`{recaptchaV3Config {ReCaptchaConfigurationV3}}`\n\n## Reference\n\nThe [`recaptchaV3Config`](https://developer.adobe.com/commerce/webapi/graphql-api/beta/index.html#query-recaptchaV3Config) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/recaptcha-v3-config.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "efd78160-b3ed-4273-be27-441a61ef0ff1",
      {
        "pageContent": "## Example usage\n\nThe following query returns information about the reCaptchaV3 configuration:\n\n**Request:**\n\n```graphql\nquery {\n  recaptchaV3Config {\n    minimum_score\n    website_key\n    badge_position\n    failure_message\n    forms\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"recaptchaV3Config\": {\n      \"minimum_score\": 0.5,\n      \"website_key\": \"<key-value>\",\n      \"badge_position\": \"inline\",\n      \"failure_message\": \"reCAPTCHA verification failed.\",\n      \"forms\": [\n        \"PLACE_ORDER\",\n        \"CUSTOMER_FORGOT_PASSWORD\",\n        \"CUSTOMER_EDIT\",\n        \"CUSTOMER_LOGIN\",\n        \"CUSTOMER_CREATE\",\n        \"BRAINTREE\"\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/recaptcha-v3-config.md",
          "loc": { "lines": { "from": 21, "to": 60 } }
        }
      }
    ],
    [
      "f33b1578-ecb8-480e-b8f1-af861e8fd833",
      {
        "pageContent": "---\ntitle: storeConfig query\n---\n\n# storeConfig query\n\nThe `storeConfig` query defines information about a store's configuration. You can query a non-default store by [changing the header](../../../usage/headers.md) in your GraphQL request.\n\n## Syntax\n\n`storeConfig: StoreConfig`\n\n## Reference\n\nThe [`storeConfig`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-storeConfig) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "2d9a8de2-3c27-45c6-8b87-19067c4c56f6",
      {
        "pageContent": "## Example usage",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 17, "to": 17 } }
        }
      }
    ],
    [
      "948ca4fa-870b-46d9-988d-0a51f873a66b",
      {
        "pageContent": "### Query a store's configuration\n\nThe `storeConfig` query can return `base` and `extended` store configuration setting. The following call returns all `base` details of a store's configuration.\n\n**Request:**\n\n```graphql\n{\n  storeConfig {\n    store_code\n    store_name\n    is_default_store\n    store_group_code\n    is_default_store_group\n    locale\n    base_currency_code\n    default_display_currency_code\n    timezone\n    weight_unit\n    base_url\n    base_link_url\n    base_static_url\n    base_media_url\n    secure_base_url\n    secure_base_link_url\n    secure_base_static_url\n    secure_base_media_url\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 19, "to": 47 } }
        }
      }
    ],
    [
      "c7c36f8b-1483-4a92-86b7-6f64011957e2",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"storeConfig\": {\n      \"store_code\": \"default\",\n      \"store_name\": \"Default Store View\",\n      \"is_default_store\": true,\n      \"store_group_code\": \"main_website_store\",\n      \"is_default_store_group\": true,\n      \"locale\": \"en_US\",\n      \"base_currency_code\": \"USD\",\n      \"default_display_currency_code\": \"USD\",\n      \"timezone\": \"America/Chicago\",\n      \"weight_unit\": \"lbs\",\n      \"base_url\": \"http://example.com/\",\n      \"base_link_url\": \"http://example.com/\",\n      \"base_static_url\": \"http://example.com/pub/static/version1606976517/\",\n      \"base_media_url\": \"http://example.com/pub/media/\",\n      \"secure_base_url\": \"http://example.com/\",\n      \"secure_base_link_url\": \"http://example.com/\",\n      \"secure_base_static_url\": \"http://example.com/pub/static/version1606976517/\",\n      \"secure_base_media_url\": \"http://example.com/pub/media/\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 48, "to": 77 } }
        }
      }
    ],
    [
      "0f7eb5f4-8dc2-4656-9dae-09fb65b4f484",
      {
        "pageContent": "### Query a store's theme\n\nThe following query returns information about the store's default title, keywords, and welcome text.\n\n**Request:**\n\n```graphql\n{\n  storeConfig {\n    default_title\n    default_keywords\n    welcome\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"storeConfig\": {\n      \"default_title\": \"Adobe Commerce\",\n      \"default_keywords\": \"Varien, E-commerce\",\n      \"welcome\": \"Default welcome msg!\"\n    }\n  }\n}\n```\n\n### Query a store's CMS configuration\n\nThe following query returns information about the store's content pages.\n\n**Request:**\n\n```graphql\n{\n  storeConfig {\n    front\n    cms_home_page\n    no_route\n    cms_no_route\n    cms_no_cookies\n    show_cms_breadcrumbs\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"storeConfig\": {\n      \"front\": \"cms\",\n      \"cms_home_page\": \"home\",\n      \"no_route\": \"cms/noroute/index\",\n      \"cms_no_route\": \"no-route\",\n      \"cms_no_cookies\": \"enable-cookies\",\n      \"show_cms_breadcrumbs\": 1\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 79, "to": 143 } }
        }
      }
    ],
    [
      "237bb047-afe4-4913-9dc0-24225e8c6a9c",
      {
        "pageContent": "### Query a store's Catalog configuration\n\nThe following query returns information about the store's catalog configuration.\n\n**Request:**\n\n```graphql\n{\n  storeConfig {\n    product_url_suffix\n    category_url_suffix\n    title_separator\n    list_mode\n    grid_per_page_values\n    list_per_page_values\n    grid_per_page\n    list_per_page\n    catalog_default_sort_by\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"storeConfig\": {\n      \"product_url_suffix\": \".html\",\n      \"category_url_suffix\": \".html\",\n      \"title_separator\": \"-\",\n      \"list_mode\": \"grid-list\",\n      \"grid_per_page_values\": \"9,15,30\",\n      \"list_per_page_values\": \"5,10,15,20,25\",\n      \"grid_per_page\": 9,\n      \"list_per_page\": 10,\n      \"catalog_default_sort_by\": \"position\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 145, "to": 185 } }
        }
      }
    ],
    [
      "8c187b0d-b89a-45ee-9d60-33a632b1565a",
      {
        "pageContent": "### Query a store's customer configuration\n\nThe following query returns information about the store's customer configuration.\n\n**Request:**\n\n```graphql\n{\n    storeConfig {\n        autocomplete_on_storefront\n        minimum_password_length\n        required_character_classes_number\n    }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"storeConfig\": {\n      \"autocomplete_on_storefront\": true,\n      \"minimum_password_length\": \"6\",\n      \"required_character_classes_number\": \"2\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 187, "to": 215 } }
        }
      }
    ],
    [
      "502bfa29-6219-44a0-a964-1a6499437406",
      {
        "pageContent": "### Query a store's fixed product tax configuration\n\nThe following query returns enumeration values that indicate the store's fixed product tax configuration.\n\n**Request:**\n\n```graphql\n{\n  storeConfig {\n    category_fixed_product_tax_display_setting\n    product_fixed_product_tax_display_setting\n    sales_fixed_product_tax_display_setting\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"storeConfig\": {\n      \"category_fixed_product_tax_display_setting\": \"EXCLUDE_FPT_WITHOUT_DETAILS\",\n      \"product_fixed_product_tax_display_setting\": \"EXCLUDE_FPT_AND_INCLUDE_WITH_DETAILS\",\n      \"sales_fixed_product_tax_display_setting\": \"INCLUDE_FPT_WITHOUT_DETAILS\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 217, "to": 245 } }
        }
      }
    ],
    [
      "b41a1d63-12bc-41c4-bb76-47e1459729e3",
      {
        "pageContent": "### Query a store's order cancellation configuration\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n<BetaNote />\n\nThe following query returns the store's order cancellation settings, indicating if it is enabled and the available cancellation reasons.\n\n**Request:**\n\n```graphql\n {\n    storeConfig {\n        order_cancellation_enabled\n        order_cancellation_reasons {\n            description\n        }\n    }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"storeConfig\": {\n      \"order_cancellation_enabled\": true,\n      \"order_cancellation_reasons\": [\n        {\n          \"description\": \"The item(s) are no longer needed\"\n        },\n        {\n          \"description\": \"The order was placed by mistake\"\n        },\n        {\n          \"description\": \"Item(s) not arriving within the expected timeframe\"\n        },\n        {\n          \"description\": \"Found a better price elsewhere\"\n        },\n        {\n          \"description\": \"Other\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/store/queries/store-config.md",
          "loc": { "lines": { "from": 247, "to": 295 } }
        }
      }
    ],
    [
      "fdeea48a-5aba-4280-8cf4-3ace5a23104c",
      {
        "pageContent": "---\ntitle: Wish list\n---\n\n# Wish list\n\nUse the wish list mutations to manage wish lists and their contents. `WishlistItemInterface` and its implementations return details about individual items in a wish list.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nThe `wishlist` query has been deprecated. Wish list information is now provided by the [customer](../customer/queries/customer.md) query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/index.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "328dc9f8-28a8-4122-bdac-7f1ea7bae140",
      {
        "pageContent": "---\ntitle: Wish list interfaces\n---\n\n# Wish list interfaces\n\n`WishlistItemInterface` provides details about items in a wish list.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/interfaces/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "8a748e8c-1844-441a-a6b3-a0f2896a08da",
      {
        "pageContent": "---\ntitle: WishlistItemInterface attributes and implementations\n---\n\n# WishlistItemInterface attributes and implementations\n\n`WishlistItemInterface` provides details about items in a wish list. It has the following implementations:\n\n*  `BundleWishlistItem`\n*  `ConfigurableWishlistItem`\n*  `DownloadableWishlistItem`\n*  `GiftCardWishlistItem`\n*  `GroupedProductWishlistItem`\n*  `SimpleWishlistItem`\n*  `VirtualWishlistItem`\n\n## Reference\n\nThe [`WishlistItemInterface`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#definition-WishlistItemInterface) reference provides detailed information about the types and fields defined in this interface.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/interfaces/wishlist.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "c815259a-7025-438e-8efd-927f2ec64a44",
      {
        "pageContent": "## Example usage\n\nThe following mutation adds a downloadable product to a wish list and returns detailed information about the product.\n\n**Request:**\n\n```graphql\nmutation {\n  addProductsToWishlist(\n    wishlistId: 3,\n    wishlistItems: [\n      {\n        sku: \"240-LV06\"\n        quantity: 1\n      }\n    ]\n) {\n    user_errors {\n      code\n      message\n    }\n    wishlist {\n      id\n      sharing_code\n      items_count\n      updated_at\n      items_v2 {\n        uid\n        quantity\n        added_at\n        ... on DownloadableWishlistItem {\n          links_v2 {\n            uid\n            title\n            sample_url\n          }\n          samples {\n            title\n            sample_url\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/interfaces/wishlist.md",
          "loc": { "lines": { "from": 21, "to": 65 } }
        }
      }
    ],
    [
      "4cac8dac-89ef-40f6-85c8-5e3b871b4258",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/interfaces/wishlist.md",
          "loc": { "lines": { "from": 66, "to": 68 } }
        }
      }
    ],
    [
      "2f360987-df18-4f55-9454-218f9b1cf572",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"addProductsToWishlist\": {\n      \"user_errors\": [],\n      \"wishlist\": {\n        \"id\": \"3\",\n        \"sharing_code\": \"cVeOljNmNKm0e1jRFj7PRMyBXrpu88Sf\",\n        \"items_count\": 1,\n        \"updated_at\": \"2020-11-12 03:01:46\",\n        \"items_v2\": [\n          {\n            \"uid\": \"MTQ=\",\n            \"quantity\": 1,\n            \"added_at\": \"2020-11-12 03:01:46\",\n            \"links_v2\": [\n              {\n                \"uid\": \"ZG93bmxvYWRhYmxlLzM=\",\n                \"title\": \"Yoga Adventure\",\n                \"sample_url\": \"http://example.com/downloadable/download/linkSample/link_id/3/\"\n              }\n            ],\n            \"samples\": [\n              {\n                \"title\": \"Trailer #1\",\n                \"sample_url\": \"http://example.com/downloadable/download/sample/sample_id/7/\"\n              },\n              {\n                \"title\": \"Trailer #2\",\n                \"sample_url\": \"http://example.com/downloadable/download/sample/sample_id/8/\"\n              },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/interfaces/wishlist.md",
          "loc": { "lines": { "from": 70, "to": 100 } }
        }
      }
    ],
    [
      "fc0b83a1-2d77-43fc-960e-9877824717aa",
      {
        "pageContent": "},\n              {\n                \"title\": \"Trailer #3\",\n                \"sample_url\": \"http://example.com/downloadable/download/sample/sample_id/9/\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/interfaces/wishlist.md",
          "loc": { "lines": { "from": 100, "to": 112 } }
        }
      }
    ],
    [
      "408b36e6-6751-4152-9d42-4af18b608c22",
      {
        "pageContent": "---\ntitle: addWishlistItemsToCart mutation\n---\n\n# addWishlistItemsToCart mutation\n\nThe `addWishlistItemsToCart` mutation moves items from the specified wish list to the customer's cart.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  addWishlistItemsToCart (\n    wishlistId: ID!\n    wishlistItemIds: [ID!]\n  ) {\n    AddWishlistItemsToCartOutput\n  }\n}\n```\n\n## Reference\n\nThe [`addWishlistItemsToCart`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-wishlist) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "db193875-4679-47bf-aa48-96a7da10144d",
      {
        "pageContent": "## Example usage\n\nThe following example moves two items from a wishlist to the cart.\n\n**Request:**\n\n```graphql\nmutation {\n  addWishlistItemsToCart(\n    wishlistId: 1\n    wishlistItemIds: [2, 3])\n  {\n    status\n    add_wishlist_items_to_cart_user_errors {\n      code\n      message\n    }\n    wishlist {\n      id\n      items_v2 {\n        items {\n          id\n          product {\n            uid\n            sku\n            name\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 28, "to": 59 } }
        }
      }
    ],
    [
      "94cfcfd3-0a42-4f24-b229-e8f8cb2df5d1",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 60, "to": 62 } }
        }
      }
    ],
    [
      "3914af51-a990-4705-a94f-f64e7cdba7eb",
      {
        "pageContent": "``` json\n{\n  \"data\": {\n    \"addWishlistItemsToCart\": {\n      \"status\": true,\n      \"add_wishlist_items_to_cart_user_errors\": [],\n      \"wishlist\": {\n        \"id\": \"1\",\n        \"items_v2\": {\n          \"items\": [\n            {\n              \"id\": \"1\",\n              \"product\": {\n                \"uid\": \"MTM=\",\n                \"sku\": \"24-WB07\",\n                \"name\": \"Overnight Duffle\"\n              }\n            },\n            {\n              \"id\": \"4\",\n              \"product\": {\n                \"uid\": \"MTEwMA==\",\n                \"sku\": \"WH04\",\n                \"name\": \"Miko Pullover Hoodie\"\n              }\n            },\n            {\n              \"id\": \"5\",\n              \"product\": {\n                \"uid\": \"MTIyOA==\",\n                \"sku\": \"WJ01\",\n                \"name\": \"Stellar Solar Jacket\"\n              }\n            },\n            {\n              \"id\": \"6\",\n              \"product\": {\n                \"uid\": \"MTcyNA==\",\n                \"sku\": \"WT03\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 64, "to": 102 } }
        }
      }
    ],
    [
      "b4491a54-38c5-4d0a-a69c-e7d069aab755",
      {
        "pageContent": "\"name\": \"Nora Practice Tank\"\n              }\n            },\n            {\n              \"id\": \"7\",\n              \"product\": {\n                \"uid\": \"MTY5Mg==\",\n                \"sku\": \"WT01\",\n                \"name\": \"Bella Tank\"\n              }\n            }\n          ]\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 103, "to": 120 } }
        }
      }
    ],
    [
      "d50f26ae-5c5f-4023-a8f5-ef8d2b7231e7",
      {
        "pageContent": "## Errors\n\nThe `WishlistCartUserInputErrorType` field can contain the following values:\n\nType | Description\n--- | ---\n`INSUFFICIENT_STOCK` | The requested quantity of a product is greater than the quantity available\n`NOT_SALABLE` | A requested product is not available\n`PRODUCT_NOT_FOUND` | A product with the specified ID does not exist.\n`UNDEFINED` | The error message does not match any error code",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-items-to-cart.md",
          "loc": { "lines": { "from": 122, "to": 131 } }
        }
      }
    ],
    [
      "e3e76d5d-6f04-4c45-93b0-8ae7bd006913",
      {
        "pageContent": "---\ntitle: addProductsToWishlist mutation\n---\n\n# addProductsToWishlist mutation\n\nThe `addProductsToWishlist` mutation adds one or more products to the specified wish list. This mutation supports all product types.\n\nIn Magento Open Source, customers can have only one wish list. In Adobe Commerce, customers can have multiple wish lists.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nIn Magento Open Source, the [createCustomerV2 mutation](../../customer/mutations/create-v2.md) does not create a default wish list for the customer. To add items to the wish list for the first time, specify a `wishlistId` value of 0. The application creates the customer's default wish list and returns the wish list ID in the `id` attribute. (Customers created by any other means or in Adobe Commerce do not have this limitation.)\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n<InlineAlert variant=\"success\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "930cecea-9f5e-4318-9e40-4a3080100a32",
      {
        "pageContent": "To determine whether wish lists are enabled, specify the `magento_wishlist_general_is_enabled` attribute in the [`storeConfig` query](../../store/queries/store-config.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 19, "to": 19 } }
        }
      }
    ],
    [
      "78bf8f36-1d5e-4fc5-8506-be52cce2c7d5",
      {
        "pageContent": "## Syntax\n\n```graphql\n`mutation {\n  addProductsToWishlist(\n    wishlistId: ID!,\n    wishlistItems: [WishlistItemInput!]!\n  ){\n  AddProductsToWishlistOutput\n  }\n}\n```\n\n## Reference\n\nThe [`addProductsToWishlist`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-addProductsToWishlist) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 21, "to": 36 } }
        }
      }
    ],
    [
      "cce97d6b-90f4-456e-abd6-d12b0eb51c43",
      {
        "pageContent": "## Example usage\n\nThe following example adds a simple product (`24-MB01`), a configurable product (`WJ01-M-Red`), and a bundle product (`24-WG080`) to the customer's wish list. The SKU `WG-09` is invalid, and error information is returned in the `user_errors` object.\n\nTo determine the value of the `wishlistId` attribute, run the `customer` query and check the value of `wishlist.id` in the response.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 38, "to": 44 } }
        }
      }
    ],
    [
      "f06c2f6b-7cf5-4020-984e-cac3f967ef43",
      {
        "pageContent": "``` graphql\nmutation {\n  addProductsToWishlist(\n    wishlistId: 4\n    wishlistItems: [\n      {\n        sku: \"24-MB01\"\n        quantity: 1\n      }\n      {\n        sku: \"WG-09\"\n        quantity: 1\n        }\n      {\n        parent_sku: \"WJ01\"\n        sku: \"WJ01-M-Red\"\n        quantity: 1\n      }\n      {\n        sku: \"24-WG080\"\n        quantity: 1\n        selected_options: [\n          \"YnVuZGxlLzEvMS8x\"\n          \"YnVuZGxlLzIvNC8x\"\n          \"YnVuZGxlLzMvNy8x\"\n          \"YnVuZGxlLzQvOC8x\"\n        ]\n      }\n    ]\n  ) {\n    wishlist {\n      id\n      items_count\n      items_v2 (currentPage: 1, pageSize: 8 ) {\n        items {\n          id\n          quantity\n          ... on BundleWishlistItem {\n            bundle_options {\n              values {\n                id\n                label\n                quantity\n              }\n            }\n          }\n          product {\n            uid\n            name\n            sku\n            price_range {\n              minimum_price {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 46, "to": 97 } }
        }
      }
    ],
    [
      "6b299399-3f1c-43ed-94a4-0219748bcbb3",
      {
        "pageContent": "regular_price {\n                  currency\n                  value\n                }\n              }\n              maximum_price {\n                regular_price {\n                  currency\n                  value\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 98, "to": 119 } }
        }
      }
    ],
    [
      "9f51ee5c-050d-45b7-a67a-1188f4db6b37",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 120, "to": 122 } }
        }
      }
    ],
    [
      "d3e6d906-9338-4549-bda0-1b873a67c81e",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"addProductsToWishlist\": {\n      \"wishlist\": {\n        \"id\": \"4\",\n        \"items_count\": 3,\n        \"items_v2\": {\n          \"items\": [\n            {\n              \"id\": \"20\",\n              \"quantity\": 1,\n              \"product\": {\n                \"uid\": \"MQ==\",\n                \"name\": \"Joust Duffle Bag\",\n                \"sku\": \"24-MB01\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 34\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 34\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"21\",\n              \"quantity\": 1,\n              \"product\": {\n                \"uid\": \"MTIyNg==\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 124, "to": 160 } }
        }
      }
    ],
    [
      "d073f444-bba7-4c2a-8214-4fedbf14769a",
      {
        "pageContent": "\"name\": \"Stellar Solar Jacket\",\n                \"sku\": \"WJ01\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 75\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 75\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"22\",\n              \"quantity\": 1,\n              \"bundle_options\": [\n                {\n                  \"values\": [\n                    {\n                      \"id\": 1,\n                      \"label\": \"Sprite Stasis Ball 55 cm\",\n                      \"quantity\": 1\n                    }\n                  ]\n                },\n                {\n                  \"values\": [\n                    {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 161, "to": 194 } }
        }
      }
    ],
    [
      "aa203903-a9c6-42b6-85cb-946fafac731f",
      {
        "pageContent": "\"id\": 4,\n                      \"label\": \"Sprite Foam Yoga Brick\",\n                      \"quantity\": 1\n                    }\n                  ]\n                },\n                {\n                  \"values\": [\n                    {\n                      \"id\": 7,\n                      \"label\": \"Sprite Yoga Strap 10 foot\",\n                      \"quantity\": 1\n                    }\n                  ]\n                },\n                {\n                  \"values\": [\n                    {\n                      \"id\": 8,\n                      \"label\": \"Sprite Foam Roller\",\n                      \"quantity\": 1\n                    }\n                  ]\n                }\n              ],\n              \"product\": {\n                \"uid\": \"NTI=\",\n                \"name\": \"Sprite Yoga Companion Kit\",\n                \"sku\": \"24-WG080\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 195, "to": 226 } }
        }
      }
    ],
    [
      "ca15815c-fff8-4727-8d57-7fbf59051c72",
      {
        "pageContent": "\"currency\": \"USD\",\n                      \"value\": 61\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 77\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"user_errors\": [\n        {\n          \"code\": \"PRODUCT_NOT_FOUND\",\n          \"message\": \"Could not find a product with SKU \\\"WG-09\\\"\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 227, "to": 252 } }
        }
      }
    ],
    [
      "17d5a767-778f-43dc-9115-218872bc8009",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The current user cannot perform operations on wishlist` | An unauthorized user (guest) tried to add an item to a wishlist, or an authorized user (customer) tried to add an item to a wishlist belonging to another customer.\n`The wishlist was not found.` | The value provided in the  `wishlistId` field is invalid or does not exist for the customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/add-products.md",
          "loc": { "lines": { "from": 254, "to": 259 } }
        }
      }
    ],
    [
      "79bcbb75-8da7-412e-9d3c-2869f8f2eb0f",
      {
        "pageContent": "---\ntitle: copyProductsBetweenWishlists mutation\nedition: ee\n---\n\n# copyProductsBetweenWishlists mutation\n\nThe `copyProductsBetweenWishlists` mutation copies the specified quantities of one or more products to a different wish list. The original wish list is unchanged.\n\nUse the [`customer` query](../../customer/queries/customer.md) to return a list of wish list IDs and item IDs.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  copyProductsBetweenWishlists(\n    sourceWishlistUid: ID!,\n    destinationWishlistUid: ID!,\n    wishlistItems: [WishlistItemCopyInput!]!\n  ){\n    CopyProductsBetweenWishlistsOutput\n  }\n}\n```\n\n## Reference\n\nThe [`copyProductsBetweenWishlists`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-copyProductsBetweenWishlists) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/copy-products.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "f986bcda-bd69-462b-a7c3-86310d596457",
      {
        "pageContent": "## Example usage\n\nThe following example copies two items to another wish list.\n\n**Request:**\n\n``` graphql\nmutation{\n  copyProductsBetweenWishlists(sourceWishlistUid: 1, destinationWishlistUid: 2, wishlistItems: [\n    {\n      wishlist_item_id: 6\n      quantity: 1\n    }\n    {\n      wishlist_item_id: 7\n      quantity: 1\n    }\n  ]){\n    destination_wishlist {\n      id\n      items_v2 {\n        items {\n          id\n          product {\n            uid\n            sku\n            name\n          }\n        }\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/copy-products.md",
          "loc": { "lines": { "from": 32, "to": 68 } }
        }
      }
    ],
    [
      "9211e11c-6f6d-4ac5-a8ec-b65a85ef7630",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/copy-products.md",
          "loc": { "lines": { "from": 69, "to": 71 } }
        }
      }
    ],
    [
      "81d61971-9772-4414-9aaf-f83652790fba",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"copyProductsBetweenWishlists\": {\n      \"destination_wishlist\": {\n        \"id\": \"2\",\n        \"items_v2\": {\n          \"items\": [\n            {\n              \"id\": \"8\",\n              \"product\": {\n                \"uid\": \"NDk=\",\n                \"sku\": \"240-LV08\",\n                \"name\": \"Advanced Pilates & Yoga (Strength)\"\n              }\n            },\n            {\n              \"id\": \"9\",\n              \"product\": {\n                \"uid\": \"MTg=\",\n                \"sku\": \"24-UG02\",\n                \"name\": \"Pursuit Lumaflex&trade; Tone Band\"\n              }\n            },\n            {\n              \"id\": \"10\",\n              \"product\": {\n                \"uid\": \"MTQ1MA==\",\n                \"sku\": \"WS04\",\n                \"name\": \"Layla Tee\"\n              }\n            },\n            {\n              \"id\": \"11\",\n              \"product\": {\n                \"uid\": \"MTU2Mg==\",\n                \"sku\": \"WS12\",\n                \"name\": \"Radiant Tee\"\n              }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/copy-products.md",
          "loc": { "lines": { "from": 73, "to": 111 } }
        }
      }
    ],
    [
      "8902385e-f1e7-40ff-8a6e-dc9eb3f0b69b",
      {
        "pageContent": "}\n            },\n            {\n              \"id\": \"12\",\n              \"product\": {\n                \"uid\": \"MTYxMA==\",\n                \"sku\": \"WB01\",\n                \"name\": \"Electra Bra Top\"\n              }\n            },\n            {\n              \"id\": \"13\",\n              \"product\": {\n                \"uid\": \"MTY0Mg==\",\n                \"sku\": \"WB03\",\n                \"name\": \"Celeste Sports Bra\"\n              }\n            },\n            {\n              \"id\": \"15\",\n              \"product\": {\n                \"uid\": \"MTcyMg==\",\n                \"sku\": \"WT03\",\n                \"name\": \"Nora Practice Tank\"\n              }\n            },\n            {\n              \"id\": \"16\",\n              \"product\": {\n                \"uid\": \"MTY5MA==\",\n                \"sku\": \"WT01\",\n                \"name\": \"Bella Tank\"\n              }\n            }\n          ]\n        }\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/copy-products.md",
          "loc": { "lines": { "from": 111, "to": 152 } }
        }
      }
    ],
    [
      "184ffbc5-7873-47a8-a5fc-8fa6a512aa49",
      {
        "pageContent": "---\ntitle: createWishlist mutation\nedition: ee\n---\n\n# createWishlist mutation\n\nThe `createWishlist` mutation creates a wish list for the logged in customer. Adobe Commerce allows customers to have multiple wish lists.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [`storeConfig` query](../../store/queries/store-config.md) with the following attributes to determine whether multiple wish lists are supported:\n\n*  `enable_multiple_wishlists`\n*  `magento_wishlist_general_is_enabled`\n*  `maximum_number_of_wishlists`\n\n## Syntax\n\n```graphql\nmutation {\n  createWishlist(input: CreateWishlistInput!) {\n    CreateWishlistOutput\n  }\n}\n```\n\n## Reference\n\nThe [`createWishlist`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-createWishlist) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/create.md",
          "loc": { "lines": { "from": 1, "to": 32 } }
        }
      }
    ],
    [
      "3a857907-971f-4e9d-ad02-81b39fe5cf4a",
      {
        "pageContent": "## Example usage\n\nThe following example creates the `My favorites` public wish list.\n\n**Request:**\n\n``` graphql\nmutation {\n  createWishlist(input: {\n    name: \"My favorites\"\n    visibility: PUBLIC\n    }\n  ) {\n    wishlist {\n      id\n      name\n      visibility\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createWishlist\": {\n      \"wishlist\": {\n        \"id\": \"3\",\n        \"name\": \"My favorites\",\n        \"visibility\": \"PUBLIC\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/create.md",
          "loc": { "lines": { "from": 34, "to": 70 } }
        }
      }
    ],
    [
      "828fcc10-31a3-4680-8aa2-8dbf549ec980",
      {
        "pageContent": "---\ntitle: deleteWishlist mutation\nedition: ee\n---\n\n# deleteWishlist mutation\n\nThe `deleteWishlist` mutation deletes the specified wish list. In Adobe Commerce, you cannot delete the customer's default (first) wish list. This mutation is not available in Magento Open Source.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  deleteWishlist(wishlistId: ID!): DeleteWishlistOutput\n}\n```\n\n## Reference\n\nThe [`deleteWishlist`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-deleteWishlist) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/delete.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "c92110d4-7ab7-4572-ab40-16e8bde6aff8",
      {
        "pageContent": "## Example usage\n\nThe following example deletes a wish list.\n\n**Request:**\n\n``` graphql\nmutation{\n  deleteWishlist(wishlistId: 3){\n    status\n    wishlists {\n      id\n      name\n      items_count\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"deleteWishlist\": {\n      \"status\": true,\n      \"wishlists\": [\n        {\n          \"id\": \"1\",\n          \"name\": \"Vacation Wants\",\n          \"items_count\": 7\n        },\n        {\n          \"id\": \"2\",\n          \"name\": \"Lose the Muffintop\",\n          \"items_count\": 6\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/delete.md",
          "loc": { "lines": { "from": 24, "to": 65 } }
        }
      }
    ],
    [
      "aa9f6865-ca6c-4a5a-8d13-8eb7259ecf8e",
      {
        "pageContent": "---\ntitle: Wish list mutations\n---\n\n# Wish list mutations\n\nThe wish list mutations allow you to manage wish lists and their contents. Adobe Commerce allows customers to create multiple wish lists.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "34afea9f-1679-4075-9fa7-edbb4520b391",
      {
        "pageContent": "---\ntitle: moveProductsBetweenWishlists mutation\nee_only: true\n---\n\n# moveProductsBetweenWishlists mutation\n\nThe `moveProductsBetweenWishlists` mutation moves the specified quantities of one or more products to a different wish list.\n\nIf you do not specify a quantity for a product, the mutation moves the entire quantity of that product to the target wish list.\n\nUse the [`customer` query](../../customer/queries/customer.md) to return a list of wish list IDs and item IDs.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n    moveProductsBetweenWishlists(\n        sourceWishlistUid: ID!,\n        destinationWishlistUid: ID!,\n        wishlistItems: [WishlistItemMoveInput!]!\n    ) {\n        MoveProductsBetweenWishlistsOutput\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/move-products.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "c293e173-8cac-43d0-ba8b-de0d1fba4b28",
      {
        "pageContent": "## Reference\n\nThe [`moveProductsBetweenWishlists`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-moveProductsBetweenWishlists) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/move-products.md",
          "loc": { "lines": { "from": 30, "to": 32 } }
        }
      }
    ],
    [
      "b35a1ddb-29e9-49e0-9a9c-637853cbf99e",
      {
        "pageContent": "## Example usage\n\nThe following example moves an item to another wish list. The ID of the moved product changes.\n\n**Request:**\n\n``` graphql\nmutation{\n  moveProductsBetweenWishlists(sourceWishlistUid: 2, destinationWishlistUid: 1, wishlistItems: [\n    {\n      wishlist_item_id: 9\n      quantity: 1\n    }\n  ]){\n    source_wishlist {\n      id\n      items_v2 {\n        items {\n          id\n          product {\n            uid\n            sku\n            name\n          }\n        }\n      }\n    }\n    destination_wishlist {\n      id\n      items_v2 {\n        items {\n          id\n          product {\n            uid\n            sku\n            name\n          }\n        }\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/move-products.md",
          "loc": { "lines": { "from": 34, "to": 79 } }
        }
      }
    ],
    [
      "8c86361f-2a7a-43b6-bc7e-d1386c077fa5",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/move-products.md",
          "loc": { "lines": { "from": 80, "to": 82 } }
        }
      }
    ],
    [
      "209af7d9-e466-49e5-b329-ce0a86072e7a",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"moveProductsBetweenWishlists\": {\n      \"source_wishlist\": {\n        \"id\": \"2\",\n        \"items_v2\": {\n          \"items\": [\n            {\n              \"id\": \"8\",\n              \"product\": {\n                \"uid\": \"NDk=\",\n                \"sku\": \"240-LV08\",\n                \"name\": \"Advanced Pilates & Yoga (Strength)\"\n              }\n            },\n            {\n              \"id\": \"10\",\n              \"product\": {\n                \"uid\": \"MTQ1MA==\",\n                \"sku\": \"WS04\",\n                \"name\": \"Layla Tee\"\n              }\n            },\n            {\n              \"id\": \"11\",\n              \"product\": {\n                \"uid\": \"MTU2Mg==\",\n                \"sku\": \"WS12\",\n                \"name\": \"Radiant Tee\"\n              }\n            },\n            {\n              \"id\": \"12\",\n              \"product\": {\n                \"uid\": \"MTYxMA==\",\n                \"sku\": \"WB01\",\n                \"name\": \"Electra Bra Top\"\n              }\n            },\n            {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/move-products.md",
          "loc": { "lines": { "from": 84, "to": 124 } }
        }
      }
    ],
    [
      "918eead2-8321-4c94-bec8-ba5c6bf437b5",
      {
        "pageContent": "{\n              \"id\": \"13\",\n              \"product\": {\n                \"uid\": \"MTY0Mg==\",\n                \"sku\": \"WB03\",\n                \"name\": \"Celeste Sports Bra\"\n              }\n            },\n            {\n              \"id\": \"15\",\n              \"product\": {\n                \"uid\": \"MTcyMg==\",\n                \"sku\": \"WT03\",\n                \"name\": \"Nora Practice Tank\"\n              }\n            },\n            {\n              \"id\": \"16\",\n              \"product\": {\n                \"uid\": \"MTY5MA==\",\n                \"sku\": \"WT01\",\n                \"name\": \"Bella Tank\"\n              }\n            }\n          ]\n        }\n      },\n      \"destination_wishlist\": {\n        \"id\": \"1\",\n        \"items_v2\": {\n          \"items\": [\n            {\n              \"id\": \"1\",\n              \"product\": {\n                \"uid\": \"MTM=\",\n                \"sku\": \"24-WB07\",\n                \"name\": \"Overnight Duffle\"\n              }\n            },\n            {\n              \"id\": \"2\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/move-products.md",
          "loc": { "lines": { "from": 124, "to": 164 } }
        }
      }
    ],
    [
      "7c4a21b3-48fc-4ce1-841b-ffda78888239",
      {
        "pageContent": "\"product\": {\n                \"uid\": \"MTA=\",\n                \"sku\": \"24-WB05\",\n                \"name\": \"Savvy Shoulder Tote\"\n              }\n            },\n            {\n              \"id\": \"3\",\n              \"product\": {\n                \"uid\": \"MTE=\",\n                \"sku\": \"24-WB06\",\n                \"name\": \"Endeavor Daytrip Backpack\"\n              }\n            },\n            {\n              \"id\": \"4\",\n              \"product\": {\n                \"uid\": \"MTA5OA==\",\n                \"sku\": \"WH04\",\n                \"name\": \"Miko Pullover Hoodie\"\n              }\n            },\n            {\n              \"id\": \"5\",\n              \"product\": {\n                \"uid\": \"MTIyNg==\",\n                \"sku\": \"WJ01\",\n                \"name\": \"Stellar Solar Jacket\"\n              }\n            },\n            {\n              \"id\": \"6\",\n              \"product\": {\n                \"uid\": \"MTcyMg==\",\n                \"sku\": \"WT03\",\n                \"name\": \"Nora Practice Tank\"\n              }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/move-products.md",
          "loc": { "lines": { "from": 165, "to": 201 } }
        }
      }
    ],
    [
      "abf6e61e-4a44-471d-b673-6d74f8a5ae8b",
      {
        "pageContent": "}\n            },\n            {\n              \"id\": \"7\",\n              \"product\": {\n                \"uid\": \"MTY5MA==\",\n                \"sku\": \"WT01\",\n                \"name\": \"Bella Tank\"\n              }\n            },\n            {\n              \"id\": \"17\",\n              \"product\": {\n                \"uid\": \"MTg=\",\n                \"sku\": \"24-UG02\",\n                \"name\": \"Pursuit Lumaflex&trade; Tone Band\"\n              }\n            }\n          ]\n        }\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/move-products.md",
          "loc": { "lines": { "from": 201, "to": 226 } }
        }
      }
    ],
    [
      "1d544952-cead-47ac-9571-478933ef11d7",
      {
        "pageContent": "---\ntitle: removeProductsFromWishlist mutation\n---\n\n# removeProductsFromWishlist mutation\n\nThe `removeProductsFromWishlist` mutation completely removes the specified items from the customer's wish list. Use the [`updateProductsInWishlist` mutation](remove-products.md) to change the quantity of specific items in the wish list.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  removeProductsFromWishlist(\n    wishlistId: ID!\n    wishlistItemsIds: [ID!]!\n  ) {\n    RemoveProductsFromWishlistOutput\n  }\n}\n  ```\n\n## Reference\n\nThe [`removeProductsFromWishlist`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-removeProductsFromWishlist) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/remove-products.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "4aae690c-71e4-489b-b535-0e17a63bb0b4",
      {
        "pageContent": "## Example usage\n\nThe following example removes an item that was added in the [`addProductsToWishlist` mutation](add-products.md) example.\n\n**Request:**\n\n``` graphql\nmutation {\n  removeProductsFromWishlist(\n  wishlistId: 4\n  wishlistItemsIds: [\n    26\n  ]){\n    wishlist {\n      id\n      items_count\n      items_v2 {\n        items {\n          id\n          quantity\n          product {\n            uid\n            name\n            sku\n            price_range {\n              minimum_price {\n                regular_price  {\n                  currency\n                  value\n                }\n              }\n              maximum_price {\n                regular_price {\n                  currency\n                  value\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/remove-products.md",
          "loc": { "lines": { "from": 28, "to": 75 } }
        }
      }
    ],
    [
      "305668b6-0a64-4284-85fa-fc27528b70aa",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/remove-products.md",
          "loc": { "lines": { "from": 76, "to": 78 } }
        }
      }
    ],
    [
      "f863301e-1620-4f66-96be-8713d519cd4a",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"removeProductsFromWishlist\": {\n      \"wishlist\": {\n        \"id\": \"4\",\n        \"items_count\": 2,\n        \"items_v2\": {\n          \"items\": [\n            {\n              \"id\": \"27\",\n              \"quantity\": 1,\n              \"product\": {\n                \"uid\": \"MTIyNg==\",\n                \"name\": \"Stellar Solar Jacket\",\n                \"sku\": \"WJ01\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 75\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 75\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"28\",\n              \"quantity\": 1,\n              \"product\": {\n                \"uid\": \"NTI=\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/remove-products.md",
          "loc": { "lines": { "from": 80, "to": 116 } }
        }
      }
    ],
    [
      "7d5cc1f0-7afd-4e07-a2ec-52ac02ed37b4",
      {
        "pageContent": "\"name\": \"Sprite Yoga Companion Kit\",\n                \"sku\": \"24-WG080\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 61\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 77\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/remove-products.md",
          "loc": { "lines": { "from": 117, "to": 142 } }
        }
      }
    ],
    [
      "0e918b09-d569-4c84-925a-f437f0a502d1",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The current user cannot perform operations on wishlist` | An unauthorized user (guest) tried to add an item to a wishlist, or an authorized user (customer) tried to add an item to a wishlist of another customer.\n`The wishlist was not found.` | The value provided in the `wishlistId` field is invalid or does not exist for the customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/remove-products.md",
          "loc": { "lines": { "from": 144, "to": 149 } }
        }
      }
    ],
    [
      "3eed96a9-58d1-4102-adf4-5c3c5b48cad5",
      {
        "pageContent": "---\ntitle: updateProductsInWishlist mutation\n---\n\n# updateProductsInWishlist mutation\n\nThe `updateProductsInWishlist` mutation changes the quantity, description and option information for the specified items in the customer's wish list.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the `removeProductsFromWishlist` mutation to remove an item from the wish list. Do not set the quantity of an item to 0.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  updateProductsInWishlist(\n    wishlistId: ID!\n    wishlistItems: [WishlistItemUpdateInput!]!\n  ){\n      UpdateProductsInWishlistOutput\n  }\n}\n```\n\n## Reference\n\nThe [`updateProductsInWishlist`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateProductsInWishlist) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "4a74c7dc-2270-4f27-9754-7de79424f85b",
      {
        "pageContent": "## Example usage\n\nThe following example changes the quantity of the product represented by wish list item `16` to `2` and adds a description for item `17`.\n\n**Request:**\n\n``` graphql\nmutation {\n  updateProductsInWishlist(\n  wishlistId: 2\n  wishlistItems: [\n    {\n      wishlist_item_id: 10\n      quantity: 2\n    }\n    {\n      wishlist_item_id: 11\n      description: \"I love this!\"\n    }\n  ]){\n    wishlist {\n      id\n      items_count\n      items_v2 {\n        items {\n          id\n          quantity\n          product {\n            name\n            sku\n            uid\n            price_range {\n              minimum_price {\n                regular_price {\n                  currency\n                  value\n                }\n              }\n              maximum_price {\n                regular_price {\n                  currency\n                  value\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    user_errors {\n      code\n      message\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 32, "to": 86 } }
        }
      }
    ],
    [
      "e4d1e20a-e027-4557-9cae-e79bfbe619b3",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 87, "to": 89 } }
        }
      }
    ],
    [
      "65946c2c-8e55-4201-bd39-de7fe6e20ac5",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"updateProductsInWishlist\": {\n      \"wishlist\": {\n        \"id\": \"2\",\n        \"items_count\": 8,\n        \"items_v2\": {\n          \"items\": [\n            {\n              \"id\": \"8\",\n              \"quantity\": 1,\n              \"product\": {\n                \"name\": \"Advanced Pilates & Yoga (Strength)\",\n                \"sku\": \"240-LV08\",\n                \"uid\": \"NDk=\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 18\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 18\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"10\",\n              \"quantity\": 1,\n              \"product\": {\n                \"name\": \"Layla Tee\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 91, "to": 127 } }
        }
      }
    ],
    [
      "eab57479-1108-49fa-827e-dc997e06c375",
      {
        "pageContent": "\"sku\": \"WS04\",\n                \"uid\": \"MTQ1MA==\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 29\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 29\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"11\",\n              \"quantity\": 1,\n              \"product\": {\n                \"name\": \"Radiant Tee\",\n                \"sku\": \"WS12\",\n                \"uid\": \"MTU2Mg==\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 22\n                    }\n                  },\n                  \"maximum_price\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 128, "to": 160 } }
        }
      }
    ],
    [
      "968a1596-be39-4c6d-a745-fe39e1efd35b",
      {
        "pageContent": "\"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 22\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"12\",\n              \"quantity\": 1,\n              \"product\": {\n                \"name\": \"Electra Bra Top\",\n                \"sku\": \"WB01\",\n                \"uid\": \"MTYxMA==\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 39\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 39\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"13\",\n              \"quantity\": 1,\n              \"product\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 161, "to": 195 } }
        }
      }
    ],
    [
      "64e021c3-49e1-46fe-be9f-6ac2131d1ced",
      {
        "pageContent": "\"name\": \"Celeste Sports Bra\",\n                \"sku\": \"WB03\",\n                \"uid\": \"MTY0Mg==\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 39\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 39\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"15\",\n              \"quantity\": 2,\n              \"product\": {\n                \"name\": \"Nora Practice Tank\",\n                \"sku\": \"WT03\",\n                \"uid\": \"MTcyMg==\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 39\n                    }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 196, "to": 227 } }
        }
      }
    ],
    [
      "95559ec0-e4ab-42da-97f7-e27d179b508b",
      {
        "pageContent": "},\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 39\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"24\",\n              \"quantity\": 2,\n              \"product\": {\n                \"name\": \"Layla Tee\",\n                \"sku\": \"WS04\",\n                \"uid\": \"MTQ1MA==\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 29\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 29\n                    }\n                  }\n                }\n              }\n            },\n            {\n              \"id\": \"25\",\n              \"quantity\": 1,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 228, "to": 263 } }
        }
      }
    ],
    [
      "acfc5ca4-e6ee-4a55-bb4a-e4b7c866e1a6",
      {
        "pageContent": "\"product\": {\n                \"name\": \"Radiant Tee\",\n                \"sku\": \"WS12\",\n                \"uid\": \"MTU2Mg==\",\n                \"price_range\": {\n                  \"minimum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 22\n                    }\n                  },\n                  \"maximum_price\": {\n                    \"regular_price\": {\n                      \"currency\": \"USD\",\n                      \"value\": 22\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      },\n      \"user_errors\": []\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 264, "to": 291 } }
        }
      }
    ],
    [
      "861ba7f7-7f69-4a15-8425-385260a67f42",
      {
        "pageContent": "## Errors\n\nError | Description\n--- | ---\n`The current user cannot perform operations on wishlist` | An unauthorized user (guest) tried to add an item to a wishlist, or an authorized user (customer) tried to add an item to a wishlist of another customer.\n`The wishlist was not found.` | The value provided in the `wishlistId` field is invalid or does not exist for the customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update-products.md",
          "loc": { "lines": { "from": 293, "to": 298 } }
        }
      }
    ],
    [
      "334fc1ac-3501-4b13-a392-79fb59be7d10",
      {
        "pageContent": "---\ntitle: updateWishlist mutation\nedition: ee\n---\n\n# updateWishlist mutation\n\nThe `updateWishlist` mutation updates the properties of a wish list. Adobe Commerce allows customers to change the name and visibility of wish lists.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nUse the [updateProductsInWishlist mutation](update-products.md) to modify the contents of a wish list.\n\nThis mutation requires a valid [customer authentication token](../../customer/mutations/generate-token.md).\n\n## Syntax\n\n```graphql\nmutation {\n  updateWishlist(\n    wishlistUid: ID!\n    name: String\n    visibility: WishlistVisibilityEnum\n  ) {\n    UpdateWishlistOutput\n  }\n}\n```\n\n## Reference\n\nThe [`updateWishlist`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#mutation-updateWishlist) reference provides detailed information about the types and fields defined in this mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update.md",
          "loc": { "lines": { "from": 1, "to": 32 } }
        }
      }
    ],
    [
      "2f7b231a-7c0b-4820-9a1d-df93a94b3a82",
      {
        "pageContent": "## Example usage\n\nThe following example changes the name of an existing wish list.\n\n**Request:**\n\n``` graphql\nmutation {\n  updateWishlist(\n    wishlistUid: 4\n    name: \"My favorite things\"\n    visibility: PUBLIC\n  ) {\n    name\n    uid\n    visibility\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"updateWishlist\": {\n      \"name\": \"My favorite things\",\n      \"uid\": \"4\",\n      \"visibility\": \"PUBLIC\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/mutations/update.md",
          "loc": { "lines": { "from": 34, "to": 66 } }
        }
      }
    ],
    [
      "47b87c96-eb4d-4e46-9a39-15fd53d4f6d9",
      {
        "pageContent": "---\ntitle: Wishlist\n---\n\n# Wish list\n\nThe `wishlist` query has been deprecated. Wish list information is now provided by the [customer](../../customer/queries/customer.md) query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/queries/index.md",
          "loc": { "lines": { "from": 1, "to": 7 } }
        }
      }
    ],
    [
      "1677a248-d1fc-4092-b21a-8c28f675e739",
      {
        "pageContent": "---\ntitle: wishlist query\n---\n\n# wishlist query\n\n<InlineAlert variant=\"warning\" slots=\"text\" />\n\nThe `wishlist` query has been deprecated. Wish list information is now provided by the [customer](../../customer/queries/customer.md) query.\n\nUse the `wishlist` query to retrieve information about a customer's wish list. [Authorization tokens](../../../usage/authorization-tokens.md) describes how to supply an authorization token for a specific customer.\n\n## Syntax\n\n`wishlist: WishlistOutput`\n\n## Reference\n\nThe [`wishlist`](https://developer.adobe.com/commerce/webapi/graphql-api/index.html#query-wishlist) reference provides detailed information about the types and fields defined in this query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/queries/wishlist.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "9479a668-617d-4b8f-ba86-898cd93573fd",
      {
        "pageContent": "## Example usage\n\nThe following query returns the customer's wish list:\n\n**Request:**\n\n```graphql\n{\n  wishlist {\n    items_count\n    name\n    sharing_code\n    updated_at\n    items {\n      id\n      qty\n      description\n      added_at\n      product {\n        sku\n        name\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/queries/wishlist.md",
          "loc": { "lines": { "from": 21, "to": 45 } }
        }
      }
    ],
    [
      "2787091d-2050-48f7-a8ca-f99399b0500e",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"wishlist\": {\n      \"items_count\": 2,\n      \"name\": \"Wish List\",\n      \"sharing_code\": \"KAXDj0HlM7Y2s58mllsVhSJvRj4fWIZj\",\n      \"updated_at\": \"2019-02-13 22:47:45\",\n      \"items\": [\n        {\n          \"id\": 1,\n          \"qty\": 1,\n          \"description\": \"My first priority\",\n          \"added_at\": \"2019-02-20 14:38:02\",\n          \"product\": {\n            \"sku\": \"MJ09\",\n            \"name\": \"Taurus Elements Shell\"\n          }\n        },\n        {\n          \"id\": 2,\n          \"qty\": 1,\n          \"description\": null,\n          \"added_at\": \"2019-02-20 14:38:28\",\n          \"product\": {\n            \"sku\": \"MSH11\",\n            \"name\": \"Arcadio Gym Short\"\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/schema/wishlist/queries/wishlist.md",
          "loc": { "lines": { "from": 46, "to": 83 } }
        }
      }
    ],
    [
      "d03f9c5d-bb0d-40cb-8572-7020df4e8f23",
      {
        "pageContent": "---\ntitle: Step 3. Add products to the cart\ndescription: Learn how to add products to a cart with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 3. Add products to the cart\n\nGraphQL supports all product types, but this tutorial only demonstrates how to add a simple product and a virtual product to the shopping cart. You can find more details and examples in the following topics:\n\n-  [Bundle products](../../schema/cart/mutations/add-bundle-products.md)\n-  [Configurable products](../../schema/cart/mutations/add-configurable-products.md)\n-  [Downloadable products](../../schema/cart/mutations/add-downloadable-products.md)\n-  [Simple and grouped products](../../schema/cart/mutations/add-simple-products.md)\n-  [Virtual products](../../schema/cart/mutations/add-virtual-products.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/add-product-to-cart.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "e9c95088-ffe5-45b7-9561-8460bb63b205",
      {
        "pageContent": "[Product interface implementations](../../schema/products/interfaces/types/index.md) also describes how to create queries that access product interfaces.\n\nUse the `updateCartItems` mutation to update shopping cart items and `removeItemFromCart` to remove a product from the shopping cart.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nIf you add a product to the shopping cart as a registered customer, be sure to send the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more details.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/add-product-to-cart.md",
          "loc": { "lines": { "from": 21, "to": 27 } }
        }
      }
    ],
    [
      "69738e83-98b0-4176-a2ba-720d3d422aa0",
      {
        "pageContent": "## Add a simple product into the shopping cart\n\nThe following mutation adds a simple product into the shopping cart.\n\nReplace `{ CART_ID }` with the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md).\n\nIn this example, we will add the Aim Analog Watch (SKU 24-MG04) from the default Luma catalog to the cart. The SKU identifies the product to be added.\n\n**Request:**\n\n```graphql\nmutation {\n  addSimpleProductsToCart(\n    input: {\n      cart_id: \"{ CART_ID }\"\n      cart_items: [\n        {\n          data: {\n            quantity: 1\n            sku: \"24-MG04\"\n          }\n        }\n      ]\n    }\n  ) {\n    cart {\n      items {\n        id\n        product {\n          sku\n          stock_status\n        }\n        quantity\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/add-product-to-cart.md",
          "loc": { "lines": { "from": 29, "to": 65 } }
        }
      }
    ],
    [
      "16df55d3-bd13-4ee0-b501-3289531816c1",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addSimpleProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"id\": \"5\",\n            \"product\": {\n              \"sku\": \"24-MG04\",\n              \"stock_status\": \"IN_STOCK\"\n            },\n            \"quantity\": 1\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/add-product-to-cart.md",
          "loc": { "lines": { "from": 66, "to": 89 } }
        }
      }
    ],
    [
      "69d2ceeb-d7d7-49b3-91c8-ad637def58ed",
      {
        "pageContent": "## Add a virtual product into the shopping cart\n\nThe following mutation adds a virtual product into the shopping cart.\nIn this example, we add the Beginner's Yoga video downloadable product (SKU 240-LV04).\n\n**Request:**\n\n```graphql\nmutation {\n  addVirtualProductsToCart(\n    input: {\n      cart_id: \"{ CART_ID }\"\n      cart_items: [\n        {\n          data: {\n            quantity: 1\n            sku: \"240-LV04\"\n          }\n        }\n      ]\n    }\n  ) {\n    cart {\n      items {\n        id\n        product {\n          sku\n          stock_status\n        }\n        quantity\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/add-product-to-cart.md",
          "loc": { "lines": { "from": 91, "to": 124 } }
        }
      }
    ],
    [
      "752dc7f9-a18f-4785-8b26-4d1922ccadef",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"addVirtualProductsToCart\": {\n      \"cart\": {\n        \"items\": [\n          {\n            \"id\": \"5\",\n            \"product\": {\n              \"sku\": \"24-MG04\",\n              \"stock_status\": \"IN_STOCK\"\n            },\n            \"quantity\": 1\n          },\n          {\n            \"id\": \"6\",\n            \"product\": {\n              \"sku\": \"240-LV04\",\n              \"stock_status\": \"IN_STOCK\"\n            },\n            \"quantity\": 1\n          }\n        ]\n      }\n    }\n  }\n}\n```\n\nThe response lists all items currently in the cart, including the just-added video download.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/add-product-to-cart.md",
          "loc": { "lines": { "from": 125, "to": 158 } }
        }
      }
    ],
    [
      "20b03b94-bd6d-47ff-b1cf-9b560a6a4a13",
      {
        "pageContent": "## Verify this step\n\n1. Sign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`.\n\n1. Go to the shopping cart. All the items you added are displayed.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/add-product-to-cart.md",
          "loc": { "lines": { "from": 160, "to": 164 } }
        }
      }
    ],
    [
      "06b8e345-77b1-42d0-b51f-3f6eee6582f8",
      {
        "pageContent": "---\ntitle: Step 7. Apply a coupon\ndescription: Learn how to set a apply a coupon to an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 7. Apply a coupon\n\nUse [applyCouponToCart](apply-coupon.md) to apply a discount coupon to the specified `cart_id`.\n\n`{ CART_ID }` is the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md).\n\n`{ COUPON_CODE }` is an existing coupon code. It cannot be generated with GraphQL.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/apply-coupon.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "ad24ead1-71d2-448b-9854-a44a95276cad",
      {
        "pageContent": "## Create a coupon\n\nCoupons must be generated from the Admin.\n\nCreating a coupon is described in [Coupon Codes](https://docs.magento.com/user-guide/marketing/price-rules-cart-coupon.html).\nFor the purpose of this tutorial, create a Cart Price Rule with:\n\nFor **Rule Information**:\n\n-  **Rule Name**: Watch Coupon\n-  **Active**: Yes\n-  **Websites**: Main Website\n-  **Customer Groups**: Select all of them\n-  **Coupon**: Specific Coupon\n-  **Coupon Code**: Watch20\n-  **Uses per Coupon**: 5\n-  **Uses per Customer**: 5\n\nFor **Actions**\n\n-  **Apply**: Percent of product price discount\n-  **Discount Amount**: 20\n\nSave this rule.\nThe **Coupon Code** value is the name of the coupon the end user enters.\nTo verify the coupon works, create an order with a product using guest checkout.\nWhen checking out, enter `Watch20` in the Apply Discount Code field and press the Apply Discount button.\nThe discount should be applied in the cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/apply-coupon.md",
          "loc": { "lines": { "from": 19, "to": 46 } }
        }
      }
    ],
    [
      "e76e2772-8ce0-4988-9fd4-e9e3a1766aa1",
      {
        "pageContent": "When the coupon is set up, we can apply it via GraphQL. Replace the `{ CART_ID }` with your generated ID and replace the `{ COUPON_CODE }` with `Watch20` below.\n\nFor logged-in customers, send the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more information.\n\n**Request:**\n\n```graphql\nmutation {\n  applyCouponToCart(\n    input: {\n      cart_id: \"{ CART_ID }\"\n      coupon_code: \"{ COUPON_CODE }\"\n    }\n  ) {\n    cart {\n      applied_coupons {\n        code\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/apply-coupon.md",
          "loc": { "lines": { "from": 48, "to": 68 } }
        }
      }
    ],
    [
      "16266f40-5c21-48a0-87d4-6fb350b17602",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"applyCouponToCart\": {\n      \"cart\": {\n        \"applied_coupons\": [\n          {\n            \"code\": \"Watch20\"\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/apply-coupon.md",
          "loc": { "lines": { "from": 69, "to": 87 } }
        }
      }
    ],
    [
      "74380f77-5909-4a14-baed-1449b39a0e6f",
      {
        "pageContent": "## Verify this step\n\n1. Sign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`.\n\n1. Go to Checkout.\n\n1. The discount is displayed in the Order Summary block.\n\n## Remove a coupon\n\nUse [removeCouponFromCart](../../schema/cart/mutations/remove-coupon.md) to remove a discount coupon from the shopping cart.\n\n**Request:**\n\n```graphql\nmutation {\n  removeCouponFromCart(input: { cart_id: \"{ CART_ID }\" }) {\n    cart {\n      applied_coupons {\n        code\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"removeCouponFromCart\": {\n      \"cart\": {\n        \"applied_coupons\": {\n          \"applied_coupon\": null\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/apply-coupon.md",
          "loc": { "lines": { "from": 89, "to": 129 } }
        }
      }
    ],
    [
      "d58b670f-5aa3-4ff8-a663-cc830aee0a7d",
      {
        "pageContent": "---\ntitle: Step 2. Create an empty cart\ndescription: Learn how to create a cart with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 2. Create an empty cart\n\nThe procedure for creating a cart varies for logged-in customers and guests.\n\nThe `customerCart` query returns the active cart for the logged-in customer. If the cart does not exist, the query creates one. You must specify the customer's authorization token in the headers. Otherwise, the query fails. [\"Get customer authorization token\"](../../usage/authorization-tokens.md) describes these tokens.\n\nFor guests, use the [`createEmptyCart`](../../schema/cart/mutations/create-empty-cart.md) mutation to create an empty shopping cart and generate a cart ID for a guest user. If the guest later logs in as a customer, use the [`mergeCarts`](../../schema/cart/mutations/merge.md) mutation to transfer the contents of the guest cart into the customer's cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/create-cart.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "03acdec1-ee6f-4874-aad0-9c3d06927fc2",
      {
        "pageContent": "## Create a customer cart\n\nThe customer created in the previous step does not have an active cart. The following query creates an empty cart and returns the cart ID. You must specify the customer's authorization token in the headers of the call.\n\n**Request:**\n\n```graphql\n{\n  customerCart{\n    id\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"customerCart\": {\n      \"id\": \"pXVxnNg4PFcK1lD60O5evqF7f4SkiRR1\"\n    }\n  }\n}\n```\n\nIn the subsequent tutorial steps, the unique shopping cart identifier `pXVxnNg4PFcK1lD60O5evqF7f4SkiRR1` will be listed as `{ CART_ID }`.\nCopy the value of the id attribute. Use this value in subsequent steps wherever the { CART_ID } variable is specified.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/create-cart.md",
          "loc": { "lines": { "from": 19, "to": 46 } }
        }
      }
    ],
    [
      "d7cca918-0785-48d0-a680-5a2f608ffd5d",
      {
        "pageContent": "## Create a guest cart\n\nThe following example creates an empty cart for a guest. Do not include an authorization token on any call made on behalf of a guest.\n\n**Request:**\n\n```graphql\nmutation {\n  createEmptyCart\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createEmptyCart\": \"A7jCcOmUjjCh7MxDIzu1SeqdqETqEa5h\"\n  }\n}\n```\n\nIn the subsequent tutorial steps, the unique shopping cart identifier `A7jCcOmUjjCh7MxDIzu1SeqdqETqEa5h` will be listed as `{ CART_ID }`.\nCopy the value of the id attribute. Use this value in subsequent steps wherever the { CART_ID } variable is specified.\n\n## Verify this step\n\nThere are no additional verification steps. The value of `id` is not displayed on the website or in the Admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/create-cart.md",
          "loc": { "lines": { "from": 48, "to": 75 } }
        }
      }
    ],
    [
      "bd799182-0bda-455b-b25b-69252a1fef47",
      {
        "pageContent": "---\ntitle: Step 1. Create a customer\ndescription: Learn how to create a customer with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 1. Create a customer\n\nThis step creates a customer account and generates an authentication token for that customer. You can skip this step if you want to perform this tutorial as a guest user.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/create-customer.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "434a30c9-e0bf-4964-ba33-49daa3b8ed53",
      {
        "pageContent": "## Create a customer\n\nUse the `createCustomer` mutation to register the new customer account in the store.\n\n**Request:**\n\n```graphql\nmutation {\n  createCustomer(\n    input: {\n      firstname: \"John\"\n      lastname: \"Doe\"\n      email: \"john.doe@example.com\"\n      password: \"b1b2b3l@w+\"\n      is_subscribed: true\n    }\n  ) {\n    customer {\n      firstname\n      lastname\n      email\n      is_subscribed\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"createCustomer\": {\n      \"customer\": {\n        \"firstname\": \"John\",\n        \"lastname\": \"Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"is_subscribed\": true\n      }\n    }\n  }\n}\n```\n\nThe [`createCustomer`](../../schema/customer/mutations/create.md) mutation describes additional parameters.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/create-customer.md",
          "loc": { "lines": { "from": 15, "to": 59 } }
        }
      }
    ],
    [
      "4017c3fa-eec5-4d88-87ce-0d3e00cbb95a",
      {
        "pageContent": "## Generate an authentication token for the customer\n\nTo place an order as a customer, you must obtain an authorization token by calling the `generateCustomerToken` mutation. You must include the customer's email and password as input.\n\n**Request:**\n\n```graphql\nmutation {\n  generateCustomerToken(email: \"john.doe@example.com\", password: \"b1b2b3l@w+\") {\n    token\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"generateCustomerToken\": {\n      \"token\": \"zuo7zor5jfldft2nmu2gtylnm8ui7e8t\"\n    }\n  }\n}\n```\n\n## Specify an Authorization header\n\nTo send requests on behalf of the customer, you must supply the generated token as a header in your GraphQL browser.\nThe name of the header is `Authorization` and the value is `Bearer <token>`.\n\n[Authorization tokens](../../usage/authorization-tokens.md) describes the mutation further.\n\n## Verify this step\n\nSign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`. You should be successfully logged in.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/create-customer.md",
          "loc": { "lines": { "from": 61, "to": 96 } }
        }
      }
    ],
    [
      "cfc8b620-f565-47c7-89e6-06cc9b4b00ff",
      {
        "pageContent": "---\ntitle: GraphQL checkout tutorial\ndescription: Learn how to place an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# GraphQL checkout tutorial\n\nThis tutorial describes how to place an order through GraphQl. Customers can make purchases in two ways:\n\n-  As a logged-in user\n-  As a guest user who does not create an account\n\nThe **10-step tutorial** generally takes **30 minutes**.\n\nAdobe Commerce and Magento Open Source GraphQL is designed to run queries and perform actions on behalf of a customer. Adobe Commerce and Magento Open Source GraphQL does not perform backend tasks, such as manage invoices or shipments.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/index.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "e001b1ae-91e0-407c-88f2-db1d1ad5f2db",
      {
        "pageContent": "### Before you begin\n\nComplete the following prerequisites:\n\n-  Install an Adobe Commerce or Magento Open Source instance with sample data.\n   The sample data defines a functional store, called Luma, that sells fitness clothing and accessories. The store does not provide any sandbox accounts for testing credit card payments, so transactions will be simulated using an offline payment method.\n\n-  Install a GraphQl client. You can use any GraphQl client to send calls to Magento. [Altair](https://altair.sirmuel.design/) is a good example.\n\n-  Learn about GraphQL, how it works, and how to use it. See [Introduction to GraphQL](https://graphql.org/learn/) for details.\n\n-  Know how to generate a customer token. See [Authorization tokens](../../usage/authorization-tokens.md) for details.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/index.md",
          "loc": { "lines": { "from": 22, "to": 33 } }
        }
      }
    ],
    [
      "fe994f43-f431-4af2-a7c6-70193715919e",
      {
        "pageContent": "-  In the Admin, create a [coupon](https://docs.magento.com/user-guide/marketing/price-rules-cart-coupon-code-configure.html) that will be used in [Step 7. Apply a coupon](../../tutorials/checkout/apply-coupon.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/index.md",
          "loc": { "lines": { "from": 35, "to": 35 } }
        }
      }
    ],
    [
      "549bf70c-92cf-4986-bf59-ce054e3105c0",
      {
        "pageContent": "### Other resources\n\n-  [Order processing tutorial](https://developer.adobe.com/commerce/webapi/rest/tutorials/orders/) shows a system integrator how REST APIs are used in the lifecycle of an order, including configuring a store and creating a customer; creating quotes, orders, invoices, and shipments; preparing for checkout; and more order-related tasks.\n\n-  [REST Tutorials](https://developer.adobe.com/commerce/webapi/rest/tutorials/) provides additional information about completing any REST tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/index.md",
          "loc": { "lines": { "from": 37, "to": 41 } }
        }
      }
    ],
    [
      "e38fc2ac-eea2-4632-9979-7d411f591b0f",
      {
        "pageContent": "---\ntitle: Step 10. Place the order\ndescription: Learn how to place an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 10. Place the order\n\nThe `placeOrder` mutation places an order.\n\n`{ CART_ID }` is the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md).\n\nSend the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more information.\n\n**Request:**\n\n```graphql\nmutation {\n  placeOrder(input: {cart_id: \"{ CART_ID }\"}) {\n    order {\n      order_number\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"placeOrder\": {\n      \"order\": {\n        \"order_number\": \"000000001\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/place-order.md",
          "loc": { "lines": { "from": 1, "to": 43 } }
        }
      }
    ],
    [
      "c764aec3-d1c9-46b7-a70b-c7cba2a6b03c",
      {
        "pageContent": "## Verify this step\n\n1. Sign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`.\n\n1. Go to **My Account** > **My Orders**. The order you created is displayed.  The order is also displayed on the Orders grid (**Sales** > **Orders**) in the Admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/place-order.md",
          "loc": { "lines": { "from": 45, "to": 49 } }
        }
      }
    ],
    [
      "8c05e5cd-402a-4028-8f53-cd6a05b2fdbc",
      {
        "pageContent": "---\ntitle: Step 5. Set billing address\ndescription: Learn how to set a billing address for an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 5. Set billing address\n\n<InlineAlert variant=\"success\" slots=\"text\" />\n\nYou must always set the billing address to place an order.\n\nUse the [setBillingAddressOnCart](../../schema/cart/mutations/set-billing-address.md) mutation to set a billing address.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-billing-address.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "a3ae19fa-ce6b-43cc-8b98-dd897fe6b6c3",
      {
        "pageContent": "## Add a billing address to the cart\n\nSimilar to the shipping address, add a billing address to the cart. `{ CART_ID }` is the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md). The street address is also different, so we can see that different addresses are being created.\n\nSend the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more information.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-billing-address.md",
          "loc": { "lines": { "from": 19, "to": 25 } }
        }
      }
    ],
    [
      "9dd9bce8-796f-4899-b0f5-c9c354109b98",
      {
        "pageContent": "**Request:**\n\n```graphql\nmutation {\n  setBillingAddressOnCart(\n    input: {\n      cart_id: \"{ CART_ID }\"\n      billing_address: {\n        address: {\n          firstname: \"John\"\n          lastname: \"Doe\"\n          company: \"Company Name\"\n          street: [\"64 Strawberry Dr\", \"Beverly Hills\"]\n          city: \"Los Angeles\"\n          region: \"CA\"\n          region_id: 12\n          postcode: \"90210\"\n          country_code: \"US\"\n          telephone: \"123-456-0000\"\n          save_in_address_book: true\n        }\n      }\n    }\n  ) {\n    cart {\n      billing_address {\n        firstname\n        lastname\n        company\n        street\n        city\n        region{\n          code\n          label\n        }\n        postcode\n        telephone\n        country {\n          code\n          label\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-billing-address.md",
          "loc": { "lines": { "from": 25, "to": 69 } }
        }
      }
    ],
    [
      "be0bf890-6554-4755-b990-3c8947cbe019",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setBillingAddressOnCart\": {\n      \"cart\": {\n        \"billing_address\": {\n          \"firstname\": \"John\",\n          \"lastname\": \"Doe\",\n          \"company\": \"Company Name\",\n          \"street\": [\n            \"64 Strawberry Dr\",\n            \"Beverly Hills\"\n          ],\n          \"city\": \"Los Angeles\",\n          \"region\": {\n            \"code\": \"CA\",\n            \"label\": \"California\"\n          },\n          \"postcode\": \"90210\",\n          \"telephone\": \"123-456-0000\",\n          \"country\": {\n            \"code\": \"US\",\n            \"label\": \"US\"\n          }\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-billing-address.md",
          "loc": { "lines": { "from": 70, "to": 103 } }
        }
      }
    ],
    [
      "6344ea75-dae1-4a23-8a4a-58a7fc45c97d",
      {
        "pageContent": "## Verify this step\n\n1. Sign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`.\n\n1. Go to Checkout.\n\n1. Go to the Review & Payments step. The Billing Address form is populated with the address details you entered.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-billing-address.md",
          "loc": { "lines": { "from": 105, "to": 111 } }
        }
      }
    ],
    [
      "96bf1d2f-2333-40ee-8f8a-2d990ec4790d",
      {
        "pageContent": "---\ntitle: Step 6. Set the delivery method\ndescription: Learn how to set a delivery method for an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 6. Set the delivery method\n\nThe `setShippingMethodsOnCart` mutation defines the delivery methods for your order. It requires these input parameters:\n\n*  `cart_id`\n*  `carrier_code`\n*  `method_code`\n\n`{ CART_ID }` is the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md).\n\nThe `carrier_code` and `method_code` values come from the response of the `setShippingAddressesOnCart` mutation on the [Set the shipping address](set-shipping-address.md) step.\n\nFor logged-in customers, send the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more information.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-delivery-method.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "67717e23-5e74-4c95-b6e8-482aec2b8fd2",
      {
        "pageContent": "**Request:**\n\nThe following mutation assigns Table Rate method.\n\n```graphql\nmutation {\n  setShippingMethodsOnCart(input: {\n    cart_id: \"{ CART_ID }\"\n    shipping_methods: [\n      {\n        carrier_code: \"tablerate\"\n        method_code: \"bestway\"\n      }\n    ]\n  }) {\n    cart {\n      shipping_addresses {\n        selected_shipping_method {\n          carrier_code\n          method_code\n          carrier_title\n          method_title\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-delivery-method.md",
          "loc": { "lines": { "from": 25, "to": 51 } }
        }
      }
    ],
    [
      "f309d93f-d569-46ba-97af-dc13a80d4996",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setShippingMethodsOnCart\": {\n      \"cart\": {\n        \"shipping_addresses\": [\n          {\n            \"selected_shipping_method\": {\n              \"carrier_code\": \"tablerate\",\n              \"method_code\": \"bestway\",\n              \"carrier_title\": \"Best Way\",\n              \"method_title\": \"Table Rate\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-delivery-method.md",
          "loc": { "lines": { "from": 52, "to": 75 } }
        }
      }
    ],
    [
      "d600704e-02b3-4ff8-b9cc-34ef1297d3a3",
      {
        "pageContent": "## Verify this step\n\n1. Sign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`.\n\n1. Go to Checkout.\n\n1. The selected delivery method is displayed in the Shipping Methods section on the Shipping step.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-delivery-method.md",
          "loc": { "lines": { "from": 77, "to": 83 } }
        }
      }
    ],
    [
      "ad26ab7d-b416-4026-9c2e-c0165a9c9e73",
      {
        "pageContent": "---\ntitle: Step 8. Set email on the cart\ndescription: Learn how to set a an email address for an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 8. Set email on the cart (guest customers only)\n\n<InlineAlert variant=\"success\" slots=\"text\" />\n\nSkip this step if you placed the order as a registered customer.\n\nIf you place an order as a guest user, you must set a quote email address. Use the `setGuestEmailOnCart` mutation query for that.\n\n`{ CART_ID }` is the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md).\n\n**Request:**\n\n```graphql\nmutation {\n  setGuestEmailOnCart(input: {\n    cart_id: \"{ CART_ID }\"\n    email: \"guest@example.com\"\n  }) {\n    cart {\n      email\n    }\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setGuestEmailOnCart\": {\n      \"cart\": {\n        \"email\": \"guest@example.com\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-email-address.md",
          "loc": { "lines": { "from": 1, "to": 48 } }
        }
      }
    ],
    [
      "26255603-dd4a-4677-aff7-8054d9632b10",
      {
        "pageContent": "## Verify this step\n\nThere are no additional verification steps. `quote`.`customer_email` is displayed for administrator on back-end side.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-email-address.md",
          "loc": { "lines": { "from": 50, "to": 52 } }
        }
      }
    ],
    [
      "61534afe-d22b-486e-8a1f-cecaa6b21502",
      {
        "pageContent": "---\ntitle: Step 9. Set the payment method\ndescription: Learn how to set a payment method for an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 9. Set the payment method\n\n<InlineAlert variant=\"success\" slots=\"text\" />\n\nYou must always set a payment method for an order.\n\nUse the following `cart` query to determine which payment methods which are available for your order.\n\n`{ CART_ID }` is the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md).\n\nFor logged-in customers, send the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more information.\n\n**Request:**\n\n```graphql\nquery {\n  cart(cart_id: \"{ CART_ID }\") {\n    available_payment_methods {\n      code\n      title\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-payment-method.md",
          "loc": { "lines": { "from": 1, "to": 33 } }
        }
      }
    ],
    [
      "d870fa79-bfe9-4042-925e-252cccf4151c",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"cart\": {\n      \"available_payment_methods\": [\n        {\n          \"code\": \"checkmo\",\n          \"title\": \"Check / Money order\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-payment-method.md",
          "loc": { "lines": { "from": 34, "to": 51 } }
        }
      }
    ],
    [
      "ea38883a-3186-4662-b727-7e761499a20a",
      {
        "pageContent": "### Set payment method on cart\n\nUse the `setPaymentMethodOnCart` mutation to set the payment method for your order. The value `checkmo` (\"Check / Money order\" payment method code) was returned in the query.\n\nSend the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more information.\n\n**Request:**\n\n```graphql\nmutation {\n  setPaymentMethodOnCart(input: {\n      cart_id: \"{ CART_ID }\"\n      payment_method: {\n          code: \"checkmo\"\n      }\n  }) {\n    cart {\n      selected_payment_method {\n        code\n      }\n    }\n  }\n}\n```\n\n**Response:**\n\nIf the operation is successful, the response contains the code of the selected payment method.\n\n```json\n{\n  \"data\": {\n    \"setPaymentMethodOnCart\": {\n      \"cart\": {\n        \"selected_payment_method\": {\n          \"code\": \"checkmo\"\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-payment-method.md",
          "loc": { "lines": { "from": 53, "to": 94 } }
        }
      }
    ],
    [
      "b7cc47f2-c189-4bc5-853a-f251d662f1e1",
      {
        "pageContent": "## Verify this step\n\n1. Sign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`.\n\n1. Go to Checkout.\n\n1. The selected payment method is displayed in the Payment Method section on the Review & Payments step.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-payment-method.md",
          "loc": { "lines": { "from": 96, "to": 102 } }
        }
      }
    ],
    [
      "66543ef3-6148-46af-b2e0-806b8bc0ec66",
      {
        "pageContent": "---\ntitle: Step 4. Set the shipping address\ndescription: Learn how to set a shipping address for an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 4. Set the shipping address\n\nUse the [setShippingAddressesOnCart](../../schema/cart/mutations/set-shipping-address.md) mutation to set a shipping address.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-address.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "cf83dc63-7db0-4c83-8b7e-da9dfe1ebd02",
      {
        "pageContent": "## Add shipping address to the cart\n\nIn this step, we use the `setShippingAddressesOnCart` mutation to add a shipping address to the cart.\n\nIf using guest checkout, run the following example.\n\nIf using a logged in customer, send the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more information.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-address.md",
          "loc": { "lines": { "from": 15, "to": 23 } }
        }
      }
    ],
    [
      "449fb6d2-2d29-4da0-804b-e560bbab2e4e",
      {
        "pageContent": "```graphql\nmutation {\n  setShippingAddressesOnCart(\n    input: {\n      cart_id: \"{ CART_ID }\"\n      shipping_addresses: [\n        {\n          address: {\n            firstname: \"John\"\n            lastname: \"Doe\"\n            company: \"Company Name\"\n            street: [\"3320 N Crescent Dr\", \"Beverly Hills\"]\n            city: \"Los Angeles\"\n            region: \"CA\"\n            region_id: 12\n            postcode: \"90210\"\n            country_code: \"US\"\n            telephone: \"123-456-0000\"\n            save_in_address_book: false\n          }\n        }\n      ]\n    }\n  ) {\n    cart {\n      shipping_addresses {\n        firstname\n        lastname\n        company\n        street\n        city\n        region {\n          code\n          label\n        }\n        postcode\n        telephone\n        country {\n          code\n          label\n        }\n        available_shipping_methods{\n          carrier_code\n          carrier_title\n          method_code\n          method_title\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-address.md",
          "loc": { "lines": { "from": 25, "to": 75 } }
        }
      }
    ],
    [
      "e9dd6877-e8f6-4560-9190-344df4b39a7a",
      {
        "pageContent": "```\n\n**Response:**\n\n`setShippingAddressesOnCart` returns the new address details.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-address.md",
          "loc": { "lines": { "from": 76, "to": 80 } }
        }
      }
    ],
    [
      "b81fa288-a23f-4e3b-836a-a484bfd31449",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"setShippingAddressesOnCart\": {\n      \"cart\": {\n        \"shipping_addresses\": [\n          {\n            \"firstname\": \"John\",\n            \"lastname\": \"Doe\",\n            \"company\": \"Company Name\",\n            \"street\": [\n              \"3320 N Crescent Dr\",\n              \"Beverly Hills\"\n            ],\n            \"city\": \"Los Angeles\",\n            \"region\": {\n              \"code\": \"CA\",\n              \"label\": \"California\"\n            },\n            \"postcode\": \"90210\",\n            \"telephone\": \"123-456-0000\",\n            \"country\": {\n              \"code\": \"US\",\n              \"label\": \"US\"\n            },\n            \"available_shipping_methods\": [\n              {\n                \"carrier_code\": \"flatrate\",\n                \"carrier_title\": \"Flat Rate\",\n                \"method_code\": \"flatrate\",\n                \"method_title\": \"Fixed\"\n              },\n              {\n                \"carrier_code\": \"tablerate\",\n                \"carrier_title\": \"Best Way\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-address.md",
          "loc": { "lines": { "from": 82, "to": 116 } }
        }
      }
    ],
    [
      "f7a83fdd-5f86-43fe-9f23-ba5666647558",
      {
        "pageContent": "\"method_code\": \"bestway\",\n                \"method_title\": \"Table Rate\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-address.md",
          "loc": { "lines": { "from": 117, "to": 126 } }
        }
      }
    ],
    [
      "365f68d9-c9aa-45fe-a2c8-ea9a4ab3b12f",
      {
        "pageContent": "```\n\n`{ CART_ID }` is the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md).\n\nNote the `available_shipping_methods` in the response. We will use this information in a later step.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-address.md",
          "loc": { "lines": { "from": 127, "to": 131 } }
        }
      }
    ],
    [
      "b917943b-c54b-465a-a0a9-223bf990ade5",
      {
        "pageContent": "## Verify this step\n\n1. Sign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`.\n\n1. Go to Checkout.\n\n1. On the Shipping step, the Shipping Address form contains the address details you entered.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-address.md",
          "loc": { "lines": { "from": 133, "to": 139 } }
        }
      }
    ],
    [
      "cee0e2df-10bf-405e-a579-f8d9ee5acd5c",
      {
        "pageContent": "---\ntitle: Step 6. Set the delivery method\ndescription: Learn how to set a shipping method for an order with the GraphQL API.\ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Checkout\n---\n\n# Step 6. Set the delivery method\n\nThe `setShippingMethodsOnCart` mutation defines the delivery methods for your order. It requires these input parameters:\n\n*  `cart_id`\n*  `carrier_code`\n*  `method_code`\n\n`{ CART_ID }` is the unique shopping cart ID from [Step 2. Create empty cart](../../tutorials/checkout/add-product-to-cart.md).\n\nThe `carrier_code` and `method_code` values come from the response of the `setShippingAddressesOnCart` mutation on the [Set the shipping address](set-shipping-address.md) step.\n\nFor logged-in customers, send the customer's authorization token in the `Authorization` parameter of the header. See [Authorization tokens](../../usage/authorization-tokens.md) for more information.\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-method.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "7411d984-17e4-440c-bac1-22065f5fbd8e",
      {
        "pageContent": "**Request:**\n\nThe following mutation assigns Table Rate method.\n\n```graphql\nmutation {\n  setShippingMethodsOnCart(input: {\n    cart_id: \"{ CART_ID }\"\n    shipping_methods: [\n      {\n        carrier_code: \"tablerate\"\n        method_code: \"bestway\"\n      }\n    ]\n  }) {\n    cart {\n      shipping_addresses {\n        selected_shipping_method {\n          carrier_code\n          method_code\n          carrier_title\n          method_title\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-method.md",
          "loc": { "lines": { "from": 25, "to": 51 } }
        }
      }
    ],
    [
      "13a86b10-76f3-4ee6-9427-71efafaa410e",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"setShippingMethodsOnCart\": {\n      \"cart\": {\n        \"shipping_addresses\": [\n          {\n            \"selected_shipping_method\": {\n              \"carrier_code\": \"tablerate\",\n              \"method_code\": \"bestway\",\n              \"carrier_title\": \"Best Way\",\n              \"method_title\": \"Table Rate\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-method.md",
          "loc": { "lines": { "from": 52, "to": 75 } }
        }
      }
    ],
    [
      "dd4da415-df1f-4d89-a1fb-56cdee77abfc",
      {
        "pageContent": "## Verify this step\n\n1. Sign in as a customer to the website using the email `john.doe@example.com` and password `b1b2b3l@w+`.\n\n1. Go to Checkout.\n\n1. The selected delivery method is displayed in the Shipping Methods section on the Shipping step.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/checkout/set-shipping-method.md",
          "loc": { "lines": { "from": 77, "to": 83 } }
        }
      }
    ],
    [
      "5b72d939-c1d2-47ce-9238-7fc166e425dc",
      {
        "pageContent": "---\ntitle: GraphQL tutorials\ndescription: Follow step-by-step instructions to develop common ecommerce workflows with the GraphQL API.\nkeywords:\n  - GraphQL\n---\n\n# GraphQL tutorials\n\nThe GraphQL tutorials provide an introduction to the practical application of Adobe Commerce GraphQL APIs. In general, the tutorials guide you through common Adobe Commerce and Magento Open Source workflows.\n\nThe [checkout](checkout/index.md) tutorial describes how to place an order through GraphQL.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/tutorials/index.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "4aa58f06-4547-4989-9bf4-00821863ee8e",
      {
        "pageContent": "---\ntitle: GraphQL authorization\ndescription: Learn how to authorize GraphQL API calls using tokens. \ncontributor_name: Atwix\ncontributor_link: https://www.atwix.com/\nkeywords:\n  - GraphQL\n  - Security\n---\n\n# GraphQL authorization\n\nAdobe Commerce and Magento Open Source provide two mechanisms for authorizing GraphQL calls:\n\n*  **Authorization tokens**. Commerce generates a JSON Web Token (JWT), a set of cryptographically signed credentials. All calls that perform an action on behalf of a logged-in customer or admin provide an authorization token. Authorization tokens are stateless. Commerce does not need to know the state of a client to execute a request--the token contains all of the information needed for authorization and authentication.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "c04de782-cd3b-45ff-8a6f-6fedd8a46901",
      {
        "pageContent": "*  **Session cookies**. A session cookie is information generated by Commerce that is stored in the client's browser. It contains details about the session, including the time period the user can access resources. Cookies are stateful, thereby increasing complexity and possibly latency.\n\nAdobe recommends that you use authorization tokens instead of session cookies for GraphQL requests. By default, session cookies are enabled. As of Commerce 2.4.5, you can disable session cookies, eliminating the chances of encountering problems caused by the differences between the two authorization methods. However, merchants with existing implementations that rely on cookies can continue using this method. [Session cookies](#session-cookies) describes how to enable or disable cookies for GraphQL.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 17, "to": 19 } }
        }
      }
    ],
    [
      "fd431cfc-00d5-4cfd-b865-04527d6519ec",
      {
        "pageContent": "## Authorization tokens\n\nAdobe Commerce provides separate token services for customers and administrators. When you request a token from one of these services, the service returns a unique access token in exchange for the account's username and password.\n\nGraphQL provides a mutation that returns a token on behalf of a logged-in customer, but you must use a REST call to fetch an admin token. Any time you make a GraphQL or REST call that requires a token, specify the HTTP `Authorization` request header and assign the value as `Bearer <token>`. [Request headers](headers.md#request-headers) provides an example.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 21, "to": 25 } }
        }
      }
    ],
    [
      "45667d03-d3c3-46f9-b454-c8a740edd91c",
      {
        "pageContent": "### Customer tokens\n\nThe [`generateCustomerToken` mutation](../schema/customer/mutations/generate-token.md) requires the customer email address and password in the payload, as shown in the following example.\n\nBy default, a customer token is valid for 1 hour. You can change these values from Admin by selecting **Stores** > **Settings** > **Configuration** > **Services** > **OAuth** > **Access Token Expiration** > **Customer Token Lifetime**.\n\n**Request:**\n\n```text\nmutation {\n  generateCustomerToken(email: \"customer@example.com\", password: \"password\") {\n    token\n  }\n}\n```\n\n**Response:**\n\n```json\n {\n   \"data\": {\n     \"generateCustomerToken\": {\n       \"token\": \"hoyz7k697ubv5hcpq92yrtx39i7x10um\"\n     }\n   }\n }",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 27, "to": 52 } }
        }
      }
    ],
    [
      "643cd32b-ba68-4b21-accc-7cbda17871ff",
      {
        "pageContent": "```\n\nYou can now use this token in the Authorization request header field for any queries and mutations.\n\n![GraphQL Authorization Bearer](../../_images/graphql/graphql-authorization.png)\n\nYou can also [revoke the customer's token](../schema/customer/mutations/revoke-token.md) when the customer logs out or changes their password.\n\nThe [`generateCustomerTokenAsAdmin`](../schema/customer/mutations/generate-token-as-admin.md) mutation generates a new customer token as an admin so that an administrator can perform remote shopping assistance.\nThe customer must have enabled the `allow_remote_shopping_assistance` feature while creating the customer profile. The mutation requires the customer email address in the payload, as shown in the following example.\n\n**Request:**\n\n```graphql\nmutation{\n  generateCustomerTokenAsAdmin(input: {\n    customer_email: \"customer1@mail.com\"\n  }){\n    customer_token\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 53, "to": 73 } }
        }
      }
    ],
    [
      "b7c7295f-af8b-46b5-990f-4a03608cc921",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"generateCustomerTokenAsAdmin\": {\n      \"customer_token\": \"cr0717abzoagxty1xjn4lj13kim36r6x\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 74, "to": 86 } }
        }
      }
    ],
    [
      "58a12723-0384-44a7-b9d8-5d629d83aa63",
      {
        "pageContent": "### Admin tokens\n\nIn Adobe Commerce and Magento Open Source GraphQL, you specify an admin token only if you need to query products, categories, price rules, or other entities that are scheduled to be in a campaign (staged content). Staging is supported in Adobe Commerce only. See [Staging queries](staging-queries.md) for more information.\n\nAdobe Commerce and Magento Open Source do not provide a GraphQL mutation that generates an admin token. You must use a REST endpoint such as `POST /V1/tfa/provider/google/authenticate` instead. [Generate the admin token](https://developer.adobe.com/commerce/webapi/rest/tutorials/prerequisite-tasks/) shows how to use this endpoint.\n\nBy default, an admin token is valid for 4 hours. You can change these values from Admin by selecting **Stores** > **Settings** > **Configuration** > **Services** > **OAuth** > **Access Token Expiration** > **Admin Token Lifetime**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 88, "to": 94 } }
        }
      }
    ],
    [
      "ab85c6b7-f32f-43bd-90cb-576117b00cb8",
      {
        "pageContent": "## Session cookies\n\nThe client's browser will use a session cookie if the server provides one. Prior to version 2.4.5, Commerce automatically generated session cookies even if an authorization token was specified.\n\nBrowser-based applications that make GraphQL calls can continue implementing these cookies without changing the default setting. If you use cookies, avoid specifying Authorization headers to prevent problems caused by using two different authorization methods.\n\nAdobe recommends that you do not use session cookies when developing a Commerce-based application. If you adhere to this best practice, you should configure GraphQL so that the server doesn't generate them. Disabling cookies also prevents system file locks and race conditions on server resources. These problems cause slower HTTP GET request throughputs under peak traffic conditions.\n\nRun the following command to disable session cookies for GraphQL:\n\n`bin/magento config:set graphql/session/disable 1`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 96, "to": 106 } }
        }
      }
    ],
    [
      "6aee18ac-5fb3-4a64-b14c-08d70de2e6b1",
      {
        "pageContent": "To re-enable these cookies, run:\n\n`bin/magento config:set graphql/session/disable 0`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/authorization-tokens.md",
          "loc": { "lines": { "from": 108, "to": 110 } }
        }
      }
    ],
    [
      "546c7caa-8015-44a1-81aa-5d7355621736",
      {
        "pageContent": "---\ntitle: GraphQL caching\ndescription: Learn how to use request headers and third-party services to enable caching for queries.\nkeywords:\n  - Cache\n  - GraphQL\n---\n\nimport Queries246 from '/src/_includes/graphql/cache/queries-246.md'\nimport Queries247 from '/src/_includes/graphql/cache/queries-247beta.md'\n\n# GraphQL caching\n\nAdobe Commerce and Magento Open Source can cache pages rendered from the results of certain GraphQL queries with [full-page caching](https://developer.adobe.com/commerce/php/development/cache/page/). Full-page caching improves response time and reduces the load on the server. Without caching, each page might need to run blocks of code and retrieve large amounts of information from the database. Only queries submitted with an HTTP GET operation can be cached. POST queries cannot be cached.\n\nThe GraphQL schema is cached in the Configuration cache, which can be refreshed from the Cache Management page (**System** > **Tools** > **Cache Management**).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "ca29caa1-c78c-4e9b-840a-46a70ef78a0e",
      {
        "pageContent": "## Cached and uncached queries\n\nThe definitions for some queries include cache tags. Full page caching uses these tags to keep track of cached content. They also allow public content to be invalidated. Private content invalidation is handled on the client side.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nGraphQL allows you to make multiple queries in a single call. If you specify any uncached query, the system bypasses the cache for all queries in the call.\n\n<TabsBlock orientation=\"horizontal\" slots=\"heading, content\" repeat=\"2\" theme=\"light\"/>\n\n### 2.4.6\n\n<Queries246 />\n\n### 2.4.7-beta\n\n<Queries247 />\n\n[Define the GraphQL schema for a module](../develop/index.md) describes the syntax of a valid query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 18, "to": 36 } }
        }
      }
    ],
    [
      "7d3fbede-8fe6-41a6-ad2e-16302e0ac47b",
      {
        "pageContent": "## Caching for logged-in customers\n\nIn general, guest shoppers see the same products, categories, and prices. Guest queries are easy to cache because content can be cached based on the URL and query alone. However, once the guest logs in as a customer, factors such their customer group or status as a B2B merchant can significantly affect what they see on the storefront.\n\nTo enable caching for logged-in customers, Magento Open Source 2.4.4 introduces the `X-Magento-Cache-Id` response header. This header is returned with every GraphQL GET and POST request. Its value is an SHA hash comprised of several factors that are specific to the customer's context. The following values are concatenated prior to being hashed:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 38, "to": 42 } }
        }
      }
    ],
    [
      "b1f0e075-c46c-4048-827a-c97dc339aa56",
      {
        "pageContent": "*  The store ID\n*  The currency code of the store, such as USD or EUR\n*  A Boolean value indicating whether the customer is logged in (true or false)\n*  The customer's group ID\n*  The customer's tax rate, expressed as a percentage, such as 0.0875\n*  A salt value generated the first time any GraphQL request cache status is `Miss`\n\nThe resultant hash is calculated as follows:\n\n```php\nSHA256(Store ID + Currency + Is-Logged-In + Customer group + Customer tax rate + Salt value)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 44, "to": 54 } }
        }
      }
    ],
    [
      "bedcad44-cfdd-4b8c-ad58-567c5876cfcf",
      {
        "pageContent": "```\n\nThe application caches the results of all applicable queries. If you specify the resultant hash as the input value for the `X-Magento-Cache-Id` header of a GraphQL request, then the cached results can be loaded. Although POST requests are not cached, the resultant hashed value provide more opportunities to obtain updated cache IDs.\n\nTo define additional factors for computing `X-Magento-Cache-Id` hash values, add a section similar to the following to the [di.xml file](https://developer.adobe.com/commerce/php/development/build/dependency-injection-file/) of a custom module. The `argument name` must be set to `idFactorProviders`, with the additional attribute names assigned as `item names`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 55, "to": 59 } }
        }
      }
    ],
    [
      "f118a5fc-8c68-4df8-bbbb-a15ffec75ec8",
      {
        "pageContent": "```xml\n<type name=\"Magento\\GraphQlCache\\Model\\CacheId\\CacheIdCalculator\">\n    <arguments>\n        <argument name=\"idFactorProviders\" xsi:type=\"array\">\n            <item name=\"currency\" xsi:type=\"object\">Magento\\StoreGraphQl\\CacheIdFactorProviders\\CurrencyProvider</item>\n            <item name=\"store\" xsi:type=\"object\">Magento\\StoreGraphQl\\CacheIdFactorProviders\\StoreProvider</item>\n        </argument>\n    </arguments>\n</type>",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 61, "to": 69 } }
        }
      }
    ],
    [
      "921e85f9-10de-42db-b764-1648d9afeb93",
      {
        "pageContent": "```\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nThe `X-Magento-Cache-Id` response header is only compatible with Varnish or Fastly.  It cannot be reliably used with built-in Full Page Cache.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nAdding factors could generate too many unique cache keys, thereby reducing the number of caching hits and affecting performance.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 70, "to": 78 } }
        }
      }
    ],
    [
      "e748637b-dd82-48a1-8cec-100d220645d6",
      {
        "pageContent": "## Caching with Varnish\n\nFor on-premise installations, we recommend setting up Varnish as a reverse proxy to serve the full page cache in a production environment. The template `vcl` file that ships with each release configures support for GraphQL caching. We recommend that you review the template file each release to determine whether you need to update the `default.vcl` on your system. To view the contents of the latest template file, you can [download a template file from the Admin](https://docs.magento.com/user-guide/system/cache-full-page.html) or review the `app/code/Magento/PageCache/etc/varnish6.vcl` file in the code base.\n\nSee [Configure and use Varnish](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cache/varnish/config-varnish.html) and [Configure Varnish and your web server](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cache/config-varnish-server.html) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 80, "to": 84 } }
        }
      }
    ],
    [
      "53e95d14-85c4-40bc-a049-52d1433cd7d8",
      {
        "pageContent": "## Caching with Fastly\n\nTo cache guest and customer GraphQL query results on Adobe Commerce on cloud infrastructure, the Cloud project must be running the Fastly CDN module for Adobe Commerce and Magento Open Source version 1.2.160 or later.\n\nTo enable GraphQL caching on Fastly:\n\n1. Upgrade the Fastly CDN Module for Adobe Commerce and Magento Open Source 2.x to version 1.2.160 or later.\n1. Upload the updated VCL code to the Fastly servers.\n\n[Set up Fastly](https://devdocs.magento.com/cloud/cdn/configure-fastly.html) describes how to perform both of these tasks.\n\nBy default, the Fastly module for Adobe Commerce and Magento Open Source provides the following VCL configuration for caching guest queries:\n\n```text\nif (req.request == \"GET\" && req.url.path ~ \"/graphql\" && req.url.qs ~ \"query=\") {\n....",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 86, "to": 101 } }
        }
      }
    ],
    [
      "1982d0de-8336-4160-b873-a0607bb80c34",
      {
        "pageContent": "```\n\nFastly will only cache GET requests that contain a query parameter in the request URL.\n\nFor logged-in customer requests, the `Authorization Bearer` token is always present. If the `X-Magento-Cache-Id` header is also present, then any cookie headers will be ignored in favor of the value in `X-Magento-Cache-Id`.\n\n```text\nif (req.http.graphql && !req.http.X-Magento-Cache-Id && req.http.Authorization ~ \"^Bearer\" ) {\n....\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 102, "to": 111 } }
        }
      }
    ],
    [
      "67ae858b-2041-4489-a318-440a5a0cd579",
      {
        "pageContent": "### Example\n\n```text\nhttp://example.com/graphql?query={ products(filter: {sku: {eq: \"Test\"}}) { items { name } } }&variables={}\n....\n```\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nIf you call GraphQL queries in the query body rather than the url (for example, as `--data-raw '{\"query\" .... }'`), the request is not cached.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 113, "to": 122 } }
        }
      }
    ],
    [
      "f02d1b3b-cd22-4c73-9089-cc0bed4efa5c",
      {
        "pageContent": "## X-Magento-Vary cache cookie\n\nThe `X-Magento-Vary` cache cookie is not supported for GraphQL. The `Store` and `Content-Currency`  headers, along with the content language (which is deduced) determine the context.\n\n## Response headers\n\nIn developer mode, the application returns several headers that could be useful for debugging caching problems. These headers are not specific to GraphQL.\n\nHeader | Description\n--- |---\n`X-Magento-Cache-Debug` | HIT (the page was loaded from cache) or MISS (the page was not loaded from cache.\n`X-Magento-Tags` | A list of cache tags that correspond to the catalog, category, or CMS items returned in the query. The application caches these items.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 124, "to": 135 } }
        }
      }
    ],
    [
      "99d6e8dc-e6c6-4fb9-b15a-3636768a928b",
      {
        "pageContent": "## Cache invalidation\n\nThe application invalidates the cache when any of the following events occur:\n\n*  A change occurs to a specific entity or entities in aggregate. An increase in a product's price is a direct and obvious change. Applying a new tax class tax to products changes a set of products in aggregate.\n*  The `Preview-Version` header is specified in a query that supports caching.\n*  The system configuration changes.\n*  An administrator flushes or disables the cache from the Admin or with the `bin/magento cache` command.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/caching.md",
          "loc": { "lines": { "from": 137, "to": 144 } }
        }
      }
    ],
    [
      "3de59a58-da42-4e9c-923a-eb7a3b37047e",
      {
        "pageContent": "---\ntitle: Filtering with custom attributes\ndescription: Learn how to retrieve default and custom attributes with the products query.\nkeywords:\n  - GraphQL\n---\n\n# Filtering with custom attributes\n\nAs of 2.3.4, the `filter` attribute of the [`products`](../schema/products/queries/products.md) query accepts the `ProductAttributeFilterInput` object. (In previous versions, the `filter` attribute required a `ProductFilterInput` object. This object contained a hard-coded list of filterable attributes, and you could not filter on a custom attribute or any other attribute that was not on the list.)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "aba5b898-4250-497d-87fb-3fe5794291e9",
      {
        "pageContent": "## Prerequisites\n\nYou have several options when enabling a custom attribute (or any attribute that is not listed by default in the `ProductAttributeFilterInput` object) for filtering. Navigate to the attribute's **Storefront Properties** page (**Stores** > Attributes > **Product** > &lt;attribute name&gt; > **Storefront Properties**) in the Admin, then perform one or both of the following actions:\n\n-  Set the **Use in Layered Navigation** field to **Filterable (with results)** or **Filterable (no results)**. This field allows the attribute to be used as a filter and returns layered navigation and aggregation data. If this field is set to **No**, then the attribute will not return layered navigation and aggregation data.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 12, "to": 16 } }
        }
      }
    ],
    [
      "79bbdd2b-f626-425e-b0ae-a8c6713732cd",
      {
        "pageContent": "-  Set the **Use in Search** and **Visible in Advanced Search** fields to **Yes**. These fields primarily allow the application index the attribute's contents, making the data available for quick and advanced searches. Setting both these fields also allows the attribute to be used as a filter. These fields do not configure the presence or absence of layered navigation and aggregation data. If you set only one of these fields to **Yes**, the attribute cannot be used as a filter (unless you set the **Use in Layered Navigation** field to a value other than **No**).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 18, "to": 18 } }
        }
      }
    ],
    [
      "4555b743-c946-4638-8a72-7ac8bff86a9c",
      {
        "pageContent": "## Define the filter for your query\n\nThe `filter` definition for your custom attribute requires one of the following input data types:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 20, "to": 22 } }
        }
      }
    ],
    [
      "38d1b734-ce20-4d72-a6a8-b31aa4f3d6dd",
      {
        "pageContent": "-  `FilterEqualTypeInput` - Specify this data type when the **Catalog Input Type for Store Owner** field for your custom attribute is set to Yes/No, Select, or Multiple select. Your filter can contain the `eq` or `in` attribute. Use the `eq` attribute to exactly match the specified string. Use the `in` attribute to filter on a comma-separated list of values.\n-  `FilterMatchTypeInput` - Specify this data type when the **Catalog Input Type for Store Owner** field for your custom attribute is set to Text Field or Text Area. Your filter must contain the `match` attribute, which will return all items that partially fuzzy match the specified string.\n-  `FilterRangeTypeInput` - Specify this data type when the **Catalog Input Type for Store Owner** field for your custom attribute is set to Price or Date. Your filter can contain one or both of the `to` and `from` attributes, which serve to provide a range of values to filter on.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 24, "to": 26 } }
        }
      }
    ],
    [
      "1b7a22a7-31f4-49e6-81ad-ee0ef3d7813a",
      {
        "pageContent": "## Example\n\nIn this example, the custom attribute `volume` was assigned to the `bags` attribute group. Running the [`customAttributeMetadata` query](../schema/attributes/queries/custom-attribute-metadata.md) on this custom attribute reveals that the `label` and `value` values for the attribute's options are as follows:\n\n**Request:**\n\n```graphql\n{\n  customAttributeMetadata(\n    attributes: [\n      {\n        attribute_code: \"volume\"\n        entity_type: \"catalog_product\"\n      }\n    ]\n  ) {\n    items {\n      attribute_code\n      attribute_type\n      entity_type\n      input_type\n      attribute_options {\n       value\n       label\n     }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 28, "to": 55 } }
        }
      }
    ],
    [
      "d0a66252-7db5-4edd-a43f-e1a0bbceefe6",
      {
        "pageContent": "```\n\n**Response:**\n\n```graphql\n{\n  \"data\": {\n    \"customAttributeMetadata\": {\n      \"items\": [\n        {\n          \"attribute_code\": \"volume\",\n          \"attribute_type\": \"Int\",\n          \"entity_type\": \"catalog_product\",\n          \"input_type\": \"select\",\n          \"attribute_options\": [\n            {\n              \"value\": \"216\",\n              \"label\": \"Large\"\n            },\n            {\n              \"value\": \"217\",\n              \"label\": \"Medium\"\n            },\n            {\n              \"value\": \"218\",\n              \"label\": \"Small\"\n            }\n          ]\n        }\n      ]\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 56, "to": 88 } }
        }
      }
    ],
    [
      "ac96e398-a298-455c-ba20-be1bc5a9502d",
      {
        "pageContent": "```\n\n`label` | `value`\n--- | ---\n`Large` | `216`\n`Medium` | `217`\n`Small` | `218`\n\nIn this scenario, a [`products`](../schema/products/queries/products.md) search filtered to return items where the `volume` attribute is set to `Large` would be similar to the following:\n\n**Request:**\n\n```graphql\n{\n  products(filter: { volume: { eq: \"216\" } }) {\n    total_count\n    items {\n      name\n      sku\n    }\n  }\n}\n```\n\n**Response:**\n\nThe response might be similar to the following:\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"total_count\": 1,\n      \"items\": [\n        {\n          \"name\": \"Wayfarer Messenger Bag\",\n          \"sku\": \"24-MB05\"\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 89, "to": 131 } }
        }
      }
    ],
    [
      "f6f243bc-b3ee-489a-8707-5c7d3ee15b6d",
      {
        "pageContent": "## Output attributes\n\nWhen a product requires a filter attribute that is not a field on its output schema, inject the attribute name into the class in a module's `di.xml` file.\n\n```xml\n<type name=\"Magento\\CatalogGraphQl\\Model\\Resolver\\Products\\FilterArgument\\ProductEntityAttributesForAst\" >\n  <arguments>\n    <argument name=\"additionalAttributes\" xsi:type=\"array\">\n      <item name=\"field_to_sort\" xsi:type=\"string\">field</item>\n      <item name=\"other_field_to_sort\" xsi:type=\"string\">other_field</item>\n    </argument>\n  </arguments>\n</type>\n```\n\nThis example adds `field_to_sort` and `other_field_to_sort` attributes to the `additionalAttributes` array defined in the `ProductEntityAttributesForAst` class. The array already contains the `min_price`, `max_price`, and `category_ids` attributes.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/custom-filters.md",
          "loc": { "lines": { "from": 133, "to": 148 } }
        }
      }
    ],
    [
      "855e89d3-9038-45a7-ad3d-29916d708083",
      {
        "pageContent": "---\ntitle: GraphQL headers\ndescription: Learn about the headers that Adobe Commerce accepts and how to specify them.\nkeywords:\n  - GraphQL\n---\n\n# GraphQL headers\n\nAdobe Commerce and Magento Open Source GraphQL supports the HTTP GET and POST methods. You can send a query as a GET or POST request. Mutations must be POST requests. You can optionally send a GET query request in a URL. In these requests, you must specify `query` as the query string. You might need to encode the query, as shown below:\n\n`http://<host>/graphql?query=%7Bproducts(filter%3A%7Bsku%3A%7Beq%3A%2224-WB01%22%7D%7D)%7Bitems%7Bname%20sku%7D%7D%7D`\n\nThe previous example is equivalent to the following query. You could send the query as either a GET or POST request.\n\n**Request:**\n\n```graphql\n{\n  products(\n    filter: { sku: { eq: \"24-WB01\" } }\n  ) {\n    items {\n      name\n      sku\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/headers.md",
          "loc": { "lines": { "from": 1, "to": 28 } }
        }
      }
    ],
    [
      "ebb3f8fa-30fb-4212-b847-3e0abd0f0002",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"name\": \"Voyage Yoga Bag\",\n          \"sku\": \"24-WB01\"\n        }\n      ]\n    }\n  }\n}\n```\n\nSome queries sent as a GET request can be cached. See [GraphQL caching](../usage/caching.md) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/headers.md",
          "loc": { "lines": { "from": 29, "to": 48 } }
        }
      }
    ],
    [
      "6c6b3840-1b2e-41e1-9c77-4b2ed3584c01",
      {
        "pageContent": "## Request headers\n\nThe application accepts the following headers in a GraphQL request:",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/headers.md",
          "loc": { "lines": { "from": 50, "to": 52 } }
        }
      }
    ],
    [
      "f7aa9887-2449-4b2c-8435-2148d8d38924",
      {
        "pageContent": "Header name | Value | Description\n--- | --- | ---\n`Authorization` | `Bearer <authorization_token>` | A customer or admin token. [Authorization tokens](authorization-tokens.md) describes how to generate tokens.\n`Content-Currency` | A valid currency code, such as `USD` | This header is required only if the currency is not the store view's default currency.\n`Content-Type` | `application/json` | Required for all requests.\n`Preview-Version` | A timestamp (seconds since January 1, 1970). | Use this header to query products, categories, price rules, and other entities that are scheduled to be in a campaign (staged content). Staging is supported in Adobe Commerce only.\n`Store` | `<store_view_code>` | The store view code on which to perform the request. The value can be `default` or the code that is defined when a store view is created.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/headers.md",
          "loc": { "lines": { "from": 54, "to": 60 } }
        }
      }
    ],
    [
      "d78f2a88-102d-4eeb-8001-00a1a241ccbe",
      {
        "pageContent": "`X-Captcha` | Shopper-entered CAPTCHA value | Required when a shopper enters a CAPTCHA value on the frontend, unless an integration token is provided. Forms requiring CAPTCHA values are configured at **Stores** > **Configuration** > **Customers** > **Customer Configuration** > **CAPTCHA** > **Forms**.\n`X-Magento-Cache-Id` | A Secure Hash Algorithm value. | Used for logged-in customers only. It is a hash value that identifies a customer based on factors such as the store ID, the store's currency code, whether the customer is logged in, the customer group, and the tax rate. The cache ID provides a way to serve cached query results to customers that share the same identifying factors. [Caching for logged-in customers](../usage/caching.md#caching-for-logged-in-customers) provides additional information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/headers.md",
          "loc": { "lines": { "from": 61, "to": 62 } }
        }
      }
    ],
    [
      "122c0fd2-4316-40ce-8d09-3a2ab5db24f7",
      {
        "pageContent": "`X-ReCaptcha` | A value generated by the Google reCAPTCHA API. It is required when reCAPTCHA is enabled for certain forms, unless an integration token is provided. Forms requiring reCAPTCHA values are configured at **Stores** > **Security** > **Google reCAPTCHA Storefront** > **Storefront**. | String",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/headers.md",
          "loc": { "lines": { "from": 63, "to": 63 } }
        }
      }
    ],
    [
      "9fbc7916-d3fa-4ce9-9e82-dbea1cc54774",
      {
        "pageContent": "### Specify request headers in a GraphQL browser\n\nGraphQL browsers, such as GraphiQL, allow you to enter a set of header name/value pairs. The following example shows an example customer authorization token and content type headers.\n\n![GraphiQL Authorization Bearer](../../_images/graphql/graphql-authorization.png)\n\n### Specify request headers with the `curl` command\n\nUse the curl command with a separate `-H` argument to specify each request header. The following example uses the same request headers as those used in the GraphQL browser.\n\n```bash\ncurl 'http://magento.config/graphql' -H 'Authorization: Bearer hoyz7k697ubv5hcpq92yrtx39i7x10um' -H 'Content-Type: application/json'  --data-binary '{\"query\":\"query {\\n  customer {\\n    firstname\\n    lastname\\n    email\\n  }\\n}\"}'\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/headers.md",
          "loc": { "lines": { "from": 65, "to": 77 } }
        }
      }
    ],
    [
      "593fd6a9-8ffe-4f64-9fc2-3dc1a24be862",
      {
        "pageContent": "---\ntitle: Run Graphql queries and mutations\ndescription: Learn about the structure of queries and mutations and how to use variables.\nkeywords:\n  - GraphQL\n---\n\n# Run Graphql queries and mutations",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 1, "to": 8 } }
        }
      }
    ],
    [
      "c75e52bf-b16b-41c1-acf9-e046d37310d8",
      {
        "pageContent": "## Queries\n\nA GraphQL query retrieves data from the application server in a similar manner as a REST GET call. The current set of Adobe Commerce and Magento Open Source GraphQL queries allow a mobile app or browser to render a wide variety of information, including the following:\n\n*  A set of products to be displayed. This can include the entire catalog or those that match customer-specified criteria.\n*  Customer data. With a customer token, a query can retrieve basic information about a customer as well as billing and shipping addresses, wish lists, order history, and other sensitive data.\n*  Shopping cart contents. GraphQL supports both guest and logged-in customer carts.\n*  Store configuration values, including theme and CMS settings, the currency code, and supported countries.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 10, "to": 17 } }
        }
      }
    ],
    [
      "5289064f-51e6-42e8-9a73-913b7a17e266",
      {
        "pageContent": "The REST GET endpoints retrieve a wide variety of information on behalf of the merchant. Many of these endpoints are for retrieving backend information. For example, the `GET /V1/customers/search` endpoint can be used to find a subset of customers that meet certain criteria, such as those that live in a particular state or have a birthday this month. Likewise, the `GET /V1/invoices` endpoint can return all the recently-generated invoices. This type of functionality is not required for the frontend, so it is not available in GraphQL queries. The queries are designed to improve the customer's user experience by quickly retrieving the data needed to render pages.\n\nOver time, the GraphQL queries will duplicate the functionality of all storefront-facing GET calls, while making it possible to query more data in one request. The main difference will be that GraphQL will support storefront use cases, while REST will support admin use cases.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 19, "to": 21 } }
        }
      }
    ],
    [
      "28cc6428-89ed-430d-a9e2-32255b42b68b",
      {
        "pageContent": "## Structure of a query\n\nA query contains the following elements:\n\n*  The optional keyword `query`. If no keyword is specified at the beginning of a request, the processor assumes the request is a query.\n*  An operation name for your local implementation. This name is required if you include variables. Otherwise, it is optional.\n*  The query name\n*  The terms to search for. The terms can be in the form of objects, attributes, or a combination. Queries that don't require search terms obtain their context from the customer's authorization token or store ID, both of which are specified in the header of the call.\n*  The output object, which specifies which data the query returns.\n\nThe following example shows the structure of the `cart` query:\n\n```graphql\nquery myCartQuery{\n  cart(cart_id: String!): Cart\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 23, "to": 38 } }
        }
      }
    ],
    [
      "40d29df5-01ef-43d6-a0d5-bf40ab94da7e",
      {
        "pageContent": "```\n\nIn the preceding example, `myCartQuery` identifies your implementation of the `cart` query. `cart_id` is a non-nullable string that defines the cart to query. (The exclamation point indicates the value is non-nullable.) The `Cart` output object defines which fields to return.\n\nNow let's fully define a query:\n\n```graphql\nquery myCartQuery{\n  cart(cart_id: \"1WxKm8WUm3uFKXLlHXezew5WREfVRPAn\") {\n    items {\n      id\n      quantity\n    }\n    billing_address {\n      firstname\n      lastname\n      postcode\n      }\n    shipping_addresses {\n      firstname\n      lastname\n      postcode\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 39, "to": 63 } }
        }
      }
    ],
    [
      "ea9101bf-693d-4411-bd2f-ad597f6a5c64",
      {
        "pageContent": "```\n\nIn this example, we've supplied a cart ID as input, (which was generated by the `createEmptyCart` mutation). The output includes the `cart_id` as well as selected information about the items in the cart and the billing and shipping addresses.\n\nThe following example shows the query response:\n\n```json\n{\n  \"data\": {\n    \"cart\": {\n      \"items\": [\n        {\n          \"id\": \"5\",\n          \"quantity\": 1\n        }\n      ],\n      \"billing_address\": {\n        \"firstname\": \"Veronica\",\n        \"lastname\": \"Costello\",\n        \"postcode\": \"49628-7978\"\n      },\n      \"shipping_addresses\": [\n        {\n          \"firstname\": \"Veronica\",\n          \"lastname\": \"Costello\",\n          \"postcode\": \"49628-7978\"\n        }\n      ]\n    }\n  }\n}\n```\n\n<InlineAlert variant=\"success\" slots=\"text\" />\n\nAdobe Commerce and Magento Open Source will not run a query that is too complex. The number of fields, objects, and nodes are factors in determining the complexity of a query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 64, "to": 99 } }
        }
      }
    ],
    [
      "1634a774-ba3e-4e0b-8e44-b99bce8a0b54",
      {
        "pageContent": "## Query variables\n\nSpecifying variables in a query can help increase code re-use. Consider the following requirements when generating a query that contains one or more variables:\n\n*  All variables must be declared up-front, immediately after the operation name.\n*  Variables are typed: they can be scalar or an object.\n*  You must use all declared variables. Object variables are defined in JSON.\n\nThe following example declares the `$cart_id` variable. It is referenced in the `input` statement.\n\n```graphql\nquery myCartQueryWithVariable($cart_id: String!) {\n  cart(cart_id: $cart_id) {\n    items {\n      id\n      quantity\n    }\n    billing_address {\n      firstname\n      lastname\n      postcode\n    }\n    shipping_addresses {\n      firstname\n      lastname\n      postcode\n    }\n  }\n}\n```\n\nVariables are defined separately in JSON:\n\n```json\n{\n  \"cart_id\": \"1WxKm8WUm3uFKXLlHXezew5WREfVRPAn\"\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 101, "to": 138 } }
        }
      }
    ],
    [
      "bcce2f51-d01c-4788-a149-f74f744c2b2d",
      {
        "pageContent": "## Mutations\n\nWhile GraphQL queries perform read operations, mutations change the data. A mutation can create, update, or delete objects and fields. In REST terminology, queries operate like `GET` requests, while mutations are similar to `POST`, `PUT`, and `DELETE`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 140, "to": 142 } }
        }
      }
    ],
    [
      "9b1da1d9-9951-4a77-9cd6-9c2e85d712b9",
      {
        "pageContent": "### Structure of a mutation\n\nA mutation contains the following elements:\n\n*  The keyword `mutation`\n*  An operation name for your local implementation. This name is required if you include variables. Otherwise, it is optional.\n*  The mutation name\n*  The input object or attributes. Most mutations require an input object that contains data or individual attributes for the application server to process. However, some mutations, such as `createEmptyCart`, do not require an input object. In this particular case, the authorization token passed with the request provides the needed context.\n*  The output object, which specifies which data the mutation returns.\n\nThe following example shows the structure of the `createCustomer` mutation:\n\n```graphql\nmutation myCreateCustomer {\n  createCustomer(\n    input: CustomerInput!\n  ) {\n    CustomerOutput\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 144, "to": 163 } }
        }
      }
    ],
    [
      "2fe11891-1124-4769-93e9-46259a13a7f5",
      {
        "pageContent": "```\n\nIn this example, `myCreateCustomer` identifies your implementation.  `CustomerInput` is a non-nullable object that defines a customer. (The exclamation point indicates the value is non-nullable.) The `CustomerOutput` object defines which fields to return.\n\nNow let's take a look at a fully-defined mutation. This time, we'll specify the minimum fields needed as input to create a customer (`firstname`, `lastname`, `email`, and `password`). We could include the same fields in the output, but GraphQL allows you to return only the data you need, which is the customer `email`.\n\n```graphql\nmutation myCreateCustomerNoVariables {\n  createCustomer(\n    input: {\n      firstname: \"Melanie\"\n      lastname: \"Shaw\"\n      email: \"mshaw@example.com\"\n      password: \"Password1\"\n    }\n  ) {\n    customer {\n      email\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 164, "to": 184 } }
        }
      }
    ],
    [
      "72b15d7e-802c-4288-89fa-2b634fd812cc",
      {
        "pageContent": "```\n\nThe mutation returns the customer email:\n\n```json\n{\n  \"data\": {\n    \"createCustomer\": {\n      \"customer\": {\n        \"email\" : \"mshaw@example.com\"\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 185, "to": 199 } }
        }
      }
    ],
    [
      "0d4cd233-fa73-4602-b346-32730d856a78",
      {
        "pageContent": "### Mutation input\n\nA mutation can require either an object as input (as shown above) or one or more scalar values. When specifying an object, you must include the `input: {}` keyword. When the mutation requires scalar values, specify the field name and value, as shown below:\n\n```graphql\nmutation myGenerateCustomerToken {\n  generateCustomerToken(\n    email: \"mshaw@example.com\"\n    password: \"Password1\"\n  ) {\n    token\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 201, "to": 214 } }
        }
      }
    ],
    [
      "c368928a-0ac0-41ad-b0ef-44c8c0aa9c86",
      {
        "pageContent": "### Mutation variables\n\nSpecifying variables in a mutation can help increase code re-use. Consider the following requirements when generating a mutation that contains one or more variables:\n\n*  All variables must be declared up-front, immediately after the operation name.\n*  Variables are typed: they can be scalar or an object.\n*  You must use all declared variables. Object variables are defined in JSON.\n\nThe following example declares the `$CustomerInput` variable. It is referenced in the `input` statement.\n\n```graphql\nmutation myCreateCustomerWithVariables($CustomerInput: CustomerInput!) {\n  createCustomer(\n    input: $CustomerInput\n  ) {\n    customer {\n      email\n    }\n  }\n}\n```\n\nThe `$CustomerInput` variable is defined as a JSON object:\n\n```json\n{\n  \"CustomerInput\": {\n    \"firstname\": \"Melanie\",\n    \"lastname\": \"Shaw\",\n    \"email\": \"mshaw@example.com\",\n    \"password\": \"Password1\"\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 216, "to": 248 } }
        }
      }
    ],
    [
      "e70fefea-1623-41fc-bc78-d3fbb6684982",
      {
        "pageContent": "```\n\nThis example updates the customer's email using two scalar variables (`$email`, `$password`).\n\n```graphql\nmutation myUpdateCustomer($email: String!, $password: String!) {\n  updateCustomer(\n    input: {\n      email: $email\n      password: $password\n    }\n  ) {\n    customer {\n      email\n    }\n  }\n}\n```\n\nThe variables are defined separately.\n\n```json\n{\n  \"email\": \"melanie.shaw@example.com\",\n  \"password\": \"Password1\"\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 249, "to": 275 } }
        }
      }
    ],
    [
      "24be663b-df6f-42db-9fea-46083383878c",
      {
        "pageContent": "## Timestamps\n\nCommerce stores timestamps as UTC (Coordinated Universal time) values and returns timestamp fields in query or mutation responses in this format. You must implement custom code to convert the timestamps to other values.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/index.md",
          "loc": { "lines": { "from": 277, "to": 279 } }
        }
      }
    ],
    [
      "f6b9c6d4-495e-4c28-8c1e-a4554b699653",
      {
        "pageContent": "---\ntitle: GraphQL introspection queries\ndescription: Learn how to view details about specific data types.\nkeywords:\n  - GraphQL\n---\n\n# Introspection queries\n\nIntrospection queries allow you to return information about the schema. For example, you might want a list of GraphQL queries or details about a specific data type. The GraphQL specification determines the structure of introspection queries. See [Introspection](https://graphql.org/learn/introspection/) for more information.\n\nAn introspection query returns the same result whether or not you assign it an operation name, such as `IntrospectionQuery`.\n\n## Disable introspection querying\n\nIntrospection querying is enabled by default. To disable it in production mode to improve security, add the following to your `app/etc/env.php` file.\n\n```php\n'graphql' => [\n    'disable_introspection' => true,\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/introspection-queries.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "99d1c18b-4c37-485d-953b-98a71e711c88",
      {
        "pageContent": "## Example introspection queries\n\n### Return a list of queries\n\nThe following query returns a list of queries.\n\n**Request:**\n\n```graphql\nquery IntrospectionQuery {\n  __schema {\n    queryType {\n      fields {\n        name\n        description\n        type{\n         name\n         kind\n        }\n      }\n    }\n  }\n}\n```\n\n### Return a list of mutations\n\nThe following query returns a list of mutations.\n\n**Request:**\n\n```graphql\nquery IntrospectionQuery {\n  __schema {\n    mutationType {\n      fields {\n        name\n        description\n        type{\n         name\n         kind\n        }\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/introspection-queries.md",
          "loc": { "lines": { "from": 24, "to": 70 } }
        }
      }
    ],
    [
      "52004186-2694-4984-aaa8-300a13b4f5ef",
      {
        "pageContent": "### Get details about a data type\n\nThe following introspection query returns details about the `ProductAttributeFilterInput` data type.\n\n**Request:**\n\n```graphql\nquery IntrospectionQuery {\n  __type(name: \"ProductAttributeFilterInput\") {\n    name\n    kind\n    description\n    inputFields {\n      name\n      description\n      defaultValue\n    }\n    fields {\n      name\n      args {\n        name\n        description\n        type {\n          kind\n          name\n        }\n      }\n      type {\n        kind\n        name\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/introspection-queries.md",
          "loc": { "lines": { "from": 72, "to": 105 } }
        }
      }
    ],
    [
      "5e9ee03e-2004-4ec3-b950-7d6a86cc1dc2",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/introspection-queries.md",
          "loc": { "lines": { "from": 106, "to": 108 } }
        }
      }
    ],
    [
      "a2fed63e-1d32-4765-a020-f908c6e688cd",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"__type\": {\n      \"name\": \"ProductAttributeFilterInput\",\n      \"kind\": \"INPUT_OBJECT\",\n      \"description\": \"ProductAttributeFilterInput defines the filters to be used in the search. A filter contains at least one attribute, a comparison operator, and the value that is being searched for.\",\n      \"inputFields\": [\n        {\n          \"name\": \"category_id\",\n          \"description\": \"Filter product by category id\",\n          \"defaultValue\": null\n        },\n        {\n          \"name\": \"description\",\n          \"description\": \"Attribute label: Description\",\n          \"defaultValue\": null\n        },\n        {\n          \"name\": \"name\",\n          \"description\": \"Attribute label: Product Name\",\n          \"defaultValue\": null\n        },\n        {\n          \"name\": \"price\",\n          \"description\": \"Attribute label: Price\",\n          \"defaultValue\": null\n        },\n        {\n          \"name\": \"short_description\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/introspection-queries.md",
          "loc": { "lines": { "from": 110, "to": 139 } }
        }
      }
    ],
    [
      "1d4cbb64-9abe-4c0c-863c-2584f5f95784",
      {
        "pageContent": "\"description\": \"Attribute label: Short Description\",\n          \"defaultValue\": null\n        },\n        {\n          \"name\": \"sku\",\n          \"description\": \"Attribute label: SKU\",\n          \"defaultValue\": null\n        },\n        {\n          \"name\": \"url_key\",\n          \"description\": \"The part of the URL that identifies the product\",\n          \"defaultValue\": null\n        }\n      ],\n      \"fields\": null\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/introspection-queries.md",
          "loc": { "lines": { "from": 140, "to": 158 } }
        }
      }
    ],
    [
      "a56671fc-1c72-4dc6-980a-4973eb4576fb",
      {
        "pageContent": "---\ntitle: Protected mutations\ndescription: Learn how to use CAPTCHA and reCAPTCHA to protect GraphQL mutations.\nkeywords:\n  - GraphQL\n  - Security\n---\n\n# Protected mutations\n\nIf CAPTCHA or reCAPTCHA is enabled on pages requiring shopper input, then in most cases, the corresponding mutations that send requests to the application server must include an HTTP header that contains a value entered by the shopper (for CAPTCHA) or generated by the Google API (for reCAPTCHA). However, if you specify an integration authorization token in the header of the mutation, then you do not supply a header specific to CAPTCHA or reCAPTCHA.\n\nThe HTTP `X-Captcha` and `X-ReCaptcha` headers:\n\n*  Cannot be received by an automated script or a non-UI API call. They are captured and returned by the UI Web form only.\n*  Are optional in protected mutation API calls that provide **_integration authorization_** tokens only. They cannot be skipped when you provide an Admin or Bearer token.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/protected-mutations.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "ad9466a9-ca63-4611-9d08-fc335619389d",
      {
        "pageContent": "## CAPTCHA\n\nThe following table lists the forms that can be configured to require CAPTCHA. Go to **Stores** > **Configuration** > **Customers** > **Customer Configuration** > **CAPTCHA** > **Forms** to enable or disable CAPTCHA on these forms.\n\nThe mutation that corresponds to a CAPTCHA-enabled form must include the HTTP `X-Captcha` header, along with the text the shopper entered in response to the CAPTCHA challenge.\n\nForm name | Mutation\n--- | ---\nAdd Gift Card Code | `applyGiftCardToCart`\nApplying Coupon Code | `applyCouponToCart`\nChange password | `changeCustomerPassword`\nCheckout/Placing Order | `setPaymentMethodOnCart`, `setPaymentMethodAndPlaceOrder`\nContact Us | Not applicable\nCreate company | Not applicable\nCreate user | `createCustomer`\nForgot password | Not applicable\nLogin | `generateCustomerToken`\nPayflow Pro |  `setPaymentMethodOnCart`, `setPaymentMethodAndPlaceOrder`\nSend to Friend Form | `sendEmailToFriend`\nShare Wishlist Form | Not applicable",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/protected-mutations.md",
          "loc": { "lines": { "from": 18, "to": 37 } }
        }
      }
    ],
    [
      "d3b59c0d-2400-44a4-b77f-ac35960e4f03",
      {
        "pageContent": "## reCAPTCHA\n\nThe following table lists the forms that can be configured to require reCAPTCHA. Go to **Stores** > **Configuration** > **Security** > **Google reCAPTCHA Storefront** > **Storefront** to enable or disable reCAPTCHA on these forms. If reCAPTCHA is enabled, unless an integration token is provided, always specify the HTTP `X-ReCaptcha` header and the value generated by the Google API.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/protected-mutations.md",
          "loc": { "lines": { "from": 39, "to": 41 } }
        }
      }
    ],
    [
      "a5b53c09-4bac-417b-a6c8-5fa2ca277019",
      {
        "pageContent": "Field name | Mutation\n--- | ---\nEnable for Customer Login | `generateCustomerToken`\nEnable for Forgot Password | `changeCustomerPassword`\nEnable for Create New Customer Account | `createCustomer`, `createCustomerV2`\nEnable for Edit Customer Account | `updateCustomer`, `updateCustomerV2`\nEnable for Contact Us | Not applicable\nEnable for Product Review | `createProductReview`\nEnable for Newsletter Subscription | `subscribeEmailToNewsletter`\nEnable for Send To Friend | `sendEmailToFriend`\nEnable for PayPal PayflowPro payment form | `createPayflowProToken`\nEnable for Braintree payment form | Not applicable\nEnable for Checkout/Placing Order | `setPaymentMethodOnCart`, `setPaymentMethodAndPlaceOrder`\nEnable for Coupon Codes | `applyCouponToCart`",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/protected-mutations.md",
          "loc": { "lines": { "from": 43, "to": 56 } }
        }
      }
    ],
    [
      "f5d0a32b-75ff-4a25-93af-0bd7e9c643c7",
      {
        "pageContent": "## Related topics\n\n[Construct a request](../../get-started/gs-web-api-request.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/protected-mutations.md",
          "loc": { "lines": { "from": 58, "to": 60 } }
        }
      }
    ],
    [
      "b66c935d-7653-4f93-9237-2092a174ca88",
      {
        "pageContent": "---\ntitle: GraphQL security configuration\ndescription: Learn how to customize default security values.\nkeywords:\n  - GraphQL\n  - Security\n---\n\n# GraphQL security configuration\n\nThe Framework and `GraphQl` module `di.xml` files define several security-related configuration values that you should review to ensure they align with types of mutations and queries that you run.\n\nTo override these default values, create a custom module and provide a new value in the appropriate [di.xml](https://developer.adobe.com/commerce/php/development/build/dependency-injection-file/) file.\n\n## Input limiting\n\nIn GraphQL, you can limit the maximum page size allowed. For information about how to enable and configure this feature, as well as additional arguments that are applicable to web APIs in general, see [API security](../../get-started/api-security.md).",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/security-configuration.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "33e564e1-07e4-402d-9ca3-18eab613e52c",
      {
        "pageContent": "## GraphQl module configuration\n\nThe `GraphQl/etc/di.xml` file contains two arguments that can be overridden to enhance security and prevent performance bottlenecks:\n\nAttribute | Default value | Description\n--- | --- | ---\n`queryComplexity` | 300 | Defines the maximum number of fields, objects, and fragments that a query can contain.\n`queryDepth` | 20 | Defines the maximum depth of nodes that query can return.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/security-configuration.md",
          "loc": { "lines": { "from": 19, "to": 26 } }
        }
      }
    ],
    [
      "0bafcd3b-546b-4b2a-93f9-a53742ed058a",
      {
        "pageContent": "### Query complexity\n\nA complex GraphQL query, such as the [`cart`](../schema/cart/queries/cart.md) or [`products`](../schema/products/queries/products.md) query, can potentially generate a heavy workload on the server. Complex queries can potentially be used to create distributed denial of service (DDoS) attacks by overloading the server with specious requests.\n\nEach instance of the following items adds 1 to the complexity score:\n\n*  A field and parent field in the body of the query.\n*  A field in an inline fragment.\n*  A field in a fragment spread. If a fragment spread is used multiple times, each field within is counted that number of times.\n\nThe following items do not count toward the complexity score:\n\n*  The root `query` field\n*  Fragment declarations\n*  Fragment spread declarations\n\nThe following sample query contains all of the items listed above.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/security-configuration.md",
          "loc": { "lines": { "from": 28, "to": 44 } }
        }
      }
    ],
    [
      "e5b9af0f-2720-46c9-9a63-034d706c1242",
      {
        "pageContent": "```graphql\nquery {\n  countries {\n    full_name_english\n    name1: full_name_english\n    ...on Country {\n        two_letter_abbreviation\n    }\n    ...myFrag\n    ...myFrag\n  }\n}\nfragment myFrag on Country {\n    three_letter_abbreviation\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/security-configuration.md",
          "loc": { "lines": { "from": 46, "to": 60 } }
        }
      }
    ],
    [
      "45993973-a6b0-430a-a07e-a78e14407fbd",
      {
        "pageContent": "```\n\nThe complexity count for the query is 6. These lines contributed to the count:\n\n*  `countries {}`\n*  `full_name_english` (first instance)\n*  `name1: full_name_english`\n*  `two_letter_abbreviation`\n*  `three_letter_abbreviation` (first instance of `...myFrag`)\n*  `three_letter_abbreviation` (second instance of `...myFrag`)\n\nCreating the `name1` alias did not cause the system to double count the entry.\n\nIf the count does not exceed the threshold set by the `queryComplexity` attribute, the application validates and processes the query.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/security-configuration.md",
          "loc": { "lines": { "from": 61, "to": 74 } }
        }
      }
    ],
    [
      "69b830b9-1488-42e0-9358-7fea9c9ccd9a",
      {
        "pageContent": "### Query depth\n\nThe `queryDepth` attribute specifies the maximum depth a query can return. This can be an issue for queries that return objects that show a hierarchy, such as [`CategoryTree`](../schema/products/queries/categories.md), or queries that return detailed data on complex [products](../schema/products/queries/products.md). The default value of 20 allows for deep hierarchies and products, but you might want to reduce this number if you know that legitimate queries will never reach that depth.\n\nThe following query has a maximum depth of 5.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/security-configuration.md",
          "loc": { "lines": { "from": 76, "to": 80 } }
        }
      }
    ],
    [
      "9dffe15e-ea48-4f72-a03e-74d95c21a3b3",
      {
        "pageContent": "```graphql\n{\n  categories(\n    filters: {\n      parent_id: {in: [\"2\"]}\n    }\n  ) {\n    total_count\n    items {\n      uid\n      level\n      name\n      path\n      children_count\n      children {\n        uid\n        level\n        name\n        path\n        children_count\n        children {\n          uid\n          level\n          name\n          path\n          children_count\n          children {\n            uid\n            level\n            name\n            path\n          }\n        }\n      }\n    }\n    page_info {\n      current_page\n      page_size\n      total_pages\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/security-configuration.md",
          "loc": { "lines": { "from": 82, "to": 123 } }
        }
      }
    ],
    [
      "75883e2f-2ce7-41b2-ab8a-4d10ecf0f42e",
      {
        "pageContent": "```\n\nThese fields contribute to the depth:\n\n*  `items`\n*  `children` (first instance)\n*  `children` (second instance)\n*  `children` (third instance)\n*  `uid` and other fields in this node\n\nIf the depth of the query exceeds the value  `queryDepth`, the system returns an error.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/security-configuration.md",
          "loc": { "lines": { "from": 124, "to": 134 } }
        }
      }
    ],
    [
      "887dae62-0186-447f-8228-6bcdafd38404",
      {
        "pageContent": "---\ntitle: GraphQL staging queries\ndescription: Learn how to preview scheduled campaign information.\nkeywords:\n  - GraphQL\n---\n\n# Staging queries\n\nGraphQL allows you to use certain queries to return preview information for staged content. Staging, a Adobe Commerce feature, allows merchants to schedule a set of changes to the storefront that run for a prescribed time in the future. These changes, also known as a _campaign_, are defined within the Admin. Customers do not have access to staged content, and as a result, staging queries have requirements that do not apply to traditional queries and mutations.\n\n[Content Staging](https://docs.magento.com/m2/ee/user_guide/cms/content-staging.html) in the _Merchant User Guide_ describes how to create a campaign.\n\nYou can use the following queries to return staged preview information.\n\n*  `categoryList`\n*  `products`\n\n<InlineAlert variant=\"info\" slots=\"text\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "1c0a03e9-c8df-4230-aa55-1571c4821297",
      {
        "pageContent": "The `products` query does not support full text search in the context of staging, because staged content is not indexed. Therefore, omit the `search` input attribute in your staging `products` queries.\n\nA staging query requires two specialized headers:\n\nHeader name | Description\n--- | ---\n`Authorization Bearer: <authorization_token>` | An admin token. Use a 2FA REST endpoint such as  `POST /V1/tfa/provider/google/authenticate` to generate this token.\n`Preview-Version` | A timestamp (seconds since January 1, 1970) that is inside the range of dates of the campaign you are querying.\n\nThe application returns an authorization error if you specify an invalid token or do not include both headers. If the specified timestamp does not correspond to a date in a scheduled campaign, the query results reflect the current storefront settings.\n\nThe application also returns an error if you specify these headers with any other query or any mutation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 21, "to": 32 } }
        }
      }
    ],
    [
      "b0ca734e-5398-485a-8fa2-78933fddabf6",
      {
        "pageContent": "## Example campaign\n\nThe example staging queries in this section are based on a simple campaign that creates a custom category and catalog sales rule using the Luma sample data. By default, the custom category and sales rule are disabled but become enabled when the campaign takes effect.\n\nThe following steps describe how to create this example campaign.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 34, "to": 38 } }
        }
      }
    ],
    [
      "9686d847-c8db-4d28-8013-3bd97ffcad0d",
      {
        "pageContent": "1. Create a subcategory of **Sale** named **End of Year Sale**. Set the **Enable Category** field to **No**.\n1. Add several products to the subcategory.\n1. Schedule an update named **End of Year Sale Update** for the subcategory that takes effect at a later date. Configure the update so that the **Enable Category** field is set to **Yes**.\n1. Create a catalog sales rule with the following properties:\n   *  Set the **Active** switch to **No**.\n   *  In the **Conditions** section, define the condition as **Category is <Subcategory_ID>**.\n   *  In the **Actions** section, set the **Apply** field to **Apply a percentage of original** and the **Discount Amount** field to **25**.\n1. Schedule an update for the catalog sales rule and assign it to the **End of Year Sale Update**. In this update, set the **Active** switch to **Yes**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 40, "to": 47 } }
        }
      }
    ],
    [
      "c19007e1-aefd-4911-acd3-2a6cba4c053b",
      {
        "pageContent": "### Staging `products` query\n\nThe following query returns information about a product (`24-UG05`) in the **End of Year Sale** campaign. The `Preview-Version` header contains the timestamp for a date that is within the duration of the campaign. When you include the proper headers, the query returns prices with applied discounts. Without the headers, the query returns only default prices.\n\n**Headers:**\n\n```text\nAuthorization: Bearer hoyz7k697ubv5hcpq92yrtx39i7x10um\nPreview-Version: 1576389600\n```\n\n**Request:**\n\n```graphql\n{\n  products(filter: {sku: {eq: \"24-UG05\"}}) {\n    items {\n      name\n      sku\n      price_range {\n        minimum_price {\n          discount {\n            percent_off\n            amount_off\n          }\n          final_price {\n            value\n            currency\n          }\n          regular_price {\n            value\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 49, "to": 85 } }
        }
      }
    ],
    [
      "9529e13b-e3dd-40dd-99e0-f115f9ef1d0f",
      {
        "pageContent": "```\n\n**Response with headers:**\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"name\": \"Go-Get'r Pushup Grips\",\n          \"sku\": \"24-UG05\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"discount\": {\n                \"percent_off\": 25,\n                \"amount_off\": 4.75\n              },\n              \"final_price\": {\n                \"value\": 14.25,\n                \"currency\": \"USD\"\n              },\n              \"regular_price\": {\n                \"value\": 19\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 86, "to": 117 } }
        }
      }
    ],
    [
      "b19353c3-79cd-4612-a701-6d3679c995bf",
      {
        "pageContent": "```\n\n**Response without headers:**\n\n```json\n{\n  \"data\": {\n    \"products\": {\n      \"items\": [\n        {\n          \"name\": \"Go-Get'r Pushup Grips\",\n          \"sku\": \"24-UG05\",\n          \"price_range\": {\n            \"minimum_price\": {\n              \"discount\": {\n                \"percent_off\": 0,\n                \"amount_off\": 0\n              },\n              \"final_price\": {\n                \"value\": 19,\n                \"currency\": \"USD\"\n              },\n              \"regular_price\": {\n                \"value\": 19\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 118, "to": 150 } }
        }
      }
    ],
    [
      "34de2b65-003e-48ee-ab1e-d5ad1f0fb934",
      {
        "pageContent": "### Staging `categoryList` query\n\nIn this example campaign, the **End of Year Sale** subcategory and a catalog price rule are disabled when the campaign is not in effect. When you specify valid headers, the `categoryList`query returns full details about the custom category. Otherwise, the query returns an empty array.\n\n**Headers:**\n\n```text\nAuthorization: Bearer hoyz7k697ubv5hcpq92yrtx39i7x10um\nPreview-Version: 1576389600\n```\n\n**Request:**\n\n```graphql\n{\n  categoryList(filters: {ids: {eq: \"43\"}}) {\n    name\n    level\n    products(\n      sort: {\n        price: ASC\n      }\n      pageSize: 20\n      currentPage: 1\n    ) {\n      total_count\n      items {\n        name\n        sku\n        price_range {\n          minimum_price {\n            discount {\n              amount_off\n              percent_off\n            }\n            final_price {\n              value\n            }\n            regular_price {\n              value\n            }\n          }\n        }\n      }\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 152, "to": 198 } }
        }
      }
    ],
    [
      "a2ddd760-10f4-479d-85ee-4e93cba357b5",
      {
        "pageContent": "```\n\n**Response with headers:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 199, "to": 201 } }
        }
      }
    ],
    [
      "8b608d65-a133-4fd8-ae45-a2545830a095",
      {
        "pageContent": "```json\n{\n  \"data\": {\n    \"categoryList\": [\n      {\n        \"name\": \"End of Year Sale\",\n        \"level\": 3,\n        \"products\": {\n          \"total_count\": 4,\n          \"items\": [\n            {\n              \"name\": \"Solo Power Circuit\",\n              \"sku\": \"240-LV07\",\n              \"price_range\": {\n                \"minimum_price\": {\n                  \"discount\": {\n                    \"amount_off\": 3.5,\n                    \"percent_off\": 25\n                  },\n                  \"final_price\": {\n                    \"value\": 10.5\n                  },\n                  \"regular_price\": {\n                    \"value\": 14\n                  }\n                }\n              }\n            },\n            {\n              \"name\": \"Quest Lumaflex&trade; Band\",\n              \"sku\": \"24-UG01\",\n              \"price_range\": {\n                \"minimum_price\": {\n                  \"discount\": {\n                    \"amount_off\": 4.75,\n                    \"percent_off\": 25\n                  },",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 203, "to": 239 } }
        }
      }
    ],
    [
      "7ba1de95-df3a-4545-842e-deea5d7c6ae2",
      {
        "pageContent": "\"final_price\": {\n                    \"value\": 14.25\n                  },\n                  \"regular_price\": {\n                    \"value\": 19\n                  }\n                }\n              }\n            },\n            {\n              \"name\": \"Go-Get'r Pushup Grips\",\n              \"sku\": \"24-UG05\",\n              \"price_range\": {\n                \"minimum_price\": {\n                  \"discount\": {\n                    \"amount_off\": 4.75,\n                    \"percent_off\": 25\n                  },\n                  \"final_price\": {\n                    \"value\": 14.25\n                  },\n                  \"regular_price\": {\n                    \"value\": 19\n                  }\n                }\n              }\n            },\n            {\n              \"name\": \"Gabrielle Micro Sleeve Top\",\n              \"sku\": \"WS02\",\n              \"price_range\": {\n                \"minimum_price\": {\n                  \"discount\": {\n                    \"amount_off\": 7.00,",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 240, "to": 273 } }
        }
      }
    ],
    [
      "7c64129a-af0f-49c3-b7d3-b0c7b6502de4",
      {
        "pageContent": "\"percent_off\": 25\n                  },\n                  \"final_price\": {\n                    \"value\": 21\n                  },\n                  \"regular_price\": {\n                    \"value\": 28\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 274, "to": 290 } }
        }
      }
    ],
    [
      "52e27131-4f60-4cfb-b020-7829158560df",
      {
        "pageContent": "```\n\n**Response without headers:**\n\n```json\n{\n  \"data\": {\n    \"categoryList\": []\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/graphql/usage/staging-queries.md",
          "loc": { "lines": { "from": 291, "to": 301 } }
        }
      }
    ],
    [
      "e1c07ca9-3eda-4570-bd04-608bcecba718",
      {
        "pageContent": "---\ntitle: Commerce Web API\ndescription: Learn about using REST and GraphQL with Adobe Commerce and Magento Open Source APIs.\nkeywords:\n  - GraphQL\n  - REST\n---\n\n<Hero slots=\"image, heading, text\"/>\n\n![Commerce Web APIs](_images/home-bg.jpeg)\n\n# Commerce Web APIs\n\nThe Commerce Web APIs allow you to access and interact with your, integrate third-party software, and build a headless applications. The Web API documentation is divided into three guides: REST, GraphQL, and Getting Started.\n\n<Resources slots=\"heading, links\"/>\n\n## Resources\n\n*  [PHP Developer Guide](https://developer.adobe.com/commerce/php/development)\n*  [Configuring a Service as a Web API](https://developer.adobe.com/commerce/php/development/components/web-api/services/)\n*  [REST API Reference](rest/quick-reference/index.md)\n\n## Overview\n\nThis documentation provides resources for working with Adobe Commerce and Magento Open Source web APIs.",
        "metadata": {
          "source": "commerce-webapi/src/pages/index.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "283cb362-9c23-4188-b4ac-dffa4c0ba428",
      {
        "pageContent": "## Discover\n\nUse these sections to learn about how to use our web APIs to integrate with third-party software and build headless applications.\n\n<DiscoverBlock slots=\"heading, link, text\"/>\n\n### Sections\n\n[Getting Started](get-started/)\n\nThe Commerce web API framework provides integrators and developers the means to use web services that communicate with the Adobe Commerce.\n\n<DiscoverBlock slots=\"link, text\"/>\n\n[REST](/rest/)\n\nThe REST API documentation describes the REST APIs that are available on the latest Adobe Commerce release.\n\n<DiscoverBlock slots=\"link, text\"/>\n\n[GraphQL](./graphql/)\n\nGraphQL is a language for querying and manipulating data. It is widely viewed as more powerful, flexible, and efficient than REST for frontend development.",
        "metadata": {
          "source": "commerce-webapi/src/pages/index.md",
          "loc": { "lines": { "from": 29, "to": 51 } }
        }
      }
    ],
    [
      "81a1af48-3d32-4404-84ff-097006248f07",
      {
        "pageContent": "## Contributing to this documentation\n\nWe encourage you to participate in our open documentation initiative. If you have suggestions, corrections, additions, or deletions for this documentation, check out the source on [GitHub](https://github.com/adobedocs/commerce-webapi), and open a pull request.",
        "metadata": {
          "source": "commerce-webapi/src/pages/index.md",
          "loc": { "lines": { "from": 53, "to": 55 } }
        }
      }
    ],
    [
      "783f34f1-adb9-4305-b2ae-8801d94dbf5d",
      {
        "pageContent": "---\ntitle: Retrieving detailed attributes\ndescription: Learn how to get detailed information about PHP and REST API endpoints on Adobe Commerce and Magento Open Source projects. \nkeywords:\n  - REST\n---\n\n# Retrieving detailed atttributes\n\nSwagger and other types of code-generated documentation erroneously indicate several APIs that search across multiple objects return detailed information about individual objects. Detailed information, such as `extensionAttributes`,  `customAttributes`, and possibly other fields, are generally available only when requesting information on a single object.\n\nThis document lists the PHP, REST, and SOAP calls that indicate they return detailed information, but might not. It also provides the call that returns the detailed data.\n\n<InlineAlert variant=\"info\" slots=\"text\" />\n\nIf the attribute is not required (is_required = false) and has a null value, then the attribute is excluded from the REST/SOAP response.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "1ed69d04-eef8-42e3-a7e2-d95faf586a49",
      {
        "pageContent": "## Customer module {#Customer}\n\n### Magento\\Customer\\Api\\CustomerRepositoryInterface {#CustomerRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `CustomerRepositoryInterface::getList($searchCriteria)` | `CustomerRepositoryInterface::getById($customerId)`\nREST | `/V1/customers/search` | `/V1/customers/{id}`\nSOAP | `customerCustomerRepositoryV1GetList` | `customerCustomerRepositoryV1GetById`\n\n### Magento\\Customer\\Api\\GroupRepositoryInterface {#GroupRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `GroupRepositoryInterface::getList($searchCriteria)` | `GroupRepositoryInterface::getById($id)`\nREST | `/V1/customerGroups/search` | `/V1/customerGroups/{id}`\nSOAP | `customerGroupRepositoryV1GetList` | `customerGroupRepositoryV1GetById`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 18, "to": 34 } }
        }
      }
    ],
    [
      "663230a2-03c3-42ee-8141-4692b5094166",
      {
        "pageContent": "## EAV module {#EAV}\n\n### Magento\\Eav\\Api\\AttributeSetRepositoryInterface {#AttributeSetRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP |  `AttributeSetRepositoryInterface::getList($entityTypeCode, $searchCriteria)` | `AttributeSetRepositoryInterface::get($attributeSetId)`\nREST | `/V1/eav/attribute-sets/list` | `/V1/eav/attribute-sets/{attributeSetId}`\nSOAP | `eavAttributeSetRepositoryV1GetList` | `eavAttributeSetRepositoryV1Get`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 36, "to": 44 } }
        }
      }
    ],
    [
      "57601f1b-a1ea-4e8d-a893-48490772ca93",
      {
        "pageContent": "## GiftWrapping module (Enterprise Edition) {#GiftWrapping}\n\n### Magento\\GiftWrapping\\Api\\WrappingRepositoryInterface {#WrappingRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `WrappingRepositoryInterface::getList($searchCriteria)` | `WrappingRepositoryInterface::get($ruleId)`\nREST | `/V1/gift-wrappings` | `/V1/gift-wrappings/:id`\nSOAP | `giftWrappingWrappingRepositoryV1GetList` | `giftWrappingWrappingRepositoryV1Get`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 46, "to": 54 } }
        }
      }
    ],
    [
      "e73ae326-fc42-4ecc-8ca8-cb80fb8b0f0a",
      {
        "pageContent": "## Quote module {#Quote}\n\n### Magento\\Quote\\Api\\CartRepositoryInterface {#CartRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `CartRepositoryInterface::getList($searchCriteria)` | `CartRepositoryInterface::get($cartId)`\nREST | `/V1/carts/search` | `/V1/carts/{cartId}`\nSOAP | `quoteCartRepositoryV1GetList` | `quoteCartRepositoryV1Get`\n\n### Magento\\Quote\\Api\\GuestPaymentMethodManagementInterface {#GuestPaymentMethodManagementInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `GuestPaymentMethodManagementInterface::getList($cartId)` | `GuestPaymentMethodManagementInterface::get($cartId)`\nREST | `/V1/guest-carts/:cartId/payment-methods` | `/V1/guest-carts/:cartId/selected-payment-method`\nSOAP | `quoteGuestPaymentMethodManagementV1GetList` | `quoteGuestPaymentMethodManagementV1Get`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 56, "to": 72 } }
        }
      }
    ],
    [
      "1976d65e-95af-45ad-823d-ce42d1fcf93c",
      {
        "pageContent": "### Magento\\Quote\\Api\\PaymentMethodManagementInterface {#PaymentMethodManagementInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `PaymentMethodManagementInterface::getList($cartId)` | `PaymentMethodManagementInterface::get($cartId)`\nREST |`/V1/carts/:cartId/payment-methods` | `/V1/carts/:cartId/selected-payment-method`\nSOAP | `quotePaymentMethodManagementV1GetList` | `quotePaymentMethodManagementV1Get`\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `PaymentMethodManagementInterface::getList($cartId)` | `PaymentMethodManagementInterface::get($cartId)`\nREST | `/V1/carts/mine/payment-methods` | `/V1/carts/mine/selected-payment-method`\nSOAP | `quotePaymentMethodManagementV1GetList` | `quotePaymentMethodManagementV1Get`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 74, "to": 86 } }
        }
      }
    ],
    [
      "dcb5e588-20ba-4255-8da8-45457dcf7b6d",
      {
        "pageContent": "## Sales module {#Sales}\n\n### Magento\\Sales\\Api\\CreditmemoRepositoryInterface {#CreditmemoRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `CreditmemoRepositoryInterface::getList($searchCriteria)` | `CreditmemoRepositoryInterface::get($id)`\nREST | `/V1/creditmemos` | `/V1/creditmemo/{id}`\nSOAP | `salesCreditmemoRepositoryV1GetList` | `salesCreditmemoRepositoryV1Get`\n\n### Magento\\Sales\\Api\\InvoiceRepositoryInterface {#InvoiceRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `InvoiceRepositoryInterface::getList($searchCriteria)` | `InvoiceRepositoryInterface::get($id)`\nREST | `/V1/invoices` | `/V1/invoices/{id}`\nSOAP | `salesInvoiceRepositoryV1GetList` | `salesInvoiceRepositoryV1Get`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 88, "to": 104 } }
        }
      }
    ],
    [
      "8b9ad5a3-53a7-4237-9f3b-36cc6dfb34e0",
      {
        "pageContent": "### Magento\\Sales\\Api\\OrderItemRepositoryInterface {#OrderItemRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `OrderItemRepositoryInterface::getList($searchCriteria)` | `OrderItemRepositoryInterface::get($id)`\nREST | `/V1/orders/items` | `/V1/orders/items/{id}`\nSOAP | `salesOrderItemRepositoryV1GetList` | `salesOrderItemRepositoryV1Get`\n\n### Magento\\Sales\\Api\\OrderRepositoryInterface {#OrderRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `OrderRepositoryInterface::getList($searchCriteria)` | `OrderRepositoryInterface::get($id)`\nREST | `/V1/orders` | `/V1/orders/{id}`\nSOAP | `salesOrderRepositoryV1GetList` | `salesOrderRepositoryV1GetList`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 106, "to": 120 } }
        }
      }
    ],
    [
      "9b448c85-a144-44d5-8084-e197122bac21",
      {
        "pageContent": "### Magento\\Sales\\Api\\ShipmentRepositoryInterface {#ShipmentRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `ShipmentRepositoryInterface::getList($searchCriteria)` | `ShipmentRepositoryInterface::get($id)`\nREST | `/V1/shipments` | `/V1/shipment/{id}`\nSOAP | `salesShipmentRepositoryV1GetList` | `salesShipmentRepositoryV1Get`\n\n### Magento\\SalesRule\\Api\\TransactionRepositoryInterface {#TransactionRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `TransactionRepositoryInterface::getList($searchCriteria)` | `TransactionRepositoryInterface:get($id)`\nREST | `/V1/transactions` | `/V1/transactions/{id}`\nSOAP | `salesTransactionRepositoryV1GetList` | `salesTransactionRepositoryV1Get`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 122, "to": 136 } }
        }
      }
    ],
    [
      "72931b00-66e7-4acf-8f2c-d576e4c6135e",
      {
        "pageContent": "## SalesRule module {#SalesRule}\n\n### Magento\\SalesRule\\Api\\CouponRepositoryInterface {#CouponRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `CouponRepositoryInterface::getList($searchCriteria)` | `CouponRepositoryInterface::getById($couponId)`\nREST |  `/V1/coupons/search` | `/V1/coupons/{couponId}`\nSOAP | `salesRuleCouponRepositoryV1GetList` | `salesRuleCouponRepositoryV1GetById`\n\n### Magento\\SalesRule\\Api\\RuleRepositoryInterface {#RuleRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `RuleRepositoryInterface::getList($searchCriteria)` | `RuleRepositoryInterface::getById($ruleId)`\nREST |  `/V1/salesRules/search` | `/V1/salesRules/{ruleId}`\nSOAP | `salesRuleRuleRepositoryV1GetListRequest` | `salesRuleRuleRepositoryV1GetById`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 138, "to": 154 } }
        }
      }
    ],
    [
      "0392572d-6333-4dcc-aef9-340bb8b8dbe6",
      {
        "pageContent": "## Tax module {#Tax}\n\n### Magento\\Tax\\Api\\TaxClassRepositoryInterface {#TaxClassRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `TaxClassRepositoryInterface::getList($searchCriteria)` | `TaxClassRepositoryInterface::get($taxClassId)`\nREST | `/V1/taxClasses/search` | `/V1/taxClass/{rateId}`\nSOAP | `taxTaxClassRepositoryV1GetList` | `taxTaxClassRepositoryV1Get`\n\n### Magento\\Tax\\Api\\TaxRateRepositoryInterface {#TaxRateRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `TaxRateRepositoryInterface::getList($searchCriteria)` | `TaxRateRepositoryInterface::get($rateId)`\nREST | `/V1/taxRates/search` | `/V1/taxRates/{rateId}`\nSOAP | `taxTaxRateRepositoryV1GetList` | `taxTaxRateRepositoryV1Get`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 156, "to": 172 } }
        }
      }
    ],
    [
      "dfab6734-86f1-4427-a39f-029efd8e96ca",
      {
        "pageContent": "### Magento\\Tax\\Api\\TaxRuleRepositoryInterface {#TaxRuleRepositoryInterface}\n\nLanguage | Does not return detailed attributes | Returns detailed attributes\n--- | --- | ---\nPHP | `TaxRuleRepositoryInterface::getList($searchCriteria)` | `TaxRuleRepositoryInterface::get($ruleId)`\nREST | `/V1/taxRules/search` | `/V1/taxRules/{ruleId}`\nSOAP | `taxTaxRuleRepositoryV1GetList` | `taxTaxRuleRepositoryV1Get`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/attributes.md",
          "loc": { "lines": { "from": 174, "to": 180 } }
        }
      }
    ],
    [
      "07071c3e-726b-4463-bb89-1fcb6a0eeb20",
      {
        "pageContent": "---\ntitle: Integrate with the CompanyCredit module\ndescription: Set up the CompanyCredit module, which allows companies to make purchases on credit.\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Integrate with the CompanyCredit module\n\nCompany credit allows company members to purchase items on credit. This is a feature specific to <Vars.sitedatavarb2b/> that is used only for transactions between companies. The seller allocates an amount (or the credit limit) to a company and then company members can purchase items using this amount with the Payment on Account method. The credit amount used by a company is sent to the seller offline. Then the seller creates a Reimburse transaction in the system to adjust the company balance.\n\nThe following diagram illustrates the process flow of orders using the Payment on Account method.\n\n![Payment on credit](/../../_images/payment-on-credit.png)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-credit.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "2aeff5a4-6f33-48f3-a66d-ed63d9922c29",
      {
        "pageContent": "---\ntitle: Manage company objects\ndescription: Describes REST endpoints used to manage company objects\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\n# Manage company objects\n\nThis section describes the REST endpoints used to manage `Company` objects.\n\n**Service Name:**\n\n`companyCompanyRepositoryV1`\n\n**REST Endpoints:**\n\n```json\nPOST /V1/company/\nPUT /V1/company/:companyId\nGET /V1/company/:companyId\nDELETE /V1/company/:companyId\nGET /V1/company/",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "866f5def-44a1-4bb6-a321-89be7f2ef666",
      {
        "pageContent": "```\n\n**CompanyInterface Parameters:**\n\nThe following table lists the parameters defined in `CompanyInterface`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 26, "to": 30 } }
        }
      }
    ],
    [
      "b954778c-a994-4139-a966-31301d11c85c",
      {
        "pageContent": "Name | Description | Format | Requirements\n--- | --- | --- | ---\n`id` | System-generated company ID | integer | Required for updates and deletes.\n`status` | 0 - Pending approval<br/>1 - Approved<br/>2 - Rejected<br/>3 - Blocked | integer | Optional\n`company_name` | Company name  | string  | Required to create or update a company.\n`legal_name`  | Legal name  | string  | Optional\n`company_email`  | Official e-mail address of the company. It does not have to be unique.  | string | Required to create or update a company.\n`vat_tax_id`  | The company's Value Added Tax ID  | string  | Optional\n`reseller_id`  | Unique ID of the company reseller  | string  | Optional\n`comment`  | Additional details about the company | string | Optional\n`street` | Street address where the company is registered. The array can contain one or two lines. | Array[string] | Required to create or update a company.\n`city` | The company's city  | string  | Required to create or update a company.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 32, "to": 43 } }
        }
      }
    ],
    [
      "a13c62b1-4d33-40fd-97b1-bd245fd8a766",
      {
        "pageContent": "`country_id` | The country where the company is registered. | string  | Required to create or update a company.\n`region` | State or province | string | Required to create or update a company.\n`region_id` | An ID assigned to a state or province | string  | Optional\n`postcode` | The company's ZIP or postal code | string  | Required to create or update a company.\n`telephone` | The company contact's phone number | string | Required to create or update a company.\n`customer_group_id`  | Defines the company's shared catalog. A value of `1` assigns the default shared catalog. | integer | Required to create or update a company.\n`sales_representative_id` | User ID of the Sales Representative for the company | integer | Optional\n`reject_reason` | Specifies why a company's request to be a B2B customer is rejected | string | Optional\n`rejected_at` | A timestamp indicating when the company was rejected. | string | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 44, "to": 52 } }
        }
      }
    ],
    [
      "d505507c-5dc1-4d48-9948-20be1e09e1ed",
      {
        "pageContent": "`super_user_id` | The `customer_id` of the company administrator. When creating a company, the `customer_id` must already exist.  | integer | Required to create or update a company.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 53, "to": 53 } }
        }
      }
    ],
    [
      "3c032e07-6adc-478a-bee1-30166db38837",
      {
        "pageContent": "### Create a company\n\nThe following example creates a company and assigns the default shared catalog (`customer_group_id`). The company admin (`super_user_id`) must be a previously-defined `customer_id`.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/company/`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"company\": {\n    \"company_name\": \"Test company\",\n    \"company_email\": \"newemail@example.com\",\n    \"street\":[\n    \"100 Big Tree Avenue\"\n    ],\n    \"city\": \"San Francisco\",\n    \"country_id\": \"US\",\n    \"region\": \"CA\",\n    \"region_id\": \"12\",\n    \"postcode\": \"99999\",\n    \"telephone\": \"4155551212\",\n    \"super_user_id\": 5,\n    \"customer_group_id\": 1\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 55, "to": 85 } }
        }
      }
    ],
    [
      "b0d0429b-4c36-4315-8776-beab97c79676",
      {
        "pageContent": "#### Response\n\n```json\n{\n  \"id\": 2,\n  \"company_name\": \"Test company\",\n  \"company_email\": \"newemail@example.com\",\n  \"street\": [\n    \"100 Big Tree Avenue\"\n  ],\n  \"city\": \"San Francisco\",\n  \"country_id\": \"US\",\n  \"region\": \"California\",\n  \"region_id\": \"12\",\n  \"postcode\": \"99999\",\n  \"telephone\": \"4155551212\",\n  \"customer_group_id\": 1,\n  \"sales_representative_id\": 1,\n  \"reject_reason\": null,\n  \"rejected_at\": null,\n  \"super_user_id\": 5,\n  \"extension_attributes\": {\n    \"quote_config\": {\n      \"company_id\": \"2\",\n      \"is_quote_enabled\": false\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 87, "to": 115 } }
        }
      }
    ],
    [
      "11cd21d5-4548-4176-be03-9666bd754e40",
      {
        "pageContent": "### Update the company\n\nThe following call changes the company status to Rejected (`2`) and explains why.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/company/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"company\": {\n    \"id\": 2,\n    \"company_name\": \"Test company\",\n    \"company_email\": \"newemail@example.com\",\n    \"customer_group_id\": 1,\n    \"street\":[\n        \"100 Big Tree Avenue\"\n    ],\n    \"city\": \"San Francisco\",\n    \"country_id\": \"US\",\n    \"region\": \"CA\",\n    \"region_id\": \"12\",\n    \"postcode\": \"99999\",\n    \"telephone\": \"4155551212\",\n    \"super_user_id\": 5,\n    \"status\": 2,\n    \"reject_reason\": \"Failed background check.\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 117, "to": 150 } }
        }
      }
    ],
    [
      "2fb54615-6340-4fa2-b01f-4e7d6db90a4e",
      {
        "pageContent": "#### Response\n\n```json\n{\n  \"id\": 2,\n  \"company_name\": \"Test company\",\n  \"company_email\": \"newemail@example.com\",\n  \"street\": [\n    \"100 Big Tree Avenue\"\n  ],\n  \"city\": \"San Francisco\",\n  \"country_id\": \"US\",\n  \"region\": \"California\",\n  \"region_id\": \"12\",\n  \"postcode\": \"99999\",\n  \"telephone\": \"4155551212\",\n  \"customer_group_id\": 1,\n  \"sales_representative_id\": 1,\n  \"reject_reason\": null,\n  \"rejected_at\": null,\n  \"super_user_id\": 5,\n  \"extension_attributes\": {\n    \"quote_config\": {\n      \"company_id\": \"2\",\n      \"is_quote_enabled\": true\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 152, "to": 180 } }
        }
      }
    ],
    [
      "373132cc-01de-4cb7-905c-47e75a19abc6",
      {
        "pageContent": "### Return all information about a company\n\nThis call returns detailed information about the specified company.\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/company/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```\n\n#### Response\n\n```json\n{\n  \"id\": 2,\n  \"status\": 0,\n  \"company_name\": \"Test company\",\n  \"company_email\": \"newemail@example.com\",\n  \"street\": [\n    \"100 Big Tree Avenue\"\n  ],\n  \"city\": \"San Francisco\",\n  \"country_id\": \"US\",\n  \"region\": \"California\",\n  \"region_id\": \"12\",\n  \"postcode\": \"99999\",\n  \"telephone\": \"4155551212\",\n  \"customer_group_id\": 1,\n  \"sales_representative_id\": 1,\n  \"reject_reason\": null,\n  \"rejected_at\": null,\n  \"super_user_id\": 5,\n  \"extension_attributes\": {\n    \"quote_config\": {\n      \"company_id\": \"2\",\n      \"is_quote_enabled\": true\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 182, "to": 226 } }
        }
      }
    ],
    [
      "337d72ec-3e68-4470-902a-5f5482cce560",
      {
        "pageContent": "### Delete a company\n\nWhen you delete a company, Adobe Commerce assigns the \"Inactive\" status to all company members. The system also removes company ID from the customer profile of all company members.\n\n**Sample Usage:**\n\n`DELETE <host>/rest/<store_code>/V1/company/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 228, "to": 248 } }
        }
      }
    ],
    [
      "67cd9720-26e9-46c5-b740-bc0379791573",
      {
        "pageContent": "### Search for companies\n\nThe following call returns all companies that are located in California (`region_id` = `12`)\n\nSee [Search using REST APIs](../use-rest/performing-searches.md) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/company?searchCriteria[filter_groups][0][filters][0][field]=region_id&searchCriteria[filter_groups][0][filters][0][value]=12&searchCriteria[filter_groups][0][filters][0][condition_type]=eq`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 250, "to": 266 } }
        }
      }
    ],
    [
      "c47c1291-7c3d-492d-a0a8-6dc4b12b6ac8",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 268, "to": 268 } }
        }
      }
    ],
    [
      "5b1b4940-5c0c-4c4c-b4f4-c3eff136f782",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"id\": 2,\n            \"status\": 1,\n            \"company_name\": \"Test Company\",\n            \"legal_name\": \"Test Company\",\n            \"company_email\": \"newemail@example.com\",\n            \"street\": [\n                \"100 Big Tree Avenue\"\n            ],\n            \"city\": \"San Francisco\",\n            \"country_id\": \"US\",\n            \"region\": \"California\",\n            \"region_id\": \"12\",\n            \"postcode\": \"99999\",\n            \"telephone\": \"4155551212\",\n            \"customer_group_id\": 1,\n            \"sales_representative_id\": 1,\n            \"reject_reason\": null,\n            \"rejected_at\": null,\n            \"super_user_id\": 3,\n            \"extension_attributes\": {\n                \"applicable_payment_method\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 270, "to": 294 } }
        }
      }
    ],
    [
      "75d6e78f-974b-474b-b264-1c4377729274",
      {
        "pageContent": "\"available_payment_methods\": \"banktransfer,cashondelivery,checkmo,payflowpro,payflow_advanced,payflow_link,braintree,cybersource,eway,authorizenet_directpost,free,braintree_paypal,paypal_billing_agreement,payflow_express_bml,paypal_express_bml,paypal_express,payflow_express,hosted_pro,worldpay,companycredit,purchaseorder,braintree_paypal_vault,braintree_cc_vault,payflowpro_cc_vault\",\n                \"use_config_settings\": 1,\n                \"quote_config\": {\n                    \"is_quote_enabled\": true\n                }\n            }\n        },\n        {\n            \"id\": 3,\n            \"status\": 1,\n            \"company_name\": \"Widgets, Inc\",\n            \"legal_name\": \"Widgets, Inc\",\n            \"company_email\": \"widgetsinc@example.com\",\n            \"street\": [\n                \"8383 Wilshire Blvd\",\n                \"Ste 1500\"\n            ],\n            \"city\": \"Beverly Hills\",\n            \"country_id\": \"US\",\n            \"region\": \"California\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 295, "to": 314 } }
        }
      }
    ],
    [
      "0cb44a87-63a2-4969-b974-aac8341b38ac",
      {
        "pageContent": "\"region_id\": \"12\",\n            \"postcode\": \"90211\",\n            \"telephone\": \"(310) 555-0000\",\n            \"customer_group_id\": 1,\n            \"sales_representative_id\": 1,\n            \"reject_reason\": null,\n            \"rejected_at\": null,\n            \"super_user_id\": 10,\n            \"extension_attributes\": {\n                \"applicable_payment_method\": 0,\n                \"available_payment_methods\": \"banktransfer,cashondelivery,checkmo,payflowpro,payflow_advanced,payflow_link,braintree,cybersource,eway,authorizenet_directpost,free,braintree_paypal,paypal_billing_agreement,payflow_express_bml,paypal_express_bml,paypal_express,payflow_express,hosted_pro,worldpay,companycredit,purchaseorder,braintree_paypal_vault,braintree_cc_vault,payflowpro_cc_vault\",\n                \"use_config_settings\": 1,\n                \"quote_config\": {\n                    \"is_quote_enabled\": true\n                }\n            }\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 315, "to": 334 } }
        }
      }
    ],
    [
      "005434fc-ba9e-44b2-b983-0e7221dc8aff",
      {
        "pageContent": "{\n                \"filters\": [\n                    {\n                        \"field\": \"region_id\",\n                        \"value\": \"12\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 2\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-object.md",
          "loc": { "lines": { "from": 335, "to": 348 } }
        }
      }
    ],
    [
      "afa787b9-0e11-446a-8e1e-2f2c560198de",
      {
        "pageContent": "---\ntitle: Manage company structures\ndescription: Assign company users to teams and hierarchies\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Manage company structures\n\n<p><Vars.sitedatavarb2b/> allows company users to be assigned to company teams and hierarchies.</p>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "39a7cc92-e7d6-4866-bda3-a4a14d87313a",
      {
        "pageContent": "## Manage company teams\n\nCompany teams allow you to group company users by location, job responsibilities, or any criteria you choose. You can assign individual company users to a team with the company hierarchy endpoints.\n\n**Service name:**\n\n`companyTeamRepositoryV1`\n\n**REST Endpoints:**\n\n```terminal\nPOST /V1/team/:companyId\nPUT /V1/team/:teamId\nGET /V1/team/:teamId\nDELETE /V1/team/:teamId\nGET /V1/team/\n```\n\n**Company team parameters:**\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\nid | System-generated team ID | integer | Not applicable for create operations.\nname | The displayed name of the team | string | Required to create or update a team.\ndescription | An optional description of the team. | string | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 16, "to": 40 } }
        }
      }
    ],
    [
      "39ae09da-98ba-47fc-9275-81d863864664",
      {
        "pageContent": "### Create a team\n\nA newly-created team is placed under Company Admin in the company hierarchy.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/team/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"team\": {\n    \"name\": \"Western District\",\n    \"description\": \"Buyers from the California office\"\n  }\n}\n```\n\n#### Response\n\n```json\n// The team ID, such as `4`.\n```\n\n### Update a team\n\nYou can only change the name or description of a team.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/team/4`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"team\": {\n    \"id\": 4,\n    \"name\": \"Western Region\"\n  }\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 42, "to": 94 } }
        }
      }
    ],
    [
      "21a4e2bd-b000-48db-a7e5-93765a073ecd",
      {
        "pageContent": "### Return all information about a team\n\nThe `GET` call returns the team `id`, `name`, and `description`.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/team/4`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n{\n  \"id\": 4,\n  \"name\": \"Western Region\",\n  \"description\": \"Buyers from the California office\"\n}\n```\n\n### Delete a team\n\nYou cannot delete a team if members are assigned to it.\n\n**Sample Usage:**\n\n`DELETE <host>/rest/<store_code>/V1/team/4`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n// An empty array\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 96, "to": 142 } }
        }
      }
    ],
    [
      "bd386e0b-f9da-4a6a-a424-aeae4d1128e9",
      {
        "pageContent": "### Search for a team\n\nThe following query returns information about all teams (`team_id` &ge; `0`)\n\nSee [Search using REST APIs](../use-rest/performing-searches.md) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/team?searchCriteria[filter_groups][0][filters][0][field]=team_id&searchCriteria[filter_groups][0][filters][0][value]=0&searchCriteria[filter_groups][0][filters][0][condition_type]=gteq`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 144, "to": 160 } }
        }
      }
    ],
    [
      "e510d86f-972f-4389-9cb5-d873bf4da114",
      {
        "pageContent": "#### Response\n\n```json\n{\n    \"items\": [\n        {\n            \"id\": 1,\n            \"name\": \"West\",\n            \"description\": \"California office\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"East\",\n            \"description\": \"New York office\"\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"team_id\",\n                        \"value\": \"0\",\n                        \"condition_type\": \"gteq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 2\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 162, "to": 193 } }
        }
      }
    ],
    [
      "12b9a5af-faae-4f5e-acc8-469b2a3e4e2f",
      {
        "pageContent": "## Company hierarchies\n\nIn the B2B storefront, a buyer can view the company structure represented as a hierarchy tree. The tree can display multiple levels of company subdivisions (teams) as well as company users. The company hierarchy can have any number of items and levels.\n\nYou can use REST endpoints to retrieve the current structure and move teams and buyers within the hierarchy. You cannot delete teams or buyers.\n\n**Service name:**\n\n`companyHierarchyV1`\n\n**REST Endpoints:**\n\n```terminal\nGET /V1/hierarchy/:id\nPUT /V1/hierarchy/move/:id\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 195, "to": 210 } }
        }
      }
    ],
    [
      "207bef24-090a-4581-aaf2-0d127517ea42",
      {
        "pageContent": "### Return all information about the company hierarchy\n\nIn the following example, the following company hierarchy has already been established:\n\n```terminal\nAdmin (structure_id = 2)\n|-- East (team, structure_id = 8)\n|   |-- Bryce Martin (customer, structure_id = 4)\n|   |-- Melanie Shaw (customer, structure_id = 3)\n|\n|-- West (team, structure_id = 7)\n|   |-- Marcus Thomas (customer, structure_id = 6)\n|   |-- Teresa Gomez (customer, structure_id = 5)\n```\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/hierarchy/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 212, "to": 237 } }
        }
      }
    ],
    [
      "de9e434f-6ebb-47e1-9025-3d2230e8d9fa",
      {
        "pageContent": "#### Response\n\n```json\n[\n  {\n    \"structure_id\": 6,\n    \"entity_id\": 7,\n    \"entity_type\": \"customer\",\n    \"structure_parent_id\": 7\n  },\n  {\n    \"structure_id\": 5,\n    \"entity_id\": 6,\n    \"entity_type\": \"customer\",\n    \"structure_parent_id\": 7\n  },\n  {\n    \"structure_id\": 7,\n    \"entity_id\": 1,\n    \"entity_type\": \"team\",\n    \"structure_parent_id\": 2\n  },\n  {\n    \"structure_id\": 3,\n    \"entity_id\": 4,\n    \"entity_type\": \"customer\",\n    \"structure_parent_id\": 8\n  },\n  {\n    \"structure_id\": 4,\n    \"entity_id\": 5,\n    \"entity_type\": \"customer\",\n    \"structure_parent_id\": 8\n  },\n  {\n    \"structure_id\": 8,\n    \"entity_id\": 2,\n    \"entity_type\": \"team\",\n    \"structure_parent_id\": 2\n  },\n  {\n    \"structure_id\": 2,\n    \"entity_id\": 3,\n    \"entity_type\": \"customer\",\n    \"structure_parent_id\": 0\n  }\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 239, "to": 285 } }
        }
      }
    ],
    [
      "7bc9d850-a3a0-43fb-8adc-dc1053b9dec2",
      {
        "pageContent": "### Assign a new parent to teams and company users\n\nThe following example moves Bryce Martin (`structure_id = 4`) to the West team (`structure_id = 7`)\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/hierarchy/move/5`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"newParentId\": 7\n}\n```\n\n#### Response\n\n```json\n// An empty array\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-structures.md",
          "loc": { "lines": { "from": 287, "to": 309 } }
        }
      }
    ],
    [
      "1decfcdc-9abf-45f8-9643-8199513d3a16",
      {
        "pageContent": "---\ntitle: Manage company users\ndescription: Manage which companies a user belongs to\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Manage company users\n\nA company user is a customer (buyer) that is assigned extended attributes that identify the company the user belongs to. Use the `POST /V1/customers` call, which is included with <Vars.sitedatavarce/> and <Vars.sitedatavaree/>, to create the user. After the user is created, you can use the `PUT /V1/customers/:customer_id` call to set their company data with the `company_attributes` extended attributes.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nThis topic discusses only the features of the `customerCustomerRepositoryV1` service that are specific to B2B. See [Create a customer](../tutorials/orders/order-create-customer.md) for an example of creating a standard customer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-users.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "47d5c899-44cd-428d-ba48-8a904613f68b",
      {
        "pageContent": "## Managing company users with REST\n\nThis section describes the REST endpoints used to manage company users.\n\n**Service Name:**\n\n`customerCustomerRepositoryV1`\n\n**REST Endpoints:**\n\n```terminal\nPOST /V1/customers/\nPUT /V1/customers/:customerId\n```\n\n**Company user parameters:**\n\nThe following table lists the parameters that can be used to set company data for a user.\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`customer_id` | System-generated customer ID. | integer | Not applicable for create operations.\n`company_id` | System-generated company ID. | integer | Required to create or update a company user.\n`job_title` | A string that describes the company user's responsibilities. | string | Required to create or update a company.\n`status` | Indicates whether the company user is active or inactive | integer | `0` - inactive; `1` - active\n`telephone`  |  Telephone number | string | Required to create a company user.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-users.md",
          "loc": { "lines": { "from": 20, "to": 45 } }
        }
      }
    ],
    [
      "ec38b531-345c-4a58-8e14-5e3be7a6b77f",
      {
        "pageContent": "### Create a company user\n\nThe `POST /V1/customers` call creates an Adobe Commerce customer. B2B extends the `customerAccountManagementV1` service so that you can create a company user.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/customers`\n\nFirst, create the standard customer. Their `company_id` will initially be set to `0`.\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"customer\": {\n    \"email\": \"mshaw@example.com\",\n    \"firstname\": \"Melanie\",\n    \"lastname\": \"Shaw\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-users.md",
          "loc": { "lines": { "from": 47, "to": 69 } }
        }
      }
    ],
    [
      "cd398c27-ff59-4580-8cbe-22ebeb19301c",
      {
        "pageContent": "#### Response\n\n```json\n{\n  \"id\": 13,\n  \"group_id\": 1,\n  \"created_at\": \"2017-05-18 16:47:44\",\n  \"updated_at\": \"2017-05-18 16:47:44\",\n  \"created_in\": \"Default Store View\",\n  \"email\": \"mshaw@example.com\",\n  \"firstname\": \"Melanie\",\n  \"lastname\": \"Shaw\",\n  \"store_id\": 1,\n  \"website_id\": 1,\n  \"addresses\": [],\n  \"disable_auto_group_change\": 0,\n  \"extension_attributes\": {\n    \"company_attributes\": {\n      \"customer_id\": 13,\n      \"company_id\": 0\n    }\n  }\n}\n```\n\nIf you create a user from the admin dashboard, you can also set their company data at the same time.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-users.md",
          "loc": { "lines": { "from": 71, "to": 96 } }
        }
      }
    ],
    [
      "ce09592c-d60a-466f-9b7c-cec8d997b18c",
      {
        "pageContent": "### Modify a company user\n\nThe following example assigns the user to a company, sets their status to inactive and also sets their `job_title` and `telephone`.\n\nIf you change the `status` to inactive, the account is locked. If the company user has child users, the system re-assigns the child users to the parent of the deactivated user.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/customers/13`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"customer\": {\n    \"id\": 13,\n    \"email\": \"mshaw@example.com\",\n    \"firstname\": \"Melanie\",\n    \"lastname\": \"Shaw\",\n    \"website_id\": 1,\n    \"extension_attributes\": {\n      \"company_attributes\": {\n        \"company_id\": 2,\n        \"status\": 0,\n        \"job_title\": \"Sales Rep\",\n        \"telephone\": \"512-555-3322\"\n        }\n      }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-users.md",
          "loc": { "lines": { "from": 98, "to": 130 } }
        }
      }
    ],
    [
      "8c73e6d0-3ecc-4940-803d-2e85248bbe0c",
      {
        "pageContent": "#### Response\n\n```json\n{\n  \"id\": 13,\n  \"group_id\": 1,\n  \"created_at\": \"2017-05-18 16:47:44\",\n  \"updated_at\": \"2017-05-18 18:50:58\",\n  \"created_in\": \"Default Store View\",\n  \"email\": \"mshaw@example.com\",\n  \"firstname\": \"Melanie\",\n  \"lastname\": \"Shaw\",\n  \"store_id\": 1,\n  \"website_id\": 1,\n  \"addresses\": [],\n  \"disable_auto_group_change\": 0,\n  \"extension_attributes\": {\n    \"company_attributes\": {\n      \"customer_id\": 13,\n      \"company_id\": 2,\n      \"status\": 0,\n      \"job_title\": \"Sales Rep\",\n      \"telephone\": \"512-555-3322\"\n    },\n    \"is_subscribed\": false\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-users.md",
          "loc": { "lines": { "from": 132, "to": 159 } }
        }
      }
    ],
    [
      "3b97d534-770a-44ef-955f-4f405c468160",
      {
        "pageContent": "### Delete a company user\n\nIf the specified company user has child users, the system re-assigns the child users to the parent of the deleted user. The user account is deleted from Commerce with all of its content, except quotes and orders. The user's orders and quotes remain visible to the seller.\n\nCommerce locks the deleted user's quotes and changes their status to Closed. The system does not allow to make changes on such quotes.\n\n**Sample Usage:**\n\n`DELETE <host>/rest/<store_code>/V1/customers/13`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company-users.md",
          "loc": { "lines": { "from": 161, "to": 183 } }
        }
      }
    ],
    [
      "2326a055-0dfd-42fe-be43-a51401df72ee",
      {
        "pageContent": "---\ntitle: Integrate with the Company module\ndescription: Overview of the Company module\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\n# Integrate with the Company Module\n\nThe `Company` module allows multiple buyers that belong to the same company to view product prices and make purchases based on the shared catalog assigned to this company. A company can contain a hierarchy of users and teams, with roles and permissions assigned at any level.\n\n## Related information\n\n- [Manage company objects](company-object.md)\n- [Manage company users](company-users.md)\n- [Manage company roles](roles.md)\n- [Manage company structures](company-structures.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/company.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "1f1842f3-3a48-4beb-a3de-29aad3539336",
      {
        "pageContent": "---\ntitle: Manage company credit\ndescription: Learn how to manage company credit limits, available credit, and outstanding balances.\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\n# Manage company credit\n\nThe company credit entity operates with the following attributes:\n\n-  Credit limit\n-  Available credit\n-  Outstanding balance\n\nThe credit limit is allocated by seller, while available credit and outstanding balance are automatically calculated by the system based on the buyer transactions (place an order, return) and seller's transactions (refund, reimburse, update credit limit, cancel order).",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "9dafc5cc-1794-4044-ada4-670f86cd3b76",
      {
        "pageContent": "## Manage company credit limits\n\nWhen you create a company, the credit limit is set to 0. Use the `PUT /V1/companyCredits/:id` call to change this value and perform other updates to the company's credit settings.\n\n**REST Endpoints:**\n\n```terminal\nPUT /V1/companyCredits/:id\nGET /V1/companyCredits/:creditId\nGET /V1/companyCredits/company/:companyId\nGET /V1/companyCredits/",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 20, "to": 30 } }
        }
      }
    ],
    [
      "4657d2a0-891e-4f76-bbff-38305309b83a",
      {
        "pageContent": "```\n\n**Company credit parameters:**\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`id` | The credit ID generated by the system | Integer | Required\n`company_id` | Company ID | Integer | Required\n`credit_limit` | The amount of credit granted to the company | Float | Required\n`balance` | The amount the company currently owes the seller | Float | Optional\n`currency_code` | The currency code for the company's credit, such as USD | String | Required\n`exceed_limit` | Indicates whether the company can exceed their credit limit | Boolean  | Optional\n`available_limit` | The amount of credit currently available to the company | Float | Optional\n`credit_comment` | Describes the change being made | String | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 31, "to": 44 } }
        }
      }
    ],
    [
      "b6ba6b51-3906-4989-b834-9b54a835972f",
      {
        "pageContent": "### Update a company credit limit\n\nThis call changes the company's credit limit to $1000. The `available_limit` parameter is calculated, so you cannot specify the value.\n\n**Service Name:**\n\n`companyCreditCreditLimitRepositoryV1`\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/companyCredits/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"creditLimit\": {\n  \"id\": 2,\n  \"company_id\": 2,\n  \"credit_limit\": 1000,\n  \"currency_code\": \"USD\"\n  }\n}\n```\n\n#### Response\n\n```json\n{\n    \"id\": 2,\n    \"company_id\": 2,\n    \"credit_limit\": 1000,\n    \"balance\": 0,\n    \"currency_code\": \"USD\",\n    \"exceed_limit\": false,\n    \"available_limit\": 1000\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 46, "to": 85 } }
        }
      }
    ],
    [
      "cae80536-fdb2-439e-bcf2-e1bef94e2e88",
      {
        "pageContent": "### Get details about a company's credit limit using credit ID\n\nThis call returns data on the credit limit for the specified credit ID.\n\n**Service Name:**\n\n`companyCreditCreditLimitRepositoryV1`\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/companyCredits/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n{\n  \"id\": 2,\n  \"company_id\": 2,\n  \"credit_limit\": 500,\n  \"balance\": 0,\n  \"currency_code\": \"USD\",\n  \"exceed_limit\": false,\n  \"available_limit\": 500\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 87, "to": 119 } }
        }
      }
    ],
    [
      "a3bb83d9-a3ae-41be-ad02-7190018af9cc",
      {
        "pageContent": "### Get details about a company's credit limit using company ID\n\nThis call returns information about the credit limit for a specified company.\n\n**Service Name:**\n\n`companyCreditCreditLimitManagementV1`\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/companyCredits/company/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n{\n  \"id\": 2,\n  \"company_id\": 2,\n  \"credit_limit\": 500,\n  \"balance\": 0,\n  \"currency_code\": \"USD\",\n  \"exceed_limit\": false,\n  \"available_limit\": 500\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 121, "to": 153 } }
        }
      }
    ],
    [
      "004c228b-d4e9-4708-8cb4-967784d19665",
      {
        "pageContent": "### Search credit IDs\n\nThe following call returns information for all companies whose credit balance is 0.\n\nSee [Search using REST APIs](../use-rest/performing-searches.md) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/companyCredits?searchCriteria[filter_groups][0][filters][0][field]=balance&searchCriteria[filter_groups][0][filters][0][value]=0&searchCriteria[filter_groups][0][filters][0][condition_type]=eq`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 155, "to": 171 } }
        }
      }
    ],
    [
      "2744cd23-c4a8-4fb9-bec3-9738e87ee8a9",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 173, "to": 173 } }
        }
      }
    ],
    [
      "68770e70-bbbd-4ec9-be62-82f46c4889e4",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"id\": 2,\n            \"company_id\": 2,\n            \"credit_limit\": 1000,\n            \"balance\": 0,\n            \"currency_code\": \"USD\",\n            \"exceed_limit\": false,\n            \"available_limit\": 1000\n        },\n        {\n            \"id\": 3,\n            \"company_id\": 3,\n            \"balance\": 0,\n            \"currency_code\": \"USD\",\n            \"exceed_limit\": false,\n            \"available_limit\": 0\n        },\n        {\n            \"id\": 4,\n            \"company_id\": 4,\n            \"credit_limit\": 2000,\n            \"balance\": 0,\n            \"currency_code\": \"USD\",\n            \"exceed_limit\": false,\n            \"available_limit\": 2000\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"balance\",\n                        \"value\": \"0\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 175, "to": 214 } }
        }
      }
    ],
    [
      "3fdac329-e320-4e03-a9fe-765c08adc7f9",
      {
        "pageContent": "]\n            }\n        ]\n    },\n    \"total_count\": 3\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 214, "to": 220 } }
        }
      }
    ],
    [
      "e593eee8-450e-4f8e-92b3-47cbda1b952f",
      {
        "pageContent": "## Balance operations\n\nThe company's outstanding balance can be updated as the buyer makes payments, purchases, and other transactions.\n\n**Service Name:**\n\n`companyCreditCreditBalanceManagementV1`\n\n**REST Endpoints:**\n\n```terminal\nPOST /V1/companyCredits/:creditId/decreaseBalance\nPOST /V1/companyCredits/:creditId/increaseBalance",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 222, "to": 234 } }
        }
      }
    ],
    [
      "27f23580-431e-44d4-9e37-b915188da35b",
      {
        "pageContent": "```\n\n**Balance Parameters:**\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`value` | Indicates how much money is involved in this company credit balance operation. | Number | Required\n`currency` | The currency of the transaction, such as USD | String | Required\n`operationType` | Must be one of the following: 1 - Allocated; 2 - Updated; 3 - Purchased; 4 - Reimbursed; 5 - Refunded; 6 - Reverted | Integer | Required\n`comment` | Describers the operation | String | Optional\n`options` | An object that provides additional information for increasing or decreasing the credit balance | Object | Optional\n\n**`options` parameters:**\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`purchase_order` | The company's purchase order number  | String | Optional\n`order_increment` | Order increment | String | Optional\n`currency_display` | Currency code for displaying the operation | String | Optional\n`currency_base` | The base currency | String | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 235, "to": 254 } }
        }
      }
    ],
    [
      "a1203b6c-0d28-4054-bf37-23659d678e57",
      {
        "pageContent": "### Increase the company credit balance\n\nThis call increases the company credit with an Allocate, Update, Refund, Revert, or Reimburse transaction. (You cannot specify the Purchased (3) operation type.) This call also decreases the company's outstanding balance.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/companyCredits/2/increaseBalance`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"value\": 250,\n  \"currency\": \"USD\",\n  \"operationType\": 2,\n  \"comment\": \"update limit\"\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the increase to the company credit balance succeeded\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 256, "to": 281 } }
        }
      }
    ],
    [
      "d9737e16-0413-48c1-bf51-443eb5c95986",
      {
        "pageContent": "### Decrease the balance\n\nThis call decreases the company credit with an Update (operation type = 2), Purchased (3), or Reimbursed (4) transaction. (You cannot specify the other operation types.) This call also increases company's outstanding balance.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/companyCredits/2/decreaseBalance`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"value\": 250,\n  \"currency\": \"USD\",\n  \"operationType\": 4,\n  \"comment\": \"issue refund\"\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the decrease to the company credit balance succeeded\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 283, "to": 308 } }
        }
      }
    ],
    [
      "edcfac02-5faf-4a10-84db-e6c1b3d60109",
      {
        "pageContent": "## Credit history\n\nA Reimburse transaction can be updated to include a purchase order and comment.\n\n**Service Name:**\n`companyCreditCreditHistoryManagementV1`\n\n**REST Endpoints:**\n\n```text\nGET /V1/companyCredits/history\nPUT /V1/companyCredits/history/:historyId\n```\n\n### Save the credit history\n\nThis call updates the credit history to specify a purchase order number.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/companyCredits/history/6`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"purchaseOrder\": \"A12345\",\n  \"comment\": \"Adding PO info\"\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the call was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 310, "to": 347 } }
        }
      }
    ],
    [
      "52150296-c8e4-44dd-a279-25a3f933a444",
      {
        "pageContent": "### Search credit history IDs\n\nThe following call returns a list instances in which the credit limit was set to a value higher than $500.\n\nSee [Search using REST APIs](../use-rest/performing-searches.md) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/companyCredits/history?searchCriteria[filter_groups][0][filters][0][field]=credit_limit&searchCriteria[filter_groups][0][filters][0][value]=500&searchCriteria[filter_groups][0][filters][0][condition_type]=gt`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 349, "to": 365 } }
        }
      }
    ],
    [
      "0b422832-c274-45c7-9e92-9c876137a25c",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 367, "to": 367 } }
        }
      }
    ],
    [
      "34ef3aab-f1bf-44b4-8dc9-3789abbbb842",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"id\": 6,\n            \"company_credit_id\": 2,\n            \"user_id\": 1,\n            \"user_type\": 2,\n            \"currency_credit\": \"USD\",\n            \"currency_operation\": \"USD\",\n            \"rate\": 1,\n            \"rate_credit\": 0,\n            \"amount\": -250,\n            \"balance\": 0,\n            \"credit_limit\": 1000,\n            \"available_limit\": 1000,\n            \"type\": 4,\n            \"datetime\": \"2017-06-12 02:26:28\",\n            \"purchase_order\": \"A12345\",\n            \"comment\": \"{\\\"custom\\\":\\\"Adding PO info\\\"}\"\n        },\n        {\n            \"id\": 7,\n            \"company_credit_id\": 4,\n            \"user_id\": 1,\n            \"user_type\": 2,\n            \"currency_credit\": \"USD\",\n            \"currency_operation\": \"USD\",\n            \"rate\": 1,\n            \"rate_credit\": 0,\n            \"amount\": 0,\n            \"balance\": 0,\n            \"credit_limit\": 2000,\n            \"available_limit\": 2000,\n            \"type\": 1,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 369, "to": 403 } }
        }
      }
    ],
    [
      "079d2a81-ce04-4224-baf9-850bb057abeb",
      {
        "pageContent": "\"datetime\": \"2017-07-20 21:28:35\",\n            \"comment\": \"\"\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"credit_limit\",\n                        \"value\": \"500\",\n                        \"condition_type\": \"gt\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 2\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/credit-manage.md",
          "loc": { "lines": { "from": 404, "to": 423 } }
        }
      }
    ],
    [
      "938df466-c801-4083-846c-64f3572a3abb",
      {
        "pageContent": "---\ntitle: Develop B2B extensions\ndescription: Review details about developing extensions in the Module Reference Guide\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Develop B2B extensions\n\nSee [Module Reference Guide](https://developer.adobe.com/commerce/php/module-reference/) for information about each <Vars.sitedatavarb2b/> module.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/extensions.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "7d1d6e04-26c0-4f3a-aa24-9d2f38d9f83b",
      {
        "pageContent": "---\ntitle: B2B integrations\ndescription: Overview of the B2B module\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# B2B integrations\n\nUnlike the standard business-to-consumer model, <Vars.sitedatavarb2b/> (Business to Business) is designed to meet the needs of sellers (Commerce merchants) whose customers are primarily companies—possibly with complex organizational structures and multiple users with various roles and levels of permission.\n\nThere are two basic actors in B2B model:\n\n-  A **seller** is an admin user that accesses the system from the Admin.\n-  A **buyer** is any customer associated with a company account who accesses the system from the storefront.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/index.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "c7eb8bad-c9e0-493a-ab1c-5a12de09b948",
      {
        "pageContent": "The Company component is the key entity within B2B on which all other features are in some way dependent. It allows joining multiple buyers that belong to the same company into a single company account (or corporate account). The company admin is able to build the company structure (divisions, subdivisions and users) in the appropriate hierarchy and provide different user roles and permissions to the company members. Such a hierarchy allows the company admin to control user activity within an account: ordering, quoting, purchasing, access to company credit info or profile, etc. In addition, a seller can configure how the buying company operates at the website: including the payment methods, pricing levels, the ability to negotiate over prices, and the ability to create requisition lists.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/index.md",
          "loc": { "lines": { "from": 21, "to": 21 } }
        }
      }
    ],
    [
      "af4e0801-be9a-4149-a801-e5478eb3cce5",
      {
        "pageContent": "Companies have an option to Pay on Account, or in other words make purchases in credit. The seller allocates credit for a company account and manages credit settings for a company as well as credit reimbursement.\n\nShared catalogs are the pricing levels that allow setting custom prices per product for different companies on one or multiple websites. By using shared catalogs, a seller can sell this product by applying different pricing levels for different customer groups.\n\nThe seller and a buyer representing a company can negotiate the price of an order prior to order placement. This functionality is supported by the Negotiable Quote module. It means that before making an order, the buyer can initiate negotiations with the seller on prices and discounts. Negotiations suggest that the created quote may be submitted, reviewed and modified several times before it is converted into an order.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/index.md",
          "loc": { "lines": { "from": 23, "to": 27 } }
        }
      }
    ],
    [
      "0fe6bf10-9bec-4d5d-b660-ab8c52a5ba1a",
      {
        "pageContent": "## B2B Modules\n\n<p><Vars.sitedatavarb2b/> is a set of modules that are installed on top of <Vars.sitedatavaree/>. The following table lists the modules provided with B2B.</p>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/index.md",
          "loc": { "lines": { "from": 29, "to": 31 } }
        }
      }
    ],
    [
      "db08d748-0776-44c6-a92d-957a49fded34",
      {
        "pageContent": "Name | Description | WebAPI enabled?\n--- | --- | ---\nB2b | The base module for B2B. It also provides branding elements. | No\nBundleNegotiableQuote | Enables bundle products to be displayed in a negotiable quote in an B2B environment | No\nBundleRequisitionList | Enables bundle products to be displayed in a requisition list | No\nBundleSharedCatalog | Enables bundle products to be added to a shared catalog in an B2B environment. | No\nCompany | Allows a seller to create a company account and assign multiple members of the company to the account. | Yes\nCompanyCredit | Adds the Payment on Account payment method for B2B companies. | Yes\nCompanyPayment | Allows a seller to configure which payment methods are available for B2B companies. | No\nConfigurableNegotiableQuote | Enables configurable products to be displayed in a negotiable quote in an B2B environment | No\nConfigurableRequisitionList | Enables configurable products to be displayed in a requisition list | No",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/index.md",
          "loc": { "lines": { "from": 33, "to": 43 } }
        }
      }
    ],
    [
      "81fff7cb-6b42-48e3-a222-ffa2015e1f48",
      {
        "pageContent": "ConfigurableSharedCatalog |Enables configurable products to be added to a shared catalog in an B2B environment. | No\nGiftCardNegotiableQuote | Enables gift cards to be displayed in a negotiable quote in an B2B environment | No\nGiftCardRequisitionList | Enables gift cards to be displayed in a requisition list | No\nGiftCardSharedCatalog | Enables gift cards to be added to a shared catalog in an B2B environment. | No\nGroupedRequisitionList | Enables grouped products to be displayed in a requisition list | No\nGroupedSharedCatalog | Enables grouped products to be added to a shared catalog in an B2B environment. | No\nNegotiableQuote | Allows a buyer and a seller (admin user) to negotiate product and/or shipping prices before the buyer places an order. | Yes\nNegotiableQuoteSharedCatalog | Enables the `NegotiableQuote` module to interact with a `SharedCatalog` in an B2B environment. | No\nPurchaseOrder | Allows buyers and seller to create a purchase order. | Yes",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/index.md",
          "loc": { "lines": { "from": 44, "to": 52 } }
        }
      }
    ],
    [
      "51161478-543e-409e-ba79-397afcb438bb",
      {
        "pageContent": "PurchaseOrderRule | Allows creating and enforcing approval rules for purchase orders. | No\nQuickOrder | Allows buyers to create a new order from a list of multiple SKUs. | No\nRequisitionList | Allows a buyer to create multiple lists of frequently-purchased items and use those lists for order placement. | No\nSharedCatalog | Defines the visibility of products and prices in the catalog and in B2B quotes for different company accounts. | Yes",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/index.md",
          "loc": { "lines": { "from": 53, "to": 56 } }
        }
      }
    ],
    [
      "6fc2213f-4c38-42f6-9b33-625b7a722131",
      {
        "pageContent": "## Related information\n\n- [Install the B2B extension](https://experienceleague.adobe.com/docs/commerce-admin/b2b/install.html)\n- [Getting started with <Vars.sitedatavarb2b/>](https://docs.magento.com/user-guide/getting-started.html)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/index.md",
          "loc": { "lines": { "from": 58, "to": 61 } }
        }
      }
    ],
    [
      "8410c507-a47a-43ff-a78d-dee04ce14d61",
      {
        "pageContent": "---\ntitle: Integrate with B2B using REST\ndescription: A description of available rest endpoints and integrations in the B2B module\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Integrate with B2B using REST\n\nThis topic lists the REST endpoints and services that are provided with <Vars.sitedatavarb2b/>.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/integrations.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "8c80f776-719d-4eb9-aeef-fdf04ede49ad",
      {
        "pageContent": "## List of REST endpoints by module\n\n### Company\n\n```terminal\nGET    /V1/company/\nGET    /V1/company/:companyId\nDELETE /V1/company/:companyId\nPUT    /V1/company/:companyId\nPOST   /V1/company/\nGET    /V1/team/\nGET    /V1/team/:teamId\nDELETE /V1/team/:teamId\nPUT    /V1/team/:teamId\nPOST   /V1/team/:companyId\nGET    /V1/hierarchy/:id\nPUT    /V1/hierarchy/move/:id\nGET    /V1/company/role/\nGET    /V1/company/role/:roleId\nPOST   /V1/company/role/\nDELETE /V1/company/role/:roleId\nPUT    /V1/company/role/:id\nPUT    /V1/company/assignRoles\nGET    /V1/company/role/:roleId/users\n```\n\n### CompanyCredit\n\n```terminal\nGET    /V1/companyCredits/\nGET    /V1/companyCredits/:creditId\nPUT    /V1/companyCredits/:id\nGET    /V1/companyCredits/company/:companyId\nPOST   /V1/companyCredits/:creditId/increaseBalance\nPOST   /V1/companyCredits/:creditId/decreaseBalance\nGET    /V1/companyCredits/history\nPUT    /V1/companyCredits/history/:historyId\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/integrations.md",
          "loc": { "lines": { "from": 16, "to": 53 } }
        }
      }
    ],
    [
      "1c0e0a3f-4461-4757-ad7a-3cccce8f0fcb",
      {
        "pageContent": "### NegotiableQuote",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/integrations.md",
          "loc": { "lines": { "from": 55, "to": 55 } }
        }
      }
    ],
    [
      "e462022c-9776-4c4e-aee7-fe3b1d209a6a",
      {
        "pageContent": "```terminal\nPOST   /V1/negotiableQuote/request\nPOST   /V1/negotiableQuote/draft\nPOST   /V1/negotiableQuote/submitToCustomer\nPOST   /V1/negotiableQuote/decline\nPOST   /V1/negotiableQuote/pricesUpdated\nGET    /V1/negotiableQuote/attachmentContent\nGET    /V1/negotiableQuote/:quoteId/comments\nPUT    /V1/negotiableQuote/:quoteId/shippingMethod\nPOST   /V1/negotiable-carts/:cartId/payment-information\nGET    /V1/negotiable-carts/:cartId/payment-information\nPOST   /V1/negotiable-carts/:cartId/set-payment-information\nPOST   /V1/negotiable-carts/:cartId/shipping-information\nPOST   /V1/negotiable-carts/:cartId/estimate-shipping-methods\nPOST   /V1/negotiable-carts/:cartId/estimate-shipping-methods-by-address-id\nPUT    /V1/negotiableQuote/:quoteId\nGET    /V1/negotiable-carts/:cartId/billing-address\nPOST   /V1/negotiable-carts/:cartId/billing-address\nGET    /V1/negotiable-carts/:cartId/totals\nPUT    /V1/negotiable-carts/:cartId/coupons/:couponCode\nDELETE /V1/negotiable-carts/:cartId/coupons",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/integrations.md",
          "loc": { "lines": { "from": 57, "to": 77 } }
        }
      }
    ],
    [
      "48d52fb0-52ac-4e37-a57b-93602bec6899",
      {
        "pageContent": "POST   /V1/negotiable-carts/:cartId/giftCards\nDELETE /V1/negotiable-carts/:cartId/giftCards/:giftCardCode\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/integrations.md",
          "loc": { "lines": { "from": 78, "to": 80 } }
        }
      }
    ],
    [
      "011ced69-bf16-4a82-8c90-c861f1192f7c",
      {
        "pageContent": "### PurchaseOrder\n\n```terminal\nPOST   /V1/carts/mine/po-payment-information\n```\n\n### SharedCatalog\n\n```terminal\nGET    /V1/sharedCatalog/:sharedCatalogId\nPOST   /V1/sharedCatalog\nPUT    /V1/sharedCatalog/:id\nDELETE /V1/sharedCatalog/:sharedCatalogId\nGET    /V1/sharedCatalog/\nGET    /V1/sharedCatalog/:sharedCatalogId/companies\nPOST   /V1/sharedCatalog/:sharedCatalogId/assignCompanies\nPOST   /V1/sharedCatalog/:sharedCatalogId/unassignCompanies\nGET    /V1/sharedCatalog/:id/products\nPOST   /V1/sharedCatalog/:id/assignProducts\nPOST   /V1/sharedCatalog/:id/unassignProducts\nGET    /V1/sharedCatalog/:id/categories\nPOST   /V1/sharedCatalog/:id/assignCategories\nPOST   /V1/sharedCatalog/:id/unassignCategories\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/integrations.md",
          "loc": { "lines": { "from": 82, "to": 105 } }
        }
      }
    ],
    [
      "c7564e93-a375-448a-b3d2-e9bcf4534029",
      {
        "pageContent": "## List of service names per Module\n\n### Company\n\n```terminal\ncompanyAclV1\ncompanyCompanyHierarchyV1\ncompanyCompanyRepositoryV1\ncompanyRoleRepositoryV1\ncompanyTeamRepositoryV1\nconfigurableProductConfigurableProductManagementV1\n```\n\n### CompanyCredit\n\n```terminal\ncompanyCreditCreditBalanceManagementV1\ncompanyCreditCreditHistoryManagementV1\ncompanyCreditCreditLimitManagementV1\ncompanyCreditCreditLimitRepositoryV1\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/integrations.md",
          "loc": { "lines": { "from": 107, "to": 127 } }
        }
      }
    ],
    [
      "f544e7cb-4937-486f-8dcf-cfafbaad01d2",
      {
        "pageContent": "### NegotiableQuote\n\n```terminal\nnegotiableQuoteAttachmentContentManagementV1\nnegotiableQuoteBillingAddressManagementV1\nnegotiableQuoteCartTotalRepositoryV1\nnegotiableQuoteCommentLocatorV1\nnegotiableQuoteCouponManagementV1\nnegotiableQuoteGiftCardAccountManagementV1\nnegotiableQuoteNegotiableQuoteManagementV1\nnegotiableQuoteNegotiableQuoteDraftManagementV1\nnegotiableQuoteNegotiableQuotePriceManagementV1\nnegotiableQuoteNegotiableQuoteShippingManagementV1\nnegotiableQuotePaymentInformationManagementV1\nnegotiableQuoteShipmentEstimationV1\nnegotiableQuoteShippingInformationManagementV1\nnegotiableQuoteShippingMethodManagementV1\n```\n\n### PurchaseOrder\n\n```terminal\npurchaseOrderPurchaseOrderPaymentInformationManagementV1\n```\n\n### SharedCatalog\n\n```terminal\nsharedCatalogCategoryManagementV1\nsharedCatalogCompanyManagementV1\nsharedCatalogProductManagementV1\nsharedCatalogSharedCatalogRepositoryV1\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/integrations.md",
          "loc": { "lines": { "from": 129, "to": 161 } }
        }
      }
    ],
    [
      "20939ccc-7d96-4390-974c-6461b8011597",
      {
        "pageContent": "---\ntitle: Place a negotiable quote order\ndescription: An overview of the REST calls needed to place items in a shopping cart, negotiate a quote, and reimburse credit\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n# Initiate a negotiable quote order by seller\n\nThis topic describes how a seller can use REST calls to create a negotiable quote for a specific buyer in Draft state, add products to the quote, update quote data such as name and expiration date, and apply a discount.\n\n<BetaNote />\n\n## Prerequisites\n\n-  You have [installed and enabled](https://experienceleague.adobe.com/docs/commerce-admin/b2b/install.html) <Vars.sitedatavarb2b/>.\n-  You have [created a company](company-object.md).\n-  You have an integration or [admin authorization token](../tutorials/orders/order-admin-token.md) to make calls on behalf of seller.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-by-seller-workflow.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "a95716dd-18a7-4cba-bf6d-09b27b037a9e",
      {
        "pageContent": "## Create a negotiable quote\n\nThe following example shows the API request workflow for a seller to complete the following tasks:\n\n- Initiate a negotiable quote for a company buyer by creating an empty draft quote\n- Update the draft quote to add items and modify the quote name\n- Apply a discount to the quote\n- Send the quote to the buyer for review\n\n### Initiate a negotiable quote\n\nThe seller initiates a negotiable quote by creating a quote for a company buyer.\n\nThe new quote is empty with a `draft_by_admin` system state. In the interface, the quote has a `Draft` status and is visible only to the seller.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/negotiableQuote/draft`\n\n**Headers:**\n\n```txt\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"customerId\": 5\n}\n```\n\n#### Response\n\n```json\n`31` // An integer indicating the new quoteId\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-by-seller-workflow.md",
          "loc": { "lines": { "from": 25, "to": 65 } }
        }
      }
    ],
    [
      "dd010d6e-0074-4143-9ac2-60a7b3fc790f",
      {
        "pageContent": "### Update negotiable quote\n\nThe seller can now update the quote to add products, and optionally change the negotiable quote name.\n\n**Headers:**\n\n```txt\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`PUT /V1/negotiableQuote/31`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quote\": {\n    \"id\": 31,\n    \"items\": [\n      {\n        \"sku\": \"24-UG02\",\n        \"qty\": 1\n      },\n      {\n        \"sku\": \"24-MB01\",\n        \"qty\": 100\n      }\n    ],\n    \"extension_attributes\": {\n      \"negotiable_quote\": {\n        \"quote_name\": \"5% for bags\"\n      }\n    }\n  }\n}\n```\n\n#### Response\n\n```json\n// an empty array\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-by-seller-workflow.md",
          "loc": { "lines": { "from": 67, "to": 113 } }
        }
      }
    ],
    [
      "44ad491c-69ee-4d25-aa0e-7de7a60db5c5",
      {
        "pageContent": "### Adjust the negotiable quote\n\nThe seller updates the quote to provide a 5% discount that applies to the entire quote. The `negotiated_price_type` value of `1` indicates a percentage discount.\n\n**Headers:**\n\n```txt\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`PUT /V1/negotiableQuote/31`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quote\": {\n      \"id\": 31,\n      \"extension_attributes\": {\n        \"negotiable_quote\": {\n         \"negotiated_price_type\": 1,\n          \"negotiated_price_value\": 5\n        }\n      }\n    }\n}\n```\n\n#### Response\n\n```json\n// an empty array\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-by-seller-workflow.md",
          "loc": { "lines": { "from": 115, "to": 152 } }
        }
      }
    ],
    [
      "4889a3d7-9a02-4be4-8e65-8ebb334575e3",
      {
        "pageContent": "### Recalculate prices\n\nBefore sending the quote to the buyer, the seller recalculates the prices to reflect the discount.\n\n**Headers:**\n\n```txt\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`POST /V1/negotiableQuote/pricesUpdated`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quoteIds\": [31]\n}\n```\n\n#### Response\n\n```json\n`true` // indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-by-seller-workflow.md",
          "loc": { "lines": { "from": 154, "to": 183 } }
        }
      }
    ],
    [
      "4198f6a6-9bea-4d7f-a10d-3b23ac7bb691",
      {
        "pageContent": "### Send the negotiable quote to the buyer\n\nAfter completing updates to the quote, the seller can submit the quote to the buyer for review, including any relevant comments. Then, the buyer can either accept the offer and begin the checkout process, or request further negotiations.\n\nThis call places the quote in the `submitted_by_admin` state. In the interface, the buyer quote status is `Updated`. The seller quote status is `Submitted`. At this point, the quote is locked and can be updated only by the buyer.\n\n**Headers:**\n\n```txt\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`POST /V1/negotiableQuote/submitToCustomer`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quoteId\": 31,\n  \"comment\": \"We have provided a 5% discount to your order.\"\n}\n```\n\n#### Response\n\n```json\n`true` // indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-by-seller-workflow.md",
          "loc": { "lines": { "from": 185, "to": 217 } }
        }
      }
    ],
    [
      "65e34e64-fbb6-4bad-b570-6aff93760a8b",
      {
        "pageContent": "## Related information\n\n-  [Negotiable quote order](negotiable-order-workflow.md)\n-  [Order processing tutorial](../tutorials/orders/index.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-by-seller-workflow.md",
          "loc": { "lines": { "from": 219, "to": 222 } }
        }
      }
    ],
    [
      "893b264c-142e-4762-a8cd-f27c62b7ac65",
      {
        "pageContent": "---\ntitle: Negotiable quote checkout\ndescription: Convert the negotiable quote to an order after reaching an agreed price\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Negotiable quote checkout\n\nWhen the seller and buyer user agree on the quoted products and their prices, the negotiated quote is ready to be converted to an order.\n\nDuring the standard checkout process, Adobe Commerce refreshes and recalculates all product and shipping prices as well as taxes. This process is different for the quote that has a negotiated price (discounted offer from the seller). The system keeps the quoted price, but checks the tax amounts. If the tax amounts are outdated, Commerce recalculates them and updates the quote totals. These tax adjustments can change the order grand total. The order and invoice are created with the recalculated taxes and new grand total. All other prices in the quote remain unchanged.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "cf70ebcd-483b-4e57-a2b0-8abed729e4a0",
      {
        "pageContent": "The same rule is applied when the quote has the proposed shipping price and the shipping taxes change on the checkout. The buyer pays the updated price, but this does not affect the other quote amounts.\n\nThe following diagram illustrates the workflow for <Vars.sitedatavarb2b/> negotiable quote checkouts:\n\n![Checkout process](/../../_images/quote-checkout-process.png)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 18, "to": 22 } }
        }
      }
    ],
    [
      "146d11a8-56fb-4f27-a76f-f11227e121ee",
      {
        "pageContent": "## Manage shipping addresses\n\nA negotiated quote can be initiated without a shipping address. However, before the order can be placed, the shipping address must be provided.\n\n**REST Endpoints:**\n\n```json\nPOST /V1/negotiable-carts/:cartId/estimate-shipping-methods\nPOST /V1/negotiable-carts/:cartId/estimate-shipping-methods-by-address-id\nPOST /V1/negotiable-carts/:cartId/shipping-information\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 24, "to": 34 } }
        }
      }
    ],
    [
      "fad796da-df47-44d1-abd7-fa174777438a",
      {
        "pageContent": "### Estimate shipping costs specifying an address\n\nThis call takes a full shipping address as input and estimates shipping fees. It returns a list of available shipping methods.\n\n**Service Name:**\n\n`negotiableQuoteShipmentEstimationV1`\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiable-carts/86/estimate-shipping-methods`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"address\": {\n  \"street\": [\n      \"100 Big Tree Avenue\"\n    ],\n  \"city\": \"San Francisco\",\n  \"country_id\": \"US\",\n  \"region\": \"California\",\n  \"region_id\": \"12\",\n  \"postcode\": \"99999\",\n  \"telephone\": \"4155551212\",\n  \"firstname\": \"John\",\n  \"lastname\": \"Doe\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 36, "to": 68 } }
        }
      }
    ],
    [
      "6f997ca5-99d6-4587-beed-cf230b18d649",
      {
        "pageContent": "#### Response\n\n```json\n[\n  {\n    \"carrier_code\": \"flatrate\",\n    \"method_code\": \"flatrate\",\n    \"carrier_title\": \"Flat Rate\",\n    \"method_title\": \"Fixed\",\n    \"amount\": 5,\n    \"base_amount\": 5,\n    \"available\": true,\n    \"error_message\": \"\",\n    \"price_excl_tax\": 5,\n    \"price_incl_tax\": 5\n  }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 70, "to": 87 } }
        }
      }
    ],
    [
      "3231f47d-487e-4926-8ee3-0ebc28e885ff",
      {
        "pageContent": "### Estimate shipping costs specifying an address ID\n\nThis call takes an address ID as input and estimates shipping fees. It returns a list of available shipping methods.\n\n**Service Name:**\n\n`negotiableQuoteShippingMethodManagementV1`\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiable-carts/86/estimate-shipping-methods-by-address-id`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"addressId\": 2\n}\n```\n\n#### Response\n\n```json\n[\n  {\n    \"carrier_code\": \"flatrate\",\n    \"method_code\": \"flatrate\",\n    \"carrier_title\": \"Flat Rate\",\n    \"method_title\": \"Fixed\",\n    \"amount\": 5,\n    \"base_amount\": 5,\n    \"available\": true,\n    \"error_message\": \"\",\n    \"price_excl_tax\": 5,\n    \"price_incl_tax\": 5\n  }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 89, "to": 128 } }
        }
      }
    ],
    [
      "1ed81aff-cdb7-4bdc-83bc-c423349054b4",
      {
        "pageContent": "### Set the shipping and billing information\n\nIn this call, you specify the shipping and billing addresses, as well as the selected `shipping_carrier_code` and `shipping_method_code`. Commerce returns a list of payment options and calculates the order totals.\n\n**Service Name:**\n\n`negotiableQuoteShippingMethodManagementV1`\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiable-carts/86/shipping-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 130, "to": 142 } }
        }
      }
    ],
    [
      "ed0a7cc7-a8a4-4ab1-9bd0-14c479bb2f9c",
      {
        "pageContent": "#### Payload\n\n```json\n{\n  \"addressInformation\": {\n    \"shipping_address\": {\n      \"region\": \"California\",\n      \"region_id\": 12,\n      \"country_id\": \"US\",\n      \"street\": [\n        \"100 Big Tree Avenue\"\n      ],\n      \"postcode\": \"99999\",\n      \"city\": \"San Francisco\",\n      \"telephone\": \"512-555-1111\",\n      \"firstname\": \"Jane\",\n      \"lastname\": \"Doe\"\n    },\n    \"billing_address\": {\n      \"region\": \"New York\",\n      \"region_id\": 43,\n      \"region_code\": \"NY\",\n      \"country_id\": \"US\",\n      \"street\": [\n        \"123 Oak Ave\"\n      ],\n      \"postcode\": \"10577\",\n      \"city\": \"Purchase\",\n      \"firstname\": \"Jane\",\n      \"lastname\": \"Doe\",\n      \"email\": \"jdoe@example.com\",\n      \"telephone\": \"512-555-1111\"\n    },\n    \"shipping_carrier_code\": \"flatrate\",\n    \"shipping_method_code\": \"flatrate\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 144, "to": 181 } }
        }
      }
    ],
    [
      "00f907be-84ac-4545-a5df-e021c76cdd6b",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 183, "to": 183 } }
        }
      }
    ],
    [
      "b79075cd-d499-4bb4-be75-ae38b991f462",
      {
        "pageContent": "```json\n{\n  \"payment_methods\": [\n    {\n      \"code\": \"checkmo\",\n      \"title\": \"Check / Money order\"\n    }\n  ],\n  \"totals\": {\n    \"grand_total\": 5.95,\n    \"base_grand_total\": 5.95,\n    \"subtotal\": 0.95,\n    \"base_subtotal\": 0.95,\n    \"discount_amount\": 0,\n    \"base_discount_amount\": 0,\n    \"subtotal_with_discount\": 0.95,\n    \"base_subtotal_with_discount\": 0.95,\n    \"shipping_amount\": 5,\n    \"base_shipping_amount\": 5,\n    \"shipping_discount_amount\": 0,\n    \"base_shipping_discount_amount\": 0,\n    \"tax_amount\": 0,\n    \"base_tax_amount\": 0,\n    \"weee_tax_applied_amount\": null,\n    \"shipping_tax_amount\": 0,\n    \"base_shipping_tax_amount\": 0,\n    \"subtotal_incl_tax\": 0.95,\n    \"shipping_incl_tax\": 5,\n    \"base_shipping_incl_tax\": 5,\n    \"base_currency_code\": \"USD\",\n    \"quote_currency_code\": \"USD\",\n    \"items_qty\": 1,\n    \"items\": [\n      {\n        \"item_id\": 13,\n        \"price\": 0.95,\n        \"base_price\": 0.95,\n        \"qty\": 1,\n        \"row_total\": 0.95,\n        \"base_row_total\": 0.95,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 185, "to": 224 } }
        }
      }
    ],
    [
      "4594c3f3-2e22-4c72-b917-d26b85f0e1ea",
      {
        "pageContent": "\"row_total_with_discount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,\n        \"tax_percent\": 0,\n        \"discount_amount\": 0,\n        \"base_discount_amount\": 0,\n        \"discount_percent\": 0,\n        \"price_incl_tax\": 0.95,\n        \"base_price_incl_tax\": 0.95,\n        \"row_total_incl_tax\": 0.95,\n        \"base_row_total_incl_tax\": 0.95,\n        \"options\": \"[]\",\n        \"weee_tax_applied_amount\": null,\n        \"weee_tax_applied\": null,\n        \"extension_attributes\": {\n          \"negotiable_quote_item_totals\": {\n            \"cost\": 0,\n            \"catalog_price\": 0.95,\n            \"base_catalog_price\": 0.95,\n            \"catalog_price_incl_tax\": 0.95,\n            \"base_catalog_price_incl_tax\": 0.95,\n            \"cart_price\": 0.95,\n            \"base_cart_price\": 0.95,\n            \"cart_tax\": 0,\n            \"base_cart_tax\": 0,\n            \"cart_price_incl_tax\": 0.95,\n            \"base_cart_price_incl_tax\": 0.95\n          }\n        },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 225, "to": 253 } }
        }
      }
    ],
    [
      "a8ec46ae-a1c4-4809-b329-83713f5f8300",
      {
        "pageContent": "},\n        \"name\": \"Simple Product 2\"\n      }\n    ],\n    \"total_segments\": [\n      {\n        \"code\": \"subtotal\",\n        \"title\": \"Subtotal\",\n        \"value\": 0.95\n      },\n      {\n        \"code\": \"giftwrapping\",\n        \"title\": \"Gift Wrapping\",\n        \"value\": null,\n        \"extension_attributes\": {\n          \"gw_item_ids\": [],\n          \"gw_price\": \"0.00\",\n          \"gw_base_price\": \"0.00\",\n          \"gw_items_price\": \"0.00\",\n          \"gw_items_base_price\": \"0.00\",\n          \"gw_card_price\": \"0.00\",\n          \"gw_card_base_price\": \"0.00\",\n          \"gw_base_tax_amount\": \"0.00\",\n          \"gw_tax_amount\": \"0.00\",\n          \"gw_items_base_tax_amount\": \"0.00\",\n          \"gw_items_tax_amount\": \"0.00\",\n          \"gw_card_base_tax_amount\": \"0.00\",\n          \"gw_card_tax_amount\": \"0.00\",\n          \"gw_price_incl_tax\": \"0.00\",\n          \"gw_base_price_incl_tax\": \"0.00\",\n          \"gw_card_price_incl_tax\": \"0.00\",\n          \"gw_card_base_price_incl_tax\": \"0.00\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 253, "to": 284 } }
        }
      }
    ],
    [
      "31e1bc6a-e50a-44b2-86e2-ac9d1fbd7336",
      {
        "pageContent": "\"gw_items_price_incl_tax\": \"0.00\",\n          \"gw_items_base_price_incl_tax\": \"0.00\"\n        }\n      },\n      {\n        \"code\": \"shipping\",\n        \"title\": \"Shipping & Handling (Flat Rate - Fixed)\",\n        \"value\": 5\n      },\n      {\n        \"code\": \"tax\",\n        \"title\": \"Tax\",\n        \"value\": 0,\n        \"extension_attributes\": {\n          \"tax_grandtotal_details\": []\n        }\n      },\n      {\n        \"code\": \"grand_total\",\n        \"title\": \"Grand Total\",\n        \"value\": 5.95,\n        \"area\": \"footer\"\n      },\n      {\n        \"code\": \"customerbalance\",\n        \"title\": \"Store Credit\",\n        \"value\": 0\n      },\n      {\n        \"code\": \"reward\",\n        \"title\": \"0 Reward points\",\n        \"value\": 0\n      }\n    ],\n    \"extension_attributes\": {\n      \"negotiable_quote_totals\": {\n        \"items_count\": 1,\n        \"quote_status\": \"submitted_by_admin\",\n        \"created_at\": \"2017-05-30 20:41:00\",\n        \"updated_at\": \"2017-05-30 20:41:00\",\n        \"customer_group\": 10,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 285, "to": 325 } }
        }
      }
    ],
    [
      "1bd72f02-5744-4a3b-b2ba-89f96683bf1f",
      {
        "pageContent": "\"base_to_quote_rate\": 1,\n        \"cost_total\": 0,\n        \"base_cost_total\": 0,\n        \"original_total\": 0.95,\n        \"base_original_total\": 0.95,\n        \"original_tax\": 0,\n        \"base_original_tax\": 0,\n        \"original_price_incl_tax\": 0.95,\n        \"base_original_price_incl_tax\": 0.95,\n        \"negotiated_price_type\": null,\n        \"negotiated_price_value\": null\n      },\n      \"reward_points_balance\": 0,\n      \"reward_currency_amount\": 0,\n      \"base_reward_currency_amount\": 0\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 326, "to": 344 } }
        }
      }
    ],
    [
      "c0282a24-b731-4794-970e-67fccc87e92c",
      {
        "pageContent": "## Manage billing addresses\n\nIf the billing address isn't provided through another call, use the `POST /V1/negotiable-carts/:cartId/billing-address` to specify it.\n\n**Service Name:**\n\n`negotiableQuoteBillingAddressManagementV1`\n\n**REST Endpoints:**\n\n```json\nPOST /V1/negotiable-carts/:cartId/billing-address\nGET /V1/negotiable-carts/:cartId/billing-address\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 346, "to": 359 } }
        }
      }
    ],
    [
      "c2f9973e-d8ff-495c-a55b-0dfdd0f309b7",
      {
        "pageContent": "### Set the billing address\n\nThis call assigns a billing address to the specified negotiable quote.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiable-carts/86/billing-address`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{  \"address\": {\n      \"region\": \"New York\",\n      \"region_id\": 43,\n      \"region_code\": \"NY\",\n      \"country_id\": \"US\",\n      \"street\": [\n        \"123 Oak Ave\"\n        ],\n      \"postcode\": \"10577\",\n      \"city\": \"Purchase\",\n      \"firstname\": \"Jane\",\n      \"lastname\": \"Doe\",\n      \"customer_id\": 4,\n      \"email\": \"jdoe@example.com\",\n      \"telephone\": \"(512) 555-1111\",\n      \"same_as_billing\": 1\n  }\n}\n```\n\n#### Response\n\n```json\n// An empty array\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 361, "to": 398 } }
        }
      }
    ],
    [
      "ee5ad023-61e5-4d41-ae9b-c190dd4340f0",
      {
        "pageContent": "### Return the billing address\n\nThis call returns the billing address for the specified negotiable quote.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/negotiable-carts/86/billing-address`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n{\n  \"id\": 192,\n  \"region\": \"New York\",\n  \"region_id\": 43,\n  \"region_code\": \"NY\",\n  \"country_id\": \"US\",\n  \"street\": [\n    \"123 Oak Ave\"\n  ],\n  \"telephone\": \"(512) 555-1111\",\n  \"postcode\": \"10577\",\n  \"city\": \"Purchase\",\n  \"firstname\": \"Jane\",\n  \"lastname\": \"Doe\",\n  \"customer_id\": 1,\n  \"email\": \"jdoe@example.com\",\n  \"same_as_billing\": 0,\n  \"save_in_address_book\": 0\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 400, "to": 438 } }
        }
      }
    ],
    [
      "f2306483-9a69-41b4-b601-490ef21f4afb",
      {
        "pageContent": "## Manage cart coupons\n\nB2B allows coupons to be used toward payment.\n\n**Service Name:**\n\n`negotiableQuoteCouponManagementV1`\n\n**REST Endpoints:**\n\n```json\nPUT /V1/negotiable-carts/:cartId/coupons/:couponCode\nDELETE /V1/negotiable-carts/:cartId/coupons\n```\n\n### Apply a coupon to a negotiable quote\n\nIf the initial quote applies a coupon to the totals, Commerce ignores the coupon when it converts the quote to a negotiable quote. However, you can apply a coupon at checkout.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/negotiable-carts/6/coupons/SAVE5`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 440, "to": 475 } }
        }
      }
    ],
    [
      "2faabd8d-9ed9-4b65-9a46-0a86c1eeff30",
      {
        "pageContent": "## Manage gift cards\n\nB2B allows gift cards to be used as payment.\n\n**Service Name:**\n\n`negotiableQuoteGiftCardAccountManagementV1`\n\n**REST Endpoints:**\n\n```json\nPOST /V1/negotiable-carts/:cartId/giftCards\nDELETE /V1/negotiable-carts/:cartId/giftCards/:giftCardCode\n```\n\n### Apply a gift card to a negotiable quote\n\nIf the initial quote applies a gift card to the totals, Commerce ignores the gift card when it converts the quote to a negotiable quote. However, you can apply a gift card at checkout.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiable-carts/6/giftCards`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"giftCardAccountData\": {\n    \"gift_cards\": [\n      \"00HELHQED6RV\"\n    ]\n  }\n}\n```\n\n#### Response\n\n```json\n// `true`\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 477, "to": 518 } }
        }
      }
    ],
    [
      "31c65cba-7629-450c-80b9-8c9f2281944b",
      {
        "pageContent": "### Delete a gift card from at checkout\n\nThis call removes a gift card that has been applied to a negotiable quote.\n\n**Sample Usage:**\n\n`DELETE <host>/rest/<store_code>/V1/negotiable-carts/6/giftCards/00HELHQED6RV`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 520, "to": 540 } }
        }
      }
    ],
    [
      "c0f8b28c-64b0-496c-a4cf-44b4a458ba7f",
      {
        "pageContent": "## Manage payment information\n\nWhen you submit payment information, Commerce creates an order and sends an order confirmation to the buyer.\n\n**Service Name:**\n\n`negotiableQuotePaymentInformationManagementV1`\n\n**REST Endpoints:**\n\n```json\nPOST /V1/negotiable-carts/:cartId/payment-information\nGET /V1/negotiable-carts/:cartId/payment-information\nPOST /V1/negotiable-carts/:cartId/set-payment-information\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 542, "to": 556 } }
        }
      }
    ],
    [
      "822ebfe3-44de-4da7-87b3-2a7fe417180f",
      {
        "pageContent": "### Set payment information without placing the order\n\nThis call sets payment information and the billing address for the negotiable quote. However, Commerce does not create an order afterward.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiable-carts/86/set-payment-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{  \"paymentMethod\": {\n   \"po_number\": \"A123456\",\n   \"method\": \"checkmo\"\n  },\n  \"billing_address\": {\n   \"region\": \"New York\",\n    \"region_id\": 43,\n    \"region_code\": \"NY\",\n    \"country_id\": \"US\",\n    \"street\": [\n      \"123 Oak Ave\"\n    ],\n    \"postcode\": \"10577\",\n    \"city\": \"Purchase\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"email\": \"jdoe@example.com\",\n    \"telephone\": \"512-555-1111\"\n  }\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the payment information was set\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 558, "to": 597 } }
        }
      }
    ],
    [
      "b7015390-9c6c-424c-813b-df876c018a7f",
      {
        "pageContent": "### Set payment information and place the order\n\nThis call sets payment information and the billing address for the negotiable quote, then creates an order.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiable-carts/86/payment-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{  \"paymentMethod\": {\n    \"po_number\": \"A123456\",\n    \"method\": \"checkmo\"\n  },\n  \"billing_address\": {\n   \"region\": \"New York\",\n    \"region_id\": 43,\n    \"region_code\": \"NY\",\n    \"country_id\": \"US\",\n    \"street\": [\n      \"123 Oak Ave\"\n    ],\n    \"postcode\": \"10577\",\n    \"city\": \"Purchase\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"email\": \"jdoe@example.com\",\n    \"telephone\": \"512-555-1111\"\n  }\n}\n```\n\n#### Response\n\n```json\n// An order ID, such as `83`\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 599, "to": 638 } }
        }
      }
    ],
    [
      "34363a6e-faaa-4414-9b7e-834422ad511e",
      {
        "pageContent": "### Return payment information\n\nThis call payment information and all information from the `totals` object.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/negotiable-carts/86/payment-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 640, "to": 654 } }
        }
      }
    ],
    [
      "0697d2e9-b146-473f-a84d-05194b35916f",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 656, "to": 656 } }
        }
      }
    ],
    [
      "3721f15d-52f1-422b-a91f-3fe1cea6d1e1",
      {
        "pageContent": "```json\n{\n  \"payment_methods\": [\n    {\n      \"code\": \"checkmo\",\n      \"title\": \"Check / Money order\"\n    }\n  ],\n  \"totals\": {\n    \"grand_total\": 5.95,\n    \"base_grand_total\": 5.95,\n    \"subtotal\": 0.95,\n    \"base_subtotal\": 0.95,\n    \"discount_amount\": 0,\n    \"base_discount_amount\": 0,\n    \"subtotal_with_discount\": 0.95,\n    \"base_subtotal_with_discount\": 0.95,\n    \"shipping_amount\": 5,\n    \"base_shipping_amount\": 5,\n    \"shipping_discount_amount\": 0,\n    \"base_shipping_discount_amount\": 0,\n    \"tax_amount\": 0,\n    \"base_tax_amount\": 0,\n    \"weee_tax_applied_amount\": null,\n    \"shipping_tax_amount\": 0,\n    \"base_shipping_tax_amount\": 0,\n    \"subtotal_incl_tax\": 0.95,\n    \"shipping_incl_tax\": 5,\n    \"base_shipping_incl_tax\": 5,\n    \"base_currency_code\": \"USD\",\n    \"quote_currency_code\": \"USD\",\n    \"items_qty\": 1,\n    \"items\": [\n      {\n        \"item_id\": 13,\n        \"price\": 0.95,\n        \"base_price\": 0.95,\n        \"qty\": 1,\n        \"row_total\": 0.95,\n        \"base_row_total\": 0.95,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 658, "to": 697 } }
        }
      }
    ],
    [
      "c546ac0a-7487-468a-a279-38053e5b0796",
      {
        "pageContent": "\"row_total_with_discount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,\n        \"tax_percent\": 0,\n        \"discount_amount\": 0,\n        \"base_discount_amount\": 0,\n        \"discount_percent\": 0,\n        \"price_incl_tax\": 0.95,\n        \"base_price_incl_tax\": 0.95,\n        \"row_total_incl_tax\": 0.95,\n        \"base_row_total_incl_tax\": 0.95,\n        \"options\": \"[]\",\n        \"weee_tax_applied_amount\": null,\n        \"weee_tax_applied\": null,\n        \"extension_attributes\": {\n          \"negotiable_quote_item_totals\": {\n            \"cost\": 0,\n            \"catalog_price\": 0.95,\n            \"base_catalog_price\": 0.95,\n            \"catalog_price_incl_tax\": 0.95,\n            \"base_catalog_price_incl_tax\": 0.95,\n            \"cart_price\": 0.95,\n            \"base_cart_price\": 0.95,\n            \"cart_tax\": 0,\n            \"base_cart_tax\": 0,\n            \"cart_price_incl_tax\": 0.95,\n            \"base_cart_price_incl_tax\": 0.95\n          }\n        },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 698, "to": 726 } }
        }
      }
    ],
    [
      "13eed0fc-f57b-4f26-8af3-f85d11dc42ff",
      {
        "pageContent": "},\n        \"name\": \"Simple Product 2\"\n      }\n    ],\n    \"total_segments\": [\n      {\n        \"code\": \"subtotal\",\n        \"title\": \"Subtotal\",\n        \"value\": 0.95\n      },\n      {\n        \"code\": \"giftwrapping\",\n        \"title\": \"Gift Wrapping\",\n        \"value\": null,\n        \"extension_attributes\": {\n          \"gw_item_ids\": [],\n          \"gw_price\": \"0.00\",\n          \"gw_base_price\": \"0.00\",\n          \"gw_items_price\": \"0.00\",\n          \"gw_items_base_price\": \"0.00\",\n          \"gw_card_price\": \"0.00\",\n          \"gw_card_base_price\": \"0.00\",\n          \"gw_base_tax_amount\": \"0.00\",\n          \"gw_tax_amount\": \"0.00\",\n          \"gw_items_base_tax_amount\": \"0.00\",\n          \"gw_items_tax_amount\": \"0.00\",\n          \"gw_card_base_tax_amount\": \"0.00\",\n          \"gw_card_tax_amount\": \"0.00\",\n          \"gw_price_incl_tax\": \"0.00\",\n          \"gw_base_price_incl_tax\": \"0.00\",\n          \"gw_card_price_incl_tax\": \"0.00\",\n          \"gw_card_base_price_incl_tax\": \"0.00\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 726, "to": 757 } }
        }
      }
    ],
    [
      "4d2f0553-2734-4ef4-a95c-a4b1f35161f5",
      {
        "pageContent": "\"gw_items_price_incl_tax\": \"0.00\",\n          \"gw_items_base_price_incl_tax\": \"0.00\"\n        }\n      },\n      {\n        \"code\": \"shipping\",\n        \"title\": \"Shipping & Handling (Flat Rate - Fixed)\",\n        \"value\": 5\n      },\n      {\n        \"code\": \"tax\",\n        \"title\": \"Tax\",\n        \"value\": 0,\n        \"extension_attributes\": {\n          \"tax_grandtotal_details\": []\n        }\n      },\n      {\n        \"code\": \"grand_total\",\n        \"title\": \"Grand Total\",\n        \"value\": 5.95,\n        \"area\": \"footer\"\n      },\n      {\n        \"code\": \"customerbalance\",\n        \"title\": \"Store Credit\",\n        \"value\": 0\n      },\n      {\n        \"code\": \"reward\",\n        \"title\": \"0 Reward points\",\n        \"value\": 0\n      }\n    ],\n    \"extension_attributes\": {\n      \"negotiable_quote_totals\": {\n        \"items_count\": 1,\n        \"quote_status\": \"submitted_by_admin\",\n        \"created_at\": \"2017-05-30 20:41:00\",\n        \"updated_at\": \"2017-06-09 20:26:49\",\n        \"customer_group\": 10,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 758, "to": 798 } }
        }
      }
    ],
    [
      "3c417f6f-eb08-4974-9999-4387431c43c7",
      {
        "pageContent": "\"base_to_quote_rate\": 1,\n        \"cost_total\": 0,\n        \"base_cost_total\": 0,\n        \"original_total\": 0.95,\n        \"base_original_total\": 0.95,\n        \"original_tax\": 0,\n        \"base_original_tax\": 0,\n        \"original_price_incl_tax\": 0.95,\n        \"base_original_price_incl_tax\": 0.95,\n        \"negotiated_price_type\": null,\n        \"negotiated_price_value\": null\n      },\n      \"reward_points_balance\": 0,\n      \"reward_currency_amount\": 0,\n      \"base_reward_currency_amount\": 0\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 799, "to": 817 } }
        }
      }
    ],
    [
      "1b226a28-679e-47e8-a030-a7596b527043",
      {
        "pageContent": "## Review cart totals\n\nThis call is similar to `GET /V1/negotiable-carts/:cartId/payment-information`, except it does not return payment information.\n\n**Service Name:**\n\n`negotiableQuoteCartTotalRepositoryV1`\n\n**REST Endpoints:**\n\n```json\nGET /V1/negotiable-carts/:cartId/totals\n```\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/negotiable-carts/86/totals`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 819, "to": 843 } }
        }
      }
    ],
    [
      "31ae8a4e-891e-4276-b058-6b605ef4c466",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 845, "to": 845 } }
        }
      }
    ],
    [
      "18874481-0682-46b5-bfc7-762daafae5d7",
      {
        "pageContent": "```json\n{\n  \"totals\": {\n    \"grand_total\": 5.95,\n    \"base_grand_total\": 5.95,\n    \"subtotal\": 0.95,\n    \"base_subtotal\": 0.95,\n    \"discount_amount\": 0,\n    \"base_discount_amount\": 0,\n    \"subtotal_with_discount\": 0.95,\n    \"base_subtotal_with_discount\": 0.95,\n    \"shipping_amount\": 5,\n    \"base_shipping_amount\": 5,\n    \"shipping_discount_amount\": 0,\n    \"base_shipping_discount_amount\": 0,\n    \"tax_amount\": 0,\n    \"base_tax_amount\": 0,\n    \"weee_tax_applied_amount\": null,\n    \"shipping_tax_amount\": 0,\n    \"base_shipping_tax_amount\": 0,\n    \"subtotal_incl_tax\": 0.95,\n    \"shipping_incl_tax\": 5,\n    \"base_shipping_incl_tax\": 5,\n    \"base_currency_code\": \"USD\",\n    \"quote_currency_code\": \"USD\",\n    \"items_qty\": 1,\n    \"items\": [\n      {\n        \"item_id\": 13,\n        \"price\": 0.95,\n        \"base_price\": 0.95,\n        \"qty\": 1,\n        \"row_total\": 0.95,\n        \"base_row_total\": 0.95,\n        \"row_total_with_discount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 847, "to": 883 } }
        }
      }
    ],
    [
      "509fe9a7-5329-4a47-be51-f24185466d8c",
      {
        "pageContent": "\"tax_percent\": 0,\n        \"discount_amount\": 0,\n        \"base_discount_amount\": 0,\n        \"discount_percent\": 0,\n        \"price_incl_tax\": 0.95,\n        \"base_price_incl_tax\": 0.95,\n        \"row_total_incl_tax\": 0.95,\n        \"base_row_total_incl_tax\": 0.95,\n        \"options\": \"[]\",\n        \"weee_tax_applied_amount\": null,\n        \"weee_tax_applied\": null,\n        \"extension_attributes\": {\n          \"negotiable_quote_item_totals\": {\n            \"cost\": 0,\n            \"catalog_price\": 0.95,\n            \"base_catalog_price\": 0.95,\n            \"catalog_price_incl_tax\": 0.95,\n            \"base_catalog_price_incl_tax\": 0.95,\n            \"cart_price\": 0.95,\n            \"base_cart_price\": 0.95,\n            \"cart_tax\": 0,\n            \"base_cart_tax\": 0,\n            \"cart_price_incl_tax\": 0.95,\n            \"base_cart_price_incl_tax\": 0.95\n          }\n        },\n        \"name\": \"Simple Product 2\"\n      }\n    ],\n    \"total_segments\": [\n      {\n        \"code\": \"subtotal\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 884, "to": 915 } }
        }
      }
    ],
    [
      "ad164188-7054-426a-a8f9-b7db9dd75f3b",
      {
        "pageContent": "\"title\": \"Subtotal\",\n        \"value\": 0.95\n      },\n      {\n        \"code\": \"giftwrapping\",\n        \"title\": \"Gift Wrapping\",\n        \"value\": null,\n        \"extension_attributes\": {\n          \"gw_item_ids\": [],\n          \"gw_price\": \"0.00\",\n          \"gw_base_price\": \"0.00\",\n          \"gw_items_price\": \"0.00\",\n          \"gw_items_base_price\": \"0.00\",\n          \"gw_card_price\": \"0.00\",\n          \"gw_card_base_price\": \"0.00\",\n          \"gw_base_tax_amount\": \"0.00\",\n          \"gw_tax_amount\": \"0.00\",\n          \"gw_items_base_tax_amount\": \"0.00\",\n          \"gw_items_tax_amount\": \"0.00\",\n          \"gw_card_base_tax_amount\": \"0.00\",\n          \"gw_card_tax_amount\": \"0.00\",\n          \"gw_price_incl_tax\": \"0.00\",\n          \"gw_base_price_incl_tax\": \"0.00\",\n          \"gw_card_price_incl_tax\": \"0.00\",\n          \"gw_card_base_price_incl_tax\": \"0.00\",\n          \"gw_items_price_incl_tax\": \"0.00\",\n          \"gw_items_base_price_incl_tax\": \"0.00\"\n        }\n      },\n      {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 916, "to": 945 } }
        }
      }
    ],
    [
      "7c6d2a83-1aba-41b5-b3d1-710f4bcc3f8f",
      {
        "pageContent": "},\n      {\n        \"code\": \"shipping\",\n        \"title\": \"Shipping & Handling (Flat Rate - Fixed)\",\n        \"value\": 5\n      },\n      {\n        \"code\": \"tax\",\n        \"title\": \"Tax\",\n        \"value\": 0,\n        \"extension_attributes\": {\n          \"tax_grandtotal_details\": []\n        }\n      },\n      {\n        \"code\": \"grand_total\",\n        \"title\": \"Grand Total\",\n        \"value\": 5.95,\n        \"area\": \"footer\"\n      },\n      {\n        \"code\": \"customerbalance\",\n        \"title\": \"Store Credit\",\n        \"value\": 0\n      },\n      {\n        \"code\": \"reward\",\n        \"title\": \"0 Reward points\",\n        \"value\": 0\n      }\n    ],\n    \"extension_attributes\": {\n      \"negotiable_quote_totals\": {\n        \"items_count\": 1,\n        \"quote_status\": \"submitted_by_admin\",\n        \"created_at\": \"2017-05-30 20:41:00\",\n        \"updated_at\": \"2017-06-09 20:26:49\",\n        \"customer_group\": 10,\n        \"base_to_quote_rate\": 1,\n        \"cost_total\": 0,\n        \"base_cost_total\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 944, "to": 984 } }
        }
      }
    ],
    [
      "9352ec68-d3bb-4ebe-bf5d-29a00c0b8cb6",
      {
        "pageContent": "\"original_total\": 0.95,\n        \"base_original_total\": 0.95,\n        \"original_tax\": 0,\n        \"base_original_tax\": 0,\n        \"original_price_incl_tax\": 0.95,\n        \"base_original_price_incl_tax\": 0.95,\n        \"negotiated_price_type\": null,\n        \"negotiated_price_value\": null\n      },\n      \"reward_points_balance\": 0,\n      \"reward_currency_amount\": 0,\n      \"base_reward_currency_amount\": 0\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-checkout.md",
          "loc": { "lines": { "from": 985, "to": 1000 } }
        }
      }
    ],
    [
      "38fa16ef-efab-41de-8658-eac514846aba",
      {
        "pageContent": "---\ntitle: Manage negotiable quotes\ndescription: Endpoints used to create a negotiable quote\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n# Manage negotiable quotes\n\nThis topic describes the API requests required to initiate a negotiable quote and to prepare it to be converted to an order.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nAll negotiable quote requests require an admin authorization token.\n\n**REST Endpoints:**\n\n```json\nPOST /V1/negotiableQuote/request\nPOST /V1/negotiableQuote/draft\nPOST /V1/negotiableQuote/submitToCustomer\nPOST /V1/negotiableQuote/decline\nPOST /V1/negotiableQuote/pricesUpdated\nGET /V1/negotiableQuote/:quoteId/comments\nGET /V1/negotiableQuote/attachmentContent\nPUT /V1/negotiableQuote/:quoteId/shippingMethod",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "a4438705-28de-4523-b49d-73cb317e3c27",
      {
        "pageContent": "```\n\n**NegotiableQuoteManagementInterface Parameters:**\n\nThe following table lists the parameters defined in `CompanyInterface`.\n\nName | Description | Format | Requirements\n--- | --- | --- |---\n`quoteId` | Identifies the target quote for the operation. | integer | Required\n`quoteName` | The name of the quote to be created. | string | Required\n`comment` | The comment to add to the quote. | string | Optional\n`files` | An array of files to add to the quote | array | Optional\n\nThe buyer or the seller can optionally attach up to 10 files to provide details about the quote. Each file must be converted into base64.\n\nThe `files` array contains the following parameters",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 31, "to": 46 } }
        }
      }
    ],
    [
      "d7293baf-0b08-4ab5-8a6e-33271d827d94",
      {
        "pageContent": "Name | Description | Format | Requirements\n--- | --- | --- |---\n`base64_encoded_data` | A string in base 64 that defines the contents of the added file | string | Required\n`type` | Defines the type of file, such as `text/plain` or `application/pdf`| string | Optional\n`name` | The name of the file to be uploaded, such as `quote.txt` or `quote.pdf`. | string | Required",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 48, "to": 52 } }
        }
      }
    ],
    [
      "095cd7b7-7fb4-4cb6-a13c-8d1c139ec00b",
      {
        "pageContent": "### Request a negotiable quote\n\nBefore initiating a negotiable quote, the following conditions must be met:\n\n-  A regular Commerce quote has been created (`POST /V1/customers/:customerId/carts` or `POST /V1/customers/carts/mine`)\n-  The quote contains items (`POST /V1/carts/:quoteId/items`)\n\nIf the negotiable quote requires a shipping address (for negotiation or tax calculations), add it to the standard quote before initiating the negotiable quote (`POST /V1/carts/:cartId/shipping-information`)\n\n**Service Name:**\n\n`negotiableQuoteNegotiableQuoteManagementV1`\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiableQuote/request`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quoteId\": 3,\n  \"quoteName\": \"First quote\",\n  \"comment\": \"Requesting a 5% discount\",\n  \"files\": [\n    {\n      \"base64_encoded_data\": \"VGhhbmsgeW91IGZvciByZWFkaW5nIHRoZSBNYWdlbnRvIEIyQiBkb2N1bWVudGF0aW9uLg==\",\n      \"name\": \"quote.txt\"\n    }\n  ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 54, "to": 87 } }
        }
      }
    ],
    [
      "c3a83b49-ae3c-407c-b6f0-02f381d51dd7",
      {
        "pageContent": "#### Response\n\n```json\n// `true`, indicating the request was successful\n```\n\nCommerce creates a negotiable quote in the `Created` state.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 89, "to": 95 } }
        }
      }
    ],
    [
      "e54fd59f-c47a-4c06-954e-449ba6a8fa87",
      {
        "pageContent": "### Create draft quote for a buyer\n\n<BetaNote />\n\nThe `POST /V1/negotiableQuote/draft` request creates an empty negotiable quote for a specific buyer in the `Draft` state. The quote is not visible to the buyer.\n\nAfter creating the draft quote, use the [`PUT /V1/negotiableQuote/:quoteId`](negotiable-update.md) request to modify the quote (add products, set discount, rename the quote, etc.).\n\n**Service Name:**\n\n`negotiableQuoteNegotiableQuoteDraftManagementV1`\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiableQuote/draft`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"customerId\": 3\n}\n```\n\n#### Response\n\n```json\n`321`  // An integer indicating the new quoteId\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 97, "to": 127 } }
        }
      }
    ],
    [
      "6edf2b88-1c97-4188-a520-10f7805247ae",
      {
        "pageContent": "### Submit a negotiable quote\n\nA negotiable quote can be submitted for review when it is in one of the following system states:\n\n-  Draft\n-  Created\n-  Processing by admin\n-  Submitted by customer\n\nWhen the negotiable quote is submitted for review:\n\n-  Commerce checks catalog prices (price per item), cart rules, and discounts then recalculates the prices and taxes. The shipping price and the negotiated price are not affected (if they are entered into the quote).\n-  Items that are no longer active or available for this buyer are removed from the quote and prices are recalculated.\n-  The quote state is changed to `Submitted by admin`.\n\n**Service Name:**\n\n`negotiableQuoteNegotiableQuoteManagementV1`\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiableQuote/submitToCustomer`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quoteId\": 3,\n  \"comment\": \"It'd be our pleasure. Please proceed with your order.\"\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 129, "to": 161 } }
        }
      }
    ],
    [
      "6d13d760-c1b4-4cfe-87dd-ee494dce176d",
      {
        "pageContent": "#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 163, "to": 167 } }
        }
      }
    ],
    [
      "a17cf482-82f5-4daf-9813-b6138cb91d77",
      {
        "pageContent": "### Update a quote\n\nUse the `PUT /V1/negotiableQuote/:quoteId` request to update a quote. See [Update a negotiable quote](negotiable-update.md) for use cases.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 169, "to": 171 } }
        }
      }
    ],
    [
      "b21bd58c-543f-4546-b2e3-cf09d451bfa7",
      {
        "pageContent": "### Recalculate prices\n\nThe process of completing a negotiable quote can take days, or even longer. During that time, the prices for the items in the quote may have changed directly or indirectly.  For example, someone could have changed prices in the shared catalogs or adjusted price rules, and the prices in the negotiable quote are stale. The `pricesUpdated` request refreshes item prices, taxes, discounts, cart rules in the negotiable quote. Quotes that are locked for the seller will not be updated.\n\nThe request can be applied to one or more quotes at the same time.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiableQuote/pricesUpdated`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quoteIds\": [3]\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 173, "to": 197 } }
        }
      }
    ],
    [
      "8d9988e2-c786-40a4-acb9-bba95dad0074",
      {
        "pageContent": "### Set the shipping method\n\nA quote must meet the following conditions to set the shipping method:\n\n- The system state must be `created`, `processing_by_admin`, or `submitted_by_customer`\n- The quote must have a shipping address but no shipping method or shipping price.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/negotiableQuote/3/shippingMethod`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"shippingMethod\": \"fixedrate\"\n}\n```\n\n#### Response\n\n```json\n// None\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 199, "to": 224 } }
        }
      }
    ],
    [
      "e1de6c90-7832-46e7-9282-790e168f33ef",
      {
        "pageContent": "### Decline a quote\n\nThe seller can decline a quote in any of the following system states:\n\n-  Created\n-  Processing by admin\n-  Submitted by customer\n\nDeclining a quote removes all custom pricing from the quote. If the buyer places an order, their standard catalog prices and discounts are applied.\n\n**Service Name:**\n\n`negotiableQuoteNegotiableQuoteManagementV1`\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/negotiableQuote/decline`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quoteId\": 80,\n  \"reason\": \"Your order is too large. \"\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 226, "to": 259 } }
        }
      }
    ],
    [
      "6128c407-83bc-4eba-a31d-7fb48b91f590",
      {
        "pageContent": "## Miscellaneous operations\n\nThese tasks are not essential for completing a negotiable quote, but might be useful.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 261, "to": 263 } }
        }
      }
    ],
    [
      "cd5cc49f-66d5-4792-b3b1-7e5a858dc0c6",
      {
        "pageContent": "### List all comments for a quote\n\nCommerce returns all the comments associated with the specified quote ID. The comments are listed in chronological order, with the oldest comment listed first. A `creator_type` value of `3` indicates the buyer made the comment. If the value is `2`, the seller commented.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/negotiableQuote/87/comments`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 265, "to": 279 } }
        }
      }
    ],
    [
      "9683dd3b-1e4d-4d9e-9b73-e5844e0839fb",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 281, "to": 281 } }
        }
      }
    ],
    [
      "4056cbb2-a7f6-4383-bd9d-959d0a08b9e3",
      {
        "pageContent": "```json\n[\n  {\n    \"entity_id\": 6,\n    \"parent_id\": 87,\n    \"creator_type\": 3,\n    \"is_decline\": 0,\n    \"is_draft\": 0,\n    \"creator_id\": 1,\n    \"comment\": \"Requesting a 5% discount\",\n    \"created_at\": \"2017-06-01 21:14:51\",\n    \"attachments\": [\n    {\n      \"attachment_id\": 1,\n      \"comment_id\": 12,\n      \"file_name\": \"hello.txt\",\n      \"file_path\": \"/h/e/hello.txt\",\n      \"file_type\": null\n    }\n    ]\n  },\n  {\n    \"entity_id\": 7,\n    \"parent_id\": 87,\n    \"creator_type\": 2,\n    \"is_decline\": 0,\n    \"is_draft\": 0,\n    \"creator_id\": 1,\n    \"comment\": \"We cannot discount Configurable Product 1, because the price is already discounted. We can adjust the overall price so the remaining items are discounted 5%. Please let us know whether this is acceptable. \",\n    \"created_at\": \"2017-06-01 21:29:15\",\n    \"attachments\": []\n  },\n  {\n    \"entity_id\": 8,\n    \"parent_id\": 87,\n    \"creator_type\": 3,\n    \"is_decline\": 0,\n    \"is_draft\": 0,\n    \"creator_id\": 1,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 283, "to": 321 } }
        }
      }
    ],
    [
      "027f1d5e-6b09-4e32-9b8a-6bb2d36ba1fa",
      {
        "pageContent": "\"comment\": \"That is fine. Please apply the discounts to our order.\",\n    \"created_at\": \"2017-06-01 21:30:30\",\n    \"attachments\": []\n  },\n  {\n    \"entity_id\": 9,\n    \"parent_id\": 87,\n    \"creator_type\": 2,\n    \"is_decline\": 0,\n    \"is_draft\": 0,\n    \"creator_id\": 1,\n    \"comment\": \"We&#039;re taking $27.50 off your quote total. That&#039;s 5% of the cost of the other items in your cart.\",\n    \"created_at\": \"2017-06-01 21:40:19\",\n    \"attachments\": []\n  },\n  {\n    \"entity_id\": 10,\n    \"parent_id\": 87,\n    \"creator_type\": 3,\n    \"is_decline\": 0,\n    \"is_draft\": 0,\n    \"creator_id\": 1,\n    \"comment\": \"Added a shipping address\",\n    \"created_at\": \"2017-06-01 21:43:03\",\n    \"attachments\": []\n  },\n  {\n    \"entity_id\": 11,\n    \"parent_id\": 87,\n    \"creator_type\": 2,\n    \"is_decline\": 0,\n    \"is_draft\": 0,\n    \"creator_id\": 1,\n    \"comment\": \"OK\",\n    \"created_at\": \"2017-06-01 21:44:16\",\n    \"attachments\": []\n  }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 322, "to": 360 } }
        }
      }
    ],
    [
      "d37275fc-e118-4471-9fc5-5da47bdde3ec",
      {
        "pageContent": "### Retrieve a negotiable quote attachment\n\nUse the `attachmentContent` request to retrieve the files (in base64 format) attached to a negotiable quote.\n\n`negotiableQuoteAttachmentContentManagementV1`\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/negotiableQuote/attachmentContent`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n{\n  \"quoteId\": 2,\n  \"quoteName\": \"First quote\",\n  \"files\": [\n    {\n      \"base64_encoded_data\": \"VGhhbmsgeW91IGZvciByZWFkaW5nIHRoZSBNYWdlbnRvIEIyQiBkb2N1bWVudGF0aW9uLg==\",\n      \"name\": \"quote.txt\"\n    }\n  ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-manage.md",
          "loc": { "lines": { "from": 362, "to": 393 } }
        }
      }
    ],
    [
      "aec1f2ab-04d7-41fc-89ed-55ed873051a5",
      {
        "pageContent": "---\ntitle: Place a negotiable quote order\ndescription: An overview of the REST calls needed to place items in a shopping cart, negotiate a quote, and reimburse credit\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Place a negotiable quote order\n\nThis topic describes how REST calls can be used to place items in a shopping cart, initiate and complete the process of negotiating a quote, and reimbursing the buyer's credit upon receipt of payment.\n\n## Prerequisites\n\n-  You have [installed and enabled](https://experienceleague.adobe.com/docs/commerce-admin/b2b/install.html) <Vars.sitedatavarb2b/>.\n-  You have [created a company](company-object.md).\n-  You have an integration or [admin authorization token](../tutorials/orders/order-admin-token.md) to make calls on behalf of seller, and a [customer token](../tutorials/orders/order-create-customer.md#get-the-customers-access-token) to make calls on behalf of the company user.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "8f374392-1f69-4d28-ba0e-2dd38debc9ba",
      {
        "pageContent": "## Prepare the order\n\nThe steps in this section are similar to those in the [Order processing tutorial](https://developer.adobe.com/commerce/webapi/rest/tutorials/orders/), except that different products are added to the cart.\n\n### Create a shopping cart\n\nIn this example, the customer is a company user (buyer).\n\n**Endpoint:**\n\n`POST /V1/carts/mine`\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <customer token>\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```\n\n#### Response\n\n```json\n// The response is the `quoteId`: `5`\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 22, "to": 53 } }
        }
      }
    ],
    [
      "43f39aed-ebe2-4d6e-85af-37db17c07e53",
      {
        "pageContent": "### Add items\n\nThis example adds 15 Pursuit Lumaflex Tone Bands and 10 Harmony Lumaflex Strength Band Kits to the cart. You must make two calls to add these products.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine`\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <customer token>\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"4\" languages=\"JSON, JSON\" />\n\n#### Payload 1\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"24-UG02\",\n    \"qty\": 15,\n    \"quote_id\": \"5\"\n  }\n}\n```\n\n#### Response 1\n\n```json\n{\n    \"item_id\": 12,\n    \"sku\": \"24-UG02\",\n    \"qty\": 15,\n    \"name\": \"Pursuit Lumaflex&trade; Tone Band\",\n    \"price\": 16,\n    \"product_type\": \"simple\",\n    \"quote_id\": \"5\"\n}\n```\n\n#### Payload 2\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"24-UG03\",\n    \"qty\": 10,\n    \"quote_id\": \"5\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 55, "to": 108 } }
        }
      }
    ],
    [
      "630d6784-ff06-4d5d-b3d5-31b9d4e2af76",
      {
        "pageContent": "#### Response 2\n\n```json\n{\n    \"item_id\": 13,\n    \"sku\": \"24-UG03\",\n    \"qty\": 10,\n    \"name\": \"Harmony Lumaflex&trade; Strength Band Kit \",\n    \"price\": 22,\n    \"product_type\": \"simple\",\n    \"quote_id\": \"5\"\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 110, "to": 122 } }
        }
      }
    ],
    [
      "fdb7cdd6-0cff-4f99-8ed8-554a196b9e77",
      {
        "pageContent": "### Set the shipping address\n\nYou can determine shipping costs after initiating a negotiable quote, but doing it now provides a more detailed picture of the final costs to the buyer. If you want to defer setting the shipping address until after the negotiable quote has been created, use the `/V1/negotiable-carts/:cartId/estimate-shipping-methods` call.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine/estimate-shipping-methods`\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <customer token>\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 124, "to": 139 } }
        }
      }
    ],
    [
      "fbc1a539-4701-4b65-89ed-88a87e25d70c",
      {
        "pageContent": "#### Payload\n\n```json\n{  \"address\": {\n      \"region\": \"California\",\n      \"region_id\": 12,\n      \"region_code\": \"CA\",\n      \"country_id\": \"US\",\n      \"street\": [\n        \"100 Big Tree Avenue\"\n        ],\n      \"postcode\": \"99999\",\n      \"city\": \"San Francisco\",\n      \"firstname\": \"Melanie\",\n      \"lastname\": \"Shaw\",\n      \"customer_id\": 2,\n      \"email\": \"mshaw@example.com\",\n      \"telephone\": \"(415) 555-1212\",\n      \"same_as_billing\": 1\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 141, "to": 162 } }
        }
      }
    ],
    [
      "a4f68a99-dfe4-4b17-9308-42f2ac6a8fad",
      {
        "pageContent": "#### Response\n\n```json\n[\n    {\n        \"carrier_code\": \"flatrate\",\n        \"method_code\": \"flatrate\",\n        \"carrier_title\": \"Flat Rate\",\n        \"method_title\": \"Fixed\",\n        \"amount\": 125,\n        \"base_amount\": 125,\n        \"available\": true,\n        \"error_message\": \"\",\n        \"price_excl_tax\": 125,\n        \"price_incl_tax\": 125\n    },\n    {\n        \"carrier_code\": \"tablerate\",\n        \"method_code\": \"bestway\",\n        \"carrier_title\": \"Best Way\",\n        \"method_title\": \"Table Rate\",\n        \"amount\": 5,\n        \"base_amount\": 5,\n        \"available\": true,\n        \"error_message\": \"\",\n        \"price_excl_tax\": 5,\n        \"price_incl_tax\": 5\n    }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 164, "to": 193 } }
        }
      }
    ],
    [
      "0d3af138-837a-434e-b569-d9122e19ca68",
      {
        "pageContent": "### Set shipping and billing information\n\nYou can also set shipping and billing information after initiating a negotiable quote by calling  `POST /V1/negotiable-carts/:cartId/shipping-information`.\n\n**Endpoint:**\n\n`POST /V1/carts/mine/shipping-information`\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <customer token>\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 195, "to": 210 } }
        }
      }
    ],
    [
      "71dc77bb-46eb-49b7-9e12-7e99b6bb829c",
      {
        "pageContent": "#### Payload\n\n```json\n{\n\"addressInformation\": {\n  \"shipping_address\": {\n    \"region\": \"California\",\n    \"region_id\": 12,\n    \"region_code\": \"CA\",\n    \"country_id\": \"US\",\n    \"street\": [\n      \"100 Big Tree Avenue\"\n    ],\n    \"postcode\": \"99999\",\n    \"city\": \"San Francisco\",\n    \"firstname\": \"Melanie\",\n    \"lastname\": \"Shaw\",\n    \"email\": \"mshaw@example.com\",\n    \"telephone\": \"415-555-1212\"\n  },\n  \"billing_address\": {\n   \"region\": \"California\",\n    \"region_id\": 12,\n    \"region_code\": \"CA\",\n    \"country_id\": \"US\",\n    \"street\": [\n      \"100 Big Tree Avenue\"\n    ],\n    \"postcode\": \"99999\",\n    \"city\": \"San Francisco\",\n    \"firstname\": \"Melanie\",\n    \"lastname\": \"Shaw\",\n    \"email\": \"mshaw@example.com\",\n    \"telephone\": \"415-555-1212\"\n  },\n  \"shipping_carrier_code\": \"tablerate\",\n  \"shipping_method_code\": \"bestway\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 212, "to": 251 } }
        }
      }
    ],
    [
      "7139ee32-fde2-4721-bc13-8d720a98c8bc",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 253, "to": 253 } }
        }
      }
    ],
    [
      "df284a30-ca90-4f2a-b5fe-9050fae8825f",
      {
        "pageContent": "```json\n{\n    \"payment_methods\": [\n        {\n            \"code\": \"checkmo\",\n            \"title\": \"Check / Money order\"\n        },\n        {\n            \"code\": \"companycredit\",\n            \"title\": \"Payment on Account\"\n        }\n    ],\n    \"totals\": {\n        \"grand_total\": 373,\n        \"base_grand_total\": 373,\n        \"subtotal\": 460,\n        \"base_subtotal\": 460,\n        \"discount_amount\": -92,\n        \"base_discount_amount\": -92,\n        \"subtotal_with_discount\": 368,\n        \"base_subtotal_with_discount\": 368,\n        \"shipping_amount\": 5,\n        \"base_shipping_amount\": 5,\n        \"shipping_discount_amount\": 0,\n        \"base_shipping_discount_amount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,\n        \"weee_tax_applied_amount\": null,\n        \"shipping_tax_amount\": 0,\n        \"base_shipping_tax_amount\": 0,\n        \"subtotal_incl_tax\": 460,\n        \"shipping_incl_tax\": 5,\n        \"base_shipping_incl_tax\": 5,\n        \"base_currency_code\": \"USD\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 255, "to": 288 } }
        }
      }
    ],
    [
      "2953aaf3-1ed3-4b59-8d79-d78e76b683f7",
      {
        "pageContent": "\"quote_currency_code\": \"USD\",\n        \"items_qty\": 25,\n        \"items\": [\n            {\n                \"item_id\": 12,\n                \"price\": 16,\n                \"base_price\": 16,\n                \"qty\": 15,\n                \"row_total\": 240,\n                \"base_row_total\": 240,\n                \"row_total_with_discount\": 0,\n                \"tax_amount\": 0,\n                \"base_tax_amount\": 0,\n                \"tax_percent\": 0,\n                \"discount_amount\": 48,\n                \"base_discount_amount\": 48,\n                \"discount_percent\": 20,\n                \"price_incl_tax\": 16,\n                \"base_price_incl_tax\": 16,\n                \"row_total_incl_tax\": 240,\n                \"base_row_total_incl_tax\": 240,\n                \"options\": \"[]\",\n                \"weee_tax_applied_amount\": null,\n                \"weee_tax_applied\": null,\n                \"name\": \"Pursuit Lumaflex&trade; Tone Band\"\n            },\n            {\n                \"item_id\": 13,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 289, "to": 316 } }
        }
      }
    ],
    [
      "162077b9-5faa-423c-ab36-40a06dfa8353",
      {
        "pageContent": "\"price\": 22,\n                \"base_price\": 22,\n                \"qty\": 10,\n                \"row_total\": 220,\n                \"base_row_total\": 220,\n                \"row_total_with_discount\": 0,\n                \"tax_amount\": 0,\n                \"base_tax_amount\": 0,\n                \"tax_percent\": 0,\n                \"discount_amount\": 44,\n                \"base_discount_amount\": 44,\n                \"discount_percent\": 20,\n                \"price_incl_tax\": 22,\n                \"base_price_incl_tax\": 22,\n                \"row_total_incl_tax\": 220,\n                \"base_row_total_incl_tax\": 220,\n                \"options\": \"[]\",\n                \"weee_tax_applied_amount\": null,\n                \"weee_tax_applied\": null,\n                \"name\": \"Harmony Lumaflex&trade; Strength Band Kit \"\n            }\n        ],\n        \"total_segments\": [\n            {\n                \"code\": \"subtotal\",\n                \"title\": \"Subtotal\",\n                \"value\": 460\n            },\n            {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 317, "to": 345 } }
        }
      }
    ],
    [
      "94c6a2de-748f-4aa1-b70d-1354fa197c99",
      {
        "pageContent": "{\n                \"code\": \"giftwrapping\",\n                \"title\": \"Gift Wrapping\",\n                \"value\": null,\n                \"extension_attributes\": {\n                    \"gw_item_ids\": [],\n                    \"gw_price\": \"0.0000\",\n                    \"gw_base_price\": \"0.0000\",\n                    \"gw_items_price\": \"0.0000\",\n                    \"gw_items_base_price\": \"0.0000\",\n                    \"gw_card_price\": \"0.0000\",\n                    \"gw_card_base_price\": \"0.0000\"\n                }\n            },\n            {\n                \"code\": \"shipping\",\n                \"title\": \"Shipping & Handling (Best Way - Table Rate)\",\n                \"value\": 5\n            },\n            {\n                \"code\": \"discount\",\n                \"title\": \"Discount\",\n                \"value\": -92\n            },\n            {\n                \"code\": \"tax\",\n                \"title\": \"Tax\",\n                \"value\": 0,\n                \"extension_attributes\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 345, "to": 373 } }
        }
      }
    ],
    [
      "21281fcf-1fbd-4951-99c1-34bdabb1483d",
      {
        "pageContent": "\"tax_grandtotal_details\": []\n                }\n            },\n            {\n                \"code\": \"grand_total\",\n                \"title\": \"Grand Total\",\n                \"value\": 373,\n                \"area\": \"footer\"\n            },\n            {\n                \"code\": \"customerbalance\",\n                \"title\": \"Store Credit\",\n                \"value\": 0\n            },\n            {\n                \"code\": \"reward\",\n                \"title\": \"0 Reward points\",\n                \"value\": 0\n            }\n        ],\n        \"extension_attributes\": {\n            \"reward_points_balance\": 0,\n            \"reward_currency_amount\": 0,\n            \"base_reward_currency_amount\": 0\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 374, "to": 401 } }
        }
      }
    ],
    [
      "1a40523d-86c9-4296-acad-0aa4bf5578ca",
      {
        "pageContent": "### View the cart\n\nThis is an optional step to show the status of the cart before you begin the negotiable quote process.\n\n**Endpoint:**\n\n`GET /V1/carts/mine`\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <customer token>\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 403, "to": 424 } }
        }
      }
    ],
    [
      "38c7ed0f-9e0c-4c11-ade6-340f1e28d253",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 426, "to": 426 } }
        }
      }
    ],
    [
      "6601fae5-78b6-48c7-a9f8-ccf073bdf9ed",
      {
        "pageContent": "```json\n{\n    \"id\": 5,\n    \"created_at\": \"2017-09-14 21:14:15\",\n    \"updated_at\": \"2017-09-15 16:15:54\",\n    \"is_active\": true,\n    \"is_virtual\": false,\n    \"items\": [\n        {\n            \"item_id\": 12,\n            \"sku\": \"24-UG02\",\n            \"qty\": 15,\n            \"name\": \"Pursuit Lumaflex&trade; Tone Band\",\n            \"price\": 16,\n            \"product_type\": \"simple\",\n            \"quote_id\": \"5\"\n        },\n        {\n            \"item_id\": 13,\n            \"sku\": \"24-UG03\",\n            \"qty\": 10,\n            \"name\": \"Harmony Lumaflex&trade; Strength Band Kit \",\n            \"price\": 22,\n            \"product_type\": \"simple\",\n            \"quote_id\": \"5\"\n        }\n    ],\n    \"items_count\": 2,\n    \"items_qty\": 25,\n    \"customer\": {\n        \"id\": 2,\n        \"group_id\": 1,\n        \"default_billing\": \"2\",\n        \"default_shipping\": \"2\",\n        \"created_at\": \"2017-09-11 17:55:52\",\n        \"updated_at\": \"2017-09-14 19:05:40\",\n        \"created_in\": \"Default Store View\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 428, "to": 464 } }
        }
      }
    ],
    [
      "6a9dc1e0-6c4a-448b-976a-1468f42b2f4a",
      {
        "pageContent": "\"email\": \"mshaw@example.com\",\n        \"firstname\": \"Melanie\",\n        \"lastname\": \"Shaw\",\n        \"gender\": 3,\n        \"store_id\": 1,\n        \"website_id\": 1,\n        \"addresses\": [\n            {\n                \"id\": 2,\n                \"customer_id\": 2,\n                \"region\": {\n                    \"region_code\": \"CA\",\n                    \"region\": \"California\",\n                    \"region_id\": 12\n                },\n                \"region_id\": 12,\n                \"country_id\": \"US\",\n                \"street\": [\n                    \"100 Big Tree Avenue\"\n                ],\n                \"telephone\": \"(415) 555-1212\",\n                \"postcode\": \"99999\",\n                \"city\": \"San Francisco\",\n                \"firstname\": \"Melanie\",\n                \"lastname\": \"Shaw\",\n                \"default_shipping\": true,\n                \"default_billing\": true\n            }\n        ],\n        \"disable_auto_group_change\": 0,\n        \"extension_attributes\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 465, "to": 495 } }
        }
      }
    ],
    [
      "3100fd0b-22e6-42a3-b893-21f69bb864d7",
      {
        "pageContent": "\"company_attributes\": {\n                \"customer_id\": 2,\n                \"company_id\": 1,\n                \"status\": 1\n            }\n        }\n    },\n    \"billing_address\": {\n        \"id\": 12,\n        \"region\": \"California\",\n        \"region_id\": 12,\n        \"region_code\": \"CA\",\n        \"country_id\": \"US\",\n        \"street\": [\n            \"100 Big Tree Avenue\"\n        ],\n        \"telephone\": \"415-555-1212\",\n        \"postcode\": \"99999\",\n        \"city\": \"San Francisco\",\n        \"firstname\": \"Melanie\",\n        \"lastname\": \"Shaw\",\n        \"customer_id\": 2,\n        \"email\": \"mshaw@example.com\",\n        \"same_as_billing\": 0,\n        \"save_in_address_book\": 0\n    },\n    \"orig_order_id\": 0,\n    \"currency\": {\n        \"global_currency_code\": \"USD\",\n        \"base_currency_code\": \"USD\",\n        \"store_currency_code\": \"USD\",\n        \"quote_currency_code\": \"USD\",\n        \"store_to_base_rate\": 0,\n        \"store_to_quote_rate\": 0,\n        \"base_to_global_rate\": 1,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 496, "to": 530 } }
        }
      }
    ],
    [
      "396d8339-6312-40fc-a659-8bcc4bd2b278",
      {
        "pageContent": "\"base_to_quote_rate\": 1\n    },\n    \"customer_is_guest\": false,\n    \"customer_note_notify\": true,\n    \"customer_tax_class_id\": 3,\n    \"store_id\": 1,\n    \"extension_attributes\": {\n        \"shipping_assignments\": [\n            {\n                \"shipping\": {\n                    \"address\": {\n                        \"id\": 13,\n                        \"region\": \"California\",\n                        \"region_id\": 12,\n                        \"region_code\": \"CA\",\n                        \"country_id\": \"US\",\n                        \"street\": [\n                            \"100 Big Tree Avenue\"\n                        ],\n                        \"telephone\": \"415-555-1212\",\n                        \"postcode\": \"99999\",\n                        \"city\": \"San Francisco\",\n                        \"firstname\": \"Melanie\",\n                        \"lastname\": \"Shaw\",\n                        \"customer_id\": 2,\n                        \"email\": \"mshaw@example.com\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 531, "to": 556 } }
        }
      }
    ],
    [
      "a53ea3a0-724a-4dbc-a5da-01fe6c6d1682",
      {
        "pageContent": "\"same_as_billing\": 0,\n                        \"save_in_address_book\": 0\n                    },\n                    \"method\": \"tablerate_bestway\"\n                },\n                \"items\": [\n                    {\n                        \"item_id\": 12,\n                        \"sku\": \"24-UG02\",\n                        \"qty\": 15,\n                        \"name\": \"Pursuit Lumaflex&trade; Tone Band\",\n                        \"price\": 16,\n                        \"product_type\": \"simple\",\n                        \"quote_id\": \"5\"\n                    },\n                    {\n                        \"item_id\": 13,\n                        \"sku\": \"24-UG03\",\n                        \"qty\": 10,\n                        \"name\": \"Harmony Lumaflex&trade; Strength Band Kit \",\n                        \"price\": 22,\n                        \"product_type\": \"simple\",\n                        \"quote_id\": \"5\"\n                    }\n                ]\n            }\n        ],",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 557, "to": 583 } }
        }
      }
    ],
    [
      "c4b53a72-0d60-4d2f-b7ac-537885d8c399",
      {
        "pageContent": "],\n        \"negotiable_quote\": {\n            \"quote_id\": null,\n            \"is_regular_quote\": null,\n            \"status\": null,\n            \"negotiated_price_type\": null,\n            \"negotiated_price_value\": null,\n            \"shipping_price\": null,\n            \"quote_name\": null,\n            \"expiration_period\": null,\n            \"email_notification_status\": null,\n            \"has_unconfirmed_changes\": null,\n            \"is_shipping_tax_changed\": null,\n            \"is_customer_price_changed\": null,\n            \"notifications\": null,\n            \"applied_rule_ids\": null,\n            \"is_address_draft\": null,\n            \"deleted_sku\": null,\n            \"creator_id\": null,\n            \"creator_type\": null\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 583, "to": 606 } }
        }
      }
    ],
    [
      "ff869b1b-8249-43d1-b8c5-60662db06f42",
      {
        "pageContent": "## Complete a negotiable quote\n\nIn this example, the buyer requests a negotiable quote. The seller applies a discount to the quote and returns the quote to the buyer. The buyer accepts the discount and completes the order.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nAll negotiable quote calls require an admin authorization token.\n\n### Initiate a negotiable quote\n\nIn this example, the buyer initiates a negotiable quote, asking for a 2.5% discount.\n\nInitiating a negotiable quote places it in the `processing_by_admin` state.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/negotiableQuote/request`\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quoteId\": 5,\n  \"quoteName\": \"Discount request\",\n  \"comment\": \"Requesting a 2.5% discount\"\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 608, "to": 649 } }
        }
      }
    ],
    [
      "4b70f757-2969-42d5-ae56-365c7eb818e8",
      {
        "pageContent": "### Adjust the negotiable quote\n\nThe seller accepts the buyer's request for a 2.5% discount. The `negotiated_price_type` value of `1` indicates a percentage discount.\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`PUT /V1/negotiableQuote/5`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quote\": {\n      \"id\": 5,\n      \"extension_attributes\": {\n        \"negotiable_quote\": {\n         \"negotiated_price_type\": 1,\n          \"negotiated_price_value\": 2.5\n        }\n      }\n    }\n}\n```\n\n#### Response\n\n```json\n// an empty array\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 651, "to": 688 } }
        }
      }
    ],
    [
      "1fddd65e-2d7f-4848-8bd9-72684b1be406",
      {
        "pageContent": "### Return the negotiable quote to the buyer\n\nNow that the seller has updated the quote, it must be returned to the buyer. The buyer will then be able to either accept the offer and begin the checkout process, or request further negotiations.\n\nThis call places the quote in the `submitted_by_admin` state.\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`POST /V1/negotiableQuote/submitToCustomer`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quoteId\": 5,\n  \"comment\": \"We have applied a 2.5% discount to your order.\"\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 690, "to": 722 } }
        }
      }
    ],
    [
      "5c2691fa-83df-4663-9f86-5e1a7b3854ac",
      {
        "pageContent": "### Get the quote with the new amounts\n\nThe price of each item has been reduced by 2.5 percent. In addition, the `negotiable_quote` section of the response has been updated.\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`GET` /V1/carts/5\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 724, "to": 745 } }
        }
      }
    ],
    [
      "1a91d18f-f7dc-438c-9a5d-7b4f1b7ec1ee",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 747, "to": 747 } }
        }
      }
    ],
    [
      "3fc35148-d3b8-47a3-8c56-c4f2c37a2787",
      {
        "pageContent": "```json\n{\n    \"id\": 4,\n    \"created_at\": \"2017-09-14 20:30:38\",\n    \"updated_at\": \"2017-09-14 20:46:20\",\n    \"is_active\": true,\n    \"is_virtual\": false,\n    \"items\": [\n        {\n            \"item_id\": 10,\n            \"sku\": \"24-UG02\",\n            \"qty\": 15,\n            \"name\": \"Pursuit Lumaflex&trade; Tone Band\",\n            \"price\": 12.48,\n            \"product_type\": \"simple\",\n            \"quote_id\": \"4\",\n            \"extension_attributes\": {\n                \"negotiable_quote_item\": {\n                    \"item_id\": 10,\n                    \"original_price\": 16,\n                    \"original_tax_amount\": 0,\n                    \"original_discount_amount\": 3.2\n                }\n            }\n        },\n        {\n            \"item_id\": 11,\n            \"sku\": \"24-UG03\",\n            \"qty\": 10,\n            \"name\": \"Harmony Lumaflex&trade; Strength Band Kit \",\n            \"price\": 17.16,\n            \"product_type\": \"simple\",\n            \"quote_id\": \"4\",\n            \"extension_attributes\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 749, "to": 782 } }
        }
      }
    ],
    [
      "805dcaf2-a35e-4cca-a070-4c52bd7dd79d",
      {
        "pageContent": "\"negotiable_quote_item\": {\n                    \"item_id\": 11,\n                    \"original_price\": 22,\n                    \"original_tax_amount\": 0,\n                    \"original_discount_amount\": 4.4\n                }\n            }\n        }\n    ],\n    \"items_count\": 2,\n    \"items_qty\": 25,\n    \"customer\": {\n        \"id\": 2,\n        \"group_id\": 1,\n        \"default_billing\": \"2\",\n        \"default_shipping\": \"2\",\n        \"created_at\": \"2017-09-11 17:55:52\",\n        \"updated_at\": \"2017-09-14 19:05:40\",\n        \"created_in\": \"Default Store View\",\n        \"email\": \"mshaw@example.com\",\n        \"firstname\": \"Melanie\",\n        \"lastname\": \"Shaw\",\n        \"gender\": 3,\n        \"store_id\": 1,\n        \"website_id\": 1,\n        \"addresses\": [\n            {\n                \"id\": 2,\n                \"customer_id\": 2,\n                \"region\": {\n                    \"region_code\": \"CA\",\n                    \"region\": \"California\",\n                    \"region_id\": 12\n                },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 783, "to": 816 } }
        }
      }
    ],
    [
      "fbdf8c72-9160-4163-b93c-d6d8b998b36d",
      {
        "pageContent": "},\n                \"region_id\": 12,\n                \"country_id\": \"US\",\n                \"street\": [\n                    \"100 Big Tree Avenue\"\n                ],\n                \"telephone\": \"(415) 555-1212\",\n                \"postcode\": \"99999\",\n                \"city\": \"San Francisco\",\n                \"firstname\": \"Melanie\",\n                \"lastname\": \"Shaw\",\n                \"default_shipping\": true,\n                \"default_billing\": true\n            }\n        ],\n        \"disable_auto_group_change\": 0,\n        \"extension_attributes\": {\n            \"company_attributes\": {\n                \"customer_id\": 2,\n                \"company_id\": 1,\n                \"status\": 1\n            }\n        }\n    },\n    \"billing_address\": {\n        \"id\": 7,\n        \"region\": null,\n        \"region_id\": null,\n        \"region_code\": null,\n        \"country_id\": null,\n        \"street\": [\n            \"\"\n        ],\n        \"telephone\": null,\n        \"postcode\": null,\n        \"city\": null,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 816, "to": 851 } }
        }
      }
    ],
    [
      "1e3fa52a-08c0-4f70-b795-116cdf2e8ae0",
      {
        "pageContent": "\"firstname\": null,\n        \"lastname\": null,\n        \"customer_id\": 2,\n        \"email\": \"mshaw@example.com\",\n        \"same_as_billing\": 0,\n        \"save_in_address_book\": 0\n    },\n    \"orig_order_id\": 0,\n    \"currency\": {\n        \"global_currency_code\": \"USD\",\n        \"base_currency_code\": \"USD\",\n        \"store_currency_code\": \"USD\",\n        \"quote_currency_code\": \"USD\",\n        \"store_to_base_rate\": 0,\n        \"store_to_quote_rate\": 0,\n        \"base_to_global_rate\": 1,\n        \"base_to_quote_rate\": 1\n    },\n    \"customer_is_guest\": false,\n    \"customer_note_notify\": true,\n    \"customer_tax_class_id\": 3,\n    \"store_id\": 1,\n    \"extension_attributes\": {\n        \"shipping_assignments\": [\n            {\n                \"shipping\": {\n                    \"address\": {\n                        \"id\": 8,\n                        \"region\": null,\n                        \"region_id\": null,\n                        \"region_code\": null,\n                        \"country_id\": null,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 852, "to": 883 } }
        }
      }
    ],
    [
      "7f09e33d-f8f0-4739-950c-e53f60cca350",
      {
        "pageContent": "\"street\": [\n                            \"\"\n                        ],\n                        \"telephone\": null,\n                        \"postcode\": null,\n                        \"city\": null,\n                        \"firstname\": null,\n                        \"lastname\": null,\n                        \"customer_id\": 2,\n                        \"email\": \"mshaw@example.com\",\n                        \"same_as_billing\": 1,\n                        \"save_in_address_book\": 0\n                    },\n                    \"method\": null\n                },\n                \"items\": [\n                    {\n                        \"item_id\": 10,\n                        \"sku\": \"24-UG02\",\n                        \"qty\": 15,\n                        \"name\": \"Pursuit Lumaflex&trade; Tone Band\",\n                        \"price\": 12.48,\n                        \"product_type\": \"simple\",\n                        \"quote_id\": \"4\",\n                        \"extension_attributes\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 884, "to": 908 } }
        }
      }
    ],
    [
      "c293ca01-d99b-4261-bb81-27ec7633459c",
      {
        "pageContent": "\"negotiable_quote_item\": {\n                                \"item_id\": 10,\n                                \"original_price\": 16,\n                                \"original_tax_amount\": 0,\n                                \"original_discount_amount\": 3.2\n                            }\n                        }\n                    },\n                    {\n                        \"item_id\": 11,\n                        \"sku\": \"24-UG03\",\n                        \"qty\": 10,\n                        \"name\": \"Harmony Lumaflex&trade; Strength Band Kit \",\n                        \"price\": 17.16,\n                        \"product_type\": \"simple\",\n                        \"quote_id\": \"4\",\n                        \"extension_attributes\": {\n                            \"negotiable_quote_item\": {\n                                \"item_id\": 11,\n                                \"original_price\": 22,\n                                \"original_tax_amount\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 909, "to": 929 } }
        }
      }
    ],
    [
      "bd62f1b4-6b98-4395-9916-3031e0e9b2ef",
      {
        "pageContent": "\"original_discount_amount\": 4.4\n                            }\n                        }\n                    }\n                ]\n            }\n        ],\n        \"negotiable_quote\": {\n            \"quote_id\": 4,\n            \"is_regular_quote\": true,\n            \"status\": \"processing_by_admin\",\n            \"negotiated_price_type\": 1,\n            \"negotiated_price_value\": 2.5,\n            \"shipping_price\": null,\n            \"quote_name\": \"Discount request\",\n            \"expiration_period\": null,\n            \"email_notification_status\": 0,\n            \"has_unconfirmed_changes\": false,\n            \"is_shipping_tax_changed\": false,\n            \"is_customer_price_changed\": false,\n            \"notifications\": null,\n            \"applied_rule_ids\": \"2,3\",\n            \"is_address_draft\": false,\n            \"deleted_sku\": null,\n            \"creator_id\": 1,\n            \"creator_type\": 2,\n            \"original_total_price\": 368,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 930, "to": 956 } }
        }
      }
    ],
    [
      "b29d8e8a-2f00-4050-a11b-02b808e3afcd",
      {
        "pageContent": "\"base_original_total_price\": 368,\n            \"negotiated_total_price\": 358.8,\n            \"base_negotiated_total_price\": 358.8\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 957, "to": 963 } }
        }
      }
    ],
    [
      "6d368db2-36c0-4e0c-8fa9-ee343a81d483",
      {
        "pageContent": "### Set the payment information and place the order\n\nThe buyer is now ready to complete the purchase. Since the buyer has already specified the billing address, only the `paymentMethod` information must be included.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nThe `/V1/negotiable-carts/:cartId/payment-information` endpoint runs asynchronously if the `AsyncOrder` module has been enabled. By default, the mutation runs synchronously. [Asynchronous order placement](https://experienceleague.adobe.com/docs/commerce-operations/performance-best-practices/high-throughput-order-processing.html) describes the benefits of enabling the module.\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`/V1/negotiable-carts/3/payment-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{  \"paymentMethod\": {\n    \"po_number\": \"12345\",\n    \"method\": \"companycredit\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 965, "to": 994 } }
        }
      }
    ],
    [
      "ec2d32d5-b273-4d58-ae9d-8d7e2674fcf5",
      {
        "pageContent": "#### Response\n\n```json\n// The response is the order `id`: `4`\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 996, "to": 1000 } }
        }
      }
    ],
    [
      "c364eeec-a5cb-4ba2-bd09-66e9bc5a5d86",
      {
        "pageContent": "## Reimburse company credit\n\nNow that the negotiable quote has been converted into an order, you can issue an invoice and create a shipment in the same manner as a standard B2C order. However, when the company pays for the order, the company's outstanding balance must be credited.\n\nIn this example, the `companyId` is `1`.\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <admin token>\n```\n\n**Endpoint:**\n\n`POST /V1/companyCredits/1/increaseBalance`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"value\": 363.80,\n  \"currency\": \"USD\",\n  \"operationType\": 4,\n  \"comment\": \"Order #3 reimbursed\"\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the reimbursement was successfully applied. Commerce sends an email to the buyer.\n```\n\n## Related information\n\n-  [Order processing tutorial](../tutorials/orders/index.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-order-workflow.md",
          "loc": { "lines": { "from": 1002, "to": 1040 } }
        }
      }
    ],
    [
      "18aa03bf-4d4d-4a05-973b-4d1dc492f7b4",
      {
        "pageContent": "---\ntitle: Integrate with the NegotiableQuote module\ndescription: An overview of the NegotiableQuote module, which allows companies to negotiate prices prior to an order\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\n# Integrate with the NegotiableQuote module\n\nNegotiable quotes are a mechanism that allows a company user (buyer) and a seller (admin user) to negotiate product and/or shipping prices before the company user places an order. The negotiable quote functionality is available for companies only.\n\nThe negotiable quote lifecycle includes a number of stages, as shown in the following diagram.\n\n![Negotiable quote workflow](/../../_images/quote-workflow.svg)\n\nThe quoting process itself can be a continuous process, with a number of repeating cycles until the agreement is reached.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-quote.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "5f12d820-59c0-4893-a81c-c16b3938fd57",
      {
        "pageContent": "-  The buyer creates and submits a negotiable quote\n-  The seller reviews and modifies or declines the quote\n-  The buyer reviews the seller's counteroffer\n-  Upon agreement, the buyer begins the checkout process and the system converts the negotiable quote into an order\n\nA negotiable quote can also be initiated by a seller. In this case, the negotiation lifecycle includes the following stages:\n\n- The seller creates and submits a negotiable quote\n- The buyer reviews and modifies the quote, or begins the checkout process\n- The seller reviews and modifies or declines the quote\n- Upon agreement, the buyer begins the checkout process and the system converts the negotiable quote into an order\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nYou cannot negotiate prices on individual items.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-quote.md",
          "loc": { "lines": { "from": 20, "to": 34 } }
        }
      }
    ],
    [
      "1e4d20a8-f446-4866-9092-8fd36ffae0d2",
      {
        "pageContent": "## Quote statuses\n\nThe quote life cycle is managed via quote statuses. The quoting interface allows both a seller and a buyer to manage items in the quote (add, delete, change quantity) as well as make an offer (or request a quote) for items and/or for shipping.\n\nThe negotiated price set in the negotiable quote is exactly the price that will be applied on a quote during checkout, order generation, and invoice generation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-quote.md",
          "loc": { "lines": { "from": 36, "to": 40 } }
        }
      }
    ],
    [
      "f3676edf-18a2-47a9-8074-9527d37c9ca8",
      {
        "pageContent": "Status | Description | Available actions to seller\n--- | -- | ---\nDraft | The seller has created an empty quote that is not visible to the buyer. | View, submit, save as draft. <br/><br/>Edit the name, expiration date, and item quantity, add or remove product items, enter a proposed price, add comments.\nNew | The buyer submitted the quote, but the seller has not opened it yet. The buyer can edit the quote. <br/><br/>The system creates a new quote record with its own ID. | View\nOpen | The seller has opened the submitted quote and is reviewing/modifying it. The seller can edit the quote, but the buyer cannot. | View, submit, decline, save as draft. <br/><br/>Edit the expiration date, item quantity, add/remove product items, enter a proposed price, add shipping method and shipping price, add comments.\nSubmitted | The seller has reviewed the quote and has sent it back to buyer. The seller cannot edit the quote. | View",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-quote.md",
          "loc": { "lines": { "from": 42, "to": 47 } }
        }
      }
    ],
    [
      "0990d930-f4f1-4d2b-92b2-1db6cc7a9296",
      {
        "pageContent": "Client reviewed | The buyer has opened the quote submitted by seller and is modifying it, by changing items or adding a shipping address. The seller cannot edit the quote. | View\nUpdated | The buyer has re-submitted the quote to seller. The seller can edit the quote, but the buyer cannot. | View, submit, decline, save as draft.<br/><br/>Edit the expiration date, item quantity, add/remove product items, enter a proposed price, add shipping method and shipping price, add comments.\nOrdered | The buyer has purchased the quote, and Adobe Commerce converts the quote to an order. Neither the seller nor the buyer can edit the quote. | View\nClosed | The buyer has cancelled the quote and thus stopped the negotiation process. Neither the seller nor the buyer can edit the quote. <br/><br/>The buyer clicks the **Close** button from the Quote details page. (Not available using Web API) | View",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-quote.md",
          "loc": { "lines": { "from": 48, "to": 51 } }
        }
      }
    ],
    [
      "1382e440-cf80-4c35-b0f5-4ac544cbaa7a",
      {
        "pageContent": "Declined | The seller has declined the quote. All custom pricing (if any) is removed from the quote. In admin panel, the quote is locked for editing.                                                                                                 | View\nExpired | The expiration date has passed on a quote under buyer review. | View",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-quote.md",
          "loc": { "lines": { "from": 52, "to": 53 } }
        }
      }
    ],
    [
      "de30aa0f-2183-49b7-aa75-c2d794995850",
      {
        "pageContent": "The following table maps the internal Commerce system state to the statuses displayed on the Storefront and Admin.\n\nSystem state | Buyer status | Seller status\n--- | --- | ---\nDraft by admin | N/A | Draft\nCreated | Submitted | New\nProcessing by customer | Open | Client Reviewed\nProcessing by admin | Pending | Open\nSubmitted by customer | Submitted | Updated\nSubmitted by admin | Updated | Submitted\nOrdered | Ordered | Ordered\nExpired | Expired | Expired\nDeclined | Declined | Declined\nClosed | Closed | Closed\n\nThe following diagram shows the negotiable quote lifecycle from the perspective of statuses.\n\n![Negotiable quote status](/../../_images/quote-statuses.png)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-quote.md",
          "loc": { "lines": { "from": 55, "to": 72 } }
        }
      }
    ],
    [
      "46c5ffb1-6f7e-433f-8773-de9b0804a35b",
      {
        "pageContent": "---\ntitle: Update a negotiable quote\ndescription: Update a negotiable quote with new prices, items, or expiration dates\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\n# Update a negotiable quote\n\nSellers and buyers can edit a negotiable quote at various times during the quote's lifecycle. Both use the `PUT /V1/negotiableQuote/:quoteId` call to update the quote. This call is defined in the\n`quoteCartRepositoryV1` service and is functionally similar to the\n`PUT /V1/carts/mine` call.\n\nThe `quote` object now contains a set of `negotiable_quote` extension attributes that can be used to update a quote.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-update.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "964ab70d-5f5d-4b00-8673-118092288636",
      {
        "pageContent": "Name | Description | Format | Requirements\n--- | --- | --- | ---\n`quote_id` | Negotiable quote ID | integer | Required to create or update a negotiable quote\n`is_regular_quote` | Flag for the negotiable quote | boolean | Optional\n`status` | One of `created`, `submitted_by_customer`, `submitted_by_admin`, `processing_by_customer`, `processing_by_admin`, `ordered`, `expired`, `declined`, `closed` | string | Optional\n`negotiated_price_type` | 1 - Percentage discount; 2 - Fixed price; 3 - proposed total | integer | Required to set a negotiated price\n`negotiated_price_value` | Discount amount defined by the seller | number | Required to set a negotiated price\n`shipping_price` | Custom price for shipping defined by the seller | number | Optional\n`quote_name` | Name assigned to the negotiable quote | string | Optional\n`expiration_period` | Expiration date for the quote. The format must be `YYYY-MM-DD`. | string | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-update.md",
          "loc": { "lines": { "from": 18, "to": 27 } }
        }
      }
    ],
    [
      "987d7fbf-3f5c-48de-98e9-dd83969d5a2e",
      {
        "pageContent": "`email_notification_status`  | Recent notifications that have been sent | integer | Optional\n`has_unconfirmed_changes`  | Indicates there are some changes that the Admin has not seen yet | boolean | Optional\n`is_shipping_tax_changed`  | Indicates whether shipping taxes have changed | boolean | Optional\n`is_customer_price_changed`  | Indicates whether the price for the product has changed | boolean | Optional\n`notifications`  | Binary mask where the current notifications are stored | integer | Optional\n`applied_rule_ids`  | Applied shopping cart rules | string | Optional\n`is_address_draft`  | Drop the address if the checkout is not completed. | boolean | Optional\n`deleted_sku`  | The SKUs of any deleted products | string | Optional\n`creator_id`  | Quote creator ID | integer | Optional\n`creator_type`  | 1 - Integration; 2 - Admin; 3 - Customer; 4 - Guest | integer | Optional\n`original_total_price`  | Original total price | number | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-update.md",
          "loc": { "lines": { "from": 28, "to": 38 } }
        }
      }
    ],
    [
      "6886eb6f-ca7a-4439-962d-0f4957798465",
      {
        "pageContent": "`base_original_total_price`  | Base original total price | number | Optional\n`negotiated_total_price`  | Negotiated total price | number | Optional\n`base_negotiated_total_price`  | Base negotiated total price | number | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-update.md",
          "loc": { "lines": { "from": 39, "to": 41 } }
        }
      }
    ],
    [
      "9745069d-f15a-40ae-9c17-4077265b584c",
      {
        "pageContent": "### Set a negotiated price\n\nIn every successful negotiate quote, the seller must set the negotiated price.\n\nThe `negotiated_price_type` can have one of the following values:\n\n- `1` - Apply a percentage discount to the quote. The `negotiated_price_value` parameter indicates the percentage.\n- `2` - Apply a fixed amount as a discount for the quote. The `negotiated_price_value` parameter specifies the amount of the discount.\n- `3` - Set a proposed price for the entire quote. The `negotiated_price_value` parameter specifies the proposed price.\n\n**Service Name:**\n\n`quoteCartRepositoryV1`\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/negotiableQuote/6`\n\n<CodeBlock slots=\"heading, code\" repeat=\"1\" languages=\"JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quote\": {\n      \"id\": 6,\n      \"extension_attributes\": {\n        \"negotiable_quote\": {\n         \"negotiated_price_type\": 1,\n          \"negotiated_price_value\": 5\n        }\n      }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-update.md",
          "loc": { "lines": { "from": 43, "to": 77 } }
        }
      }
    ],
    [
      "613a6d8f-bffa-4325-a886-705a73ddfa36",
      {
        "pageContent": "### Add a new quote item to the negotiable quote\n\nThe buyer can add, update, or delete items from the quote under the following conditions:\n\n-  The quote is in one of the following system states: `created`, `processing_by_admin`, or `submitted_by_customer`.\n-  The quote doesn't have a negotiated price.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine/items`\n\n**Headers:**\n\n```terminal\nContent-Type application/json\nAuthorization Bearer <customer token>\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"24-MB01\",\n    \"qty\": 1,\n    \"quote_id\": \"7\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-update.md",
          "loc": { "lines": { "from": 79, "to": 109 } }
        }
      }
    ],
    [
      "133f84ca-fca0-4140-bf62-5f6190bef747",
      {
        "pageContent": "#### Response\n\n```json\n{\n    \"item_id\": 18,\n    \"sku\": \"24-MB01\",\n    \"qty\": 1,\n    \"name\": \"Joust Duffle Bag\",\n    \"price\": 34,\n    \"product_type\": \"simple\",\n    \"quote_id\": \"7\",\n    \"extension_attributes\": {\n        \"negotiable_quote_item\": {\n            \"item_id\": 18,\n            \"original_price\": 34,\n            \"original_tax_amount\": 0,\n            \"original_discount_amount\": 0\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-update.md",
          "loc": { "lines": { "from": 111, "to": 131 } }
        }
      }
    ],
    [
      "f2d3921c-2f60-4837-87e9-89b83ee146a2",
      {
        "pageContent": "### Change the quote expiration date\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/negotiableQuote/6`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"quote\": {\n      \"id\": 6,\n      \"extension_attributes\": {\n        \"negotiable_quote\": {\n         \"expiration_period\": \"2017-09-30\"\n        }\n      }\n    }\n}\n```\n\n#### Response\n\n```json\n// an empty array\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/negotiable-update.md",
          "loc": { "lines": { "from": 133, "to": 160 } }
        }
      }
    ],
    [
      "c0dc97cb-2168-4045-aab0-a0af8fad07d2",
      {
        "pageContent": "---\ntitle: Manage company roles\ndescription: Create and assign user roles for B2B users\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Manage company roles\n\nWithin a company, customers may have different job roles, levels of responsibility, and access to information about their company. <Vars.sitedatavarb2b/> defines several types of system resources, and the Company Admin (or an integration that operates on the behalf of the Company Admin) grants or denies access to these resources using company roles. The Company Admin has access to all resources.\n\n<p><Vars.sitedatavarb2b/> defines the following types of resources:</p>\n\n-  Sales\n-  Purchase Orders\n-  Negotiable quotes\n-  Company profile\n-  Company user management\n-  Company credit",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "a65adcd4-1d00-4b06-bbad-6f1eaeb9165e",
      {
        "pageContent": "Each of these resources contains a hierarchy of other resources. When a Company Admin grants or blocks access to a resource from the store UI, the action applies to all sub-resources, unless explicitly overridden. However, if you grant or block access using web APIs, you must specify each resource individually.\n\nThe following table lists all the resources that are available to the customers defined with a company. To visualize the resource hierarchy, log in to a store as the Company Admin and select **Roles and Permissions**, then click the **Edit** action next to the Default User role.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 25, "to": 27 } }
        }
      }
    ],
    [
      "bfb5dc03-ec3b-4fe9-af10-7cd36700e800",
      {
        "pageContent": "Display name | Resource name\n--- | ---\n&emsp; All | Magento_Company::index\n&emsp; &emsp; Sales | Magento_Sales::all\n&emsp; &emsp; &emsp; Allow Checkout | Magento_Sales::place_order\n&emsp; &emsp; &emsp; &emsp; Use Pay On Account method | Magento_Sales::payment_account\n&emsp; &emsp; &emsp; View orders |  Magento_Sales::view_orders\n&emsp; &emsp; &emsp; View orders of subordinate users |  Magento_Sales::view_orders_sub\n&emsp; &emsp; Quotes | Magento_NegotiableQuote::all\n&emsp; &emsp; &emsp; View | Magento_NegotiableQuote::view_quotes\n&emsp; &emsp; &emsp; &emsp; Request, Edit, Delete | Magento_NegotiableQuote::manage\n&emsp; &emsp; &emsp; &emsp; Checkout with Quote | Magento_NegotiableQuote::checkout\n&emsp; &emsp; &emsp; View quotes of subordinate users | Magento_NegotiableQuote::view_quotes_sub\n&emsp; Order Approvals | Magento_PurchaseOrder::all\n&emsp; &emsp; View My Purchase Orders | Magento_PurchaseOrder:view_purchase_orders",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 29, "to": 43 } }
        }
      }
    ],
    [
      "4cec0bce-c24b-4e8e-9773-23becb5d4b5c",
      {
        "pageContent": "&emsp; &emsp; &emsp; View for subordinates | Magento_PurchaseOrder:view_purchase_orders_for_subordinates\n&emsp; &emsp; &emsp; View for all company | Magento_PurchaseOrder:view_purchase_orders_for_company\n&emsp; &emsp; Auto-approve POs created within this role | Magento_PurchaseOrder:autoapprove_purchase_order\n&emsp; &emsp; Approve Purchase Orders without other approvals | Magento_PurchaseOrder:super_approve_purchase_order\n&emsp; &emsp; View Approval Rules | Magento_PurchaseOrder:view_approval_rules\n&emsp; &emsp; &emsp; Create, Edit and Delete | Magento_PurchaseOrder:manage_approval_rules\n&emsp; &emsp; Company Profile | Magento_Company::view\n&emsp; &emsp; &emsp; Account Information (View) | Magento_Company::view_account\n&emsp; &emsp; &emsp; &emsp; Edit | Magento_Company::edit_account\n&emsp; &emsp; &emsp; Legal Address (View) | Magento_Company::view_address\n&emsp; &emsp; &emsp; &emsp; Edit | Magento_Company::edit_address\n&emsp; &emsp; &emsp; Contacts (View) | Magento_Company::contacts",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 44, "to": 55 } }
        }
      }
    ],
    [
      "818b12da-d8f6-476f-97c5-48dbe9314624",
      {
        "pageContent": "&emsp; &emsp; &emsp; Payment Information (View) | Magento_Company::payment_information\n&emsp; &emsp; &emsp; Shipping Information (View) | Magento_Company::shipping_information\n&emsp; &emsp; Company User Management | Magento_Company::user_management\n&emsp; &emsp; &emsp; View roles and permissions | Magento_Company::roles_view\n&emsp; &emsp; &emsp; &emsp; Manage roles and permissions | Magento_Company::roles_edit\n&emsp; &emsp; &emsp; View users and teams | Magento_Company::users_view\n&emsp; &emsp; &emsp; &emsp; Manage users and teams | Magento_Company::users_edit\n&emsp; &emsp; Company credit | Magento_Company::credit\n&emsp; &emsp; &emsp; view | Magento_Company::credit_history",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 56, "to": 64 } }
        }
      }
    ],
    [
      "8630d6a2-477c-4300-b474-44c1a9f94f19",
      {
        "pageContent": "## Manage company roles\n\nThe Company Admin controls the possible actions for each customer within the company by creating common roles with embedded permissions and then assigning them to company users. In most cases, a few roles will be sufficient to cover all the different possible combinations of permissions needed for a company.\n\n**Service Name:**\n\n`companyRoleRepositoryV1`\n\n**REST Endpoints:**\n\n```json\nPOST /V1/company/role/\nPUT /V1/company/role/:id\nGET /V1/company/role/:roleId\nDELETE /V1/company/role/:roleId\nGET /V1/company/role/",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 66, "to": 81 } }
        }
      }
    ],
    [
      "84e175a4-29b7-4144-8d9a-6d99e481b1a7",
      {
        "pageContent": "```\n\n**RoleInterface Parameters:**\n\nThe following table lists the parameters defined in `RoleInterface`.\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`id` | The role ID | integer  | Required for updates and deletes\n`role_name` | The label assigned to the role | string | Required to create a role\n`permissions` | A list of resources and permissions granted to the role. See the Permissions array table below for details. | Array[string] |  Required to create a role\n`company_id` | The company associated with this role  | integer | Required to create a role\n\n**Permissions array:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 82, "to": 95 } }
        }
      }
    ],
    [
      "a6ce1603-1b25-48e1-9414-0272f169d4fd",
      {
        "pageContent": "Name | Description | Format | Requirements\n--- | --- | --- | ---\n`id` | The permission ID generated by Magento. | integer | Required for updates and deletes\n`role_id` | The role ID to which the permission applies.  | integer | Required to create a role\n`resource_id` | The internal name of a Magento resource, such as `Magento_Sales::place_order`. | string | Required\n`permission` | Either `allow` or `deny`. | string | Required",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 97, "to": 102 } }
        }
      }
    ],
    [
      "dbf89e21-7153-453e-bfca-1a1c31e66ca3",
      {
        "pageContent": "### Create a role\n\nThis example creates a role named \"Junior Buyer\". It allows the assignee to access to all Sales resources except \"View orders of subordinate users\".\n\nAll resources that are not explicitly allowed are denied. You must specify the `Magento_Company::index` resource in all calls.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/company/role`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 104, "to": 114 } }
        }
      }
    ],
    [
      "cbc2a874-cd33-45c1-82be-d7de55c2803f",
      {
        "pageContent": "#### Payload\n\n```json\n{\n  \"role\": {\n    \"role_name\":\"Junior Buyer\",\n    \"permissions\":[\n      {\"resource_id\": \"Magento_Company::index\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::all\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::place_order\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::payment_account\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::view_orders\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::view_orders_sub\", \"permission\":\"deny\"}\n      ],\n    \"company_id\": 2\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 116, "to": 133 } }
        }
      }
    ],
    [
      "ff0eab32-3e9c-4d02-ad55-b725d0a35f23",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 135, "to": 135 } }
        }
      }
    ],
    [
      "cec99f3b-49c5-432f-adbb-bcc7436aad76",
      {
        "pageContent": "```json\n{\n  \"id\": 6,\n  \"role_name\": \"Junior Buyer\",\n  \"permissions\": [\n    {\n      \"id\": 176,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::index\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 177,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::all\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 178,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::place_order\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 179,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::payment_account\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 180,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::view_orders\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 181,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::view_orders_sub\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 182,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::all\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 183,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 137, "to": 185 } }
        }
      }
    ],
    [
      "893402ab-34c8-44a9-be83-dd7fef43b203",
      {
        "pageContent": "\"id\": 183,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::view_quotes\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 184,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::manage\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 185,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::checkout\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 186,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::view_quotes_sub\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 187,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 188,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view_account\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 189,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::edit_account\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 190,\n      \"role_id\": 6,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 185, "to": 228 } }
        }
      }
    ],
    [
      "e95bd55c-1eab-4db4-8e76-ae856bd2e930",
      {
        "pageContent": "\"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view_address\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 191,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::edit_address\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 192,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::contacts\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 193,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::payment_information\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 194,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::user_management\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 195,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::roles_view\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 196,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::roles_edit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 197,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::users_view\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 228, "to": 271 } }
        }
      }
    ],
    [
      "a0773d69-39b3-40d6-acff-3abda5e34af4",
      {
        "pageContent": "\"permission\": \"deny\"\n    },\n    {\n      \"id\": 198,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::users_edit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 199,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::credit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 200,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::credit_history\",\n      \"permission\": \"deny\"\n    }\n  ],\n  \"company_id\": 2,\n  \"extension_attributes\": []\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 272, "to": 296 } }
        }
      }
    ],
    [
      "c5ed835b-3b9d-4153-8b5a-8c72fe8e1f8c",
      {
        "pageContent": "### Update a role\n\nEach update call must include all resources the assignee will have access to.\n\nThis example call adds access to all Negotiable Quote resources except \"View quotes of subordinate users\" to the Junior Buyer role.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/company/role/6`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 298, "to": 308 } }
        }
      }
    ],
    [
      "d961d1fd-f81a-4e0e-aaf8-675c0a45824c",
      {
        "pageContent": "#### Payload\n\n```json\n{\n  \"role\": {\n    \"id\": 6,\n    \"permissions\":[\n      {\"resource_id\": \"Magento_Company::index\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::all\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::place_order\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::payment_account\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::view_orders\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_Sales::view_orders_sub\", \"permission\":\"deny\"},\n      {\"resource_id\": \"Magento_NegotiableQuote::all\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_NegotiableQuote::view_quotes\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_NegotiableQuote::manage\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_NegotiableQuote::checkout\", \"permission\":\"allow\"},\n      {\"resource_id\": \"Magento_NegotiableQuote::view_quotes_sub\", \"permission\":\"deny\"}\n      ],\n    \"company_id\": 2\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 310, "to": 332 } }
        }
      }
    ],
    [
      "dc6656b0-e967-4f42-94f8-6b8425a5ea81",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 334, "to": 334 } }
        }
      }
    ],
    [
      "fefa0bf9-159e-4703-83c6-5ca0b976e927",
      {
        "pageContent": "```json\n{\n  \"id\": 6,\n  \"role_name\": \"Junior Buyer\",\n  \"permissions\": [\n    {\n      \"id\": 226,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::index\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 227,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::all\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 228,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::place_order\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 229,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::payment_account\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 230,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::view_orders\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 231,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::view_orders_sub\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 232,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::all\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 233,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 336, "to": 384 } }
        }
      }
    ],
    [
      "197defc0-2933-4242-bd9c-c7ad8ba3a2e0",
      {
        "pageContent": "\"id\": 233,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::view_quotes\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 234,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::manage\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 235,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::checkout\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 236,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::view_quotes_sub\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 237,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 238,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view_account\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 239,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::edit_account\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 240,\n      \"role_id\": 6,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 384, "to": 427 } }
        }
      }
    ],
    [
      "f8d3b461-3a61-4df4-a809-91913fa73420",
      {
        "pageContent": "\"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view_address\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 241,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::edit_address\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 242,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::contacts\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 243,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::payment_information\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 244,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::user_management\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 245,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::roles_view\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 246,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::roles_edit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 247,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::users_view\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 427, "to": 470 } }
        }
      }
    ],
    [
      "c86ced95-c758-4049-90b4-5c747da207f2",
      {
        "pageContent": "\"permission\": \"deny\"\n    },\n    {\n      \"id\": 248,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::users_edit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 249,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::credit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 250,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::credit_history\",\n      \"permission\": \"deny\"\n    }\n  ],\n  \"company_id\": 2,\n  \"extension_attributes\": []\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 471, "to": 495 } }
        }
      }
    ],
    [
      "d2cdb021-842c-4e88-a8e1-cd62dc6a37b3",
      {
        "pageContent": "### Return all information about a role\n\nThis call returns the `id`, role name, and set of permissions defined within the specified `role_id`.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/company/role/6`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 497, "to": 511 } }
        }
      }
    ],
    [
      "feaf3f1c-573f-4361-8486-ad16cc4c3981",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 513, "to": 513 } }
        }
      }
    ],
    [
      "3cb1473e-cdac-43a9-ae4b-5d36266283be",
      {
        "pageContent": "```json\n{\n  \"id\": 6,\n  \"role_name\": \"Junior Buyer\",\n  \"permissions\": [\n    {\n      \"id\": 226,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::index\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 227,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::all\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 228,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::place_order\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 229,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::payment_account\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 230,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::view_orders\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 231,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Sales::view_orders_sub\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 232,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::all\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 233,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 515, "to": 563 } }
        }
      }
    ],
    [
      "a6b77907-8ed6-4875-b448-ac1a26c6c7ee",
      {
        "pageContent": "\"id\": 233,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::view_quotes\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 234,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::manage\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 235,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::checkout\",\n      \"permission\": \"allow\"\n    },\n    {\n      \"id\": 236,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_NegotiableQuote::view_quotes_sub\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 237,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 238,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view_account\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 239,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::edit_account\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 240,\n      \"role_id\": 6,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 563, "to": 606 } }
        }
      }
    ],
    [
      "3f2dd784-387e-40ca-90d7-4c507fe87133",
      {
        "pageContent": "\"role_id\": 6,\n      \"resource_id\": \"Magento_Company::view_address\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 241,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::edit_address\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 242,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::contacts\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 243,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::payment_information\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 244,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::user_management\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 245,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::roles_view\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 246,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::roles_edit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 247,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::users_view\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 606, "to": 649 } }
        }
      }
    ],
    [
      "fa861223-0d42-4f8c-b2d1-acb2936505fa",
      {
        "pageContent": "\"permission\": \"deny\"\n    },\n    {\n      \"id\": 248,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::users_edit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 249,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::credit\",\n      \"permission\": \"deny\"\n    },\n    {\n      \"id\": 250,\n      \"role_id\": 6,\n      \"resource_id\": \"Magento_Company::credit_history\",\n      \"permission\": \"deny\"\n    }\n  ],\n  \"company_id\": 2,\n  \"extension_attributes\": []\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 650, "to": 674 } }
        }
      }
    ],
    [
      "b4028192-c9fc-476f-86fa-2b391af8c126",
      {
        "pageContent": "### Delete a role\n\nYou cannot delete a role if it is the only role defined within the company.\n\n**Sample Usage:**\n\n`DELETE <host>/rest/<store_code>/V1/company/role/5`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 676, "to": 696 } }
        }
      }
    ],
    [
      "dfd03787-3be7-4ae2-afea-d3130cb9daca",
      {
        "pageContent": "### Search for a role\n\nThe following call returns all roles that have been created for a company  (`company_id` = `2`).\n\nSee [Search using REST APIs](../use-rest/performing-searches.md) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/company/role?searchCriteria[filter_groups][0][filters][0][field]=company_id&searchCriteria[filter_groups][0][filters][0][value]=2&searchCriteria[filter_groups][0][filters][0][condition_type]=eq`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### payload\n\n```json\n// none\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 698, "to": 714 } }
        }
      }
    ],
    [
      "e612a5b4-898b-461b-bd96-35ad249d4297",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 716, "to": 716 } }
        }
      }
    ],
    [
      "4a4a3e2d-5475-40e1-bc88-ffa24a6e1c58",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"id\": 2,\n            \"role_name\": \"Default User\",\n            \"permissions\": [\n                {\n                    \"id\": 26,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::index\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 27,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Sales::all\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 28,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Sales::place_order\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 29,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Sales::payment_account\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 30,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 718, "to": 750 } }
        }
      }
    ],
    [
      "0381877e-79fe-4d31-825a-4b240faa8487",
      {
        "pageContent": "\"role_id\": 2,\n                    \"resource_id\": \"Magento_Sales::view_orders\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 31,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Sales::view_orders_sub\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 32,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_NegotiableQuote::all\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 33,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_NegotiableQuote::view_quotes\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 34,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_NegotiableQuote::manage\",\n                    \"permission\": \"allow\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 751, "to": 777 } }
        }
      }
    ],
    [
      "0dd7a46b-3371-4180-ae2b-63276ee7df79",
      {
        "pageContent": "},\n                {\n                    \"id\": 35,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_NegotiableQuote::checkout\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 36,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_NegotiableQuote::view_quotes_sub\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 37,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::view\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 38,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::view_account\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 39,\n                    \"role_id\": 2,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 778, "to": 805 } }
        }
      }
    ],
    [
      "b12cfea5-8c34-44c2-93e9-035ec5b4f365",
      {
        "pageContent": "\"resource_id\": \"Magento_Company::edit_account\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 40,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::view_address\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 41,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::edit_address\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 42,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::contacts\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 43,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::payment_information\",\n                    \"permission\": \"allow\"\n                },\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 806, "to": 833 } }
        }
      }
    ],
    [
      "2032c4f0-02c0-4559-86c4-8611ab9c000a",
      {
        "pageContent": "{\n                    \"id\": 44,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::user_management\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 45,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::roles_view\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 46,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::roles_edit\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 47,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::users_view\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 48,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::users_edit\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 833, "to": 860 } }
        }
      }
    ],
    [
      "0e8410b2-8f22-469c-9312-0d86dad09655",
      {
        "pageContent": "\"permission\": \"deny\"\n                },\n                {\n                    \"id\": 49,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::credit\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 50,\n                    \"role_id\": 2,\n                    \"resource_id\": \"Magento_Company::credit_history\",\n                    \"permission\": \"deny\"\n                }\n            ],\n            \"company_id\": 2\n        },\n        {\n            \"id\": 3,\n            \"role_name\": \"Senior Buyer\",\n            \"permissions\": [\n                {\n                    \"id\": 51,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::index\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 52,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Sales::all\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 861, "to": 891 } }
        }
      }
    ],
    [
      "1756c98c-d386-4844-ac74-40e851470a08",
      {
        "pageContent": "\"permission\": \"allow\"\n                },\n                {\n                    \"id\": 53,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Sales::place_order\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 54,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Sales::payment_account\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 55,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Sales::view_orders\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 56,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Sales::view_orders_sub\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 57,\n                    \"role_id\": 3,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 892, "to": 920 } }
        }
      }
    ],
    [
      "ebecb98b-251b-4c4a-8f50-a90512ef7eba",
      {
        "pageContent": "\"resource_id\": \"Magento_NegotiableQuote::all\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 58,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_NegotiableQuote::view_quotes\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 59,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_NegotiableQuote::manage\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 60,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_NegotiableQuote::checkout\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 61,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_NegotiableQuote::view_quotes_sub\",\n                    \"permission\": \"allow\"\n                },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 921, "to": 947 } }
        }
      }
    ],
    [
      "45a69f26-749d-4cc7-b2c5-21b9dc4ca7dd",
      {
        "pageContent": "},\n                {\n                    \"id\": 62,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::view\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 63,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::view_account\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 64,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::edit_account\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 65,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::view_address\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 66,\n                    \"role_id\": 3,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 947, "to": 974 } }
        }
      }
    ],
    [
      "6271430a-f1b4-4ebf-8b35-d58989ae00ab",
      {
        "pageContent": "\"resource_id\": \"Magento_Company::edit_address\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 67,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::contacts\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 68,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::payment_information\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 69,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::user_management\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 70,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::roles_view\",\n                    \"permission\": \"allow\"\n                },\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 975, "to": 1002 } }
        }
      }
    ],
    [
      "05497136-90e8-4b66-bf26-01c51be274bc",
      {
        "pageContent": "{\n                    \"id\": 71,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::roles_edit\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 72,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::users_view\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 73,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::users_edit\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 74,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::credit\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 75,\n                    \"role_id\": 3,\n                    \"resource_id\": \"Magento_Company::credit_history\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1002, "to": 1029 } }
        }
      }
    ],
    [
      "e0911fc9-7c43-409a-bfd3-4d82bfc4079c",
      {
        "pageContent": "\"permission\": \"allow\"\n                }\n            ],\n            \"company_id\": 2\n        },\n        {\n            \"id\": 4,\n            \"role_name\": \"Junior Buyer\",\n            \"permissions\": [\n                {\n                    \"id\": 76,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::index\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 77,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Sales::all\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 78,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Sales::place_order\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 79,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Sales::payment_account\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1030, "to": 1060 } }
        }
      }
    ],
    [
      "73e31a8a-f641-40f7-95cc-201216b939af",
      {
        "pageContent": "\"permission\": \"allow\"\n                },\n                {\n                    \"id\": 80,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Sales::view_orders\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 81,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Sales::view_orders_sub\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 82,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_NegotiableQuote::all\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 83,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_NegotiableQuote::view_quotes\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 84,\n                    \"role_id\": 4,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1061, "to": 1089 } }
        }
      }
    ],
    [
      "af90a81a-80e2-4e51-be0b-3ffe953f8f82",
      {
        "pageContent": "\"resource_id\": \"Magento_NegotiableQuote::manage\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 85,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_NegotiableQuote::checkout\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 86,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_NegotiableQuote::view_quotes_sub\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 87,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::view\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 88,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::view_account\",\n                    \"permission\": \"allow\"\n                },\n                {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1090, "to": 1117 } }
        }
      }
    ],
    [
      "5fe74e7d-19b2-442a-b84e-658034c477f6",
      {
        "pageContent": "{\n                    \"id\": 89,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::edit_account\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 90,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::view_address\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 91,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::edit_address\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 92,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::contacts\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 93,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::payment_information\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1117, "to": 1144 } }
        }
      }
    ],
    [
      "76897b6d-d893-4c05-80a4-9145e3cdd124",
      {
        "pageContent": "\"permission\": \"allow\"\n                },\n                {\n                    \"id\": 94,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::user_management\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 95,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::roles_view\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 96,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::roles_edit\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 97,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::users_view\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 98,\n                    \"role_id\": 4,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1145, "to": 1173 } }
        }
      }
    ],
    [
      "ea2e53d9-b567-4461-9312-90c8a8169ba4",
      {
        "pageContent": "\"resource_id\": \"Magento_Company::users_edit\",\n                    \"permission\": \"deny\"\n                },\n                {\n                    \"id\": 99,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::credit\",\n                    \"permission\": \"allow\"\n                },\n                {\n                    \"id\": 100,\n                    \"role_id\": 4,\n                    \"resource_id\": \"Magento_Company::credit_history\",\n                    \"permission\": \"allow\"\n                }\n            ],\n            \"company_id\": 2\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"company_id\",\n                        \"value\": \"2\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 3\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1174, "to": 1207 } }
        }
      }
    ],
    [
      "081640f2-883f-4b6a-bc4b-3160b0e965c6",
      {
        "pageContent": "```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/roles.md",
          "loc": { "lines": { "from": 1209, "to": 1209 } }
        }
      }
    ],
    [
      "73fa0688-68e8-4401-bded-2269f42c4848",
      {
        "pageContent": "---\ntitle: Assign companies to a shared catalog\ndescription: Assign a shared catalog to one or more companies\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\n# Assign companies to a shared catalog\n\nA shared catalog must be assigned to one or more companies before it can be accessed by the company users.\n\n**Service name:**\n\n`sharedCatalogCompanyManagementV1`\n\n**REST endpoints:**\n\n```terminal\nPOST /V1/sharedCatalog/:sharedCatalogId/assignCompanies\nPOST /V1/sharedCatalog/:sharedCatalogId/unassignCompanies\nGET  /V1/sharedCatalog/:sharedCatalogId/companies\n```\n\n**Company parameters:**\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nAlthough you can specify other parameters defined within a `categories` object, the `id` is the only one used to assign or unassign a category to a shared catalog.\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`id` | The company ID number | integer | Required to assign or unassign a company to a shared catalog",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-company.md",
          "loc": { "lines": { "from": 1, "to": 34 } }
        }
      }
    ],
    [
      "dbe4fc4e-e29d-423f-9238-300127c3c42c",
      {
        "pageContent": "## Assign companies to shared catalog\n\nThis action works as an update. It does not replace companies that have already been assigned.\n\nIf a specified company is already assigned to a different shared catalog, this request unassigns the company from the previous catalog and assigns to the new one.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/sharedCatalog/2/assignCompanies`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"companies\": [\n    {\n      \"id\": 1\n    },\n    {\n      \"id\": 2\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-company.md",
          "loc": { "lines": { "from": 36, "to": 67 } }
        }
      }
    ],
    [
      "ff79642a-cd79-4045-a1eb-49dd8ab918d7",
      {
        "pageContent": "## Unassign companies from a shared catalog\n\nWhen you unassign a company from a custom catalog, the system automatically assigns this company to the public shared catalog. You cannot unassign a company from the public catalog.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/sharedCatalog/2/unassignCompanies`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"companies\": [\n    {\n      \"id\": 2\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```\n\n## List the shared catalog companies\n\nThe `GET` call returns an array of company IDs.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/sharedCatalog/2/companies`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n\"[\\\"1\\\",\\\"2\\\"]\"\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-company.md",
          "loc": { "lines": { "from": 69, "to": 117 } }
        }
      }
    ],
    [
      "3b4b07be-3a53-4f04-a8d5-23a142b4b4f5",
      {
        "pageContent": "---\ntitle: Manage shared catalogs\ndescription: Manage public and custom shared catalogs\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Manage custom shared catalogs\n\n<p><Vars.sitedatavarb2b/> provides two types of shared catalog: public and custom. A public catalog is the default shared catalog. It is automatically displayed to all guest customers and to logged-in customers that are not company users. The seller assigns a custom shared catalog to specific companies as configured by admin. There can only be one public catalog, and it cannot be deleted.</p>\n\n**Service name:**\n\n`sharedCatalogSharedCatalogRepositoryV1`\n\n**REST Endpoints:**\n\n```terminal\nPOST /V1/sharedCatalog\nPUT  /V1/sharedCatalog/:id\nGET  /V1/sharedCatalog/:sharedCatalogId\nDELETE  /V1/sharedCatalog/:sharedCatalogId\nGET  /V1/sharedCatalog/",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "9b69d10c-6caf-4e6d-8637-bd316ad295bc",
      {
        "pageContent": "```\n\n**Shared catalog parameters:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 28, "to": 30 } }
        }
      }
    ],
    [
      "ddb18635-e4a1-4881-becc-ca6dd974b448",
      {
        "pageContent": "Name | Description | Format | Requirements\n--- | --- | --- | ---\n`id` | The system-generated shared catalog ID number | integer | Required to update a shared catalog. Not applicable for create operations.\n`name` | The display name of the shared catalog. Must be unique | string | Required to create or update a shared catalog.\n`description` | Describes the shared catalog | string | Optional\n`customer_group_id` | A system-generated ID. It cannot be changed. | integer |  0 - Not logged in; 1 - General; 2 - Wholesale; 3 - Retailer\n`type` | Indicates whether this is a custom or public shared catalog. | integer | Required to create or update a shared catalog. 0 - Custom; 1 - Public\n`created_by` | The user ID of the admin who created the shared catalog | integer | Optional\n`store_id`  | The store ID the shared catalog is assigned to | integer | Required to create or update a shared catalog.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 32, "to": 40 } }
        }
      }
    ],
    [
      "dc457ae0-3454-42d0-91f9-24974eebc05b",
      {
        "pageContent": "`tax_class_id`  | | integer |  Required to create a shared catalog. 2 - Taxable goods; 3 - Retail Customer",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 41, "to": 41 } }
        }
      }
    ],
    [
      "a16cd6da-168a-486d-835a-cf7a687b389b",
      {
        "pageContent": "## Create a custom shared catalog\n\nWhen B2B is enabled, the system creates a public shared catalog named `Default (General)`. Adobe Commerce allows only one public shared catalog at a time. You can create an unlimited number of custom shared catalogs.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/sharedCatalog`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"sharedCatalog\": {\n    \"name\": \"Test\",\n    \"type\": 0,\n    \"store_id\": 0,\n    \"tax_class_id\": 3\n  }\n}\n```\n\n#### Response\n\n```json\n// The shared catalog `id`, such as `2`.\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 43, "to": 70 } }
        }
      }
    ],
    [
      "dc73fd71-c771-41af-9efa-ba72bbc3de41",
      {
        "pageContent": "### Update a characteristics of a shared catalog\n\nYou cannot change the `type` from public (`1`) to custom (`0`). If you need to replace the public shared catalog, create a custom catalog and change its type to public.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/sharedCatalog/2`\n\n```json\n{\n  \"sharedCatalog\": {\n    \"id\": 2,\n    \"name\": \"Custom shared catalog\",\n    \"description\": \"Just a sample custom shared catalog.\",\n    \"type\": 0,\n    \"store_id\": 0,\n    \"tax_class_id\": 3\n  }\n}\n```\n\n#### Response\n\n```json\n// The shared catalog `id`, such as `2`.\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 72, "to": 97 } }
        }
      }
    ],
    [
      "3aa3530f-abc5-43ed-8091-c11af616da84",
      {
        "pageContent": "### Retrieve general information about a shared catalog\n\nThis call returns information about the specified shared catalog.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/sharedCatalog/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n{\n    \"id\": 2,\n    \"name\": \"Custom shared catalog\",\n    \"description\": \"Just a sample custom shared catalog.\",\n    \"customer_group_id\": 4,\n    \"type\": 0,\n    \"created_at\": \"2017-07-21 15:39:40\",\n    \"created_by\": 1,\n    \"store_id\": 0,\n    \"tax_class_id\": 3\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 99, "to": 129 } }
        }
      }
    ],
    [
      "2cfd213c-6f9d-4d5c-8853-d1d5be0d7a05",
      {
        "pageContent": "## Delete a shared catalog\n\nOnly custom shared catalogs can be deleted. When a custom catalog is deleted, the assigned companies are re-assigned to the default public catalog.\n\n**Sample Usage:**\n\n`DELETE <host>/rest/<store_code>/V1/sharedCatalog/2`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n// `true`, indicating the request was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 131, "to": 151 } }
        }
      }
    ],
    [
      "cbbcfb2f-0bef-44bc-92da-6dc24fbaa175",
      {
        "pageContent": "## Search for a shared catalog\n\nThe following search returns all the custom shared catalogs (`type = 0`) in the system.\n\nSee [Search using REST APIs](../use-rest/performing-searches.md) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/sharedCatalog?searchCriteria[filter_groups][0][filters][0][field]=type&searchCriteria[filter_groups][0][filters][0][value]=0&searchCriteria[filter_groups][0][filters][0][condition_type]=eq`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 153, "to": 169 } }
        }
      }
    ],
    [
      "5ee0c275-d537-4bbc-9ff9-d6454fb11162",
      {
        "pageContent": "#### Response\n\n```json\n{\n    \"items\": [\n        {\n            \"id\": 2,\n            \"name\": \"Custom shared catalog\",\n            \"description\": \"Just a sample custom shared catalog.\",\n            \"customer_group_id\": 4,\n            \"type\": 0,\n            \"created_at\": \"2017-07-21 15:39:40\",\n            \"created_by\": 1,\n            \"store_id\": 0,\n            \"tax_class_id\": 3\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"type\",\n                        \"value\": \"0\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 1\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-manage.md",
          "loc": { "lines": { "from": 171, "to": 203 } }
        }
      }
    ],
    [
      "7de318ef-18aa-4f98-8e91-5b49d1fb022a",
      {
        "pageContent": "---\ntitle: Assign categories and products to a shared catalog\ndescription: Review the pre-conditions necessary for adding items to a shared catalog\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\n# Assign categories and products to a shared catalog\n\nThe shared catalog configuration process includes assigning categories and products to the shared catalog. To assign these items to a shared catalog, the following conditions must be met:\n\n-  The category structure must already be defined. You cannot create a new category to be included in a shared catalog. Use endpoints like `POST /V1/categories` to create a new category.\n\n-  Each category must already be populated with products. You cannot add a new product to a category to be included in a shared catalog. Use endpoints like `POST /V1/products` to create a new product.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-product-assign.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "93ee69d6-8bb3-4772-ab36-9288451fb229",
      {
        "pageContent": "## Assign categories\n\nThe `sharedCatalogCategoryManagementV1` service is based on `catalogCategoryManagementV1`. To view a store's category structure, call `GET /V1/categories`.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nProducts that are defined within a category are not included when you assign a category to a shared catalog. You must add products separately.\n\n**Service name:**\n\n`sharedCatalogCategoryManagementV1`\n\n**REST Endpoints:**\n\n```terminal\nPOST /V1/sharedCatalog/:id/assignCategories\nPOST /V1/sharedCatalog/:id/unassignCategories\nGET  /V1/sharedCatalog/:id/categories\n```\n\n**Category parameters:**\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nAlthough you can specify other parameters defined within a `categories` object, the `id` is the only one used to assign or unassign a category to a shared catalog.\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`id` | The category ID number | integer | Required to assign or unassign a category",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-product-assign.md",
          "loc": { "lines": { "from": 18, "to": 46 } }
        }
      }
    ],
    [
      "9b5f55ca-8047-4a99-9c2d-92b336d69381",
      {
        "pageContent": "### Assign categories to shared catalog\n\nThe following example adds the Luma Gear category (`id=3`) as well as its subcategories (`id=4,5,6`) to a custom shared catalog.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/sharedCatalog/2/assignCategories`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"categories\": [\n    {\n      \"id\": 3\n    },\n    {\n      \"id\": 4\n    },\n    {\n      \"id\": 5\n    },\n    {\n      \"id\": 6\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the operation was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-product-assign.md",
          "loc": { "lines": { "from": 48, "to": 83 } }
        }
      }
    ],
    [
      "65a8358a-1ace-4905-889a-f1f9de4ac396",
      {
        "pageContent": "### Unassign categories from a shared catalog\n\nWhen you unassign a category from a shared catalog, Commerce also removes its products from the shared catalog. If a product is assigned to multiple categories, then Commerce removes the product from the unassigned category only.\n\nThe following example removes two categories from the shared catalog.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/sharedCatalog/2/unassignCategories`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"categories\": [\n    {\n      \"id\": 7\n    },\n\n    {\n      \"id\": 8\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the operation was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-product-assign.md",
          "loc": { "lines": { "from": 85, "to": 117 } }
        }
      }
    ],
    [
      "1c55f747-7f60-4003-abdd-13d615c4f88f",
      {
        "pageContent": "### List the shared catalog categories\n\nThe `GET` call returns an array of catalog IDs.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/sharedCatalog/2/categories`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n[\n  3,\n  4,\n  5,\n  6\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-product-assign.md",
          "loc": { "lines": { "from": 119, "to": 144 } }
        }
      }
    ],
    [
      "fefac1ea-0e10-43d4-bea9-7e9119303002",
      {
        "pageContent": "## Assign products\n\nThe `sharedCatalogProductManagementV1` service is based on `catalogProductManagementV1`. To return a list of products defined within a category, call `GET /V1/categories/:categoryId/products`.\n\n**Service name:**\n\n`sharedCatalogProductManagementV1`\n\n**REST endpoints:**\n\n```terminal\nPOST  /V1/sharedCatalog/:id/assignProducts\nPOST  /V1/sharedCatalog/:id/unassignProducts\nGET  /V1/sharedCatalog/:id/products\n```\n\n**Category parameters:**\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nAlthough you can specify other parameters defined within a `products` object, the `sku` is the only one used to assign or unassign a product to a shared catalog.\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`sku` | The product's SKU identifier | string | Required to assign or unassign a product to a shared catalog",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-product-assign.md",
          "loc": { "lines": { "from": 146, "to": 170 } }
        }
      }
    ],
    [
      "b49b81dc-8655-42a7-af87-7d423fd42f4e",
      {
        "pageContent": "### Assign products to shared catalog\n\nThe following example adds two products each in the Bags, Fitness Equipment, and Watches categories to a custom shared catalog. The specified products do not have to be in the same category.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/sharedCatalog/2/assignProducts`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n \"products\": [\n     {\n         \"sku\": \"24-MB01\"\n     },\n     {\n         \"sku\": \"24-MB04\"\n     },\n     {\n         \"sku\": \"24-UG06\"\n     },\n     {\n         \"sku\": \"24-UG07\"\n     },\n     {\n         \"sku\": \"24-MG04\"\n     },\n     {\n         \"sku\": \"24-MG01\"\n     }\n ]\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the operation was successful\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-product-assign.md",
          "loc": { "lines": { "from": 172, "to": 213 } }
        }
      }
    ],
    [
      "e24c3505-9e47-4987-9dbc-0bac2a4b8ccd",
      {
        "pageContent": "### Unassign products from the shared catalog\n\nUnassigning a product does not remove it from its category or categories.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/sharedCatalog/2/unassignProducts`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"products\": [\n   {\n     \"sku\": \"24-MG01\"\n   }\n  ]\n}\n```\n\n#### Response\n\n```json\n// `true`, indicating the operation was successful\n```\n\n### List the shared catalog products\n\nThe `GET` call returns an array of SKUs.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/sharedCatalog/2/products`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// Not applicable\n```\n\n#### Response\n\n```json\n[\n  \"24-MB01\",\n  \"24-MB04\",\n  \"24-UG06\",\n  \"24-UG07\",\n  \"24-MG04\"\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-cat-product-assign.md",
          "loc": { "lines": { "from": 215, "to": 269 } }
        }
      }
    ],
    [
      "eb53f681-75a3-4bfd-8567-2725d8116bd7",
      {
        "pageContent": "---\ntitle: Integrate with the SharedCatalog module\ndescription: Overview of the SharedCatalog module\nedition: ee\nkeywords:\n  - B2B\n  - REST\n---\n\nimport * as Vars from '../../../data/vars.js';\n\n# Integrate with the SharedCatalog module\n\nA shared catalog is an entity that allows a seller to set special rules for the products that company users (buyers) can purchase. By using shared catalogs, a seller can apply different pricing levels for different companies. Also, shared catalogs allow a seller to configure the visibility of categories and products specifically for different companies.\n\nProducts and categories are not created or stored within a shared catalog. The products are defined in the master catalog. (The master catalog is the Adobe Commerce standard product catalog and is visible to the seller only.) The categories are created within the Categories page, and the seller determines whether a category should be displayed in each shared catalog.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-catalog.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "6e900f16-92ed-4de1-8389-949ccea2d202",
      {
        "pageContent": "Custom shared catalogs can be assigned to companies only. They cannot be set for individual users. A company can be assigned only one shared catalog.\n\n<p><Vars.sitedatavarb2b /> provides two types of shared catalog: public and custom. A public catalog is the default shared catalog. It is automatically displayed to all guest customers and to logged-in customers that are not company users, though a company can be assigned the public catalog. The seller assigns a custom shared catalog to specific companies. There can only be one public catalog, and it cannot be deleted.</p>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-catalog.md",
          "loc": { "lines": { "from": 18, "to": 20 } }
        }
      }
    ],
    [
      "5b7399ec-396a-4b33-8f66-5bc2a3b85390",
      {
        "pageContent": "## Related information\n\n-  [Manage prices for multiple products](../modules/catalog/catalog-pricing.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/b2b/shared-catalog.md",
          "loc": { "lines": { "from": 22, "to": 24 } }
        }
      }
    ],
    [
      "a95772c6-36e2-46ba-aa8c-433208f6fb98",
      {
        "pageContent": "---\ntitle: REST API Overview\ndescription: Overview of the Adobe Commerce and Magento Open Source REST API documentation.\nkeywords:\n  - REST\n--- \n \n# REST API Overview\n\nThe REST API documentation describes the REST APIs that are available in Adobe Commerce and Magento Open Source.\n\n<TextBlock slots=\"image, heading, text, links\" width=\"50%\" />\n\n![Quick Reference](../_images/viewtable.png)\n\n## Quick Reference\n\nAccess the API documentation in Redocly\n\n-  [Learn more](quick-reference/)\n\n<TextBlock slots=\"image, heading, text, links\" width=\"50%\" />\n\n![Using REST](../_images/workflow.png)\n\n## Using REST\n\nLearn how to search, filter, and more using REST endpoints\n\n-  [Learn more](use-rest/)\n\n<TextBlock slots=\"image, heading, text, links\" width=\"50%\" />\n\n![Tutorials](../_images/123.png)\n\n## Tutorials\n\nGet an introduction to web APIs through these step-by-step tutorials\n\n-  [Learn more](tutorials/)\n\n<TextBlock slots=\"image, heading, text, links\" width=\"50%\" />\n\n![Modules](../_images/layers.png)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/index.md",
          "loc": { "lines": { "from": 1, "to": 44 } }
        }
      }
    ],
    [
      "73eb26c3-1ecd-4600-a897-9ae00af67914",
      {
        "pageContent": "## Modules\n\nLearn about managing your catalog, managing your inventory, and refunding sales using the REST API\n\n-  [Learn more](modules/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/index.md",
          "loc": { "lines": { "from": 46, "to": 50 } }
        }
      }
    ],
    [
      "1474dc07-fcd6-4b15-a2c2-b6983c8c04a3",
      {
        "pageContent": "---\ntitle: Inventory mass actions\ndescription: Make bulk inventory changes using the REST API\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Inventory mass actions\n\nAdobe Commerce provides several endpoints that allow Multi Source merchants to make quick updates across multiple products. This is helpful for transferring inventory between sources and removing a source without editing each product individually.\n\n*  The bulk transfer endpoint moves all quantities of products from one source to another.\n*  The bulk assign source endpoint adds sources to multiple products.\n*  The bulk unassign source endpoint removes sources from the products. Any inventory quantity assigned to that source is no longer available.\n\n**Service names:**\n\n```http\ninventoryCatalogApiBulkInventoryTransferV1\ninventoryCatalogApiBulkPartialInventoryTransferV1\ninventoryCatalogApiBulkSourceAssignV1\ninventoryCatalogApiBulkSourceUnassignV1",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "91961fc3-17b9-4556-adf6-196795a9408c",
      {
        "pageContent": "```\n\n**REST endpoints:**\n\n```http\nPOST /V1/inventory/bulk-product-source-transfer\nPOST /V1/inventory/bulk-partial-source-transfer\nPOST /V1/inventory/bulk-product-source-assign\nPOST /V1/inventory/bulk-product-source-unassign\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 24, "to": 33 } }
        }
      }
    ],
    [
      "a6c739d7-b2c0-4b2c-be7a-1e6a57c5e002",
      {
        "pageContent": "## Bulk transfer\n\nMulti Source merchants may need to transfer product inventory from one source location to another. For example, the merchant might decide to stop shipping specific products from a location or completely close the facility. In these cases, all operations for those products move to a new location.\n\nBulk transfer allows you to specify multiple products, the origin source from which to transfer inventory, and the destination source to receive quantities. The bulk transfer process moves all product inventory from the origin source. Use [bulk partial transfer](#bulk-partial-transfer) to transfer specific quantities of one or more products.\n\n Unlike an unassign source action, Commerce also retains product data by moving the status (in stock/out of stock), and the Notify Quantity from one source to another. If the origin and destination sources are in different stocks, performing a bulk transfer affects the aggregated Salable Quantity and reservations for in-progress orders.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 35, "to": 41 } }
        }
      }
    ],
    [
      "a2e4abb1-093f-483f-aeb6-e723c8bddf6f",
      {
        "pageContent": "**Parameters:**\n\nName | Description | Type | Requirements\n--- | --- | --- | ---\n`skus` | A  comma-separated list of existing SKUs to transfer | Array | Required\n`originSource` | The current source of the SKUs | String | Required\n`destinationSource` | The target source for the SKUs. This source must be already defined. | String | Required\n`unassignFromOrigin` | If `true`, the current source is removed as a source for the products. If `false`, the original source is retained, but the products are marked as being out of stock with a quantity of 0. | Boolean | Required\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/bulk-product-source-transfer`\n\n**Payload:**\n\n```json\n{\n  \"skus\": [\n    \"testConfigProduct-red\",\n    \"testConfigProduct-blue\"\n  ],\n  \"originSource\": \"default\",\n  \"destinationSource\": \"central\",\n  \"unassignFromOrigin\": true\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 43, "to": 67 } }
        }
      }
    ],
    [
      "db60ab03-bef8-4ea5-8e48-c2ccdafd4996",
      {
        "pageContent": "```\n\n**Response:**\n\n`true` if the request was successful",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 68, "to": 72 } }
        }
      }
    ],
    [
      "9fb87bc9-a31d-4e93-b550-1d3174ac3e19",
      {
        "pageContent": "## Bulk partial transfer\n\nYou can use the `V1/inventory/bulk-partial-source-transfer` endpoint to transfer a limited quantity of a product from one source to another. As with full transfers, Commerce keeps track of the stock status as well as the Notify Quantity when you move products from one source to another.\n\n**Parameters:**\n\nName | Description | Type | Requirements\n--- | --- | --- | ---\n`originSourceCode` | The current source of the products to be transferred | String | Required\n`destinationSourceCode` | The target source. This source must be already defined. | String | Required\n`items` | An array containing a set of products to be transferred | Array | Required\n`sku` | A product to transfer | String | Required\n`qty` | The quantity of the product to transfer | Float | Required\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/bulk-partial-source-transfer`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 74, "to": 92 } }
        }
      }
    ],
    [
      "84fa02b2-a29a-4522-970f-85d7c72ad637",
      {
        "pageContent": "**Payload:**\n\n```json\n{\n  \"originSourceCode\": \"default\",\n  \"destinationSourceCode\": \"central\",\n  \"items\": [\n    {\n      \"sku\": \"testConfigProduct-yellow\",\n      \"qty\": 10\n    },\n    {\n      \"sku\": \"testConfigProduct-green\",\n      \"qty\": 50\n    }\n  ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 92, "to": 108 } }
        }
      }
    ],
    [
      "d0d3f67f-b636-4648-9fc6-58916d1ea3cf",
      {
        "pageContent": "```\n\n**Response:**\n\nAn empty array",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 109, "to": 113 } }
        }
      }
    ],
    [
      "960d5a0c-dae7-4d21-a169-2abcca803916",
      {
        "pageContent": "## Bulk assign sources\n\nUse the `POST /V1/inventory/bulk-product-source-assign` endpoint to add one or more sources to your products. This endpoint helps when creating and assigning custom sources to your default or custom stocks and preparing new locations and inventory.\n\nAfter adding new custom sources, you can add inventory quantities per product or for multiple products using the `POST V1/inventory/source-items` endpoint. [Assign products to a source](/rest/modules/inventory/manage-source-items/#assign-products-to-a-source) describes this endpoint.\n\nThe sources are added to the products with an inventory quantity of 0. You can add inventory amounts as available per source.\n\n**Parameters:**\n\nName | Description | Type | Requirements\n--- | --- | --- | ---\n`skus` | A comma-separated list of existing SKUs to assign | Array | Required\n`sourceCodes` | A comma-separated list of existing sources | Array | Required\n\n**Sample usage:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 115, "to": 130 } }
        }
      }
    ],
    [
      "2d678c79-037f-4891-9f09-aed4dd4acc9d",
      {
        "pageContent": "**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/bulk-product-source-assign`\n\n**Payload:**\n\n```json\n{\n  \"skus\": [\n    \"new-product3\",\n    \"new-product4\"\n  ],\n  \"sourceCodes\": [\n    \"central\",\n    \"east\"\n  ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 130, "to": 146 } }
        }
      }
    ],
    [
      "d901df4b-a318-47ef-9a5b-b22d5280b25c",
      {
        "pageContent": "```\n\n**Response:**\n\nAn ID that identifies the request, such as `1`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 147, "to": 151 } }
        }
      }
    ],
    [
      "5f0b5230-882d-42ed-bbf8-cf8a571632dd",
      {
        "pageContent": "## Bulk unassign sources\n\nWhen unassigning a source from a product, you are indicating the product will no longer be stocked at that location. This process completely clears all inventory data (quantity, stock status, Notify Quantity threshold) for the source currently assigned to the product. If you need to move the existing inventory to a new location, consider using the bulk transfer endpoint (`POST /V1/inventory/bulk-product-source-transfer`).\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nWhen you unassign a source from a product, Commerce deletes all source data, including inventory amounts, from that product. This can affect salable quantities and reservations for unprocessed orders. After checkout and before shipment, all product quantities in the order have associated reservations. If you unassign a source, you can cause issues with reservations and processing orders.\n\nWe strongly recommend completing all orders and shipments for those products prior to removing the source.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 153, "to": 161 } }
        }
      }
    ],
    [
      "67c3effb-99d1-4475-9808-c9ebb95ecf0d",
      {
        "pageContent": "If you unassign all sources from a product, you will not be able to sell the product.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/bulk-product-source-unassign`\n\n**Payload:**\n\n```json\n{\n  \"skus\": [\n    \"testSimpleProduct\",\n    \"testSimpleProduct2\"\n  ],\n  \"sourceCodes\": [\n    \"default\"\n  ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 163, "to": 180 } }
        }
      }
    ],
    [
      "1002b87f-a42f-4404-a67f-bc4df7a40e24",
      {
        "pageContent": "```\n\n**Response:**\n\nAn ID that identifies the request, such as `1`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/bulk-inventory.md",
          "loc": { "lines": { "from": 181, "to": 185 } }
        }
      }
    ],
    [
      "6f9e429d-fe0c-44cb-98c0-80bd49891047",
      {
        "pageContent": "---\ntitle: Check salable quantities\ndescription: Check your inventory and retrieve the salable quantity and available quantity using the REST API \nkeywords:\n  - Inventory\n  - REST\n---\n \n# Check salable quantities\n\nAdobe Commerce provides several endpoints that allow you to check whether a product from a specified stock is salable and the available quantity.\n\n**Service names:**\n\n```http\ninventorySalesApiGetProductSalabilityV1\ninventorySalesApiIsProductSalableV1\ninventorySalesApiAreProductsSalableV1\ninventorySalesApiIsProductSalableForRequestedQtyV1\ninventorySalesApiStockResolverV1\n```\n\n**REST endpoints:**\n\n```http\nGET /V1/inventory/get-product-salable-quantity/:sku/:stockId\nGET /V1/inventory/is-product-salable/:sku/:stockId\nGET /V1/inventory/are-products-salable/:skus[]/:stockId\nGET /V1/inventory/is-product-salable-for-requested-qty/:sku/:stockId/:requestedQty\nGET /V1/inventory/stock-resolver/:type/:code",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/check-salable-quantity.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "b37b98b7-b1a5-49de-9434-dd583782b07f",
      {
        "pageContent": "```\n\n**Path parameters:**\n\nName | Description                                                                            | Type\n--- |----------------------------------------------------------------------------------------| ---\n`sku` | The SKU of the product                                                                 | String\n`skus` | An array with the SKU list of products                                                 | Array of Strings\n`stock_id` | The ID of the stock the product is assigned to                                         | Integer\n`requestedQty` | The requested quantity of products                                                     | Float\n`type` | The type of sales channel the stock is assigned to. For 2.3, this value must be `website`. | String\n`code` | The code of the sales channel (website)                                                | String",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/check-salable-quantity.md",
          "loc": { "lines": { "from": 31, "to": 42 } }
        }
      }
    ],
    [
      "2c48d520-0f27-4acc-a135-7227e1ec6399",
      {
        "pageContent": "## Check the available quantity of a salable product\n\nThis call returns the available quantity of a product assigned to the specified stock ID.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/get-product-salable-quantity/sp2/2`\n\nName | Description | Type\n--- | --- | ---\n`sku` | The SKU of the product | String\n`stock_id` | The ID of the stock the product is assigned to | Integer\n\n**Payload:**\n\nNone\n\n**Response:**\n\nAn integer indicating the salable quantity of the product, such as `75`.\n\n## Check whether a product is salable\n\nThis call returns a boolean value that indicates whether the product from the specified stock is salable.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/is-product-salable/sp2/2`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n`true` or `false`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/check-salable-quantity.md",
          "loc": { "lines": { "from": 44, "to": 79 } }
        }
      }
    ],
    [
      "015150e9-d4ca-47f2-9bf2-74e57ea76fdd",
      {
        "pageContent": "## Check whether products in the list are salable\n\nThis call returns boolean values that indicate whether the products provided in the SKU parameter are salable from the specified stock.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/are-products-salable/?skus[0]=Prod1&skus[1]=Prod2&stockId=2`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n```json\n[\n  {\n    \"sku\": \"Prod1\",\n    \"stock_id\": 2,\n    \"salable\": true\n  },\n  {\n    \"sku\": \"Prod2\",\n    \"stock_id\": 2,\n    \"salable\": false\n  }\n]\n```\n\n## Check whether a product is salable for a specified quantity\n\nThis call indicates whether a product is salable for the specified quantity and stock ID.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/is-product-salable-for-requested-qty/sp2/2/30`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n```json\n{\n  \"salable\": true,\n  \"errors\": []\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/check-salable-quantity.md",
          "loc": { "lines": { "from": 81, "to": 129 } }
        }
      }
    ],
    [
      "3c921acb-0aa7-493f-b2d9-958b8998eddb",
      {
        "pageContent": "## Get the stock ID and name for a sales channel\n\nThis call returns the stock ID associated with the specified sales channel type and name.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/stock-resolver/website/na_site`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n```json\n{\n  \"stock_id\": 2,\n  \"name\": \"North America Stock\",\n  \"extension_attributes\": {\n    \"sales_channels\": [\n      {\n        \"type\": \"website\",\n        \"code\": \"na_site\"\n      }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/check-salable-quantity.md",
          "loc": { "lines": { "from": 131, "to": 158 } }
        }
      }
    ],
    [
      "55aa8b0f-a794-4810-b8e4-62cda41f2fde",
      {
        "pageContent": "---\ntitle: In-Store Pickup\ndescription: Retrieve a list or search for pickup locations using the REST API\ncontributor_name: Oleksandr Kravchuk\ncontributor_link: https://github.com/swnsma\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# In-Store Pickup\n\nThe Inventory In-Store Pickup functionality exposes an endpoint that retrieves a list of pickup locations, and another endpoint that notifies the customer that their order is ready for pickup.\n\n**Service names:**\n\n```http\ninventoryInStorePickupApiGetPickupLocationsV1\ninventoryInStorePickupSalesApiNotifyOrdersAreReadyForPickupV1\n```\n\n**REST endpoints:**\n\n```http\nGET /V1/inventory/in-store-pickup/pickup-locations\nPOST /V1/order/notify-orders-are-ready-for-pickup\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 1, "to": 27 } }
        }
      }
    ],
    [
      "3075ca56-6f0b-482b-b3d3-c02057505ee7",
      {
        "pageContent": "## Search for pickup locations\n\nThe `GET /V1/inventory/in-store-pickup/pickup-locations` endpoint searches for and filters on pickup locations, allowing the shopper to quickly narrow the results. The endpoint does not require authentication.\n\nSearch terms, filters, and other attributes are specified as query parameters in the URL. This endpoint uses a different syntax than other Adobe Commerce GET calls that send `searchCriteria` parameters. Instead, the `GET /V1/inventory/in-store-pickup/pickup-locations` endpoint requires that each query parameter begins with `searchRequest`. The `scopeCode` parameter is required. All other parameters are optional.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 29, "to": 33 } }
        }
      }
    ],
    [
      "9ba0e3c4-a543-4a37-85ae-98a6b86c6ff0",
      {
        "pageContent": "Name | Type | Description\n--- | --- | ---\n`[scopeCode]=` | String | Required. The Sales Channel code of the assigned Stock.\n`[scopeType]=` | String | The Sales Channel type. The default value is `website`.\n`[area][radius]=` | Int | The radius, in kilometers, to search. The Distance Priority Algorithm must be configured to search an area. This parameter must be used with `[area][searchTerm]`.\n`[area][searchTerm]=` | String | The text to search, such as a city or region. This parameter must be used with `[area][radius]`.\n`[filters][country][value]=` | String | Filters by the specified `country_id`.\n`[filters][country][conditionType]=` | String | Optional. The default value is `eq`.\n`[filters][postcode][value]=` | String | Filters by the specified `postcode`.\n`[filters][postcode][conditionType]=` | String | Optional. The default value is `eq`.\n`[filters][region][value]=` | String | Filters by the specified `region`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 35, "to": 45 } }
        }
      }
    ],
    [
      "ece6bafb-ccea-43e2-be9d-eac4e6b3d610",
      {
        "pageContent": "`[filters][region][conditionType]=` | String | Optional. The default value is `eq`.\n`[filters][city][value]=` | String | Filters by the specified `city`.\n`[filters][city][conditionType]=` | String | Optional. The default value is `eq`.\n`[filters][street][value]=` | String | Filters by the specified `street`.\n`[filters][street][conditionType]=` | String | Optional. The default value is `eq`.\n`[filters][name][value]=` | String | Filters by the specified display `name`.\n`[filters][name][conditionType]=` | String | Optional. The default value is `eq`.\n`[filters][pickupLocationCode][value]=` | String | Filters by the specified source code name.\n`[filters][pickupLocationCode][conditionType]=` | String | Optional. The default value is `eq`.\n`[extensionAttributes][productsInfo][0][sku]=` | String | Returns a list of products with the specified SKU that are assigned to each pickup location. Locations without all the assigned products will be filtered out.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 46, "to": 55 } }
        }
      }
    ],
    [
      "1c6bf113-eafc-4784-a26d-9c709feb490d",
      {
        "pageContent": "`[extensionAttributes][productsInfo][0][extensionAttributes]=` | String | Extension point reserved for future use.\n`[pageSize]=` | Int | Specifies the maximum number of items to return.\n`[currentPage]=` | Int | Returns the current page.\n`[sort][0][field]=` | String | Specifies the field to sort on.\n`[sort][0][direction]=` | String | Specifies whether to return results in ascending (`ASC`) or descending (`DESC`) order. The default is `DESC`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 56, "to": 60 } }
        }
      }
    ],
    [
      "abd82bf9-4e16-4b34-8b9a-a32a2d69a071",
      {
        "pageContent": "[Search using REST endpoints](/rest/use-rest/performing-searches/) provides a full list of supported condition types.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/in-store-pickup/pickup-locations`\n\n**Payload:**\n\nDefine the payload as part of the `GET` request string.\n\n```http\nsearchRequest[area][radius]=1500&\nsearchRequest[area][searchTerm]=Austin&\nsearchRequest[scopeCode]=base&\nsearchRequest[extensionAttributes][productsInfo][0][sku]=SKU1",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 62, "to": 76 } }
        }
      }
    ],
    [
      "1393ccba-377a-447a-80e0-f7aca70cc3fb",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returns Pickup Locations list, search request given and total results count.\n\n```json\n{\n  \"items\": [\n    {\n      \"pickup_location_code\": \"txspeqs\",\n      \"name\": \"Sport Equipment Store\",\n      \"email\": \"sales@company.com\",\n      \"contact_name\": \"Ethan Carter\",\n      \"description\": \"Sport Equipment Store description\",\n      \"latitude\": 29.7543,\n      \"longitude\": -95.3609,\n      \"country_id\": \"US\",\n      \"region_id\": 57,\n      \"region\": \"Texas\",\n      \"city\": \"Houston\",\n      \"street\": \"4631 Airport Blvd #125\",\n      \"postcode\": \"77010\",\n      \"phone\": \"(555) 555-5555\"\n    }\n  ],\n  \"search_request\": {\n    \"area\": {\n      \"radius\": 1500,\n      \"search_term\": \"Austin\"\n    },\n    \"current_page\": 1,\n    \"scope_type\": \"website\",\n    \"scope_code\": \"base\",\n    \"extension_attributes\": {\n      \"products_info\": [\n        {\n          \"sku\": \"SKU1\"\n        }\n      ]\n    }\n  },\n  \"total_count\": 1\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 77, "to": 121 } }
        }
      }
    ],
    [
      "395bb624-304e-4ca7-ae74-3650629575a9",
      {
        "pageContent": "## Mark an order as ready for pickup\n\nThe `POST /V1/order/notify-orders-are-ready-for-pickup` endpoint creates a shipment and sends an email notifying the customer that the order is ready to be picked up.\nThe endpoint requires appropriate permission to resource `Magento_InventoryInStorePickupApi::notify_orders_are_ready_for_pickup`.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/order/notify-orders-are-ready-for-pickup`\n\n**Payload:**\n\n```json\n{\n  \"orderIds\": [\n    81\n  ]\n}\n```\n\n**Response:**\n\nCommerce returns an array with success status and an array of error messages for each failed order.\n\n```json\n{\n  \"successful\": true,\n  \"failed\": []\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 123, "to": 151 } }
        }
      }
    ],
    [
      "a144f165-9571-4b62-8ded-9dd61cf2c0fc",
      {
        "pageContent": "---\ntitle: Inventory Management\ndescription: Learn about inventory management APIs for Adobe Commerce and Magento Open Source.\nkeywords:\n  - Inventory\n  - REST\n---\n\n# Inventory Management\n\nMagento Open Source and Adobe Commerce v2.3 include new and expanded features and APIs for inventory management. Inventory Management replaces all core APIs in the Open Source `CatalogInventory` module and the `ScalableInventory` module in Commerce. It also provides additional APIs to extend and add functionality.\n\nInventory Management features include:\n\n*  Different configurations for merchants whose inventory originates from a single source and from multiple sources\n*  Stocks for tracking available aggregated quantities through assigned sources\n*  Concurrent checkout protection\n*  Shipment matching algorithms",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/index.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "a43f2cc6-a2c2-4318-9bf9-e96ae2d13aba",
      {
        "pageContent": "Merchants install Inventory Management as part of v2.3.x and upgrades with the name `magento/inventory-composer-metapackage`. For details, see [Install and Update Inventory Management](https://experienceleague.adobe.com/docs/commerce-admin/inventory/get-started/install-update.html).\n\n**Magento Community Contribution** – Adobe thanks the many contributors to the [Magento Inventory (was MSI) project](https://github.com/magento/inventory), developing these features as part of the Magento Community Engineering program.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/index.md",
          "loc": { "lines": { "from": 20, "to": 22 } }
        }
      }
    ],
    [
      "a6128cd7-af11-4c02-9bae-c61bb69860a4",
      {
        "pageContent": "## Terminology\n\nThe following terms are important as you work with Inventory Management APIs:\n\n*  **Sources** represent physical locations that store and ship available products. These locations can include warehouses, brick-and-mortar stores, distribution centers, and drop shippers. (Any location can be designated as a source for virtual products.)\n\n*  **Stocks** map a sales channel (currently limited to websites) to source locations and on-hand inventory. A stock can map to multiple sales channels, but a sales channel can be assigned to only one stock.\n\n*  **Aggregate Salable Quantity** is the total virtual inventory that can be sold through a sales channel. The amount is calculated across all sources assigned to a stock.\n\n*  **Reservations** track deductions from the salable quantity as customers add products to carts and complete checkout. When an order ships, the reservation clears and deducts the shipped amounts from specific source inventory quantities.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/index.md",
          "loc": { "lines": { "from": 24, "to": 34 } }
        }
      }
    ],
    [
      "b503cb74-f7f9-41d4-9f9e-d4333844aefe",
      {
        "pageContent": "## A simple scenario\n\nThe following diagram illustrates the relationship between source stocks, aggregate stocks, and sales channels:\n\n![Source and aggregate stock](../../_images/inventory-diagram-stock.png)\n\nIn this diagram, a bicycle merchant has inventory for a mountain bike in two warehouses and a drop shipper. He has two stocks with configured website sales channels and sources. When a customer shops through the UK website, Magento aggregates bike inventory from the UK warehouse and the drop shipper sources, for a salable quantity of 95. The bike can be shipped from either the warehouse or the drop shipper, but not the NY warehouse. Amazon Marketplace has the same stock, drawing from the same aggregate stock as the UK website.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/index.md",
          "loc": { "lines": { "from": 36, "to": 42 } }
        }
      }
    ],
    [
      "a5888462-05ea-4a09-8a65-500cd8808f6c",
      {
        "pageContent": "## Important Inventory Management objects\n\n*  `Source` – Defines a physical stock.\n\n*  `SourceItem` – A relation object that represents the amount of a specific product at a physical source. We use this entity for updating inventory on each source. Quantities might change as a result of synchronizing with an external Product Information Management (PIM) or Enterprise Resource Planning (ERP) system, or internally as a stock deduction during the checkout process. A `SourceItem` cannot be used for retrieving data that must be rendered on front-end, because only aggregated data should be used for all validations and UI representation.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/index.md",
          "loc": { "lines": { "from": 44, "to": 48 } }
        }
      }
    ],
    [
      "6bd0f4ff-8060-4955-bace-8c43ea260cf5",
      {
        "pageContent": "*  `StockItem` – Also known as Aggregated Virtual Stock. This is read-only data that the re-indexation process generates. Based on a pre-defined mapping, we define what sources are assigned to the current scope (sales channel) and aggregate quantities from all assigned sources. We also use `StockItem` to check if a product is in or out of stock.  Making this segregation by Read-Only interface (`StockItem`) and Write-Only interface (`SourceItem`), the Inventory architecture achieves Command Query Responsibility Segregation (CQRS). As a result, all `GET` HTTP requests should use `StockItem` entity, and all `POST/PUT` should use `SourceItem`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/index.md",
          "loc": { "lines": { "from": 50, "to": 50 } }
        }
      }
    ],
    [
      "8c21eb86-4a9e-404f-aa96-0f23898a528c",
      {
        "pageContent": "## Shipping algorithms\n\nWhen merchants are ready to make a partial or full shipment, they select the source or sources from which to send the products. Customers typically want low-cost shipping and a guarantee of safe arrival of products, while the merchant needs to ensure minimal overhead for the inventory storage and shipping costs. Inventory Management includes an algorithm that takes these considerations into account and recommends the best shipping option or options. The application provides an algorithm for Priority, using the source priority per stock, where each source is given a priority in the scope of a specific sales channel, and for Distance, using the locations of sources and shipping destinations. Invenotry Management also supports developer-provided extensions for other algorithms based on criteria such as cheapest shipping and closest GPS location.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/index.md",
          "loc": { "lines": { "from": 52, "to": 54 } }
        }
      }
    ],
    [
      "d18916c2-34b0-48c6-b619-364b497f477f",
      {
        "pageContent": "---\ntitle: Link and unlink stocks and sources\ndescription: Assign and manage sources and stocks using the REST API \nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Link and unlink stocks and sources\n\nIn Admin, you can assign (link) sources to a stock when you create the stock. In REST, creating a stock and assigning sources to it are separate steps.\n\nTo link a source to a stock, you must specify the `source_code`, `stock_id`, and `priority` attributes. The `priority` value indicates where the source ranks in descending order. The Source Selection Algorithm uses this priority order when recommending order fulfillment. All sources linked to a stock are displayed in prioritized order in the Admin.\n\n**Service names:**\n\n```http\ninventoryApiStockSourceLinksSaveV1\ninventoryApiStockSourceLinksDeleteV1\nInventoryApiGetStockSourceLinksV1\ninventoryApiGetSourcesAssignedToStockOrderedByPriorityV1",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "42d5eb75-a28b-401d-b0b8-9975917b3f02",
      {
        "pageContent": "```\n\n**REST endpoints:**\n\n```http\nPOST /V1/inventory/stock-source-links\nPOST /V1/inventory/stock-source-links-delete\nGET /V1/inventory/stock-source-links\n```\n\n**StockSourceLink parameters:**\n\nName | Description | Type | Requirements\n--- | --- | --- | ---\n`stock_id` | Stock ID | Integer | Required for POST operations\n`source_code` | Source code of the link | String | Required for POST operations\n`priority` | Priority of the link | Integer | Required when linking a stock to a source",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 22, "to": 38 } }
        }
      }
    ],
    [
      "276966bf-68e1-43a3-b20a-f647688d0e2f",
      {
        "pageContent": "## Link stocks and sources\n\nIf you specify a sales channel that is already assigned to another stock, Adobe Commerce reassigns the sales channel from the previous stock to the current stock.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/stock-source-links`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n   \"links\" : [\n      {\n         \"source_code\" : \"central\",\n         \"stock_id\" : 4,\n         \"priority\" : 1\n      },\n      {\n        \"source_code\" : \"east\",\n        \"stock_id\" : 4,\n        \"priority\" : 2\n      }\n   ]\n}\n```\n\n#### Response\n\n```json\n// Commerce returns empty array.\n[]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 40, "to": 74 } }
        }
      }
    ],
    [
      "dcfaf8bd-2400-4593-a368-79b86d66f72e",
      {
        "pageContent": "## Delete links between stocks and sources\n\nThe `POST /V1/inventory/stock-source-links-delete` endpoint breaks the link between a stock and one or more sources. Commerce does not recalculate priority of sources after you delete links.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/stock-source-links-delete`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n   \"links\" : [\n      {\n        \"source_code\" : \"south\",\n        \"stock_id\" : 4\n      }\n   ]\n}\n```\n\n#### Response\n\n```JSON\n// Commerce returns empty array.\n[]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 76, "to": 104 } }
        }
      }
    ],
    [
      "8eb52a03-0cc0-478f-ba6b-a8d7bf7f85d7",
      {
        "pageContent": "## Search for links\n\nThe following call returns the link information for `stock_id = 4`.\n\nSee [Search using REST APIs](/rest/use-rest/performing-searches/) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/stock-source-links?searchCriteria[filter_groups][0][filters][0][field]=stock_id&searchCriteria[filter_groups][0][filters][0][value]=4&searchCriteria[filter_groups][0][filters][0][condition_type]=eq`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// None\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 106, "to": 122 } }
        }
      }
    ],
    [
      "508aa5ce-a4d6-4e94-9127-21ccdfe0a39a",
      {
        "pageContent": "#### Response\n\n```json\n{\n    \"items\": [\n        {\n            \"stock_id\": 4,\n            \"source_code\": \"central\",\n            \"priority\": 1\n        },\n        {\n            \"stock_id\": 4,\n            \"source_code\": \"east\",\n            \"priority\": 2\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"stock_id\",\n                        \"value\": \"4\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 2\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 124, "to": 155 } }
        }
      }
    ],
    [
      "9d4d04a1-3d1a-4004-b1e0-116fef32d2ab",
      {
        "pageContent": "## Get sources assigned to a stock\n\nThe `GET /V1/inventory/get-sources-assigned-to-stock-ordered-by-priority/:stock_id` endpoint returns details about each source that is assigned to the specified stock. [Manage sources](manage-sources.md) provides definitions for each attribute returned.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/get-sources-assigned-to-stock-ordered-by-priority/4`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n// None\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 157, "to": 171 } }
        }
      }
    ],
    [
      "da5d80b8-044e-47be-84b2-7209bf36c0ef",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 173, "to": 173 } }
        }
      }
    ],
    [
      "e690ac49-843f-49a1-a897-c050767d2ec4",
      {
        "pageContent": "```json\n[\n    {\n        \"source_code\": \"central\",\n        \"name\": \"Central Shipping Center\",\n        \"email\": \"hsmith@example.com\",\n        \"contact_name\": \"Harold Smith\",\n        \"enabled\": true,\n        \"description\": \"Primary source for the central region\",\n        \"latitude\": 38.74132,\n        \"longitude\": -90.363267,\n        \"country_id\": \"US\",\n        \"region_id\": 36,\n        \"city\": \"St. Louis\",\n        \"street\": \"123 Warehouse Blvd\",\n        \"postcode\": \"63145\",\n        \"phone\": \"(314) 555-1234\",\n        \"use_default_carrier_config\": true,\n        \"carrier_links\": []\n    },\n    {\n        \"source_code\": \"east\",\n        \"name\": \"Eastern Shipping Center\",\n        \"email\": \"dsimons@example.com\",\n        \"contact_name\": \"Daryl Simons\",\n        \"enabled\": true,\n        \"description\": \"Primary source for the eastern region\",\n        \"country_id\": \"US\",\n        \"region_id\": 45,\n        \"city\": \"Raleigh\",\n        \"street\": \"456 Shipping Center Blvd\",\n        \"postcode\": \"27614\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 175, "to": 206 } }
        }
      }
    ],
    [
      "48566044-b611-43cb-b2d7-0fa0827f303c",
      {
        "pageContent": "\"phone\": \"(919) 555-8888\",\n        \"use_default_carrier_config\": true,\n        \"carrier_links\": []\n    }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/link-stocks-sources.md",
          "loc": { "lines": { "from": 207, "to": 212 } }
        }
      }
    ],
    [
      "6ab8e659-764a-43fb-8ff6-c8feea1bdd51",
      {
        "pageContent": "---\ntitle: Manage low-quantity notifications\ndescription: Configure the low stock notification alert using the admin and REST API\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Manage low-quantity notifications\n\nLow stock notification alert the merchant that the salable quantity of a stock has reached a critical threshold. The Admin allows the merchant to configure low-quantity notifications from several locations:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-low-quantity.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "e739d89b-44d9-45c2-937a-0182acf0a277",
      {
        "pageContent": "*  The **Notify for Quantity Below** field (**Stores** > Settings > **Configuration** > **Catalog** > **Inventory** > **Product Stock Options**) sets the default value globally for all products for the entire website/store.\n*  The Advanced Inventory **Notify for Quantity Below** field (**Catalog** > **Products** > specific product > **Advanced Inventory**) overrides the value set at the website/store level. The value applies to all of the product's sources.\n*  The **Notify Quantity** fields (**Catalog** > **Products** > specific product > **Assigned Sources** section) override all other settings. The merchant can assign a different threshold for each source for the specific product.\n\nAdobe Commerce deducts either the global or the overriding quantity from the total salable quantity for the stock.\n\nThe REST low-quantity notification endpoints manage the values that merchants set from the **Notify Quantity** fields.\n\n**Service names:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-low-quantity.md",
          "loc": { "lines": { "from": 13, "to": 21 } }
        }
      }
    ],
    [
      "1e69f7b0-1635-4214-ae53-6338277fc0a4",
      {
        "pageContent": "**Service names:**\n\n```http\ninventoryLowQuantityNotificationApiGetSourceItemConfigurationV1\ninventoryLowQuantityNotificationApiSourceItemConfigurationsSaveV1\ninventoryLowQuantityNotificationApiDeleteSourceItemsConfigurationV1",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-low-quantity.md",
          "loc": { "lines": { "from": 21, "to": 26 } }
        }
      }
    ],
    [
      "91e0677e-51e8-424a-95dc-cfbf06776a68",
      {
        "pageContent": "```\n\n**REST endpoints:**\n\n```http\nPOST /V1/inventory/low-quantity-notification\nGET /V1/inventory/low-quantity-notification/:sourceCode/:sku\nPOST /V1/inventory/low-quantity-notifications-delete\n```\n\n**sourceItemConfigurations parameters:**\n\nName | Description | Type | Requirements\n--- | --- | --- | ---\n`source_code` | The product's assigned source code  | String | Required to create or delete a threshold\n`notify_stock_qty` | The threshold at which Commerce notifies the merchant that the salable quantity of a product is low. | Float | Required to create a threshold\n`sku` | The SKU of the affected product   | String | Required for to create or delete a threshold",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-low-quantity.md",
          "loc": { "lines": { "from": 27, "to": 43 } }
        }
      }
    ],
    [
      "9ff432a0-8297-4a11-8320-785bd562c86c",
      {
        "pageContent": "## Create a low quantity notification\n\nThe `POST /V1/inventory/low-quantity-notification` endpoint accepts an array of values that map a SKU to a source and specify when to notify the merchant of a low stock quantity.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/low-quantity-notification`\n\n**Payload:**\n\n```json\n{\n  \"sourceItemConfigurations\": [\n    {\n      \"source_code\": \"baltimore_wh\",\n      \"notify_stock_qty\": 10,\n      \"sku\": \"sp1\"\n    },\n    {\n      \"source_code\": \"austin_wh\",\n      \"notify_stock_qty\": 8,\n      \"sku\": \"sp1\"\n    },\n    {\n      \"source_code\": \"reno_wh\",\n      \"notify_stock_qty\": 5,\n      \"sku\": \"sp1\"\n    }\n  ]\n}\n```\n\n**Response:**\n\nAn empty array `[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-low-quantity.md",
          "loc": { "lines": { "from": 45, "to": 79 } }
        }
      }
    ],
    [
      "e231fc7f-ea1b-49d2-9243-71fc4175c73e",
      {
        "pageContent": "## Return low-quantity notification information\n\nThis call returns the `notify_stock_qty` for the specified source and SKU.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/low-quantity-notification/reno_wh/sp1`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n```json\n{\n\"source_code\": \"reno_wh\",\n\"notify_stock_qty\": 5,\n\"sku\": \"sp1\n}\n```\n\n## Delete a low-quantity notification\n\nThe `POST /V1/inventory/low-quantity-notifications-delete` endpoint deletes the notification threshold for an array of sourceItem objects. Each object specified a SKU amd source.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/low-quantity-notifications-delete`\n\n**Payload:**\n\n```json\n{\n  \"sourceItems\": [\n    {\n      \"sku\": \"sp1\",\n      \"source_code\": \"reno_wh\"\n    }\n  ]\n}\n```\n\n**Response:**\n\nCommerce returns an empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-low-quantity.md",
          "loc": { "lines": { "from": 81, "to": 128 } }
        }
      }
    ],
    [
      "4f106c70-aee6-4136-ae48-cd23812412de",
      {
        "pageContent": "---\ntitle: Manage source items\ndescription: Assign products to other sources using the REST API\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Manage source items\n\nIf Adobe Commerce is configured to manage inventory, Commerce assigns all existing products to the default source. Currently, Commerce also assigns newly-created products to the default source. Single Source merchants do not need to manage source items, but Multi Source merchants may need to move products from the default source to a custom source, or move products from one custom source to another.\n\n**Service names:**\n\n```http\ninventoryApiSourceItemsDeleteV1\ninventoryApiSourceItemsSaveV1\ninventoryApiSourceItemRepositoryV1\n```\n\n**REST endpoints:**\n\n```http\nPOST V1/inventory/source-items-delete\nPOST V1/inventory/source-items\nGET V1/inventory/source-items",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "024d52e9-1d5d-4c07-a420-9224c9b6024f",
      {
        "pageContent": "```\n\n**sourceItems parameters:**\n\nName | Description | Type | Requirements\n--- | --- | --- | ---\nsku | The SKU of an existing product | String | Required to assign or unassign a source\nsource_code | The source to assign or unassign | String | Required to assign or unassign a source\nquantity | The total amount of inventory available for this SKU and source | Float | Optional\nstatus |  Indicates whether the product is out of stock (0) or in stock (1) | Integer | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 27, "to": 36 } }
        }
      }
    ],
    [
      "b8f5eb0c-d00a-4662-810c-2607a64f849f",
      {
        "pageContent": "## Unassign products from a source\n\nUse the `POST V1/inventory/source-items-delete` endpoint to unassign one or more products from the specified source. The `sku` and `source_code` attributes are required for each product.\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nUnassigning a source clears all quantity data. For this example, this is OK, because the default source did not contain any quantity data. Reassigning a source that contains real quantity data can potentially cause havoc with pending orders with reservations and affect the salable quantity counts. See the [merchant documentation](https://docs.magento.com/user-guide/catalog/inventory-bulk-transfer-inventory.html) for more details.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/source-items-delete`\n\n**Payload:**\n\n```json\n{\n    \"sourceItems\": [{\n        \"sku\": \"new_product1\",\n        \"source_code\": \"default\"\n    },\n    {\n        \"sku\": \"new_product2\",\n        \"source_code\": \"default\"\n    }]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 38, "to": 62 } }
        }
      }
    ],
    [
      "9b74908f-b82d-4b5b-9fd6-345b9bcd5419",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returns an empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 63, "to": 69 } }
        }
      }
    ],
    [
      "df4fb12c-ae41-42ee-9d8d-e95c163eb1f5",
      {
        "pageContent": "## Assign products to a source\n\n`POST V1/inventory/source-items` is a powerful endpoint that allows you to define which sources carry each product as well as how many units are available at each source. You can use the endpoint to set up the initial quantities for each SKU at each source or add quantities as you receive shipments to replenish your supply.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nIf a bundle product is configured so that all items must be shipped together, then all component products must be assigned to the same source.\n\nThe following example assigns `1000` units of product `new_product1` to the `central` source and `2000` units to the `east` source. It also assigns `500` units of product `new_product2` to the `central` source and `250` units to the `east` source.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/source-items`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 71, "to": 85 } }
        }
      }
    ],
    [
      "14013017-9e40-4ee9-82cc-d7574ac7bec8",
      {
        "pageContent": "**Payload:**\n\n```json\n{\n  \"sourceItems\": [{\n    \"sku\": \"new_product1\",\n    \"source_code\": \"central\",\n    \"quantity\": 1000,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"new_product1\",\n    \"source_code\": \"east\",\n    \"quantity\": 2000,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"new_product2\",\n    \"source_code\": \"central\",\n    \"quantity\": 500,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"new_product2\",\n    \"source_code\": \"east\",\n    \"quantity\": 250,\n    \"status\": 1\n  }]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 85, "to": 113 } }
        }
      }
    ],
    [
      "fded4a7d-ecae-4a1c-aac0-d72191637ba5",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returns an empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 114, "to": 120 } }
        }
      }
    ],
    [
      "a53a4b4c-6ed0-4e03-a10c-26a2e6f59f04",
      {
        "pageContent": "## Search for source items\n\nThe following call returns all source items for `sku` = `new_product2`.\n\nSee [Search using REST APIs](/rest/use-rest/performing-searches/) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/source-items?searchCriteria[filter_groups][0][filters][0][field]=sku&searchCriteria[filter_groups][0][filters][0][value]=new_product2&searchCriteria[filter_groups][0][filters][0][condition_type]=eq`\n\n**Payload:**\n\nNone\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 122, "to": 136 } }
        }
      }
    ],
    [
      "ae6906dc-8a8e-48fc-81b4-c90a07d09dd6",
      {
        "pageContent": "**Response:**\n\n```json\n{\n    \"items\": [\n        {\n            \"sku\": \"new_product2\",\n            \"source_code\": \"central\",\n            \"quantity\": 500,\n            \"status\": 1\n        },\n        {\n            \"sku\": \"new_product2\",\n            \"source_code\": \"east\",\n            \"quantity\": 250,\n            \"status\": 1\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"sku\",\n                        \"value\": \"new_product2\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 2\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-items.md",
          "loc": { "lines": { "from": 136, "to": 169 } }
        }
      }
    ],
    [
      "6fecade6-d66a-41a5-8237-5923e6c7812f",
      {
        "pageContent": "---\ntitle: Manage source selection algorithms\ndescription: Run and use the Source Selection ALgorithm (SSA) and other algorithms to make calculations and predictions using the REST API\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Manage source selection algorithms\n\nInventory Management uses the Source Selection Algorithm (SSA) to track the salable quantities of product inventory across all sources and make recommendations for partial and full shipments.\n\nThe SSA uses stocks and sources to check the sales channel for incoming product requests and determines the available inventory. The algorithm:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "18f65b54-d636-47b0-b557-9e7792536471",
      {
        "pageContent": "*  Calculates the aggregated virtual salable quantity of all assigned sources per stock\n*  Subtracts the Out-of-Stock Threshold amount from salable quantity to protect against overselling and support concurrent checkout\n*  Reserves inventory quantities at checkout, deducting from in-stock inventory at order processing and shipment\n*  Supports backorders with enhanced options for negative thresholds\n\nThe SSA also manages shipments by providing recommendations for the best sources to ship partial or all products or override the selections to:\n\n*  Ship partial shipments, sending only a few products from specific sources and completing the full order at a later date.\n*  Ship the entire order from one source.\n*  Break the order into partial shipments across multiple sources in different amounts to keep a balanced stock across all warehouses and stores.\n\nThird parties can also extend SSA to create customized algorithms for recommending cost-effective shipments.\n\n**Service names:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 15, "to": 28 } }
        }
      }
    ],
    [
      "4cbac85d-e81e-4072-b651-503d53fe7b40",
      {
        "pageContent": "**Service names:**\n\n```http\ninventorySourceSelectionApiGetSourceSelectionAlgorithmListV1\ninventorySourceSelectionApiSourceSelectionServiceV1\ninventoryDistanceBasedSourceSelectionApiGetDistanceProviderCodeV1\ninventoryDistanceBasedSourceSelectionApiGetDistanceV1\ninventoryDistanceBasedSourceSelectionApiGetLatLngFromAddressV1",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 28, "to": 35 } }
        }
      }
    ],
    [
      "fc0d2e5e-8260-4e36-a4b4-ff039c4f6620",
      {
        "pageContent": "```\n\n**REST endpoints:**\n\n```http\nGET /V1/inventory/source-selection-algorithm-list\nPOST /V1/inventory/source-selection-algorithm-result\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 36, "to": 43 } }
        }
      }
    ],
    [
      "4eab2b7c-42bf-4ca1-b8f7-6b551cffe9b3",
      {
        "pageContent": "## Get the list of available source selection algorithms\n\nCurrently, Inventory Management supports only the default SSA for priority. Third-party developers and future releases may add support for additional algorithms.\n\n**Sample usage:**\n\n`GET <host>/rest/us/V1/inventory/source-selection-algorithm-list`\n\n**Payload:**\n\nNone\n\n**Response:**\n\nAn array containing a list of SSA codes, titles, and descriptions.\n\n```json\n[\n    {\n        \"code\": \"distance\",\n        \"title\": \"Distance Priority\",\n        \"description\": \"Algorithm which provides Source Selections based on shipping address distance from the source\"\n    },\n    {\n        \"code\": \"priority\",\n        \"title\": \"Source Priority\",\n        \"description\": \"Algorithm which provides Source Selections based on predefined priority of Source\"\n    }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 45, "to": 74 } }
        }
      }
    ],
    [
      "5787e52a-045e-403d-a0a4-acea37e79394",
      {
        "pageContent": "## Run the SSA\n\nThe `POST V1/inventory/source-selection-algorithm-result` endpoint uses the algorithm defined by the `algorithmCode` attribute to calculate the recommended sources and quantities for each item defined in the items array.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/source-selection-algorithm-result`\n\n**inventoryRequest parameters:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 76, "to": 84 } }
        }
      }
    ],
    [
      "5895ba00-43ad-4801-a02c-b1101165b9c2",
      {
        "pageContent": "Name | Description | Type | Requirements\n--- | --- | --- | ---\n`stock_id` | The ID of the stock | Integer | Required\n`items` | An array containing the SKU and quantity of items in the order |  Array | Required\n`sku` | The SKU of a product to be shipped | String | Required for each item\n`qty` | The quantity of a product to be shipped | Float | Required for each item\n`algorithmCode` | The name of the SSA to implement. For 2.3, this value must be `priority`. | String | Required\n`destination_address` | An extension attribute that defines the shipment address when the Distance Priority SSA is used. | Object | Required for the Distance Priority SSA\n`country` | The country code of the shipping address | String | Required for the Distance Priority SSA\n`postcode` | The postal code of the shipping address | String | Required for the Distance Priority SSA\n`street` | The street address of the shipping address| String | Required for the Distance Priority SSA",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 86, "to": 96 } }
        }
      }
    ],
    [
      "5e7e12e5-4065-47fd-af69-a77b285da203",
      {
        "pageContent": "`region` | The region code of the shipping address | String | Required for the Distance Priority SSA\n`city` | The city of the shipping address | String | Required for the Distance Priority SSA",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 97, "to": 98 } }
        }
      }
    ],
    [
      "a69cb371-74b6-47aa-ae7c-d3199e09edc0",
      {
        "pageContent": "### Source Priority Algorithm\n\n**Payload:**\n\n```json\n{\n    \"inventoryRequest\": {\n        \"stockId\": 2,\n        \"items\": [{\n            \"sku\": \"24-WB01\",\n            \"qty\": 20\n        },\n        {\n            \"sku\": \"24-WB03\",\n            \"qty\": 50\n        }]\n    },\n    \"algorithmCode\": \"priority\"\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 100, "to": 118 } }
        }
      }
    ],
    [
      "507f6718-cd9d-4d72-8898-ddc266f24fed",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n    \"source_selection_items\": [\n        {\n            \"source_code\": \"baltimore_wh\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 20,\n            \"qty_available\": 35\n        },\n        {\n            \"source_code\": \"austin_wh\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 10\n        },\n        {\n            \"source_code\": \"reno_wh\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 25\n        },\n        {\n            \"source_code\": \"baltimore_wh\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 19,\n            \"qty_available\": 19\n        },\n        {\n            \"source_code\": \"reno_wh\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 31,\n            \"qty_available\": 42\n        }\n    ],\n    \"shippable\": true\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 119, "to": 159 } }
        }
      }
    ],
    [
      "5b296f76-6d23-4233-b4c5-1f3d8eccc033",
      {
        "pageContent": "### Distance Priority algorithm\n\n**Payload:**\n\n```json\n{\n    \"inventoryRequest\": {\n        \"stockId\": 2,\n        \"items\": [{\n            \"sku\": \"24-WB01\",\n            \"qty\": 20\n        },\n        {\n            \"sku\": \"24-WB03\",\n            \"qty\": 50\n        }],\n        \"extension_attributes\": {\n            \"destination_address\": {\n                \"country\": \"US\",\n                \"postcode\": \"10577\",\n                \"street\": \"3003 Purchase St\",\n                \"region\": \"43\",\n                \"city\": \"Purchase\"\n            }\n        }\n    },\n    \"algorithmCode\": \"distance\"\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 161, "to": 188 } }
        }
      }
    ],
    [
      "713dd6f9-7e78-46c3-b5eb-1bfcb0134cde",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n    \"source_selection_items\": [\n        {\n            \"source_code\": \"baltimore_wh\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 20,\n            \"qty_available\": 35\n        },\n        {\n            \"source_code\": \"austin_wh\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 10\n        },\n        {\n            \"source_code\": \"reno_wh\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 25\n        },\n        {\n            \"source_code\": \"baltimore_wh\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 19,\n            \"qty_available\": 19\n        },\n        {\n            \"source_code\": \"reno_wh\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 31,\n            \"qty_available\": 42\n        }\n    ],\n    \"shippable\": true\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 189, "to": 229 } }
        }
      }
    ],
    [
      "e6127005-5c60-4efb-84ef-108cf140acf4",
      {
        "pageContent": "## Determine distances for the Distance Priority algorithm\n\nAdobe Commerce provides several endpoints to help determine GPS coordinates.\n\n### Get the distance provider code\n\nThe `GET /V1/inventory/get-distance-provider-code` endpoint returns the configured distance provider for the Distance Priority algorithm. The value can be `google` or `offline`.\n\n**Sample usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/get-distance-provider-code`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n`offline`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 231, "to": 249 } }
        }
      }
    ],
    [
      "eb0856c4-6d37-4948-8a6a-93aaaa79f94a",
      {
        "pageContent": "### Get the distance between two points\n\nThe `GET /V1/inventory/get-distance` endpoint calculates the distance between two points, given the longitude and latitude of the source and distance.\n\n**URL parameters:**\n\nName | Description\n--- | ---\n`source[lat]` | The latitude of the source\n`source[lng]` | The longitude of the source\n`destination[lat]` | The latitude of the destination\n`destination[lng]` | The longitude of the destination\n\n**Sample usage:**\n\n`GET /V1/inventory/get-distance?source[lat]=30.271129&source[lng]=-97.7437&destination[lat]=39.290882&destination[lng]=-76.610759`\n\n**Payload:**\n\nNone\n\n**Response:**\n\nThe distance, in kilometers",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 251, "to": 274 } }
        }
      }
    ],
    [
      "314caaa3-1dc9-401c-a55e-a32ef478baf5",
      {
        "pageContent": "### Get the latitude and longitude of the shipping address\n\nThe `GET /V1/inventory/get-latlng-from-address` endpoint calculates the latitude and longitude of the shipping address.\n\n**URL parameters:**\n\nName | Description\n--- | ---\naddress[country] | The country code of the shipping address\naddress[postcode] | The postal code of the shipping address\naddress[street] | The street of the shipping address\naddress[region] | The region code of the shipping address\naddress[city] | The city of the shipping address\n\n**Sample usage:**\n\n`GET /V1/inventory/get-latlng-from-address?address[country]=US&address[postcode]=10577&address[street]=123%20Oak&address[region]=NY&address[city]=Purchase`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n```json\n{\n    \"lat\": 41.0384,\n    \"lng\": -73.7156\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-source-selection.md",
          "loc": { "lines": { "from": 276, "to": 305 } }
        }
      }
    ],
    [
      "6c54db75-1b1b-4c20-9618-13a37b647418",
      {
        "pageContent": "---\ntitle: Manage sources\ndescription: Manage your stock locations using the REST API\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Manage sources\n\nSources represent locations storing and shipping available product stock. Any location with available stock and capable of order fulfillment can be added as a source. These locations can include warehouses, brick-and-mortar stores, distribution centers, and drop shippers.\n\nAll stores begin with a default source that must remain enabled. Single Source merchants (merchants who ship all products from one location) use the default source for their single point of inventory location and shipments. Multi Source merchants create as many sources as they need to represent each location.\n\nYou cannot rename, delete, or disable the default source. You can create, modify, enable, and disable custom sources, but you cannot rename or delete a custom source.\n\nDisabling a custom source has the following effects:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "8de19a04-0c4d-445a-8b9e-33ce2ac88290",
      {
        "pageContent": "*  Commerce ignores and does not list the source for shipment or order processing\n*  Stocks do not access inventory quantities from the source for aggregated inventory totals\n*  Order shipments cannot be assigned to disabled locations.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nBundle and grouped products currently do not support multi-sourcing and must be assigned to the default source and default stock.\n\n**Service name:**\n\n`inventoryApiSourceRepositoryV1`\n\n**REST endpoints:**\n\n```http\nPOST /V1/inventory/sources\nGET /V1/inventory/sources/:sourceCode\nPUT /V1/inventory/sources/:sourceCode\nGET /V1/inventory/sources",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 19, "to": 37 } }
        }
      }
    ],
    [
      "7abf7cac-211e-44ae-8c8d-04903eb483a7",
      {
        "pageContent": "```\n\n**SourceInterface parameters:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 38, "to": 40 } }
        }
      }
    ],
    [
      "7d2c6b09-9f3e-46c1-91da-89508481077b",
      {
        "pageContent": "Name | Description | Type | Requirements\n--- | --- | --- | ---\n`source_code` | A unique identifier for the source | String | Required to create a source. This value cannot be changed with a PUT call.\n`name` | A unique display name for the source. | String | Required for all POST and PUT calls\n`email` | The email for the source's contact | String | Optional\n`contact_name` | The name of the contact for the source | String | Optional\n`enabled` | Indicates whether the source is enabled. The default value is `true`. | Boolean | Optional\n`description` | A description of the source (Maximum: 1000 characters)| String | Optional\n`latitude` | The latitude of the source's physical location. The value, along with the `longitude` value, could be used to determine the closest source to a customer's shipping address. | Float | Optional\n`longitude` |The latitude of the source's physical location. | Float | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 42, "to": 51 } }
        }
      }
    ],
    [
      "775ae04d-9bbc-4b02-947f-34cc7b24accb",
      {
        "pageContent": "`country_id` | The country ID of the source's physical location | String | Required for all POST and PUT calls.\n`region_id` | The region ID of the state or province of the source  | Integer | Optional\n`region` | The region name for countries whose provinces are not defined in Commerce | String | Optional\n`city` | Th city in which the source is located | String | Optional\n`street` | The physical street address of the source | String | Optional\n`postcode` | The zip or postal code of the source's physical address | String | Required for all POST and PUT calls\n`phone` | The contact's phone number | String | Optional\n`fax` | The contact's fax number | String | Optional\n`use_default_carrier_config` | Reserved for future use | Boolean | Optional\n`carrier_code` | Reserved for future use | String | Optional\n`position` | Reserved for future use | Integer | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 52, "to": 62 } }
        }
      }
    ],
    [
      "5121142e-2b04-4811-9074-f15197af8a14",
      {
        "pageContent": "**In-Store Pickup functionality enhance Sources with next extension attributes:**\n\nName | Description | Type | Requirements\n--- | --- | --- | ---\n`is_pickup_location_active` | Indicates whether a source can be used as a pickup location | Boolean | Optional\n`frontend_name` | The pickup location name. This value is used only on the Storefront. | String | Optional\n`frontend_description` | The pickup location description. It is used only on the Storefront. | String | Optional",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 64, "to": 70 } }
        }
      }
    ],
    [
      "c347cf7b-d478-449a-97c3-c3dc7aac8a78",
      {
        "pageContent": "## Create a source\n\nThe value of the `source_code` parameter can contain upper and lower case letters, numbers, dashes, and underscores. You use this ID when assigning stock to sources and when exporting or importing data.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/sources`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 72, "to": 80 } }
        }
      }
    ],
    [
      "35da3bd2-2150-46b0-9108-d15b0b4822e9",
      {
        "pageContent": "**Payload:**\n\n```json\n{\n   \"source\" : {\n      \"name\" : \"Central Shipping Center\",\n      \"source_code\" : \"central\",\n      \"enabled\" : true,\n      \"description\": \"Primary source for the central region\",\n      \"latitude\": \"38.741320\",\n      \"longitude\": \"-90.363267\",\n      \"contact_name\": \"Harold Smith\",\n      \"email\": \"hsmith@example.com\",\n      \"phone\": \"(314) 555-1234\",\n      \"country_id\" : \"US\",\n      \"region_id\": 36,\n      \"city\": \"St. Louis\",\n      \"street\": \"123 Warehouse Blvd\",\n      \"postcode\" : \"63145\",\n      \"extension_attributes\": {\n        \"is_pickup_location_active\": true,\n        \"frontend_name\": \"Sport Equipment Store\",\n        \"frontend_description\": \"Sport Equipment Store description\"\n      }\n   }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 80, "to": 105 } }
        }
      }
    ],
    [
      "d2f19577-f7dd-4928-8a95-199a7df6dd04",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returns an empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 106, "to": 112 } }
        }
      }
    ],
    [
      "1d8147ad-bd60-44e6-827a-d2a19c91d4b1",
      {
        "pageContent": "## Update a source\n\nAll PUT requests must contain the `name`, `country_id`, and `postcode` parameters.\n\nThis example updates the contact information (`contact_name`, `email`, and `phone` parameters) of the source.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/inventory/sources/central`\n\n**Payload:**\n\n```json\n{\n   \"source\" : {\n      \"name\": \"Central Shipping Center\",\n      \"contact_name\": \"Donna Milton\",\n      \"email\": \"dmilton@example.com\",\n      \"phone\": \"(314) 555-1237\",\n      \"country_id\" : \"US\",\n      \"postcode\" : \"63145\"\n   }\n}\n```\n\n**Response:**\n\nCommerce returns an empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 114, "to": 143 } }
        }
      }
    ],
    [
      "5526af5e-f310-48a4-8d4a-41b3e77f3356",
      {
        "pageContent": "## Return all information about a source\n\nThis call returns detailed information about the specified source.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/sources/central`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n```json\n{\n    \"source_code\": \"central\",\n    \"name\": \"Central Shipping Center\",\n    \"email\": \"dmilton@example.com\",\n    \"contact_name\": \"Donna Milton\",\n    \"enabled\": true,\n    \"description\": \"Primary source for the central region\",\n    \"latitude\": 38.74132,\n    \"longitude\": -90.363267,\n    \"country_id\": \"US\",\n    \"region_id\": 36,\n    \"city\": \"St. Louis\",\n    \"street\": \"123 Warehouse Blvd\",\n    \"postcode\": \"63145\",\n    \"phone\": \"(314) 555-1237\",\n    \"use_default_carrier_config\": true,\n    \"carrier_links\": []\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 145, "to": 178 } }
        }
      }
    ],
    [
      "2737452b-c7f1-4272-87f1-55335f358a51",
      {
        "pageContent": "## Search for sources\n\nThe following call returns all sources that are located in the United States (`country_id` = `US`)\n\nSee [Search using REST APIs](/rest/use-rest/performing-searches/) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/sources?searchCriteria[filter_groups][0][filters][0][field]=country_id&searchCriteria[filter_groups][0][filters][0][value]=US&searchCriteria[filter_groups][0][filters][0][condition_type]=eq`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 180, "to": 197 } }
        }
      }
    ],
    [
      "acefcbbe-a3d6-465f-9cec-c3b36716b25c",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"source_code\": \"central\",\n            \"name\": \"Central Shipping Center\",\n            \"email\": \"hsmith@example.com\",\n            \"contact_name\": \"Harold Smith\",\n            \"enabled\": true,\n            \"description\": \"Primary source for the central region\",\n            \"latitude\": 38.74132,\n            \"longitude\": -90.363267,\n            \"country_id\": \"US\",\n            \"region_id\": 36,\n            \"city\": \"St. Louis\",\n            \"street\": \"123 Warehouse Blvd\",\n            \"postcode\": \"63145\",\n            \"phone\": \"(314) 555-1234\",\n            \"use_default_carrier_config\": true,\n            \"carrier_links\": []\n        },\n        {\n            \"source_code\": \"default\",\n            \"name\": \"Default Source\",\n            \"enabled\": true,\n            \"description\": \"Default Source\",\n            \"latitude\": 0,\n            \"longitude\": 0,\n            \"country_id\": \"US\",\n            \"postcode\": \"00000\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 199, "to": 228 } }
        }
      }
    ],
    [
      "38300fcb-f733-42f5-ac60-949250fb04d9",
      {
        "pageContent": "\"use_default_carrier_config\": true,\n            \"carrier_links\": []\n        },\n        {\n            \"source_code\": \"east\",\n            \"name\": \"Eastern Shipping Center\",\n            \"email\": \"dsimons@example.com\",\n            \"contact_name\": \"Daryl Simons\",\n            \"enabled\": true,\n            \"description\": \"Primary source for the eastern region\",\n            \"country_id\": \"US\",\n            \"region_id\": 45,\n            \"city\": \"Raleigh\",\n            \"street\": \"456 Shipping Center Blvd\",\n            \"postcode\": \"27614\",\n            \"phone\": \"(919) 555-8888\",\n            \"use_default_carrier_config\": true,\n            \"carrier_links\": []\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"country_id\",\n                        \"value\": \"US\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 229, "to": 261 } }
        }
      }
    ],
    [
      "b843f045-8cd5-441c-adfb-c8ddd018f35e",
      {
        "pageContent": "]\n    },\n    \"total_count\": 3\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 260, "to": 263 } }
        }
      }
    ],
    [
      "a84aad3f-690f-44f9-be92-5be1f721302e",
      {
        "pageContent": "```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-sources.md",
          "loc": { "lines": { "from": 264, "to": 266 } }
        }
      }
    ],
    [
      "ddc50465-aca4-4329-89fa-29d686e0cd21",
      {
        "pageContent": "---\ntitle: Manage stocks\ndescription: Map your sources to sales channels and link to salable quantities and inventories\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Manage stocks\n\nStocks map your sources to sales channels, providing a direct link to salable quantities and inventories.\n\nAll stores start with a default stock. When the inventory management functionality is enabled, Adobe Commerce automatically assigns products to the default source and stock. Single Source merchants use the default stock only. Multi Source merchants create and configure stocks as needed to best fit their stores and order fulfillment processes.\n\nThe `stock_id` of the default stock is `1`.  You cannot delete or add sources to the default stock, but you can perform these actions with custom stocks.\n\nAny sales channels that are not explicitly assigned to a custom stock are assigned to the Default Stock.\n\n**Service name:**\n\n`inventoryApiStockRepositoryV1`\n\n**REST endpoints:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "c1f49fd0-f49e-4d6a-bd8a-0ea91d2e1f2b",
      {
        "pageContent": "```http\nPOST /V1/inventory/stocks\nPUT /V1/inventory/stocks/:stockId\nGET /V1/inventory/stocks/:stockId\nDELETE /V1/inventory/stocks/:stockId\nGET /V1/inventory/stocks",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 25, "to": 30 } }
        }
      }
    ],
    [
      "0a79940d-96ae-41f2-93f9-b57e069d8d57",
      {
        "pageContent": "```\n\n**StockInterface parameters:**\n\nName | Description | Type | Requirements\n--- | --- | --- | ---\n`stock_id` | An ID generated when a stock is created. | Integer | Required for PUT, DELETE, and GET operations\n`name` | The display name of the stock. | String | Required for POST and PUT operations\n`sales_channels` | Defines the sales channel for this stock. Currently, only websites are supported. | Array | Required for POST operations\n`type` | Defines the type of sales channel. This value must be `website`. | String | Required for POST operations\n`code` | Specifies a valid website code name | String | Required for POST operations",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 31, "to": 41 } }
        }
      }
    ],
    [
      "fe20e7d3-8ce6-4f82-a3d4-3a0f382c5b76",
      {
        "pageContent": "## Create a stock\n\nOnly one stock can be mapped to each sales channel. If you assign a sales channel that is already mapped to another stock, the sales channel will be removed from the original stock.\n\n**Sample usage:**\n\n`POST <host>/rest/<store_code>/V1/inventory/stocks`\n\n**Payload:**\n\n```json\n{\n  \"stock\": {\n    \"name\": \"Central Stock\",\n    \"extension_attributes\": {\n      \"sales_channels\": [\n        {\n          \"type\": \"website\",\n          \"code\": \"test_site\"\n        }\n      ]\n    }\n  }\n}\n```\n\n**Response:**\n\nA `stock_id`, such as `4`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 43, "to": 71 } }
        }
      }
    ],
    [
      "8667d0d6-e301-4995-8824-5cffbff0778c",
      {
        "pageContent": "## Update a stock\n\nYou can change the name of a custom stock and its associated sales channels. Each PUT call overwrites the previous set of assigned sales channels. If you omit the `sales_channel` array, all sales channels will be unassigned from the stock.\n\nIf you change a sales channel between stocks, we recommend that you first complete any open orders and shipments that may need access to the assigned sources.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/inventory/stocks/4`\n\n**Payload:**\n\n```json\n{\n  \"stock\": {\n    \"name\": \"St. Louis Stock\",\n    \"extension_attributes\": {\n      \"sales_channels\": [\n        {\n          \"type\": \"website\",\n          \"code\": \"test_site\"\n        }\n      ]\n    }\n  }\n}\n```\n\n**Response:**\n\nA `stock_id`, such as `4`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 73, "to": 103 } }
        }
      }
    ],
    [
      "29d7870c-cd94-4b8a-8027-7f74a86670e7",
      {
        "pageContent": "## Return all information about a stock\n\nThis call returns detailed information about the specified stock.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/stocks/4`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n```json\n{\n  \"stock\": {\n    \"name\": \"St. Louis Stock\",\n    \"extension_attributes\": {\n      \"sales_channels\": [\n        {\n          \"type\": \"website\",\n          \"code\": \"test_site\"\n        }\n      ]\n    }\n  }\n}\n```\n\n## Delete a stock\n\nYou cannot delete a stock if it is assigned to a sales channel. You can unassign a stock's sales channels by omitting the `sales_channels` array in a `PUT /V1/inventory/stocks/:stockId` call.\n\n**Sample Usage:**\n\n`DELETE <host>/rest/<store_code>/V1/inventory/stocks/4`\n\n**Payload:**\n\nNone\n\n**Response:**\n\nCommerce returns an empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 105, "to": 151 } }
        }
      }
    ],
    [
      "af9784a6-3c0c-4a3f-90d4-c5a56f075904",
      {
        "pageContent": "## Search for stocks\n\nThe following call returns all stocks whose name contains the string `Stock`.\n\nSee [Search using REST APIs](/rest/use-rest/performing-searches/) for information about constructing a search query.\n\n**Sample Usage:**\n\n`GET <host>/rest/<store_code>/V1/inventory/stocks?searchCriteria[filter_groups][0][filters][0][field]=name&searchCriteria[filter_groups][0][filters][0][value]=%25Stock%25&searchCriteria[filter_groups][0][filters][0][condition_type]=like`\n\n**Payload:**\n\nNone\n\n**Response:**\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 153, "to": 170 } }
        }
      }
    ],
    [
      "9b948b93-f8ab-4c01-ab7e-2301545d1ef9",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"stock_id\": 1,\n            \"name\": \"Default Stock\",\n            \"extension_attributes\": {\n                \"sales_channels\": [\n                    {\n                        \"type\": \"website\",\n                        \"code\": \"base\"\n                    }\n                ]\n            }\n        },\n        {\n            \"stock_id\": 4,\n            \"name\": \"St. Louis Stock\",\n            \"extension_attributes\": {\n                \"sales_channels\": [\n                    {\n                        \"type\": \"website\",\n                        \"code\": \"test_site\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"name\",\n                        \"value\": \"%Stock%\",\n                        \"condition_type\": \"like\"\n                    }\n                ]\n            }\n        ]\n    },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 172, "to": 212 } }
        }
      }
    ],
    [
      "8c612399-5d17-4600-8a40-481258e5953b",
      {
        "pageContent": "]\n    },\n    \"total_count\": 2\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 211, "to": 214 } }
        }
      }
    ],
    [
      "4a046eef-a3a6-4d5a-9be0-098714f3c141",
      {
        "pageContent": "```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/inventory/manage-stocks.md",
          "loc": { "lines": { "from": 215, "to": 217 } }
        }
      }
    ],
    [
      "7a609a76-537e-4481-8d73-8b2aa072bf4d",
      {
        "pageContent": "---\ntitle: Manage prices for multiple products\ndescription: Update multiple special prices, tier prices, base prices, or cost values with a single call.\nkeywords:\n  - REST\n--- \nimport * as Vars from '../../../../data/vars.js';\n\n# Manage prices for multiple products\n\nAdobe Commerce provides REST endpoints that allow you to update multiple special prices, tier prices, base prices, or cost values with a single call.\n\nThe calls that update special and tier prices mimic the options available on a product's **Advanced Pricing** screen in Admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "b00ae1f3-90bb-48cb-93ee-9ed199969eaf",
      {
        "pageContent": "## Manage special prices\n\nThe  `SpecialPriceStorageInterface` service provides the means to efficiently schedule special prices for one or more products in a store's catalog. When you use these calls, you do not provide detailed information about the product.\n\nThe `POST /V1/products/special-price` call sets special prices for the following product types:\n\n*  Simple\n*  Bundle\n*  Virtual\n*  Downloadable\n\n**Service Name:**\n\n`SpecialPriceStorageInterface`\n\n**REST Endpoints:**\n\n```http\nPOST /V1/products/special-price\nPOST /V1/products/special-price-information\nPOST /V1/products/special-price-delete",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 15, "to": 35 } }
        }
      }
    ],
    [
      "f59b7d55-31aa-4002-8fb3-aab9115c7264",
      {
        "pageContent": "```\n\n**SpecialPriceStorageInterface Parameters:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 36, "to": 38 } }
        }
      }
    ],
    [
      "a4b175dd-99be-4dd4-be9b-ede95a0c920c",
      {
        "pageContent": "Name | Description | Format | Requirements\n--- | --- | --- | ---\n`price` | The special price of the product | float | Required for setting or deleting a special price\n`store_id` | The store ID  to apply the special price | integer | Required for setting or deleting a special price\n`sku` | The SKU of the product | string | Required for setting or deleting a special price\n`skus` | An array of SKU values that is specified when retrieving a list of special prices | array | Required for retrievals\n`price_from` | The date and time the special price goes into effect. The date/time format is `YYYY-MM-DD hh:mm:ss`. The specified time must be later than the current time.  | string | Required in <Vars.sitedatavaree/>. Optional in <Vars.sitedatavarce/>.\n`price_to` | The date and time the special price ends. The date/time format is `YYYY-MM-DD hh:mm:ss` If no value is specified, the special price does not expire. | string | Required in <Vars.sitedatavaree/>. Optional in <Vars.sitedatavarce/>.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 40, "to": 47 } }
        }
      }
    ],
    [
      "32cd4775-1d82-4c9e-b7b5-5dbc1ca57cbe",
      {
        "pageContent": "### Set special prices\n\nAll calls to set special prices must include the `store_id`, `sku`, and `price` parameters. If the call is sent to an <Vars.sitedatavaree/> installation, the call must also include the `price_from` parameter. If the call is sent to a <Vars.sitedatavarce/> installation, then the `price_from` parameter is optional.\n\nFor bundled products, the value of the `price` parameter must be expressed as a discount percentage.\n\nYou can set multiple special prices in a single call, as shown in the example below. The call sets special prices for a simple product, downloadable product, and bundle product for two days.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 49, "to": 57 } }
        }
      }
    ],
    [
      "b4f07b71-ecf0-4288-ba93-f070c2002c53",
      {
        "pageContent": "The special price endpoint can only use a global price scope (**Stores > Settings > Configuration > Catalog > Catalog > Price > Catalog Price Scope**). The mandatory parameters `price_from` and `price_to` trigger a catalog schedule, which is currently only supported on a global price scope. Overlapping date ranges on multiple stores will trigger an error that states: \"Future Update already exists in this time range. Set a different range and try again.\"\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/special-price`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 59, "to": 65 } }
        }
      }
    ],
    [
      "f203346e-2084-45eb-9fe0-b5c2cec822cb",
      {
        "pageContent": "#### Payload\n\n```json\n{\n  \"prices\": [\n    {\n      \"price\": 29.95,\n      \"store_id\": 0,\n      \"price_from\": \"2017-07-15 00:00:00\",\n      \"price_to\": \"2017-07-16 23:59:59\",\n      \"sku\": \"24-WB06\"\n    },\n    {\n      \"price\": 19.95,\n      \"store_id\": 0,\n      \"price_from\": \"2017-07-15 00:00:00\",\n      \"price_to\": \"2017-07-16 23:59:59\",\n      \"sku\": \"240-LV06\"\n    },\n    {\n      \"price\": 5,\n      \"store_id\": 0,\n      \"price_from\": \"2017-07-15 00:00:00\",\n      \"price_to\": \"2017-07-16 23:59:59\",\n      \"sku\": \"24-WG080\"\n    }\n  ]\n}\n\n```\n\n#### Response\n\n```json\n// Returns an empty array\n[] \n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 67, "to": 103 } }
        }
      }
    ],
    [
      "1141c7d7-196e-478a-9ce6-90c3b16bf602",
      {
        "pageContent": "### Get special prices\n\nThe following call returns the special price information for three SKU values.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/special-price-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"skus\": [\n    \"24-WB06\",\n    \"240-LV06\",\n    \"24-WG080\"\n  ]\n}\n```\n\n#### Response\n\n```json\n[\n    {\n        \"price\": 29.949999999999999,\n        \"store_id\": 0,\n        \"sku\": \"24-WB06\",\n        \"price_from\": \"2017-07-15 00:00:00\",\n        \"price_to\": \"2017-07-16 23:59:59\"\n    },\n    {\n        \"price\": 19.949999999999999,\n        \"store_id\": 0,\n        \"sku\": \"240-LV06\",\n        \"price_from\": \"2017-07-15 00:00:00\",\n        \"price_to\": \"2017-07-16 23:59:59\"\n    },\n    {\n        \"price\": 5,\n        \"store_id\": 0,\n        \"sku\": \"24-WG080\",\n        \"price_from\": \"2017-07-15 00:00:00\",\n        \"price_to\": \"2017-07-16 23:59:59\"\n    }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 105, "to": 153 } }
        }
      }
    ],
    [
      "6e794023-c980-44d2-b201-a82fef0ba0a2",
      {
        "pageContent": "### Delete a special price\n\nIf any item to be deleted has an invalid `price`, `store_id`, `sku` or `date`, Commerce marks the item as failed and excludes it from the delete list. Valid items are deleted as requested.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/special-price-delete`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"prices\": [\n    {\n      \"price\": 29.95,\n      \"store_id\": 0,\n      \"price_from\": \"2017-07-15 00:00:00\",\n      \"price_to\": \"2017-07-16 23:59:59\",\n      \"sku\": \"24-WB06\"\n    },\n    {\n      \"price\": 19.95,\n      \"store_id\": 0,\n      \"price_from\": \"2017-07-15 00:00:00\",\n      \"price_to\": \"2017-07-16 23:59:59\",\n      \"sku\": \"240-LV06\"\n    },\n    {\n      \"price\": 5,\n      \"store_id\": 0,\n      \"price_from\": \"2017-07-15 00:00:00\",\n      \"price_to\": \"2017-07-16 23:59:59\",\n      \"sku\": \"24-WG080\"\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// Returns an empty array\n[] \n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 155, "to": 200 } }
        }
      }
    ],
    [
      "1e12d7f0-35d3-422a-91ea-745324c367fd",
      {
        "pageContent": "## Manage tier prices\n\nTier pricing offers a quantity discount to members of a specific customer group and website.  The  `TierPriceStorageInterface` service provides an efficient means to set tier prices for one or more products without requiring detailed information about each product.\n\nYou can use REST endpoints to set tier prices for the following product types:\n\nProduct type | Tier price types\n--- | ---\nSimple | fixed, discount\nBundle | discount\nVirtual | fixed, discount\nDownloadable | fixed, discount\n\n**Service Name:**\n\n`TierPriceStorageInterface`\n\n**REST Endpoints:**\n\n```http\nPOST /V1/products/tier-prices\nPUT /V1/products/tier-prices\nPOST /V1/products/tier-prices-information\nPOST /V1/products/tier-prices-delete",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 202, "to": 225 } }
        }
      }
    ],
    [
      "944270aa-03f2-45c2-8358-44560a2f5c7b",
      {
        "pageContent": "```\n\n**TierPriceStorageInterface Parameters:**\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`price` | The discounted product price for the quantity purchased | float | Required to set, update, or delete a tier price\n`price_type` | Must be `fixed` (the set price) or `discount` (percent discount) | string | Required to set, update, or delete a tier price\n`website_id` | The website ID  to apply the tier price | integer | Required to set, update, or delete a tier price\n`sku` | The SKU of the product | string | Required to set, update, or delete a tier price\n`skus` | An array of SKU values that is specified when retrieving a list of tier prices | array | Required for retrievals\n`customer_group` |  A specific customer group that qualifies to receive the tier price discount | string | Required to set, update, or delete a tier price\n`quantity` | The quantity that must be purchased to receive the tier price | float | Required to set, update, or delete a tier price",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 226, "to": 238 } }
        }
      }
    ],
    [
      "d3e39ced-caff-4d8d-8824-39f3213e02fe",
      {
        "pageContent": "### Set tier prices\n\nThe `POST /V1/products/tier-prices` call adds new tier prices or updates existing prices. You can specify tier prices for multiple products in the same call.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/tier-prices`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n\n{\n  \"prices\": [\n    {\n      \"price\": 10,\n      \"price_type\": \"fixed\",\n      \"website_id\": 0,\n      \"sku\": \"24-UG04\",\n      \"customer_group\": \"General\",\n      \"quantity\": 3\n    },\n    {\n      \"price\": 8,\n      \"price_type\": \"fixed\",\n      \"website_id\": 0,\n      \"sku\": \"24-UG04\",\n      \"customer_group\": \"General\",\n      \"quantity\": 5\n    },\n    {\n      \"price\": 6,\n      \"price_type\": \"fixed\",\n      \"website_id\": 0,\n      \"sku\": \"24-UG04\",\n      \"customer_group\": \"General\",\n      \"quantity\": 10\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// Returns an empty array\n[] \n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 240, "to": 289 } }
        }
      }
    ],
    [
      "0ceae0cf-3af4-4228-9995-4b5c73d3665a",
      {
        "pageContent": "### Replace existing tier prices\n\nThe replace request removes all existing tier prices for a specified product and adds new rows for this same product instead.\n\nThe following example removes the $10 tier price for `sku` 24-UG04 and changes the customer group for the `sku`'s other tier prices.\n\n**Sample Usage:**\n\n`PUT <host>/rest/<store_code>/V1/products/tier-prices`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"prices\": [\n    {\n      \"price\": 8,\n      \"price_type\": \"fixed\",\n      \"website_id\": 0,\n      \"sku\": \"24-UG04\",\n      \"customer_group\": \"NOT LOGGED IN\",\n      \"quantity\": 5\n    },\n    {\n      \"price\": 5,\n      \"price_type\": \"fixed\",\n      \"website_id\": 0,\n      \"sku\": \"24-UG04\",\n      \"customer_group\": \"NOT LOGGED IN\",\n      \"quantity\": 310\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// Returns an empty array\n[] \n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 291, "to": 333 } }
        }
      }
    ],
    [
      "f7b89719-1915-4967-99af-8ae5ad1ae08e",
      {
        "pageContent": "### Get tier prices\n\nCommerce returns all active tier prices for the specified list of `skus`.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/tier-prices-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"skus\": [\n    \"24-UG04\",\n    \"24-UG01\"\n  ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 335, "to": 354 } }
        }
      }
    ],
    [
      "4272730e-2f38-491b-9a16-14e6b4965c58",
      {
        "pageContent": "#### Response\n\n```json\n[\n    {\n        \"price\": 8,\n        \"price_type\": \"fixed\",\n        \"website_id\": 0,\n        \"sku\": \"24-UG04\",\n        \"customer_group\": \"General\",\n        \"quantity\": 5\n    },\n    {\n        \"price\": 6,\n        \"price_type\": \"fixed\",\n        \"website_id\": 0,\n        \"sku\": \"24-UG04\",\n        \"customer_group\": \"General\",\n        \"quantity\": 10\n    },\n    {\n        \"price\": 10,\n        \"price_type\": \"fixed\",\n        \"website_id\": 0,\n        \"sku\": \"24-UG04\",\n        \"customer_group\": \"General\",\n        \"quantity\": 3\n    },\n    {\n        \"price\": 5,\n        \"price_type\": \"discount\",\n        \"website_id\": 0,\n        \"sku\": \"24-UG01\",\n        \"customer_group\": \"General\",\n        \"quantity\": 3\n    }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 356, "to": 393 } }
        }
      }
    ],
    [
      "08c914b4-0b05-46d2-9927-84cc86cbb5db",
      {
        "pageContent": "### Delete tier prices\n\nYou must specify each tier price that is to be deleted. You can delete multiple tier prices in a single call.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/tier-prices-delete`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"prices\": [\n    {\n      \"price\": 10,\n      \"price_type\": \"fixed\",\n      \"website_id\": 0,\n      \"sku\": \"24-UG04\",\n      \"customer_group\": \"General\",\n      \"quantity\": 3\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// Returns an empty array\n[] \n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 395, "to": 427 } }
        }
      }
    ],
    [
      "ad1c3bac-bce3-4c21-be84-e8f560ede01a",
      {
        "pageContent": "## Manage base prices\n\nA base price is the price of a product, before any discounts or extra costs (such as shipping or taxes) are applied.  The  `BasePriceStorageInterface` service provides an efficient means to set base prices for one or more products without requiring detailed information about each product.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nYou cannot delete a base price. It can only be changed to another value (0 or greater).\n\n**REST Endpoints:**\n\n```http\nPOST /V1/products/base-prices\nPOST /V1/products/base-prices-information",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 429, "to": 441 } }
        }
      }
    ],
    [
      "d7e46108-a2f3-4575-9577-9614434a7090",
      {
        "pageContent": "```\n\n**BasePriceStorageInterface Parameters:**\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`price` | The base price of the item | float | Required to set a base price\n`store_id` | The store ID  to apply the base price | integer | Required to set a base price\n`sku` | The SKU of the product | string | Required to set a base price\n`skus` | An array of SKU values that is specified when retrieving a list of base prices | array | Required for retrievals",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 442, "to": 451 } }
        }
      }
    ],
    [
      "681d3a39-112d-4f6c-8570-99cfa55f42cd",
      {
        "pageContent": "### Set base prices\n\nThe `POST /V1/products/base-price` call can set base prices for the following types of products:\n\n*  Simple\n*  Virtual\n*  Downloadable\n*  Bundle (fixed price type only)\n\nThe following example sets the base price for a simple and a downloadable product.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/base-prices`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"prices\": [\n  {\n    \"price\": 12,\n    \"store_id\": 0,\n    \"sku\": \"24-UG04\"\n  },\n  {\n    \"price\": 22,\n    \"store_id\": 0,\n    \"sku\": \"240-LV06\"\n  }\n  ]\n}\n```\n\n#### Response\n\n```json\n// Returns an empty array\n[] \n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 453, "to": 494 } }
        }
      }
    ],
    [
      "0a977552-8684-4ba8-9c23-1c9693bbfb2e",
      {
        "pageContent": "### Get base prices\n\nThe following example returns the base prices for a simple and a downloadable product.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/base-prices-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"skus\": [\n    \"24-UG04\",\n    \"240-LV06\"\n  ]\n}\n```\n\n#### Response\n\n```json\n[\n  {\n    \"price\": 12,\n    \"store_id\": 0,\n    \"sku\": \"24-UG04\"\n  },\n  {\n    \"price\": 22,\n    \"store_id\": 0,\n    \"sku\": \"240-LV06\"\n  }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 496, "to": 532 } }
        }
      }
    ],
    [
      "fd1a044a-4f02-482e-81ce-28eecf7eba20",
      {
        "pageContent": "## Manage cost values\n\nThe cost is the actual cost of a product. Tracking costs is optional, but having this information available can be helpful when you are setting discounts.\n\n**REST Endpoints:**\n\n```http\nPOST /V1/products/cost\nPOST /V1/products/cost-information\nPOST /V1/products/cost-delete\n```\n\n**CostStorageInterface Parameters:**\n\nName | Description | Format | Requirements\n--- | --- | --- | ---\n`cost` | The amount the item costs | float | Required to set or delete a cost value\n`store_id` | The store ID  to apply the cost value | integer | Required to set or delete a cost value\n`sku` | The SKU of the product | string | Required to set or delete a cost value\n`skus` | An array of SKU values that is specified when retrieving a list of cost values | array | Required for retrievals",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 534, "to": 553 } }
        }
      }
    ],
    [
      "1b172810-f48b-4805-a717-22fb9f64e8f5",
      {
        "pageContent": "### Set cost values\n\nThe `POST /V1/products/cost` call can set the cost values for the following types of products:\n\n*  Simple\n*  Virtual\n*  Downloadable\n\nThe following example sets the cost value for a simple and a downloadable product.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/cost`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"prices\": [\n    {\n      \"cost\": 18,\n      \"store_id\": 0,\n      \"sku\": \"24-WB03\"\n    },\n    {\n      \"cost\": 2,\n      \"store_id\": 0,\n      \"sku\": \"240-LV09\"\n    }\n  ]\n}\n```\n\n#### Response\n\n```json\n// Returns an empty array\n[] \n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 555, "to": 595 } }
        }
      }
    ],
    [
      "3510c973-2d5d-445e-96de-53495f314a9e",
      {
        "pageContent": "### Get cost values\n\nThe following example returns the cost values for a simple and a downloadable product.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/cost-information`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"skus\": [\n    \"24-WB03\",\n    \"240-LV09\"\n  ]\n}\n```\n\n#### Response\n\n```json\n[\n  {\n    \"cost\": 18,\n    \"store_id\": 0,\n    \"sku\": \"24-WB03\"\n  },\n  {\n    \"cost\": 2,\n    \"store_id\": 0,\n    \"sku\": \"240-LV09\"\n  }\n]\n```\n\n### Delete cost values\n\nThe following example deletes the previously-defined cost values for a simple and a downloadable product.\n\n**Sample Usage:**\n\n`POST <host>/rest/<store_code>/V1/products/cost-delete`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"skus\": [\n    \"24-WB03\",\n    \"240-LV09\"\n  ]\n}\n```\n\n#### Response\n\n```json\n`true`\n// indicating the cost values were deleted\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/catalog-pricing.md",
          "loc": { "lines": { "from": 597, "to": 661 } }
        }
      }
    ],
    [
      "8ed1c1a9-4adf-44f2-b3c3-5eeff13e4362",
      {
        "pageContent": "---\ntitle: Catalog module\ndescription: Create and maintain products and categories with the Catalog module.\nkeywords:\n  - REST\n--- \n \n# Catalog module\n\nThe `Catalog` module provides functionality for creating and maintaining products and categories.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/index.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "1b26dd36-81e5-423a-9b58-7e83a70cf7c9",
      {
        "pageContent": "## Categories\n\nWhen you create a category from Admin, you have the option to configure display and search engine optimization settings. To configure these settings using `POST V1/categories`, you can specify the following parameters as `attribute_code` values:\n\n```text\nall_children\nchildren\nchildren_count\ncustom_apply_to_products\ncustom_design\ncustom_design_from\ncustom_design_to\ncustom_layout_update\ncustom_use_parent_settings\ndefault_sort_by\ndescription\ndisplay_mode\nfilter_price_range\nimage\nis_anchor\nlanding_page\nmeta_description\nmeta_keywords\nmeta_title\npage_layout\npath\npath_in_store\nurl_key\nurl_path\n```\n\nThird-party modules may define other custom attributes.\n\nThe following example uses the `POST V1/categories` call to assign four custom attributes to the \"My New Category\" category.\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/index.md",
          "loc": { "lines": { "from": 12, "to": 47 } }
        }
      }
    ],
    [
      "9f122194-fbaa-4672-9d34-69cc1b97f62f",
      {
        "pageContent": "#### Request\n\n```json\n{\n    \"category\": {\n        \"parent_id\": 2,\n        \"name\": \"Kids\",\n        \"is_active\": true,\n        \"level\": 2,\n        \"include_in_menu\": true,\n        \"custom_attributes\": [\n            {\n                \"attribute_code\": \"description\",\n                \"value\": \"kids category description\"\n            },\n            {\n                \"attribute_code\": \"meta_title\",\n                \"value\": \"Kids meta title\"\n            },\n            {\n                \"attribute_code\": \"meta_keywords\",\n                \"value\": \"Kids meta keywords\"\n            },\n            {\n                \"attribute_code\": \"meta_description\",\n                \"value\": \"Kids meta description\"\n            },\n            {\n                \"attribute_code\": \"url_key\",\n                \"value\": \"kids\"\n            },\n            {\n                \"attribute_code\": \"url_path\",\n                \"value\": \"kids\"\n            }\n        ]\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/index.md",
          "loc": { "lines": { "from": 49, "to": 87 } }
        }
      }
    ],
    [
      "2b40fae4-c4db-4188-ad52-20d31789e668",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/index.md",
          "loc": { "lines": { "from": 89, "to": 89 } }
        }
      }
    ],
    [
      "5ff0022d-e046-4504-85ef-3ff18fc9d3a7",
      {
        "pageContent": "```json\n{\n    \"id\": 42,\n    \"parent_id\": 2,\n    \"name\": \"Kids\",\n    \"is_active\": true,\n    \"position\": 9,\n    \"level\": 2,\n    \"children\": \"\",\n    \"created_at\": \"2020-12-18 08:50:47\",\n    \"updated_at\": \"2020-12-18 08:50:47\",\n    \"path\": \"1/2/43\",\n    \"available_sort_by\": [],\n    \"include_in_menu\": true,\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"kids category description\"\n        },\n        {\n            \"attribute_code\": \"meta_title\",\n            \"value\": \"Kids meta title\"\n        },\n        {\n            \"attribute_code\": \"meta_keywords\",\n            \"value\": \"Kids meta keywords\"\n        },\n        {\n            \"attribute_code\": \"meta_description\",\n            \"value\": \"Kids meta description\"\n        },\n        {\n            \"attribute_code\": \"is_anchor\",\n            \"value\": \"1\"\n        },\n        {\n            \"attribute_code\": \"path\",\n            \"value\": \"1/2/43\"\n        },\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/index.md",
          "loc": { "lines": { "from": 91, "to": 130 } }
        }
      }
    ],
    [
      "f35a409d-7221-4f8b-9d60-00ef6f70dcaa",
      {
        "pageContent": "{\n            \"attribute_code\": \"children_count\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"kids\"\n        },\n        {\n            \"attribute_code\": \"url_path\",\n            \"value\": \"kids\"\n        }\n    ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/catalog/index.md",
          "loc": { "lines": { "from": 130, "to": 144 } }
        }
      }
    ],
    [
      "42433806-d857-4d41-b3aa-3bf6714f91ef",
      {
        "pageContent": "---\ntitle: Import API\ndescription: Import entities into Adobe Commerce using REST.\nkeywords:\n  - REST\n---\n\n# Import data\n\nThe `POST /rest/<store_view_code>/V1/import/csv` and `POST /rest/<store_view_code>/V1/import/json` endpoints provide a RESTful way to import data into Adobe Commerce. They mirror the import capabilities found in the Admin at **System** > Data Transfer > **Import**. These endpoints support the import of the following entities:\n\n*  `advanced_pricing`\n*  `catalog_product`\n*  `customer`\n*  `customer_address`\n*  `customer_composite`\n*  `customer_finance`\n*  `stock_sources`\n\n### Source Data Format and Requirements\n\nEnsure your source data conforms to the sequence and format expected by Commerce. To acquaint yourself with each import entity's requirements, visit the Import page in the Admin, select an entity from the dropdown, and click **Download Sample File**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "584cc539-90d9-40f4-b1e3-fa8b4f6f7b16",
      {
        "pageContent": "### CSV Import\n\nThe `import/csv` endpoint expects data in base64 encoded format:\n\n*  **Encoding**: Before submitting, your CSV data must be base64 encoded, which means there is no need to escape special characters.\n*  **Compression**: You can use [gzip](https://www.gzip.org) to compress your data before encoding. This is especially useful when handling larger CSV files that might exceed server or PHP request size limits.\n*  **Delimiter**: This API is tailored for CSV files that use commas as field and multi-value separators. Any other delimiters will cause the import to fail.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 24, "to": 30 } }
        }
      }
    ],
    [
      "9ba7c563-ce64-41e7-8437-8651cddaaf88",
      {
        "pageContent": "### JSON Import\n\nimport BetaNote from '/src/_includes/graphql/notes/beta.md'\n\n<BetaNote />\n\nThe `import/json` endpoint is designed for JSON data:\n\n*  Convert your CSV into JSON using any trustworthy online converter.\n*  When converting CSV to JSON using standard tools or libraries, special characters within the data are typically escaped automatically. Ensure that any manual edits or custom conversion processes handle this escaping appropriately.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 32, "to": 41 } }
        }
      }
    ],
    [
      "8d25fb5b-e94f-4247-8688-534cccdc007a",
      {
        "pageContent": "### Validation Strategy\n\nA validation strategy is mandatory. Depending on your chosen strategy, the API will either proceed with the import or abort it upon encountering invalid rows.\n\n*  `validation-stop-on-errors`: The API halts the import upon finding the first error. It will return an error message describing the issue and its row number.\n*  `validation-skip-errors`: The API imports valid rows unless the total number of errors surpasses the `allowedErrorCount`. If errors go beyond this count, the import is halted (even valid rows will not be processed). The response will contain details of the first error found and its row number.\n\nThe `allowedErrorCount` field specifies the maximum allowable error count before terminating the import process.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 43, "to": 50 } }
        }
      }
    ],
    [
      "6a23e2f7-7e9b-41f3-9d77-ce2deab1d2e6",
      {
        "pageContent": "## Import CSV API\n\nThe `POST /rest/<store_view_code>/V1/import/csv` endpoint uses the `StartImportInterface` service to efficiently import entities into Adobe Commerce. The payload must contain data in a base64 encoded format.\n\n**Service Name:**\n\n`StartImportInterface`\n\n**REST Endpoint:**\n\n```http\nPOST /rest/<store_view_code>/V1/import/csv",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 52, "to": 63 } }
        }
      }
    ],
    [
      "5dcd565b-6b6c-4a20-9b72-7fa935ce7414",
      {
        "pageContent": "```\n\n**StartImportInterface Parameters:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 64, "to": 66 } }
        }
      }
    ],
    [
      "933d37e0-6e61-4652-b372-783a8e00d47c",
      {
        "pageContent": "| Name                                | Description  | Format | Requirements                                                                                                                                                                                                                          |\n|-------------------------------------|-----|-----|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `locale`                            | The language and country combination for the data being imported | string | Optional                                                                                                                                                                                                                              |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 68, "to": 70 } }
        }
      }
    ],
    [
      "c999ba44-eed6-4042-9468-d31cff6c96f5",
      {
        "pageContent": "| `entity`                            | The type of entity to be imported | string | Required. The value must be one of the following: `advanced_pricing`, `catalog_product`, `customer`, `customer_address`, `customer_composite`, `customer_finance`, or `stock_sources`.                                                                                   |\n| `behavior`                          | The action to perform | string | Required. For `advanced_pricing`, `catalog_product`, `customer_composite`, or `stock_sources` the value must be one of the following: `append`, `replace`, or `delete`. For `customer`, `customer_address`, or `customer_finance` the value must be one of the following: `add_update`, `delete`, or `custom`.|",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 71, "to": 72 } }
        }
      }
    ],
    [
      "7e970019-3ff0-4544-af2e-b7db3f34c219",
      {
        "pageContent": "| `validationStrategy`                | Strategy to use when entities are invalid | string | Required. The value must be either `validation-stop-on-errors` or `validation-skip-errors`.                                                                                                                                                             |\n| `allowedErrorCount`                 | The maximum number of errors that can occur before the import is canceled | string | Required                                                                                                                                                                                                                              |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 73, "to": 74 } }
        }
      }
    ],
    [
      "ecaf4c58-65cc-4b0c-aa80-b829628a767b",
      {
        "pageContent": "| `csvData`                           | Base64 encoded string containing CSV data (optionally gzip compressed before base64) | string | Required                                                                                                                                                                                                                              |\n| `importFieldSeparator`              | Separator used in CSV.  Default is ',' | string | Optional                                                                                                                                                                                                                              |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 75, "to": 76 } }
        }
      }
    ],
    [
      "012de6d8-646d-4965-bd47-d24fb5e835eb",
      {
        "pageContent": "| `importMultipleValueSeparator`      | Separator used in columns with multiple values such as categories.  Default is ',' | string | Optional                                                                                                                                                                                                                              |\n| `importEmptyAttributeValueConstant` | Constant to be replaced with an empty attribute | string | Optional                                                                                                                                                                                                                              |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 77, "to": 78 } }
        }
      }
    ],
    [
      "ffd35228-c17c-4333-a0f8-b102ade6ed99",
      {
        "pageContent": "| `importImagesFileDir`               | Path to images relative to &lt;Magento root directory&gt;/var/import/images | string | Optional                                                                                                                                                                                                                              |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 79, "to": 79 } }
        }
      }
    ],
    [
      "230247f2-86a7-4d67-9911-0fea552a2a02",
      {
        "pageContent": "**Sample Usage:**\n\n`POST <host>/<store_view_code>/default/V1/import/csv`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <administrator token>`\n\n**Payload:**\n\n```json\n{\n  \"source\":{\n    \"entity\":\"advanced_pricing\",\n    \"behavior\":\"add_update\",\n    \"validationStrategy\": \"validation-stop-on-errors\",\n    \"allowedErrorCount\":\"10\",\n    \"csvData\":\"c2t1LHRpZXJfcHJpY2Vfd2Vic2l0ZSx0aWVyX3ByaWNlX2N1c3RvbWVyX2dyb3VwLHRpZXJfcHJpY2VfcXR5LHRpZXJfcHJpY2UsdGllcl9wcmljZV92YWx1ZV90eXBlClNpbXBsZTEsIkFsbCBXZWJzaXRlcyBbVVNEXSIsIk5PVCBMT0dHRUQgSU4iLDEuMDAwMCwyNTAuMDAwMDAwLEZpeGVk\"\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 81, "to": 102 } }
        }
      }
    ],
    [
      "41c62840-5a18-45e5-8383-65d33a272bb1",
      {
        "pageContent": "```\n\n**Response:**\n\nWhen Import is successful, the API response will contain the number of entities that were successfully imported.\n\n```json\n[\n  \"Entities Processed: 1\"\n]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 103, "to": 112 } }
        }
      }
    ],
    [
      "bb5a28ea-1892-48e5-a412-f4811fecdcb7",
      {
        "pageContent": "```\n\n**Payload 2:**\n\nThis sample payload contains encoded CSV data with two valid rows and one invalid row.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 113, "to": 117 } }
        }
      }
    ],
    [
      "2ae25fce-ec68-4213-bea7-39f3daaab1c1",
      {
        "pageContent": "```json\n{\n  \"source\": {\n    \"entity\":\"customer\",\n    \"behavior\":\"add_update\",\n    \"validationStrategy\": \"validation-stop-on-errors\",\n    \"allowedErrorCount\":\"10\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 119, "to": 125 } }
        }
      }
    ],
    [
      "cc2fbda5-54df-4899-ae0a-92fa2d6648ce",
      {
        "pageContent": "\"csvData\":\"ZW1haWwsX3dlYnNpdGUsX3N0b3JlLHdlYnNpdGVfaWQsc3RvcmVfaWQsY3JlYXRlZF9pbixwcmVmaXgsZmlyc3RuYW1lLG1pZGRsZW5hbWUsbGFzdG5hbWUsc3VmZml4LGdyb3VwX2lkLGRvYixwYXNzd29yZF9oYXNoLHJwX3Rva2VuLHJwX3Rva2VuX2NyZWF0ZWRfYXQsdGF4dmF0LGNvbmZpcm1hdGlvbixjcmVhdGVkX2F0LGdlbmRlcixkaXNhYmxlX2F1dG9fZ3JvdXBfY2hhbmdlLHVwZGF0ZWRfYXQsZmFpbHVyZXNfbnVtLGZpcnN0X2ZhaWx1cmUsbG9ja19leHBpcmVzLHJld2FyZF91cGRhdGVfbm90aWZpY2F0aW9uLHJld2FyZF93YXJuaW5nX25vdGlmaWNhdGlvbixwYXNzd29yZApjQDEuY29tLGJhc2UsZGVmYXVsdCwxLDEsIkRlZmF1bHQgU3RvcmUgVmlldyIsLEMxLCxDMUwsLDEsLCwwOjM6T2Rob245RTRWa3RWWi9Ra2I3VGxmQ3ZZWmFRZ0NUTStMelN1UFA0b3grKzdqME5lNHM1MmdRTUszNXZjY1d1REJvc1p4bXJBOTZhbUpCenQsIjIwMjItMDYtMjEgMTg6NDQ6MTgiLCwsIjIwMjItMDYtMjEgMTg6NDQ6MTgiLDAsMCwiMjAyMi0wNi0yMSAxODo0NDoxOCIsMCwsLDAsMCwKY0AyLmNvbSxiYXNlLGRlZmF1bHQsMSwxLCJEZWZhdWx0IFN0b3JlIFZpZXciLCxDMiwsQzJMLCwxLCwsMDozOkFkYzJtazNKaHpScHBpYVdabFNhM05IUTMwTnpoejBMdEtwL1A3Nm5raXovRkFsbG15Z3V4KzF4dkhQcm5MbnBNSWJSVlg2dGk4WUdsdXpPLCIyMDIyLTA2LTIxIDE4OjQ0OjQyIiwsLCIyMDIyLTA2LTIxIDE4",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 126, "to": 126 } }
        }
      }
    ],
    [
      "c781be41-2c17-4578-82b6-300c52f175ef",
      {
        "pageContent": "LCIyMDIyLTA2LTIxIDE4OjQ0OjQyIiwwLDAsIjIwMjItMDYtMjEgMTg6NDQ6NDIiLDAsLCwwLDAsCkNAMy5jb20sYmFzZSxkZWZhdWx0LDEsMSwiRGVmYXVsdCBTdG9yZSBWaWV3IiwsQzMsLEMzTCwsMSwsLDA6MzpoM3g2UWg2RHNNdUxRaUZDWkNhUXZDUitDTkdFcXpFcWc1ZzRtamVjREVsSGRRdGJVVXg1ZFYrQ0lzc0h2YWgxZndZNlRIeEprUmlxSERDZywiMjAyMi0wNi0yMSAxODo0NTowOCIsLCwiMjAyMi0wNi0yMSAxODo0NTowOCIsMCwwLCIyMDIyLTA2LTIxIDE4OjQ1OjA4IiwwLCwsMCwwLDAK\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 126, "to": 126 } }
        }
      }
    ],
    [
      "fe16dec0-a262-4b1b-b9fb-50b241b6ea24",
      {
        "pageContent": "}\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 127, "to": 128 } }
        }
      }
    ],
    [
      "364a6666-7943-4b50-a7ea-66a45fe75130",
      {
        "pageContent": "```\n\nWhen Import fails, the response contains the row number and a message describing cause of failure for first invalid row encountered.\n\n**Response:**\n\n```json\n[\n  \"Row 3: Please enter a password with a valid length.\"\n]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 129, "to": 138 } }
        }
      }
    ],
    [
      "782cb8b9-3cf1-40fa-9ac6-6229aa5789d6",
      {
        "pageContent": "```\n\n**Payload 3:**\n\nIn this example, the CSV payload contains three rows of data, and one of them is invalid. Due to the selected validation strategy and `allowedErrorCount` value, only the valid rows are imported.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 139, "to": 143 } }
        }
      }
    ],
    [
      "7b3ad1a2-0a9c-4074-9c3e-7c84ea5174f2",
      {
        "pageContent": "```json\n{\n  \"source\": {\n  \"entity\":\"catalog_product\",\n  \"behavior\":\"add_update\",\n  \"validationStrategy\": \"validation-skip-errors\",\n  \"allowedErrorCount\":\"1\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 145, "to": 151 } }
        }
      }
    ],
    [
      "83c21332-565f-474a-a991-762e94363b28",
      {
        "pageContent": "\"csvData\":\"c2t1LHN0b3JlX3ZpZXdfY29kZSxhdHRyaWJ1dGVfc2V0X2NvZGUscHJvZHVjdF90eXBlLGNhdGVnb3JpZXMscHJvZHVjdF93ZWJzaXRlcyxuYW1lLGRlc2NyaXB0aW9uLHNob3J0X2Rlc2NyaXB0aW9uLHdlaWdodCxwcm9kdWN0X29ubGluZSx0YXhfY2xhc3NfbmFtZSx2aXNpYmlsaXR5LHByaWNlLHNwZWNpYWxfcHJpY2Usc3BlY2lhbF9wcmljZV9mcm9tX2RhdGUsc3BlY2lhbF9wcmljZV90b19kYXRlLHVybF9rZXksbWV0YV90aXRsZSxtZXRhX2tleXdvcmRzLG1ldGFfZGVzY3JpcHRpb24sYmFzZV9pbWFnZSxiYXNlX2ltYWdlX2xhYmVsLHNtYWxsX2ltYWdlLHNtYWxsX2ltYWdlX2xhYmVsLHRodW1ibmFpbF9pbWFnZSx0aHVtYm5haWxfaW1hZ2VfbGFiZWwsc3dhdGNoX2ltYWdlLHN3YXRjaF9pbWFnZV9sYWJlbCxjcmVhdGVkX2F0LHVwZGF0ZWRfYXQsbmV3X2Zyb21fZGF0ZSxuZXdfdG9fZGF0ZSxkaXNwbGF5X3Byb2R1Y3Rfb3B0aW9uc19pbixtYXBfcHJpY2UsbXNycF9wcmljZSxtYXBfZW5hYmxlZCxnaWZ0X21lc3NhZ2VfYXZhaWxhYmxlLGN1c3RvbV9kZXNpZ24sY3VzdG9tX2Rlc2lnbl9mcm9tLGN1c3RvbV9kZXNpZ25fdG8sY3VzdG9tX2xheW91dF91cGRhdGUscGFnZV9sYXlvdXQscHJvZHVjdF9vcHRpb25zX2NvbnRhaW5lcixtc3JwX2Rpc3BsYXlfYWN0dWFsX3ByaWNlX3R5cGUsY291bnRyeV9vZl9tYW51ZmFjdHVyZSxhZGRpdGlvbmFsX2F0dHJpYnV0ZXMscXR5LG91dF9vZl9zdG9ja19x",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 152, "to": 152 } }
        }
      }
    ],
    [
      "b62c09e0-dfbc-4149-83d6-c0fe40b43788",
      {
        "pageContent": "LG91dF9vZl9zdG9ja19xdHksdXNlX2NvbmZpZ19taW5fcXR5LGlzX3F0eV9kZWNpbWFsLGFsbG93X2JhY2tvcmRlcnMsdXNlX2NvbmZpZ19iYWNrb3JkZXJzLG1pbl9jYXJ0X3F0eSx1c2VfY29uZmlnX21pbl9zYWxlX3F0eSxtYXhfY2FydF9xdHksdXNlX2NvbmZpZ19tYXhfc2FsZV9xdHksaXNfaW5fc3RvY2ssbm90aWZ5X29uX3N0b2NrX2JlbG93LHVzZV9jb25maWdfbm90aWZ5X3N0b2NrX3F0eSxtYW5hZ2Vfc3RvY2ssdXNlX2NvbmZpZ19tYW5hZ2Vfc3RvY2ssdXNlX2NvbmZpZ19xdHlfaW5jcmVtZW50cyxxdHlfaW5jcmVtZW50cyx1c2VfY29uZmlnX2VuYWJsZV9xdHlfaW5jLGVuYWJsZV9xdHlfaW5jcmVtZW50cyxpc19kZWNpbWFsX2RpdmlkZWQsd2Vic2l0ZV9pZCxyZWxhdGVkX3NrdXMscmVsYXRlZF9wb3NpdGlvbixjcm9zc3NlbGxfc2t1cyxjcm9zc3NlbGxfcG9zaXRpb24sdXBzZWxsX3NrdXMsdXBzZWxsX3Bvc2l0aW9uLGFkZGl0aW9uYWxfaW1hZ2VzLGFkZGl0aW9uYWxfaW1hZ2VfbGFiZWxzLGhpZGVfZnJvbV9wcm9kdWN0X3BhZ2UsY3VzdG9tX29wdGlvbnMsYnVuZGxlX3ByaWNlX3R5cGUsYnVuZGxlX3NrdV90eXBlLGJ1bmRsZV9wcmljZV92aWV3LGJ1bmRsZV93ZWlnaHRfdHlwZSxidW5kbGVfdmFsdWVzLGJ1bmRsZV9zaGlwbWVudF90eXBlLGFzc29jaWF0ZWRfc2t1cyxkb3dubG9hZGFibGVfbGlua3MsZG93bmxvYWRhYmxlX3NhbXBsZXMsY29uZmlndXJhYmxlX3ZhcmlhdGlvbnMsY29uZmlndXJh",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 152, "to": 152 } }
        }
      }
    ],
    [
      "619717bd-45ca-42b0-9eb3-99b2a4e624bf",
      {
        "pageContent": "dGlvbnMsY29uZmlndXJhYmxlX3ZhcmlhdGlvbl9sYWJlbHMKU2ltcGxlMSwsRGVmYXVsdCxzaW1wbGUsIkRlZmF1bHQgQ2F0ZWdvcnkiLGJhc2UsU2ltcGxlMSwsLDEuMDAwMDAwLDEsIlRheGFibGUgR29vZHMiLCJDYXRhbG9nLCBTZWFyY2giLDEwLjAwMDAwMCwsLCxzaW1wbGUxLFNpbXBsZTEsU2ltcGxlMSwiU2ltcGxlMSAiLCwsLCwsLCwsIjYvNy8yMiwgMzoxNSBQTSIsIjYvNy8yMiwgMzoxNSBQTSIsLCwiQmxvY2sgYWZ0ZXIgSW5mbyBDb2x1bW4iLCwsLCJVc2UgY29uZmlnIiwsLCwsLCwiVXNlIGNvbmZpZyIsIlVuaXRlZCBTdGF0ZXMiLCwxMDAwLjAwMDAsMC4wMDAwLDEsMCwwLDEsMS4wMDAwLDEsMTAwMDAuMDAwMCwxLDEsMS4wMDAwLDEsMSwxLDEsMS4wMDAwLDEsMCwwLDAsLCwsLCwsLCwsLCwsLCwsLCwsLCwKU2ltcGxlMiwsRGVmYXVsdCxzaW1wbGUsIkRlZmF1bHQgQ2F0ZWdvcnkiYmFzZSxTaW1wbGUyLCwsMS4wMDAwMDAsMSwiVGF4YWJsZSBHb29kcyIsIkNhdGFsb2csIFNlYXJjaCIsMjAwLjAwMDAwMCwsLCxzaW1wbGUyLFNpbXBsZTIsU2ltcGxlMiwiU2ltcGxlMiAiLCwsLCwsLCwsIjYvNy8yMiwgMzoxNiBQTSIsIjYvNy8yMiwgMzoxNiBQTSIsLCwiQmxvY2sgYWZ0ZXIgSW5mbyBDb2x1bW4iLCwsLCJVc2UgY29uZmlnIiwsLCwsLCwiVXNlIGNvbmZpZyIsIlVuaXRlZCBTdGF0ZXMiLCwxMDAwLjAwMDAsMC4wMDAwLDEsMCwwLDEsMS4wMDAwLDEsMTAwMDAuMDAwMCwxLDEsMS4wMDAwLDEsMSwxLDEs",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 152, "to": 152 } }
        }
      }
    ],
    [
      "559fb927-45c6-4eeb-a5fe-3b2a54a758c9",
      {
        "pageContent": "MS4wMDAwLDEsMSwxLDEsMS4wMDAwLDEsMCwwLDAsLCwsLCwsLCwsLCwsLCwsLCwsLCwKU2ltcGxlMywsRGVmYXVsdCxzaW1wbGUsIkRlZmF1bHQgQ2F0ZWdvcnkiLGJhc2UsU2ltcGxlMywsLDEuMDAwMDAwLDEsIlRheGFibGUgR29vZHMiLCJDYXRhbG9nLCBTZWFyY2giLDMwMC4wMDAwMDAsLCwsc2ltcGxlMyxTaW1wbGUzLFNpbXBsZTMsIlNpbXBsZTMgIiwsLCwsLCwsLCI2LzcvMjIsIDM6MTYgUE0iLCI2LzcvMjIsIDM6MTYgUE0iLCwsIkJsb2NrIGFmdGVyIEluZm8gQ29sdW1uIiwsLCwiVXNlIGNvbmZpZyIsLCwsLCwsIlVzZSBjb25maWciLCJVbml0ZWQgU3RhdGVzIiwsMTAwMC4wMDAwLDAuMDAwMCwxLDAsMCwxLDEuMDAwMCwxLDEwMDAwLjAwMDAsMSwxLDEuMDAwMCwxLDEsMSwxLDEuMDAwMCwxLDAsMCwwLCwsLCwsLCwsLCwsLCwsLCwsLCwsCg==\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 152, "to": 152 } }
        }
      }
    ],
    [
      "70315011-3d35-4e0c-b51a-81a113ee0be5",
      {
        "pageContent": "}\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 153, "to": 154 } }
        }
      }
    ],
    [
      "5f153807-d49d-4c77-937f-e978f2225d7b",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n[\n  \"Entities Processed: 2\"\n] \n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 155, "to": 163 } }
        }
      }
    ],
    [
      "ca522484-0e50-4c49-997d-eeabec6b96c1",
      {
        "pageContent": "## Import JSON API\n\nimport BetaNote2 from '/src/_includes/graphql/notes/beta.md'\n\n<BetaNote2 />\n\nThe Import JSON API is exclusively available via REST and does not support SOAP. This is because the payload consists of complex JSON objects with nested arrays, which are inherently challenging to represent with the XML structure that SOAP relies upon.\n\nThe `POST /rest/<store_view_code>/V1/import/json` endpoint uses the `StartImportInterface` service to efficiently import entities into Adobe Commerce. The payload must contain data in JSON format.\n\n**Service Name:**\n\n`StartImportInterface`\n\n**REST Endpoint:**\n\n```http\nPOST /rest/<store_view_code>/V1/import/json",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 165, "to": 182 } }
        }
      }
    ],
    [
      "b3fdef05-2ba9-442e-9ff6-1c016d1d5bad",
      {
        "pageContent": "```\n\n**StartImportInterface Parameters:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 183, "to": 185 } }
        }
      }
    ],
    [
      "34f3568a-d348-4fc7-bda0-5d06b7f427fe",
      {
        "pageContent": "| Name                  | Description                                                                                                                                     | Format                | Requirements                                                                                                                                                                                                                         |\n|-----------------------|-------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 187, "to": 188 } }
        }
      }
    ],
    [
      "713152b3-f0c1-46b2-aad6-f933737f5c1d",
      {
        "pageContent": "| `locale`              | The language and country combination for the data being imported                                                                                | string                | Optional                                                                                 |\n| `entity`              | The type of entity to be imported                                                                                                               | string                | Required. Must be one of the following values: `advanced_pricing`, `catalog_product`, `customer`, `customer_address`, `customer_composite`, `customer_finance`, or `stock_sources`                                                                                  |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 189, "to": 190 } }
        }
      }
    ],
    [
      "6488f20f-32d2-4d4a-909b-c9c63db01d9f",
      {
        "pageContent": "| `behavior`            | The action to perform                                                                                                                           | string                | Required. For `advanced_pricing`, `catalog_product`, `customer_composite`, or `stock_sources` the value must be one of the following: `append`, `replace`, or `delete`. For `customer`, `customer_address`, or `customer_finance` the value must be one of the following: `add_update`, `delete`, or `custom`.|\n| `validationStrategy`  | Strategy to use when entities are invalid                                                                                                       | string                | Required.  The value must be either `validation-stop-on-errors` or `validation-skip-errors`.                                                                                                                                                         |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 191, "to": 192 } }
        }
      }
    ],
    [
      "6cf1a8ce-ace2-49fb-839b-30615f2eb2aa",
      {
        "pageContent": "| `allowedErrorCount`   | The maximum number of errors that can occur before the import is canceled                                                                            | string                | Required                                                                                                                                                                                                                             |\n| `items`               | An array of entities to be imported. Each entity, represented as a JSON object, contains details specific to its type (such as products or customers)| array of JSON objects | Required                                                                                                                                                                                                                             |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 193, "to": 194 } }
        }
      }
    ],
    [
      "72436fc7-1b32-4e6c-b931-a4a57e9e762a",
      {
        "pageContent": "| `importImagesFileDir` | Path to images relative to &lt;Magento root directory&gt;/var/import/images                                                                     | string                | Optional                                                                                                                                                                                                                             |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 195, "to": 195 } }
        }
      }
    ],
    [
      "668b4d31-c38e-49c8-aab0-6aa515a91a14",
      {
        "pageContent": "**Sample Usage:**\n\n`POST <host>/<store_view_code>/default/V1/import/json`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <administrator token>`\n\n**Simple product payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 197, "to": 207 } }
        }
      }
    ],
    [
      "2a054579-6805-4bf4-804e-09e945056a65",
      {
        "pageContent": "```json\n{\n    \"source\": {\n        \"locale\": \"en_EN\",\n        \"entity\": \"catalog_product\",\n        \"behavior\": \"append\",\n        \"validation_strategy\": \"validation-stop-on-errors\",\n        \"allowed_error_count\": 0,\n        \"items\":\t[\n            {\n                \"sku\": \"Simple Product 1\",\n                \"store_view_code\": \"\",\n                \"attribute_set_code\": \"Default\",\n                \"product_type\": \"simple\",\n                \"categories\": [\n                    \"Default Category/Category 1\",\n                    \"Default Category/Category 2\"\n                ],\n                \"product_websites\": [\n                    \"base\",\n                    \"french\"\n                ],\n                \"name\": \"Simple Product 1\",\n                \"description\": \"\",\n                \"short_description\": \"\",\n                \"weight\": 12,\n                \"product_online\": 1,\n                \"tax_class_name\": \"Taxable Goods\",\n                \"visibility\": \"Catalog, Search\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 209, "to": 237 } }
        }
      }
    ],
    [
      "5e1e2331-9ceb-4fe4-9c3a-65a5eba3377f",
      {
        "pageContent": "\"price\": 9.99,\n                \"special_price\": 8.99,\n                \"special_price_from_date\": \"7/20/23\",\n                \"special_price_to_date\": \"\",\n                \"url_key\": \"simple-product-1\",\n                \"meta_title\": \"Simple Product 1\",\n                \"meta_keywords\": \"Simple Product 1\",\n                \"meta_description\": \"Simple Product 1 \",\n                \"base_image\": \"/1/_/1.png\",\n                \"base_image_label\": \"one\",\n                \"small_image\": \"/1/_/1.png\",\n                \"small_image_label\": \"one\",\n                \"thumbnail_image\": \"/1/_/1.png\",\n                \"thumbnail_image_label\": \"one\",\n                \"swatch_image\": \"/2/_/2.png\",\n                \"swatch_image_label\": \"two\",\n                \"created_at\": \"7/20/23, 11:36 AM\",\n                \"updated_at\": \"7/21/23, 12:20 PM\",\n                \"new_from_date\": \"7/21/23\",\n                \"new_to_date\": \"\",\n                \"display_product_options_in\": \"Block after Info Column\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 238, "to": 258 } }
        }
      }
    ],
    [
      "1bbebbaa-0226-4333-8919-426cdba487bd",
      {
        "pageContent": "\"map_price\": \"\",\n                \"msrp_price\": \"\",\n                \"map_enabled\": \"\",\n                \"gift_message_available\": \"Yes\",\n                \"custom_design\": \"\",\n                \"custom_design_from\": \"\",\n                \"custom_design_to\": \"\",\n                \"custom_layout_update\": \"\",\n                \"page_layout\": \"\",\n                \"product_options_container\": \"\",\n                \"msrp_display_actual_price_type\": \"Use config\",\n                \"country_of_manufacture\": \"China\",\n                \"additional_attributes\": {\n                    \"date_time\": \"7/21/23\",\n                    \"gift_wrapping_available\": \"Use config\",\n                    \"gift_wrapping_price\": 1.99,\n                    \"instructions\": \"Here instruction go how to use this product indoors, outdoors.\",\n                    \"material\": \"cotton\",\n                    \"size\": \"large\",\n                    \"usage\": [\n                        \"Travel\",\n                        \"Sports\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 259, "to": 280 } }
        }
      }
    ],
    [
      "0b526bba-9cbb-40c4-a7b1-7676f65becb0",
      {
        "pageContent": "\"Office\",\n                        \"Casual\"\n                    ]\n                },\n                \"qty\": 1000,\n                \"out_of_stock_qty\": 0,\n                \"use_config_min_qty\": 1,\n                \"is_qty_decimal\": 0,\n                \"allow_backorders\": 0,\n                \"use_config_backorders\": 1,\n                \"min_cart_qty\": 1,\n                \"use_config_min_sale_qty\": 1,\n                \"max_cart_qty\": 10000,\n                \"use_config_max_sale_qty\": 1,\n                \"is_in_stock\": 1,\n                \"notify_on_stock_below\": 1,\n                \"use_config_notify_stock_qty\": 1,\n                \"manage_stock\": 1,\n                \"use_config_manage_stock\": 1,\n                \"use_config_qty_increments\": 1,\n                \"qty_increments\": 1,\n                \"use_config_enable_qty_inc\": 1,\n                \"enable_qty_increments\": 0,\n                \"is_decimal_divided\": 0,\n                \"website_id\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 281, "to": 305 } }
        }
      }
    ],
    [
      "5ab06956-a943-4a1e-9736-27574ebd1c51",
      {
        "pageContent": "\"deferred_stock_update\": 0,\n                \"use_config_deferred_stock_update\": 1,\n                \"related_skus\": \"\",\n                \"related_position\": \"\",\n                \"crosssell_skus\": \"\",\n                \"crosssell_position\": \"\",\n                \"upsell_skus\": \"\",\n                \"upsell_position\": \"\",\n                \"additional_images\": [\n                    \"/3/_/3.png\",\n                    \"/4/_/4.png\"\n                ],\n                \"additional_image_labels\": [\n                    \"three\",\n                    \"four\"\n                ],\n                \"hide_from_product_page\": \"\",\n                \"custom_options\":\n                [\n                    {\n                        \"name\": \"Option 1\",\n                        \"type\": \"drop_down\",\n                        \"required\": 0,\n                        \"price\": 25,\n                        \"sku\": \"\",\n                        \"max_characters\": 0,\n                        \"file_extension\": \"\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 306, "to": 332 } }
        }
      }
    ],
    [
      "65168b8a-45de-4116-9458-69f8302d6334",
      {
        "pageContent": "\"image_size_x\": 0,\n                        \"image_size_y\": 0,\n                        \"price_type\": \"percent\",\n                        \"option_title\": \"A\"\n                    },\n                    {\n                        \"name\": \"Option 2\",\n                        \"type\": \"multiple\",\n                        \"required\": 1,\n                        \"price\": 1.99,\n                        \"sku\": \"\",\n                        \"max_characters\": 0,\n                        \"file_extension\": \"\",\n                        \"image_size_x\": 0,\n                        \"image_size_y\": 0,\n                        \"price_type\": \"fixed\",\n                        \"option_title\": \"B\"\n                    },\n                    {\n                        \"name\": \"Option 2\",\n                        \"type\": \"multiple\",\n                        \"required\": 1,\n                        \"price\": 4.00,\n                        \"sku\": \"\",\n                        \"max_characters\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 333, "to": 357 } }
        }
      }
    ],
    [
      "59167fec-c69c-4ecf-afe7-943046994209",
      {
        "pageContent": "\"file_extension\": \"\",\n                        \"image_size_x\": 0,\n                        \"image_size_y\": 0,\n                        \"price_type\": \"fixed\",\n                        \"option_title\": \"C\"\n                    }\n                ],\n                \"giftcard_type\": \"\",\n                \"giftcard_allow_open_amount\": \"\",\n                \"giftcard_open_amount_min\": \"\",\n                \"giftcard_open_amount_max\": \"\",\n                \"giftcard_amount\": \"\",\n                \"use_config_is_redeemable\": \"\",\n                \"giftcard_is_redeemable\": \"\",\n                \"use_config_lifetime\": \"\",\n                \"giftcard_lifetime\": \"\",\n                \"use_config_allow_message\": \"\",\n                \"giftcard_allow_message\": \"\",\n                \"use_config_email_template\": \"\",\n                \"giftcard_email_template\": \"\",\n                \"bundle_price_type\": \"\",\n                \"bundle_sku_type\": \"\",\n                \"bundle_price_view\": \"\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 358, "to": 380 } }
        }
      }
    ],
    [
      "051938f5-4447-48a8-be9a-6b76e6678b3c",
      {
        "pageContent": "\"bundle_weight_type\": \"\",\n                \"bundle_values\": \"\",\n                \"bundle_shipment_type\": \"\",\n                \"downloadable_links\": \"\",\n                \"downloadable_samples\": \"\",\n                \"associated_skus\": \"\",\n                \"configurable_variations\": \"\",\n                \"configurable_variation_labels\": \"\"\n            },\n            {\n                \"sku\": \"Simple Product 2\",\n                \"_comment\": \"additional information for Simple Product 2\"\n            }\n        ],\n        \"import_images_file_dir\": \"var/import/images/product_images\"\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 381, "to": 397 } }
        }
      }
    ],
    [
      "154054f0-b2fe-42a1-b541-1d4fae874f9b",
      {
        "pageContent": "```\n\n**Response:**\n\nWhen the import is successful, the API response will contain the number of entities that were successfully imported.\n\n```json\n[\n  \"Entities Processed: 2\"\n]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 398, "to": 407 } }
        }
      }
    ],
    [
      "fa84d80f-429d-48d9-8125-4d1ddfe401e8",
      {
        "pageContent": "```\n\nArguments that support multiple values, such as `categories`, `product_websites`, `additional_attributes`, `additional_images`, `additional_image_labels`, and `custom_options`, can accept inputs in the form of an array, an array of JSON objects, or a singular JSON object.\n\nAdditionally, these arguments can also accept string values, similar to the import CSV API.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 408, "to": 412 } }
        }
      }
    ],
    [
      "3d01884c-c256-4655-8dab-38c6d6b09c16",
      {
        "pageContent": "```json\n{\n    \"categories\": \"Default Category/Category 1,Default Category/Category 2\",\n    \"product_websites\": \"base,french\",\n    \"additional_attributes\": \"date_time=7/21/23,gift_wrapping_available=Use config,gift_wrapping_price=1.990000,instructions=Here instruction go how to use this product indoors, outdoors.,material=cotton,size=large,usage=Travel|Sports|Office|Casual\",\n    \"additional_images\": \"/3/_/3.png,/4/_/4.png\",\n    \"additional_image_labels\": \"three,four\",\n    \"custom_options\": \"name=Option 1,type=drop_down,required=1,price=25,sku=,max_characters=0,file_extension=,image_size_x=0,image_size_y=0,price_type=percent,option_title=A|name=Option 2,type=multiple,required=1,price=1.99,sku=,max_characters=0,file_extension=,image_size_x=0,image_size_y=0,price_type=fixed,option_title=B|name=Option 2,type=multiple,required=1,price=4,sku=,max_characters=0,file_extension=,image_size_x=0,image_size_y=0,price_type=fixed,option_title=C\"\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 414, "to": 422 } }
        }
      }
    ],
    [
      "b28ad95c-4007-4310-925a-ee863a22f141",
      {
        "pageContent": "```\n\nAlthough the string format shown above provides compatibility with the import CSV API, using a structured JSON format is recommended for better readability and precision.\n\n**Configurable product payload:**\n\nFor a configurable product:\n\n*  The `configurable_variations` attribute accepts an array of JSON objects that describe variations. Each object represents a product variation, denoted by SKU, with associated attributes (such as color or size).\n*  The `configurable_variation_labels` attribute accepts a JSON object that assigns human-readable labels to the variation attributes.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 423, "to": 432 } }
        }
      }
    ],
    [
      "9b8cd445-b838-41cb-9c8a-4f919d464b5e",
      {
        "pageContent": "```json\n{\n    \"configurable_variations\":\n    [\n        {\n            \"sku\": \"Configurable 1-Red-small\",\n            \"color_swatch\": \"Red\",\n            \"size\": \"small\"\n        },\n        {\n            \"sku\": \"Configurable 1-Red-large\",\n            \"color_swatch\": \"Red\",\n            \"size\": \"large\"\n        },\n        {\n            \"sku\": \"Configurable 1-Green-small\",\n            \"color_swatch\": \"Green\",\n            \"size\": \"small\"\n        },\n        {\n            \"sku\": \"Configurable 1-Green-large\",\n            \"color_swatch\": \"Green\",\n            \"size\": \"large\"\n        }\n    ],\n    \"configurable_variation_labels\":\n    {\n        \"color_swatch\": \"Color Swatch\",\n        \"size\": \"Size\"\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 434, "to": 464 } }
        }
      }
    ],
    [
      "cdc5e56a-a0d5-497a-9393-b3629a1755fe",
      {
        "pageContent": "```\n\nThis structure can be found nested within individual product items in the full payload.\n\n**Bundle product payload:**\n\nFor a bundle product:\n\n*  The `bundle_values` attribute accepts an array of JSON objects that describe bundle items.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 465, "to": 473 } }
        }
      }
    ],
    [
      "4599fe2f-4023-43cf-9c5a-d2dd05fba68e",
      {
        "pageContent": "```json\n{\n    \"bundle_values\": [\n        {\n            \"name\": \"Stasis Ball\",\n            \"type\": \"select\",\n            \"required\": 1,\n            \"sku\": \"Sprite Statis Ball 55mm\",\n            \"price\": 7.99,\n            \"default\": 0,\n            \"default_qty\": 1,\n            \"price_type\": \"fixed\",\n            \"can_change_qty\": 1\n        },\n        {\n            \"name\": \"Stasis Ball\",\n            \"type\": \"select\",\n            \"required\": 1,\n            \"sku\": \"Sprite Statis Ball 65mm\",\n            \"price\": 9.99,\n            \"default\": 0,\n            \"default_qty\": 1,\n            \"price_type\": \"fixed\",\n            \"can_change_qty\": 1\n        },\n        {\n            \"name\": \"Yoga Brick\",\n            \"type\": \"checkbox\",\n            \"required\": 0,\n            \"sku\": \"Sprite Foam Yoga Brick\",\n            \"price\": 25,\n            \"default\": 0,\n            \"default_qty\": 1,\n            \"price_type\": \"percent\",\n            \"can_change_qty\": 0\n        }\n    ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 475, "to": 512 } }
        }
      }
    ],
    [
      "f73819fb-4635-4b86-9220-38392d638068",
      {
        "pageContent": "```\n\nThis structure can be found nested within individual product items in the full payload.\n\n**Downloadable product payload:**\n\nFor a downloadable product:\n\n*  The `downloadable_links` attribute accepts an array of JSON objects that describe downloadable product links.\n*  The `downloadable_samples` attribute accepts an array of JSON objects that describe downloadable product samples.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 513, "to": 522 } }
        }
      }
    ],
    [
      "aa4e58bb-19c5-4736-a860-cd4c3524dfc7",
      {
        "pageContent": "```json\n{\n    \"downloadable_links\":\n    [\n        {\n            \"link_id\": 1,\n            \"id\": 1,\n            \"title\": \"Part 1\",\n            \"sort_order\": 1,\n            \"sample_type\": \"file\",\n            \"sample_file\": \"/test/1.png\",\n            \"price\": 4.99,\n            \"number_of_downloads\": 100,\n            \"is_shareable\": 1,\n            \"link_type\": \"file\",\n            \"link_file\": \"/test/red.png\"\n        },\n        {\n            \"link_id\": 2,\n            \"id\": 2,\n            \"title\": \"Part 2\",\n            \"sort_order\": 2,\n            \"sample_type\": \"file\",\n            \"sample_file\": \"/test/2.png\",\n            \"price\": 4.49,\n            \"is_shareable\": 1,\n            \"link_type\": \"file\",\n            \"link_file\": \"/test/green.png\"\n        }\n    ],\n    \"downloadable_samples\":\n    [\n        {\n            \"sample_id\": 1,\n            \"id\": 1,\n            \"title\": \"Sample A\",\n            \"sort_order\": 1,\n            \"sample_type\": \"url\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 524, "to": 561 } }
        }
      }
    ],
    [
      "813d9598-f5ee-48c8-822c-030cbc8362ac",
      {
        "pageContent": "\"sample_url\": \"http://example.com/pub/media/lemon.jpeg\"\n        },\n        {\n            \"sample_id\": 2,\n            \"id\": 2,\n            \"title\": \"Sample B\",\n            \"sort_order\": 2,\n            \"sample_type\": \"file\",\n            \"sample_file\": \"/test/pumpkin.png\"\n        }\n    ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 562, "to": 573 } }
        }
      }
    ],
    [
      "deb8fea2-23e7-49a2-868c-147d33ab3bc5",
      {
        "pageContent": "```\n\nThis structure can be found nested within individual product items in the full payload.\n\n**Grouped product payload:**\n\nFor a grouped product:\n\n*  The `associated_skus` attribute accepts a JSON object where the keys are SKUs of products that comprise the grouped product, and the values are the quantities of each SKU in the grouped product.\n\n```json\n{\n    \"associated_skus\": {\n        \"Sprite Statis Ball 55mm\": 1,\n        \"Sprite Foam Yoga Brick\": 1,\n        \"Sprite Yoga Strap 6 foot\": 1\n    }\n}\n```\n\nThis structure can be found nested within individual product items in the full payload.\n\n**Gift card payload:**\n\nFor a gift card product:\n\n*  The `giftcard_amount` attribute accepts an array of amounts that can be used to purchase a gift card.\n\n```json\n{\n    \"giftcard_open_amount_min\": 5,\n    \"giftcard_open_amount_max\": 500,\n    \"giftcard_amount\": [\n        25,\n        50,\n        75,\n        100\n    ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 574, "to": 612 } }
        }
      }
    ],
    [
      "7ee4a0ed-5cb4-4c0a-b081-22119818a9e3",
      {
        "pageContent": "```\n\nThis structure can be found nested within individual product items in the full payload.\n\n**Payload 7 (Multiple select attributes):**\n\nThe multiple select attribute for products is represented as an array of strings.\n\n```json\n{\n    \"additional_attributes\": {\n        \"usage\": [\n            \"Travel\",\n            \"Sports\",\n            \"Office\",\n            \"Casual\"\n        ]\n    }\n}\n```\n\nThe multiple select attributes for customer and customer address are represented as an array of strings.\n\n```json\n{\n    \"interests\": [\n        \"Electronics\",\n        \"Sports\",\n        \"Automotive\"\n    ],\n    \"delivery_preferences\": [\n        \"Hand directly to resident\",\n        \"Leave in the mailbox\"\n    ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 613, "to": 647 } }
        }
      }
    ],
    [
      "51091b7c-a176-4a79-9e01-df41f8761dc8",
      {
        "pageContent": "```\n\nThe Import JSON API does not create attributes automatically. You need to create attributes manually before importing data. For more information, see [Create attributes](https://devdocs.magento.com/guides/v2.4/extension-dev-guide/attributes.html#create-attributes).\n\n**Advanced Pricing payload:**\n\n`advanced_pricing` is represented as an array of JSON objects.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 648, "to": 654 } }
        }
      }
    ],
    [
      "cd7e857b-8d4b-4549-b53a-8d947d80741c",
      {
        "pageContent": "```json\n{\n    \"source\": {\n        \"entity\": \"advanced_pricing\",\n        \"behavior\": \"append\",\n        \"validation_strategy\": \"validation-stop-on-errors\",\n        \"allowed_error_count\": 10,\n        \"items\":\t[\n            {\n                \"sku\": \"Simple Product 1\",\n                \"tier_price_website\": \"All Websites [USD]\",\n                \"tier_price_customer_group\": \"ALL GROUPS\",\n                \"tier_price_qty\": 1,\n                \"tier_price\": 7.99,\n                \"tier_price_value_type\": \"Fixed\"\n            },\n            {\n                \"sku\": \"Simple Product 1\",\n                \"tier_price_website\": \"base\",\n                \"tier_price_customer_group\": \"NOT LOGGED IN\",\n                \"tier_price_qty\": 2,\n                \"tier_price\": 40,\n                \"tier_price_value_type\": \"Discount\"\n            },\n            {\n                \"sku\": \"Simple Product 1\",\n                \"tier_price_website\": \"french\",\n                \"tier_price_customer_group\": \"General\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 656, "to": 683 } }
        }
      }
    ],
    [
      "de71c748-e1a5-4796-86c0-f8abded1723c",
      {
        "pageContent": "\"tier_price_qty\": 5,\n                \"tier_price\": 60,\n                \"tier_price_value_type\": \"Discount\"\n            }\n        ]\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 684, "to": 690 } }
        }
      }
    ],
    [
      "5d2ed061-f256-44e6-83b1-75da7a14587b",
      {
        "pageContent": "```\n\n**Customer finance payload:**\n\n`customer_finance` is represented as an array of JSON objects.\n\n```json\n{\n    \"source\": {\n        \"entity\": \"customer_finance\",\n        \"behavior\": \"add_update\",\n        \"validation_strategy\": \"validation-stop-on-errors\",\n        \"allowed_error_count\": 0,\n        \"items\":\t[\n            {\n                \"_email\": \"johndoe@example.com\",\n                \"_website\": \"base\",\n                \"_finance_website\": \"base\",\n                \"store_credit\": 99.99,\n                \"reward_points\": \"100\"\n            },\n            {\n                \"_email\": \"johndoe@example.com\",\n                \"_website\": \"base\",\n                \"_finance_website\": \"french\",\n                \"store_credit\": 50,\n                \"reward_points\": 200\n            }\n        ]\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 691, "to": 721 } }
        }
      }
    ],
    [
      "0a25e95b-85d3-489f-84d7-6275aa8b629a",
      {
        "pageContent": "```\n\n**Customers and addresses payload:**\n\nCustomers and Addresses information is represented as an array of JSON objects.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 722, "to": 726 } }
        }
      }
    ],
    [
      "f78fa64d-8565-4a1f-abf9-76667ac5318e",
      {
        "pageContent": "```json\n{\n    \"source\": {\n        \"entity\": \"customer_composite\",\n        \"behavior\": \"append\",\n        \"validation_strategy\": \"validation-stop-on-errors\",\n        \"allowed_error_count\": 0,\n        \"items\":\t[\n            {\n                \"email\": \"johndoe@example.com\",\n                \"_website\": \"base\",\n                \"_store\": \"admin\",\n                \"confirmation\": \"\",\n                \"created_at\": \"4/19/23 12:55\",\n                \"created_in\": \"Admin\",\n                \"disable_auto_group_change\": 0,\n                \"dob\": \"4/19/16 0:00\",\n                \"firstname\": \"John\",\n                \"gender\": \"Male\",\n                \"group_id\": 1,\n                \"lastname\": \"Doe\",\n                \"middlename\": \"\",\n                \"password_hash\": \"<password hash here>\",\n                \"prefix\": \"\",\n                \"rp_token\": \"\",\n                \"rp_token_created_at\": \"\",\n                \"store_id\": 0,\n                \"suffix\": \"\",\n                \"taxvat\": \"\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 728, "to": 756 } }
        }
      }
    ],
    [
      "15b8e7fd-9e19-43bd-9f8a-1b342503a7f5",
      {
        "pageContent": "\"website_id\": 1,\n                \"password\": \"\",\n                \"_address_city\": \"Los Angeles\",\n                \"_address_company\": \"\",\n                \"_address_country_id\": \"US\",\n                \"_address_fax\": \"\",\n                \"_address_firstname\": \"John\",\n                \"_address_lastname\": \"Doe\",\n                \"_address_middlename\": \"\",\n                \"_address_postcode\": 90017,\n                \"_address_prefix\": \"\",\n                \"_address_region\": \"California\",\n                \"_address_street\": \"Main Street 100\\nSuite 200\",\n                \"_address_suffix\": \"\",\n                \"_address_telephone\": 3233361267,\n                \"_address_vat_id\": \"\",\n                \"_address_default_billing_\": 1,\n                \"_address_default_shipping_\": 1,\n                \"delivery_preferences\": [\n                    \"Hand directly to resident\",\n                    \"Leave in the mailbox\"\n                ],\n                \"interests\": [",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 757, "to": 779 } }
        }
      }
    ],
    [
      "bb21f7d8-83ce-45b8-a36c-de3d4b705e27",
      {
        "pageContent": "\"Electronics\",\n                    \"Sports\",\n                    \"Automotive\"\n                ]\n            }\n        ]\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 780, "to": 787 } }
        }
      }
    ],
    [
      "b12a16f3-b086-4948-9c11-cf0f746d8f4d",
      {
        "pageContent": "```\n\n`delivery_preferences` and `interests` are multiple select attributes for addresses and customers. They are represented as an array of strings.\n\n**Response:**\n\nWhen the import is successful, the API response will contain the number of entities that were successfully imported.\n\n```json\n[\n  \"Entities Processed: 2\"\n] \n```\n\nThe `\"entity\": \"customer_composite\"` represents a composite entity that includes both a customer and an associated address. While the payload contains one item in the `items` array, it results in two entities (customer and address) being processed. Therefore, the response indicates \"Entities Processed: 2\".",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/import/index.md",
          "loc": { "lines": { "from": 788, "to": 802 } }
        }
      }
    ],
    [
      "a906a99a-320d-487e-afeb-f4b060816bc1",
      {
        "pageContent": "---\ntitle: Modules Overview\ndescription: Overview of available REST Modules\nkeywords:\n  - REST\n---\n\n# Modules Overview\n\nReview the following modules to learn more about the REST API:\n\n- [Catalog module](./catalog/)\n- [ImportCsvApi module](./import/)\n- [Sales module](./sales/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/index.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "7bf6eacd-1981-47e4-978d-674dc74b409c",
      {
        "pageContent": "---\ntitle: Refunds\ndescription: Issue a refund using the REST API\nkeywords:\n  - REST\n--- \n \n# Refunds\n\nThere are a couple of options to choose when issuing a refund using the Adobe Commerce API.\n\n## salesRefundInvoiceV1 service\n\nWith this service, you can initiate and process a refund based on an invoice ID, created using an online payment method.\n\nThe `salesRefundInvoice` service allows you to:\n\n*  Create a credit memo (complete or partial) for an invoice\n*  Add details about the refunded items to the order\n*  Change status and state of an order according to performed actions\n*  Notify a customer about the performed refund operation\n*  Designate whether the returned items are returned to stock\n\n### Endpoint\n\n`POST V1/invoice/:invoiceId/refund`\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nIf you try to apply the service to an invoice created using an offline payment method, the system will return a validation error.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/sales/index.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "cbcb806f-8d33-42bd-9b8b-fb6d2354d555",
      {
        "pageContent": "## salesRefundOrderV1 service\n\nThis service performs the same operations as the `salesRefundInvoiceV1` service, but based on an order ID. Use this service if the invoice was created using an offline payment method.\n\n### Endpoint\n\n`POST V1/order/:orderId/refund`\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nIf you try to apply the service to an invoice created using an online payment method, the system will return a validation error.\n\n## Other services for issuing refunds\n\nWhile we recommend you use the `Refund` services, Commerce also provides the following `CreditmemoManagement` services you can use to issue a credit:\n\n*  `salesCreditmemoManagement`\n*  `salesCreditmemoRepository`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/modules/sales/index.md",
          "loc": { "lines": { "from": 32, "to": 49 } }
        }
      }
    ],
    [
      "de1ed898-3611-4185-a3f8-b4202efeb1d7",
      {
        "pageContent": "---\ntitle: Generate a local REST reference\ndescription: Generate a local schema for testing and return relevant information\nkeywords:\n  - REST\n--- \nimport * as Vars from '../../../data/vars.js';\n\n# Generate a local REST reference\n\nThe REST documentation on the Adobe Commerce devdocs website is generated with [Swagger UI](http://swagger.io) using a schema derived from the latest build of Commerce. However, the REST API documentation on devdocs is static in that the Commerce Developers website is not running an instance of Commerce, and there is no live data.\n\nCommerce provides two ways to get detailed information about the structure of the REST endpoints, as described below.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/generate-local.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "a73c889c-476c-42bd-aefb-60280cac2219",
      {
        "pageContent": "## Generate a full REST reference locally\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nFor improved application security, starting from Commerce 2.4.4, Swagger UI does not function if the operation mode is set to Production. It only functions in Developer mode.\nSee how to switch operation mode [here](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/set-mode.html#change-to-developer-mode).\n\nThe Swagger UI is installed automatically on your server. As a result, you can generate live REST API documentation that can include <Vars.sitedatavaree/> modules, third-party modules, and extension attributes that have been installed on your system. To view this documentation, go to:\n\n`http://<commerce_host>/swagger`\n\nTo view the Swagger documentation for a specific store view, use this URL:\n\n `http://<commerce_host>/swagger?store=<store_code>`\n\n The value of `store_code` must be one of the following:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/generate-local.md",
          "loc": { "lines": { "from": 15, "to": 30 } }
        }
      }
    ],
    [
      "0aabd98b-8beb-403f-9f0d-1b5638d13b7c",
      {
        "pageContent": "-  `default`\n-  The assigned store code\n-  `all`. This value only applies to the CMS and Product modules. If this value is specified, the API call affects all the merchant's stores.\n\nBy default, Commerce returns documentation for resources available to anonymous users across all stores. If you specify a valid customer or admin token in the `api_key` text box in the upper right corner, Swagger returns documentation for all the endpoints the user has access to. To generate an API key, call the `POST /V1/integration/customer/token` endpoint or a 2FA endpoint such as `POST /V1/tfa/provider/google/authenticate` with the appropriate payload, as directed in [Token-based authentication](/get-started/authentication/gs-authentication-token).",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/generate-local.md",
          "loc": { "lines": { "from": 32, "to": 36 } }
        }
      }
    ],
    [
      "e675df14-8340-425a-b79e-c96503deace0",
      {
        "pageContent": "The generated Swagger documentation provides the capability to test REST requests. A user can enter a sample request, then press the **Try it out!** button, and Swagger returns information such as a `curl` command, a request URL, a response body, a response code, and the response header. The **Try it out!** button will not work unless a bearer authorization token has been specified.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/generate-local.md",
          "loc": { "lines": { "from": 38, "to": 38 } }
        }
      }
    ],
    [
      "c65a990a-58e0-45d5-8628-5a7beb7719f9",
      {
        "pageContent": "### REST reference for Asynchronous API\n\nYou can also use Swagger to generate live asynchronous API REST documentation. To create this documentation, add the `?type=async` parameter to the standard Swagger URL:\n\n`http://<commerce_host>/swagger?type=async`\n\nSwagger returns information about all resources available for asynchronous REST APIs.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/generate-local.md",
          "loc": { "lines": { "from": 40, "to": 46 } }
        }
      }
    ],
    [
      "7fe7a1d5-33d7-4949-af58-2e46b1801eb3",
      {
        "pageContent": "## Return the JSON schema for one or more services\n\nYou can use a REST client to generate the JSON schema for one or more services. In the client, set the method to `GET` and the URL to\n\n`http://<commerce_host>/rest/<store_code>/schema?services=<serviceName1,serviceName2,..>`\n\nFor example:\n\n`http://<commerce_host>/rest/default/schema?services=catalogProductRepositoryV1`\n\nTo return information about all services:\n\n`http://<commerce_host>/rest/<store_code>/schema`\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nYou must specify an authorization token for an [admin](/get-started/authentication/gs-authentication-token) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/generate-local.md",
          "loc": { "lines": { "from": 48, "to": 64 } }
        }
      }
    ],
    [
      "2127ceaa-13bc-4c96-9180-fe9cdd1de6d1",
      {
        "pageContent": "## Return the complete JSON schema\n\nTo return the complete JSON schema, specify the `?services=all` parameter in the URL. The default `store_code` is `all`, but you can also specify `default` or a store code defined on the system. For example: `http://<commerce_host>/rest/default/schema?services=all`\n\nThe base URL for returning the asynchronous schema is `http://<commerce_host>/rest/<store_code>/async/schema`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/generate-local.md",
          "loc": { "lines": { "from": 66, "to": 70 } }
        }
      }
    ],
    [
      "88341e02-7aef-4bf6-9f3a-b437e8f0a1f5",
      {
        "pageContent": "## Security\n\nBy default, the `/swagger` endpoint is open on Commerce instances. Leaving it open on a public instance could potentially expose system information that should not be readable.\n\nTo close off the `/swagger` endpoint, disable the following modules:\n\n-  Swagger\n-  SwaggerWebapi\n-  SwaggerWebapiAsync\n\nTo ensure proper functionality, always test Commerce instances after disabling modules.\n\nYou may also use web server rewrite rules to redirect users trying to access the endpoint:\n\n-  [nginx rewrite module](http://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite)\n-  [apache mod_rewrite](https://httpd.apache.org/docs/2.4/rewrite/)\n\n### Related topics\n\n[Restricting access to anonymous web APIs](/rest/use-rest/anonymous-api-security/)\n[Token-based authentication](/get-started/authentication/gs-authentication-token)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/generate-local.md",
          "loc": { "lines": { "from": 72, "to": 92 } }
        }
      }
    ],
    [
      "85b47148-d67c-436b-9d2a-4b2a16b50893",
      {
        "pageContent": "---\ntitle: REST endpoints (ReDocly)\ndescription: Review comprehensive reference documentation for the Adobe Commerce and Magento Open Source REST API schema.\nkeywords:\n  - REST\nframeSrc: https://adobe-commerce.redoc.ly\n--- \n\n# REST endpoints (ReDocly)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/quick-reference/index.md",
          "loc": { "lines": { "from": 1, "to": 9 } }
        }
      }
    ],
    [
      "4798bc3b-9733-4047-a548-63b3a742c2ae",
      {
        "pageContent": "---\ntitle: Step 2. Create the configurable and simple products\ndescription: In this step of the tutorial you will create the configurable and simple products\ncontributor_name: comwrap GmbH\ncontributor_link: http://comwrap.com/\nkeywords:\n  - REST\n--- \n \n# Step 2. Create the configurable and simple products\n\n By providing configurable and simple product information, you can use the bulk API to create all necessary products with a single call.\n\n### Configurable product\n\nSome notes about the configurable product payload example:\n\n*  We have the information we need to create the Champ Tee configurable product.\n*  The sample payload does not contain the price or the size, as these are defined in the simple products section.\n*  The `visibility` attribute is set to 4, which allows customers to find the product by browsing or searching. Each simple product defined in the payload can override the `visibility` attribute.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "59b4220d-7dda-484a-84f3-b60b3e9b4be9",
      {
        "pageContent": "### Simple products\n\n The payloads for creating a simple product and a configurable product are identical, with the following exceptions:\n\n*  The simple product `sku` appends the configurable option (the size in this tutorial) to the configurable product `sku`.\n*  The `name` indicates the size.\n*  The `type_id` is set to `simple`.\n*  The `visibility` is set to `1`, indicating the simple product should not be displayed on the store.\n*  The `price` and `size` attributes are specified.\n\n Although it's not required, the simple product payload also includes `stock_item` information. By default, the Luma store hides out-of-stock items, so adding stock will make the Champ Tee visible on the website.\n\n <InlineAlert variant=\"info\" slots=\"text\"/>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 22, "to": 34 } }
        }
      }
    ],
    [
      "9108c475-3fc1-4f18-a15d-ce67382e58b9",
      {
        "pageContent": "Before you use this code sample, verify that the attribute values are the same in your installation. See [Get the list of attributes defined in an attribute searchCriteria](/rest/tutorials/configurable-product/plan-product/#get-the-list-of-attributes-defined-in-an-attribute-searchcriteria ) for more information.\n\n <InlineAlert variant=\"info\" slots=\"text\"/>\n\nThe payload contains both the configurable product and the simple products.\n\n **Endpoint:**\n\n `POST <host>/rest/default/async/bulk/V1/products`\n\n <CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 36, "to": 46 } }
        }
      }
    ],
    [
      "5e4ba37f-682d-453f-93ba-af3d622d060b",
      {
        "pageContent": "#### Payload",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 48, "to": 48 } }
        }
      }
    ],
    [
      "d7c6bacd-e92d-4758-9ec8-7f4aeb536b0c",
      {
        "pageContent": "```json\n[{\n  \"product\": {\n    \"sku\": \"MS-Champ\",\n    \"name\": \"Champ Tee\",\n    \"attribute_set_id\": 9,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"configurable\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n      \"category_links\": [\n        {\n          \"position\": 0,\n          \"category_id\": \"11\"\n        },\n        {\n          \"position\": 1,\n          \"category_id\": \"12\"\n        },\n        {\n          \"position\": 2,\n          \"category_id\": \"16\"\n        }\n      ]\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"description\",\n        \"value\": \"The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\"\n      },\n      {\n        \"attribute_code\": \"tax_class_id\",\n        \"value\": \"2\"\n      },\n      {\n        \"attribute_code\": \"material\",\n        \"value\": \"148\"\n      },\n      {\n        \"attribute_code\": \"pattern\",\n        \"value\": \"196\"\n      },\n      {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 50, "to": 93 } }
        }
      }
    ],
    [
      "eaa4a6fb-5e62-40d1-92b7-84202b29799c",
      {
        "pageContent": "},\n      {\n        \"attribute_code\": \"color\",\n        \"value\": \"52\"\n      }\n    ]\n  }\n},\n{\n  \"product\": {\n    \"sku\": \"MS-Champ-S\",\n    \"name\": \"Champ Tee Small\",\n    \"attribute_set_id\": 9,\n    \"price\": 25,\n    \"status\": 1,\n    \"visibility\": 1,\n    \"type_id\": \"simple\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n      \"category_links\": [\n        {\n          \"position\": 0,\n          \"category_id\": \"11\"\n        },\n        {\n          \"position\": 1,\n          \"category_id\": \"12\"\n        },\n        {\n          \"position\": 2,\n          \"category_id\": \"16\"\n        }\n      ],\n      \"stock_item\": {\n        \"qty\": \"10\",\n        \"is_in_stock\": true\n      }\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"description\",\n        \"value\": \"The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\"\n      },\n      {\n        \"attribute_code\": \"tax_class_id\",\n        \"value\": \"2\"\n      },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 92, "to": 138 } }
        }
      }
    ],
    [
      "75f1a818-89a3-4096-9f83-9607ece62393",
      {
        "pageContent": "},\n      {\n        \"attribute_code\": \"material\",\n        \"value\": \"148\"\n      },\n      {\n        \"attribute_code\": \"pattern\",\n        \"value\": \"196\"\n      },\n      {\n        \"attribute_code\": \"color\",\n        \"value\": \"52\"\n      },\n      {\n        \"attribute_code\": \"size\",\n        \"value\": \"168\"\n      }\n    ]\n  }\n},\n{\n  \"product\": {\n    \"sku\": \"MS-Champ-M\",\n    \"name\": \"Champ Tee Medium\",\n    \"attribute_set_id\": 9,\n    \"price\": 25,\n    \"status\": 1,\n    \"visibility\": 1,\n    \"type_id\": \"simple\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n      \"category_links\": [\n        {\n          \"position\": 0,\n          \"category_id\": \"11\"\n        },\n        {\n          \"position\": 1,\n          \"category_id\": \"12\"\n        },\n        {\n          \"position\": 2,\n          \"category_id\": \"16\"\n        }\n      ],\n      \"stock_item\": {\n        \"qty\": \"10\",\n        \"is_in_stock\": true\n      }\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"description\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 138, "to": 190 } }
        }
      }
    ],
    [
      "1c43ad49-d206-438c-bd95-f1014b3e76a3",
      {
        "pageContent": "\"value\": \"The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\"\n      },\n      {\n        \"attribute_code\": \"tax_class_id\",\n        \"value\": \"2\"\n      },\n      {\n        \"attribute_code\": \"material\",\n        \"value\": \"148\"\n      },\n      {\n        \"attribute_code\": \"pattern\",\n        \"value\": \"196\"\n      },\n      {\n        \"attribute_code\": \"color\",\n        \"value\": \"52\"\n      },\n      {\n        \"attribute_code\": \"size\",\n        \"value\": \"169\"\n      }\n    ]\n  }\n},\n{\n  \"product\": {\n    \"sku\": \"MS-Champ-L\",\n    \"name\": \"Champ Tee Large\",\n    \"attribute_set_id\": 9,\n    \"price\": 25,\n    \"status\": 1,\n    \"visibility\": 1,\n    \"type_id\": \"simple\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n      \"category_links\": [\n        {\n          \"position\": 0,\n          \"category_id\": \"11\"\n        },\n        {\n          \"position\": 1,\n          \"category_id\": \"12\"\n        },\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 191, "to": 236 } }
        }
      }
    ],
    [
      "4f126fa8-2ab2-47a6-898a-51ca8db88f54",
      {
        "pageContent": "{\n          \"position\": 2,\n          \"category_id\": \"16\"\n        }\n      ],\n      \"stock_item\": {\n        \"qty\": \"10\",\n        \"is_in_stock\": true\n      }\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"description\",\n        \"value\": \"The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\"\n      },\n      {\n        \"attribute_code\": \"tax_class_id\",\n        \"value\": \"2\"\n      },\n      {\n        \"attribute_code\": \"material\",\n        \"value\": \"148\"\n      },\n      {\n        \"attribute_code\": \"pattern\",\n        \"value\": \"196\"\n      },\n      {\n        \"attribute_code\": \"color\",\n        \"value\": \"52\"\n      },\n      {\n        \"attribute_code\": \"size\",\n        \"value\": \"170\"\n      }\n    ]\n  }\n}\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 236, "to": 275 } }
        }
      }
    ],
    [
      "8d10302e-f792-44d6-836b-e4c2cc2368f2",
      {
        "pageContent": "#### Response\n\n```json\n{\n    \"bulk_uuid\": \"c08a2b99-4be2-4b28-af7e-56e9664e0b39\",\n    \"request_items\": [\n        {\n            \"id\": 0,\n            \"data_hash\": \"73170608b04187fe5939ece183711eff1bf9c4f4e30fc334db2affed1055c3f1\",\n            \"status\": \"accepted\"\n        },\n        {\n            \"id\": 1,\n            \"data_hash\": \"73170608b04187fe5939ece183711eff1bf9c4f4e30fc334db2affed1055c3f1\",\n            \"status\": \"accepted\"\n        },\n        {\n            \"id\": 2,\n            \"data_hash\": \"73170608b04187fe5939ece183711eff1bf9c4f4e30fc334db2affed1055c3f1\",\n            \"status\": \"accepted\"\n        }\n    ],\n    \"errors\": false\n}\n```\n\n <InlineAlert variant=\"info\" slots=\"text\"/>\n\nFor information about response fields, see the [Bulk API](/rest/bulk-endpoints) section. To check the status of operations, see the API for [Bulk operation status endpoints](/rest/use-rest/operation-status-endpoints/).",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 277, "to": 305 } }
        }
      }
    ],
    [
      "f16a5313-ecd4-441f-8f6d-a30059705c5a",
      {
        "pageContent": "## Verify this step\n\n*  Log in to the Luma website and select **Catalog > Products**. The product appears in the grid.\n\n   ![Product page with configurable product](../../../_images/products-page.png)\n\n*  On the Luma storefront page, search for `Champ`. No results are returned.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-configurable-simple-products.md",
          "loc": { "lines": { "from": 307, "to": 313 } }
        }
      }
    ],
    [
      "9260df3d-adcb-430f-ba01-bf64680f7866",
      {
        "pageContent": "---\ntitle: Step 4. Create the personalization option\ndescription: In this step of the tutorial you will create the personalization option\ncontributor_name: comwrap GmbH\ncontributor_link: http://comwrap.com/\nkeywords:\n  - REST\n--- \n \n# Step 4. Create the personalization option\n\n Let's add a text box to the product page that allows the customer to add his name (up to 15 characters) to the back of the shirt.\n\nThe `product_sku` is the `sku` of the configurable product. The `sku` specified in the payload is a string that is appended to the `product_sku` when a customer selects to purchase this item. Likewise, the `price` supplied in the payload is added to the configurable product price.\n\n**Endpoint:**\n\n`POST <host>/rest/default/async/bulk/V1/products/options`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-personalization-option.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "8b00e318-cc2f-4a15-92e1-c3997fbfef49",
      {
        "pageContent": "**Payload:**\n\n```json\n[{\n  \"option\": {\n    \"product_sku\": \"MS-Champ\",\n    \"title\": \"Add Your Name (Max 15 Characters)\",\n    \"type\": \"field\",\n    \"sort_order\": 1,\n    \"is_require\": false,\n    \"price\": 10,\n    \"price_type\": \"fixed\",\n    \"sku\": \"Personalized\",\n    \"max_characters\": 15\n  }\n}]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-personalization-option.md",
          "loc": { "lines": { "from": 20, "to": 35 } }
        }
      }
    ],
    [
      "660fe200-735d-4ce2-83e7-bf1b89e97baa",
      {
        "pageContent": "```\n\n **Response:**\n\n ```json\n{\n    \"bulk_uuid\": \"53ef1382-904a-4ba0-bb72-ebc5edd47da5\",\n    \"request_items\": [\n        {\n            \"id\": 0,\n            \"data_hash\": \"73170608b04187fe5939ece183711eff1bf9c4f4e30fc334db2affed1055c3f1\",\n            \"status\": \"accepted\"\n        }\n    ],\n    \"errors\": false\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-personalization-option.md",
          "loc": { "lines": { "from": 36, "to": 52 } }
        }
      }
    ],
    [
      "48d8af20-2afb-47fa-8e9e-5cbb12b65471",
      {
        "pageContent": "## Verify this step\n\n*  Log in to the Luma website and select **Catalog > Products**. Click on the **Champ Tee** configurable product and expand the **Customizable Options** section.\n\n   ![Product page with configurable and simple products](../../../_images/options-section.png)\n\n*  On the Luma storefront page, search for `Champ`. Then click on the Champ Tee product.\n\n   ![Search results](../../../_images/add-your-name.png)\n\n   <InlineAlert variant=\"info\" slots=\"text\"/>\n\n   If the personalization option is not displayed, go to the **Champ Tee** configuration product page in Admin and set  **Stock Status** to **In Stock**.\n\n## Congratulations! You've finished.\n\n### Related topics\n\n[Order Processing with REST APIs Tutorial](/rest/tutorials/orders/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/create-personalization-option.md",
          "loc": { "lines": { "from": 54, "to": 72 } }
        }
      }
    ],
    [
      "81dcf4a1-b375-4405-b109-b9e82b4dfe37",
      {
        "pageContent": "---\ntitle: Step 3. Define configurable product options\ndescription: In this step of the tutorial you will define the configurable product options\ncontributor_name: comwrap GmbH\ncontributor_link: http://comwrap.com/\nkeywords:\n  - REST\n--- \n \n# Step 3. Define configurable product options\n\n  Now that we've created all the Champ Tee products, we need to assign `size` as the configurable attribute and link the simple products to the configurable product.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "268918d7-791f-4c8c-9cc1-161f688c3f56",
      {
        "pageContent": "## Set the configurable attribute\n\n The `POST async/bulk/V1/configurable-products/bySku/options` call assigns the specified `attribute_id` to be the configurable attribute.\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\n The `attribute_id` and its value may be different on your installation. Check the values carefully before using them in your calls. To get the correct `attribute_id`, see [Get the list of attributes defined in an attribute searchCriteria](/rest/tutorials/configurable-product/plan-product/#get-the-list-of-attributes-defined-in-an-attribute-searchcriteria ) for more information.\n\n The value assigned to the `value_index` must be unique within the system.\n\n **Endpoint:**\n\n `POST <host>/rest/default/async/bulk/V1/configurable-products/bySku/options`\n\n **Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 14, "to": 28 } }
        }
      }
    ],
    [
      "e93bd087-435f-4b81-8b8a-c2022dab1209",
      {
        "pageContent": "**Payload:**\n\n ```json\n[{\n  \"sku\": \"MS-Champ\",\n  \"option\": {\n    \"attribute_id\": \"141\",\n    \"label\": \"Size\",\n    \"position\": 0,\n    \"is_use_default\": true,\n    \"values\": [\n      {\n        \"value_index\": 9\n      }\n    ]\n  }\n}]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 28, "to": 44 } }
        }
      }
    ],
    [
      "4e3e86d4-3a01-410b-bb0f-574c5616d31e",
      {
        "pageContent": "```\n\n **Response:**\n\n ```json\n{\n    \"bulk_uuid\": \"98c46050-cd66-4b49-9d45-69bfa04efc78\",\n    \"request_items\": [\n        {\n            \"id\": 0,\n            \"data_hash\": \"17c5e6b0d6fdf98ea83f600c8cc7e9f5a437e7f51e21a9c40070bb6208e1334c\",\n            \"status\": \"accepted\"\n        }\n    ],\n    \"errors\": false\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 45, "to": 61 } }
        }
      }
    ],
    [
      "1d622a88-49cb-4ce3-912d-76a3d94e8d64",
      {
        "pageContent": "## Link the simple products to the configurable product\n\nNow that you have set the configurable attribute to be `sku`, you can link all simple products to the configurable product and execute a single call with a payload that contains an array of simple products. To do this, specify the `sku` of the configurable product, and the `childSku` of each simple product.\n\n **Endpoint:**\n\n <InlineAlert variant=\"info\" slots=\"text\"/>\n\nBulk endpoint routes cannot contain input parameters, such as a `sku` value.  You must replace input parameters with a string that begins with `by` and ends with the input parameter name, such as `bySku`. See [`bulk endpoints`](/rest/use-rest/bulk-endpoints/) for more information.\n\n `POST <host>/rest/default/async/bulk/V1/configurable-products/bySku/child`\n\n **Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 63, "to": 75 } }
        }
      }
    ],
    [
      "96915a85-9a77-44ba-afc9-31b62bac967b",
      {
        "pageContent": "**Payload:**\n\n ```json\n[\n  {\n    \"sku\": \"MS-Champ\",\n    \"childSku\": \"MS-Champ-S\"\n  },\n  {\n    \"sku\": \"MS-Champ\",\n    \"childSku\": \"MS-Champ-M\"\n  },\n  {\n    \"sku\": \"MS-Champ\",\n    \"childSku\": \"MS-Champ-L\"\n  },\n  // .... you can link as many products at the same time as required ....\n]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 75, "to": 92 } }
        }
      }
    ],
    [
      "9c2767f3-5da5-4761-884f-be424129fd7c",
      {
        "pageContent": "```\n\n **Response:**\n\n ```json\n{\n    \"bulk_uuid\": \"e78042d1-de13-4260-8f56-d5dd13f89e3c\",\n    \"request_items\": [\n        {\n            \"id\": 0,\n            \"data_hash\": \"b4cfe401d84fbfadc94dd86782f18104dcaa162649f032fe105420037a44f795\",\n            \"status\": \"accepted\"\n        },\n        {\n            \"id\": 1,\n            \"data_hash\": \"b4cfe401d84fbfadc94dd86782f18104dcaa162649f032fe105420037a44f795\",\n            \"status\": \"accepted\"\n        },\n        {\n            \"id\": 2,\n            \"data_hash\": \"b4cfe401d84fbfadc94dd86782f18104dcaa162649f032fe105420037a44f795\",\n            \"status\": \"accepted\"\n        }\n    ],\n    \"errors\": false\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 93, "to": 119 } }
        }
      }
    ],
    [
      "0e5d89da-de6e-4cce-b06c-0fba95ef250f",
      {
        "pageContent": "## Verify this step\n\n*  Log in to the Luma website and select **Catalog > Products**. Click on the **Champ Tee** configurable product and expand the **Configurations** section.\n\n   ![Product page with configurable and simple products](../../../_images/configurations-section.png)\n\n*  On the Luma storefront page, search for `Champ`.\n\n   ![Search results](../../../_images/search-results.png)\n\n*  Call `GET <host>/rest/default/V1/products/MS-Champ`. The response includes the `configurable_product_options` and `configurable_product_links` arrays.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 121, "to": 131 } }
        }
      }
    ],
    [
      "3b631482-bb5b-4a2b-8983-c8517607c803",
      {
        "pageContent": "```json\n...\n\"configurable_product_options\": [\n    {\n        \"id\": 338,\n        \"attribute_id\": \"141\",\n        \"label\": \"Size\",\n        \"position\": 0,\n        \"values\": [\n            {\n                \"value_index\": 168\n            },\n            {\n                \"value_index\": 169\n            },\n            {\n                \"value_index\": 170\n            }\n        ],\n        \"product_id\": 2078\n    }\n],\n\"configurable_product_links\": [\n    2079,\n    2080,\n    2081\n]\n},\n...\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 133, "to": 162 } }
        }
      }
    ],
    [
      "f6823dd9-bc45-407f-850e-3ee392d2a560",
      {
        "pageContent": "---\ntitle: Create a configurable product using bulk APIs\ndescription: A tutorial that describes how to create a configurable product using bulk API calls\ncontributor_name: comwrap GmbH\ncontributor_link: http://comwrap.com/\nkeywords:\n  - REST\n--- \n \n# Create a configurable product using bulk APIs\n\nA system integrator can use Adobe Commerce REST bulk APIs to perform actions on a large scale; such as, creating multiple customers and products, changing prices across an inventory, and assigning large groups of products to a specific warehouse, all within a single call.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/index.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "f3bc2246-f294-4bc6-b0e6-2e83e657857d",
      {
        "pageContent": "To demonstrate how to use the REST bulk APIs, this tutorial will start with a _configurable product_. A configurable product is a parent product of multiple simple products. You define a configurable product so that the buyer must make one or more choices to select a product. For example, most clothing comes in a variety of colors and sizes. If you are offering a skirt in black, red, and blue colorways in sizes small, medium, and large, then you would create a configurable product with nine simple products, one for each combination of color and size.\n\n In this tutorial, we will create a gray t-shirt that comes in three sizes (small, medium, and large). The configurable product defines basic characteristics of the t-shirt. Then, we will create a simple product for each size and link each of them to the configurable product. Finally, we will add an option that allows the customer to specify text that can be added to the shirt.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/index.md",
          "loc": { "lines": { "from": 14, "to": 16 } }
        }
      }
    ],
    [
      "6106b982-dfb8-4c16-b691-52628f1174b1",
      {
        "pageContent": "This **4-step tutorial** generally takes **45 minutes**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/index.md",
          "loc": { "lines": { "from": 18, "to": 18 } }
        }
      }
    ],
    [
      "56536445-59aa-42ae-b5e5-b7031a2bf630",
      {
        "pageContent": "### Before you begin\n\n*  Install a Commerce instance with sample data. The sample data defines a functional store, called Luma, that sells fitness clothing and accessories.\n*  Install a REST client. You can use any REST client to send calls to Commerce. [Postman](https://www.getpostman.com/) is recommended.\n*  Obtain an admin authorization token. All calls in this tutorial require administrator privileges. See [Generate the admin token](/rest/tutorials/prerequisite-tasks/) for more information.\n*  Use the `bin/magento queue:consumers:start async.operations.all` command to enable bulk endpoint processing.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/index.md",
          "loc": { "lines": { "from": 20, "to": 25 } }
        }
      }
    ],
    [
      "2533c338-47e2-4c19-9b33-852a154e5fcd",
      {
        "pageContent": "### Other resources\n\n*  [REST Tutorials](/rest/tutorials/index/) provides additional information about completing any Commerce REST tutorial.\n*  [Asynchronous web endpoints](/rest/use-rest/asynchronous-web-endpoints/) provides information about how to use the Commerce Asynchronous API\n*  [Bulk endpoints](/rest/use-rest/bulk-endpoints/) provides information about how to use the Commerce Bulk API",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/index.md",
          "loc": { "lines": { "from": 27, "to": 31 } }
        }
      }
    ],
    [
      "c9f8de47-d4d8-483d-8f2b-d703b4b9a604",
      {
        "pageContent": "---\ntitle: Step 1. Plan the product\ndescription: In this step of the tutorial you will plan and define the product\ncontributor_name: comwrap GmbH\ncontributor_link: http://comwrap.com/\nkeywords:\n  - REST\n--- \n \n# Step 1. Plan the product\n\n  To create a configurable product programmatically, you'll need to know the following:\n\n*  The attribute names and values defined in the attribute set assigned to the configurable product.\n*  The category numbers assigned to the configurable product.\n*  Which attributes to use as the configuration options.\n\n Since this tutorial uses the sample data, we can take advantage of the options that the Top attribute set provides. This attribute set contains attributes that describe the fabric, sleeve length, and other characteristics that are specific to clothing. It also includes EAV attributes such as size and color, which are commonly available to all types of physical products.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "79396c80-6197-4493-9929-63ed66d62226",
      {
        "pageContent": "The size of the t-shirt will be the configurable aspect of this product. Therefore, we'll create a simple product for each size (Small, Medium, and Large).",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 20, "to": 20 } }
        }
      }
    ],
    [
      "7d9d40cf-65ba-4eed-b635-0e76cc0a8f3e",
      {
        "pageContent": "## Define product characteristics\n\n The following table lists the general characteristics of the men's t-shirt we're creating. These items are among those listed on the New Product page in Admin when the Top attribute set is selected.\n\n Characteristic | Description\n--- | ---\nAttribute Set | Top\nProduct Name | Champ Tee\nSKU | MS-Champ\nPrice | 25.00\nTax Class | Taxable Goods\nWeight | 0.5\nCategories | Men, Tops, Tees\nVisibility | Catalog, Search\nMaterial | LumaTech\nPattern | Graphic Print\nColor | Gray\nSize | Configurable in small, medium, or large\nDescription | The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\n\n A merchant typically provides the product name, SKU, price, weight, and description. The other characteristics are defined by the system.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 22, "to": 42 } }
        }
      }
    ],
    [
      "99981710-b34a-4a82-9ea9-285833ad6227",
      {
        "pageContent": "## Find the system-defined values\n\n We'll make several calls to find the values needed to create the product",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 44, "to": 46 } }
        }
      }
    ],
    [
      "86283261-f6d1-4283-b9a1-eca0f820d1c7",
      {
        "pageContent": "### Get the attribute set ID\n\n The sample data provides multiple attribute sets, including Default, Top, and Bottom. To assign the Top attribute set to the product, we need to know the corresponding `attribute_set_id`.\n\n Use the following call to search for the attribute set named `Top`.\n\n **Endpoint:**\n\n ```html\nGET <host>/rest/<store_code>/V1/eav/attribute-sets/list?\nsearchCriteria[filter_groups][0][filters][0][field]=attribute_set_name&\nsearchCriteria[filter_groups][0][filters][0][value]=Top&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=eq",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 48, "to": 60 } }
        }
      }
    ],
    [
      "debc30d8-a49b-457a-89c0-539e74a164ca",
      {
        "pageContent": "```\n\n **Response:**\n\n The `attribute_set_id` for the Top attribute set is `9`.\n\n ```json\n{\n    \"items\": [\n        {\n            \"attribute_set_id\": 9,\n            \"attribute_set_name\": \"Top\",\n            \"sort_order\": 0,\n            \"entity_type_id\": 4\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"attribute_set_name\",\n                        \"value\": \"Top\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 1\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 61, "to": 92 } }
        }
      }
    ],
    [
      "7a9ee06b-d5c1-4358-bb1e-a8b1598a703a",
      {
        "pageContent": "### Get the list of attributes defined in an attribute searchCriteria\n\n Use the `GET V1/products/attribute-sets/:attributeSetId/attributes` call to return information about the attributes defined in the Top attribute set.\n\n **Endpoint:**\n\n `GET <host>/rest/default/V1/products/attribute-sets/9/attributes`\n\n **Response:**\n\n The response contains almost 3,000 lines. The following table provides a summary of the attributes that are relevant in this tutorial.\n\n Admin label | Selected value | Attribute ID | attribute_code  | Attribute value\n--- | --- | --- | --- | ---\nTax Class | Taxable Goods | 132 | `tax_class_id` | 2\nVisibility | Catalog, Search | 99 | `visibility` | 4\nMaterial | LumaTech  | 136 | `material` | 148\nPattern | Graphic Print | 152 | `pattern` | 196\nColor | Gray | 93 | `color` | 52\nSize | Not applicable | 141 | `size` | 168 (small), 169 (medium), 170 (large)\n\n <InlineAlert variant=\"warning\" slots=\"text\"/>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 94, "to": 115 } }
        }
      }
    ],
    [
      "f4e99cdd-ba2b-4baf-bcaa-8ba84f2db2c7",
      {
        "pageContent": "The attribute ID and value numbers might be different on your installation. Check the values carefully before using them in your calls.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 117, "to": 117 } }
        }
      }
    ],
    [
      "e5477696-6602-4f43-b5b8-8bc127db9b48",
      {
        "pageContent": "### Get the list of category values\n\n You must assign the product to one or more categories to enable customers to find the product by browsing. We'll assign the Champ Tee to the Men, Tops, and Tees categories.\n\n Use the following call to search for all categories (`id` is greater than or equal to `0`).\n\n ```html\nGET <host>/rest/default/V1/categories?\nsearchCriteria[filter_groups][0][filters][0][field]=id&\nsearchCriteria[filter_groups][0][filters][0][value]=1&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=gte\n```\n\n Note that women's tops and tees have different ids than men's tops and tees. The values for men's clothing are:\n\n*  Men - `11`\n*  Tops - `12`\n*  Tees - `16`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 119, "to": 136 } }
        }
      }
    ],
    [
      "28d081eb-1ae2-45d2-bae6-057e8c53b29c",
      {
        "pageContent": "## Verify this step\n\n At this point, we're gathering information, so there is nothing to verify.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bulk-configurable-product/plan-product.md",
          "loc": { "lines": { "from": 138, "to": 140 } }
        }
      }
    ],
    [
      "d068d094-e812-4ff7-b99d-757b28d147e6",
      {
        "pageContent": "---\ntitle: Step 3. Create the bundle product \ndescription: In this step of the tutorial you will create the bundle product\ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/magento-optimization-service\nkeywords:\n  - REST\n--- \n \n# Step 3. Create the bundle product\n\nNow we will add the bundle product. We will use two bundle options: `RAM` and `Monitor`.\n\n**Endpoint:**\n\n```html\nPOST http://domain.com/rest/default/V1/products\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "1dcb94d2-fdc3-4329-8f81-66817302d135",
      {
        "pageContent": "#### Payload",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 22, "to": 22 } }
        }
      }
    ],
    [
      "2ddbc502-b40e-4ff5-bba3-015af81ee4e3",
      {
        "pageContent": "```json\n{\n  \"product\": {\n    \"sku\": \"Desktop-Computer\",\n    \"name\": \"Desktop Computer\",\n    \"attribute_set_id\": 4,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"bundle\",\n    \"extension_attributes\": {\n      \"stock_item\": {\n        \"qty\": 100,\n        \"is_in_stock\":true\n      },\n      \"website_ids\": [\n        1\n      ],\n      \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n      ],\n      \"bundle_product_options\": [\n        {\n          \"option_id\": 0,\n          \"position\": 1,\n          \"sku\": \"compuer-ram\",\n          \"title\": \"RAM\",\n          \"type\": \"select\",\n          \"required\": true,\n          \"product_links\": [\n            {\n              \"sku\": \"RAM-12GB\",\n              \"option_id\": 1,\n              \"qty\": 1,\n              \"position\": 1,\n              \"is_default\": false,\n              \"price\": 0,\n              \"price_type\": 0,\n              \"can_change_quantity\": 0\n            },\n            {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 24, "to": 66 } }
        }
      }
    ],
    [
      "238e3822-acf6-4024-80fa-2180aa57f864",
      {
        "pageContent": "{\n              \"sku\": \"RAM-24GB\",\n              \"option_id\": 1,\n              \"qty\": 1,\n              \"position\": 2,\n              \"is_default\": false,\n              \"price\": 0,\n              \"price_type\": 0,\n              \"can_change_quantity\": 0\n            }\n          ]\n        },\n        {\n          \"option_id\": 1,\n          \"position\": 2,\n          \"sku\": \"computer-monitor\",\n          \"title\": \"Monitor\",\n          \"type\": \"select\",\n          \"required\": true,\n          \"product_links\": [\n            {\n              \"sku\": \"Monitor-15\",\n              \"option_id\": 2,\n              \"qty\": 1,\n              \"position\": 1,\n              \"is_default\": false,\n              \"price\": 0,\n              \"price_type\": 0,\n              \"can_change_quantity\": 0\n            },\n            {\n              \"sku\": \"Monitor-17\",\n              \"option_id\": 2,\n              \"qty\": 1,\n              \"position\": 2,\n              \"is_default\": false,\n              \"price\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 66, "to": 102 } }
        }
      }
    ],
    [
      "bcd961c3-1a48-46da-bf34-fa40a69ba8be",
      {
        "pageContent": "\"price_type\": 0,\n              \"can_change_quantity\": 0\n            }\n          ]\n        }\n      ]\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"price_view\",\n        \"value\": \"0\"\n      }\n    ]\n  },\n  \"saveOptions\": true\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 103, "to": 119 } }
        }
      }
    ],
    [
      "657ccdd4-76a4-43e6-ae7c-fcb210d32b3d",
      {
        "pageContent": "#### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 121, "to": 121 } }
        }
      }
    ],
    [
      "d898baa0-0c4f-40fe-bc44-ce92e51d06f9",
      {
        "pageContent": "```json\n{\n    \"id\": 25,\n    \"sku\": \"Desktop-Computer\",\n    \"name\": \"Desktop Computer\",\n    \"attribute_set_id\": 4,\n    \"price\": 0,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"bundle\",\n    \"created_at\": \"2022-04-15 18:04:04\",\n    \"updated_at\": \"2022-04-15 18:04:04\",\n    \"weight\": 0,\n    \"extension_attributes\": {\n        \"website_ids\": [\n            1\n        ],\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"item_id\": 25,\n            \"product_id\": 25,\n            \"stock_id\": 1,\n            \"qty\": 0,\n            \"is_in_stock\": true,\n            \"is_qty_decimal\": false,\n            \"show_default_notification_message\": false,\n            \"use_config_min_qty\": true,\n            \"min_qty\": 0,\n            \"use_config_min_sale_qty\": 1,\n            \"min_sale_qty\": 1,\n            \"use_config_max_sale_qty\": true,\n            \"max_sale_qty\": 10000,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 123, "to": 159 } }
        }
      }
    ],
    [
      "347eee03-4b2b-410f-bb1f-e9be89fad4ed",
      {
        "pageContent": "\"use_config_backorders\": true,\n            \"backorders\": 0,\n            \"use_config_notify_stock_qty\": true,\n            \"notify_stock_qty\": 1,\n            \"use_config_qty_increments\": true,\n            \"qty_increments\": 0,\n            \"use_config_enable_qty_inc\": true,\n            \"enable_qty_increments\": false,\n            \"use_config_manage_stock\": true,\n            \"manage_stock\": true,\n            \"low_stock_date\": null,\n            \"is_decimal_divided\": false,\n            \"stock_status_changed_auto\": 0\n        },\n        \"bundle_product_options\": [\n            {\n                \"option_id\": 14,\n                \"title\": \"RAM\",\n                \"required\": true,\n                \"type\": \"select\",\n                \"position\": 1,\n                \"sku\": \"Desktop-Computer\",\n                \"product_links\": [\n                    {\n                        \"id\": \"19\",\n                        \"sku\": \"RAM-12GB\",\n                        \"option_id\": 14,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 160, "to": 186 } }
        }
      }
    ],
    [
      "8913d580-7ff8-4b6b-8db5-1987ee2e10e9",
      {
        "pageContent": "\"qty\": 1,\n                        \"position\": 1,\n                        \"is_default\": false,\n                        \"price\": 25,\n                        \"price_type\": null,\n                        \"can_change_quantity\": 0\n                    },\n                    {\n                        \"id\": \"20\",\n                        \"sku\": \"RAM-24GB\",\n                        \"option_id\": 14,\n                        \"qty\": 1,\n                        \"position\": 2,\n                        \"is_default\": false,\n                        \"price\": 50,\n                        \"price_type\": null,\n                        \"can_change_quantity\": 0\n                    }\n                ]\n            },\n            {\n                \"option_id\": 15,\n                \"title\": \"Monitor\",\n                \"required\": true,\n                \"type\": \"select\",\n                \"position\": 2,\n                \"sku\": \"Desktop-Computer\",\n                \"product_links\": [\n                    {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 187, "to": 215 } }
        }
      }
    ],
    [
      "9d88e981-9005-4e30-bc72-c94fd94984a7",
      {
        "pageContent": "\"id\": \"21\",\n                        \"sku\": \"Monitor-15\",\n                        \"option_id\": 15,\n                        \"qty\": 1,\n                        \"position\": 1,\n                        \"is_default\": false,\n                        \"price\": 100,\n                        \"price_type\": null,\n                        \"can_change_quantity\": 0\n                    },\n                    {\n                        \"id\": \"22\",\n                        \"sku\": \"Monitor-17\",\n                        \"option_id\": 15,\n                        \"qty\": 1,\n                        \"position\": 2,\n                        \"is_default\": false,\n                        \"price\": 150,\n                        \"price_type\": null,\n                        \"can_change_quantity\": 0\n                    }\n                ]\n            }\n        ]\n    },\n    \"options\": [],\n    \"media_gallery_entries\": [],\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"shipment_type\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 216, "to": 245 } }
        }
      }
    ],
    [
      "5cda8357-1446-4fbf-9697-cfbecd93f954",
      {
        "pageContent": "\"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"options_container\",\n            \"value\": \"container2\"\n        },\n        {\n            \"attribute_code\": \"msrp_display_actual_price_type\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"desktop-computer\"\n        },\n        {\n            \"attribute_code\": \"price_view\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"required_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"has_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"sku_type\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"price_type\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        },\n        {\n            \"attribute_code\": \"weight_type\",\n            \"value\": \"0\"\n        },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 246, "to": 287 } }
        }
      }
    ],
    [
      "28a66236-f16c-4cff-89d2-81632cbc1de3",
      {
        "pageContent": "},\n        {\n            \"attribute_code\": \"category_ids\",\n            \"value\": [\n                \"32\"\n            ]\n        }\n    ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 287, "to": 296 } }
        }
      }
    ],
    [
      "ef06c42a-801e-4177-8727-3f87a7a7a089",
      {
        "pageContent": "## Verify this step\n\n1. On the Luma storefront page, search for `Desktop Computer`. There should be one result.\n\n    ![Search](../../../_images/search-desktop-computer.png)\n\n1. Click on the Desktop Computer product.\n\n    ![Product](../../../_images/site-desktop-computer.png)\n\n1. Customize Desktop Computer and add it to the shopping cart.\n\n    ![Shopping Cart](../../../_images/shopping-cart-desktop-computer.png)\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nIf you do not see the bundle product on the frontend, you can try reindexing and clearing the cache.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-bundle-product.md",
          "loc": { "lines": { "from": 298, "to": 314 } }
        }
      }
    ],
    [
      "a161feb9-2485-49af-a19d-8f47f450fa92",
      {
        "pageContent": "---\ntitle: Step 2. Create the simple products\ndescription: In this step of the tutorial you will create simple products\ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/magento-optimization-service\nkeywords:\n  - REST\n--- \n \n# Step 2. Create the simple products\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nBefore you run the code, please verify that the attribute values are the same in your installation. See [Get the list of attributes defined in an attribute set](/rest/tutorials/bundle-product/plan-product/#get-the-list-of-attributes-defined-in-an-attribute-searchcriteria ) for more information.\n\nWe will create four simple products: `RAM 12GB`, `RAM 24GB`, `Monitor 15\"` and `Monitor 17\"`.\n\n**Endpoint:**\n\n```html\nPOST http://domain.com/rest/default/V1/products\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "6e2aa97f-b2b3-443b-a952-32eaf92f6472",
      {
        "pageContent": "## RAM-12GB\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n### Payload\n\n```json\n{\n  \"product\": {\n    \"sku\": \"RAM-12GB\",\n    \"name\": \"RAM 12GB\",\n    \"attribute_set_id\": 4,\n    \"price\": 25,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"simple\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"qty\": \"10\",\n            \"is_in_stock\": true\n        }\n    },\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"RAM 12GB Unit\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 24, "to": 65 } }
        }
      }
    ],
    [
      "ad3a87ac-5190-40f5-8404-922059578aec",
      {
        "pageContent": "### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 67, "to": 67 } }
        }
      }
    ],
    [
      "8cc188d4-f44a-4bae-a8d2-9ba2ccce125c",
      {
        "pageContent": "```json\n{\n    \"id\": 16,\n    \"sku\": \"RAM-12GB\",\n    \"name\": \"RAM 12GB\",\n    \"attribute_set_id\": 4,\n    \"price\": 25,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"simple\",\n    \"created_at\": \"2022-04-08 21:57:34\",\n    \"updated_at\": \"2022-04-08 21:57:34\",\n    \"weight\": 0.5,\n    \"extension_attributes\": {\n        \"website_ids\": [\n            1\n        ],\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"item_id\": 16,\n            \"product_id\": 16,\n            \"stock_id\": 1,\n            \"qty\": 10,\n            \"is_in_stock\": true,\n            \"is_qty_decimal\": false,\n            \"show_default_notification_message\": false,\n            \"use_config_min_qty\": true,\n            \"min_qty\": 0,\n            \"use_config_min_sale_qty\": 1,\n            \"min_sale_qty\": 1,\n            \"use_config_max_sale_qty\": true,\n            \"max_sale_qty\": 10000,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 69, "to": 105 } }
        }
      }
    ],
    [
      "79470aba-1f37-415e-9cb6-018386fd10f5",
      {
        "pageContent": "\"use_config_backorders\": true,\n            \"backorders\": 0,\n            \"use_config_notify_stock_qty\": true,\n            \"notify_stock_qty\": 1,\n            \"use_config_qty_increments\": true,\n            \"qty_increments\": 0,\n            \"use_config_enable_qty_inc\": true,\n            \"enable_qty_increments\": false,\n            \"use_config_manage_stock\": true,\n            \"manage_stock\": true,\n            \"low_stock_date\": null,\n            \"is_decimal_divided\": false,\n            \"stock_status_changed_auto\": 0\n        }\n    },\n    \"options\": [],\n    \"media_gallery_entries\": [],\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"options_container\",\n            \"value\": \"container2\"\n        },\n        {\n            \"attribute_code\": \"msrp_display_actual_price_type\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"ram-12g\"\n        },\n        {\n            \"attribute_code\": \"required_options\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 106, "to": 137 } }
        }
      }
    ],
    [
      "246995a4-dd00-4195-bfbc-057f037517db",
      {
        "pageContent": "\"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"has_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        },\n        {\n            \"attribute_code\": \"category_ids\",\n            \"value\": [\n                \"32\"\n            ]\n        },\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"RAM 12GB Unit\"\n        }\n    ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 138, "to": 160 } }
        }
      }
    ],
    [
      "7270943e-ed1b-42a7-b5ec-083b78048190",
      {
        "pageContent": "## RAM-24GB\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n### Payload\n\n```json\n{\n  \"product\": {\n    \"sku\": \"RAM-24GB\",\n    \"name\": \"RAM 24GB\",\n    \"attribute_set_id\": 4,\n    \"price\": 50,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"simple\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"qty\": \"10\",\n            \"is_in_stock\": true\n        }\n    },\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"RAM 24GB Unit\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 162, "to": 203 } }
        }
      }
    ],
    [
      "4f96330e-2393-414c-87ee-a9466dddae8e",
      {
        "pageContent": "### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 205, "to": 205 } }
        }
      }
    ],
    [
      "17eedc4d-e098-475c-a98d-299d757d9e9a",
      {
        "pageContent": "```json\n{\n    \"id\": 17,\n    \"sku\": \"RAM-24GB\",\n    \"name\": \"RAM 24GB\",\n    \"attribute_set_id\": 4,\n    \"price\": 50,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"simple\",\n    \"created_at\": \"2022-04-08 22:02:40\",\n    \"updated_at\": \"2022-04-08 22:02:40\",\n    \"weight\": 0.5,\n    \"extension_attributes\": {\n        \"website_ids\": [\n            1\n        ],\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"item_id\": 17,\n            \"product_id\": 17,\n            \"stock_id\": 1,\n            \"qty\": 10,\n            \"is_in_stock\": true,\n            \"is_qty_decimal\": false,\n            \"show_default_notification_message\": false,\n            \"use_config_min_qty\": true,\n            \"min_qty\": 0,\n            \"use_config_min_sale_qty\": 1,\n            \"min_sale_qty\": 1,\n            \"use_config_max_sale_qty\": true,\n            \"max_sale_qty\": 10000,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 207, "to": 243 } }
        }
      }
    ],
    [
      "71cf0448-24b9-489e-8dea-6b6d488965a7",
      {
        "pageContent": "\"use_config_backorders\": true,\n            \"backorders\": 0,\n            \"use_config_notify_stock_qty\": true,\n            \"notify_stock_qty\": 1,\n            \"use_config_qty_increments\": true,\n            \"qty_increments\": 0,\n            \"use_config_enable_qty_inc\": true,\n            \"enable_qty_increments\": false,\n            \"use_config_manage_stock\": true,\n            \"manage_stock\": true,\n            \"low_stock_date\": null,\n            \"is_decimal_divided\": false,\n            \"stock_status_changed_auto\": 0\n        }\n    },\n    \"options\": [],\n    \"media_gallery_entries\": [],\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"options_container\",\n            \"value\": \"container2\"\n        },\n        {\n            \"attribute_code\": \"msrp_display_actual_price_type\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"ram-24g\"\n        },\n        {\n            \"attribute_code\": \"required_options\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 244, "to": 275 } }
        }
      }
    ],
    [
      "1667b180-7a6e-47a2-b25e-1eab3fa0da5a",
      {
        "pageContent": "\"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"has_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        },\n        {\n            \"attribute_code\": \"category_ids\",\n            \"value\": [\n                \"32\"\n            ]\n        },\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"RAM 24GB Unit\"\n        }\n    ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 276, "to": 298 } }
        }
      }
    ],
    [
      "8879f5a2-d2b3-403e-ad64-1844cd339b57",
      {
        "pageContent": "## Monitor-15\"\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n### Payload\n\n```json\n{\n  \"product\": {\n    \"sku\": \"Monitor-15\",\n    \"name\": \"Monitor 15\\\"\",\n    \"attribute_set_id\": 4,\n    \"price\": 100,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"simple\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"qty\": \"10\",\n            \"is_in_stock\": true\n        }\n    },\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"Monitor 15\\\"\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 300, "to": 341 } }
        }
      }
    ],
    [
      "c4cd7d67-fbf4-4f8f-a7c6-a08e4c442da7",
      {
        "pageContent": "### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 343, "to": 343 } }
        }
      }
    ],
    [
      "031d6e50-8af3-4b49-9235-3b683cad3d9b",
      {
        "pageContent": "```json\n{\n    \"id\": 18,\n    \"sku\": \"Monitor-15\",\n    \"name\": \"Monitor 15\\\"\",\n    \"attribute_set_id\": 4,\n    \"price\": 100,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"simple\",\n    \"created_at\": \"2022-04-08 22:04:11\",\n    \"updated_at\": \"2022-04-08 22:04:11\",\n    \"weight\": 0.5,\n    \"extension_attributes\": {\n        \"website_ids\": [\n            1\n        ],\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"item_id\": 18,\n            \"product_id\": 18,\n            \"stock_id\": 1,\n            \"qty\": 10,\n            \"is_in_stock\": true,\n            \"is_qty_decimal\": false,\n            \"show_default_notification_message\": false,\n            \"use_config_min_qty\": true,\n            \"min_qty\": 0,\n            \"use_config_min_sale_qty\": 1,\n            \"min_sale_qty\": 1,\n            \"use_config_max_sale_qty\": true,\n            \"max_sale_qty\": 10000,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 345, "to": 381 } }
        }
      }
    ],
    [
      "c16935c1-1c47-4dc4-a3cb-c8401be7a0c5",
      {
        "pageContent": "\"use_config_backorders\": true,\n            \"backorders\": 0,\n            \"use_config_notify_stock_qty\": true,\n            \"notify_stock_qty\": 1,\n            \"use_config_qty_increments\": true,\n            \"qty_increments\": 0,\n            \"use_config_enable_qty_inc\": true,\n            \"enable_qty_increments\": false,\n            \"use_config_manage_stock\": true,\n            \"manage_stock\": true,\n            \"low_stock_date\": null,\n            \"is_decimal_divided\": false,\n            \"stock_status_changed_auto\": 0\n        }\n    },\n    \"options\": [],\n    \"media_gallery_entries\": [],\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"options_container\",\n            \"value\": \"container2\"\n        },\n        {\n            \"attribute_code\": \"msrp_display_actual_price_type\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"monitor-15\"\n        },\n        {\n            \"attribute_code\": \"required_options\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 382, "to": 413 } }
        }
      }
    ],
    [
      "d20ee7ee-8908-4dc2-b4b4-1ea4e1a04860",
      {
        "pageContent": "\"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"has_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        },\n        {\n            \"attribute_code\": \"category_ids\",\n            \"value\": [\n                \"32\"\n            ]\n        },\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"Monitor 15\\\"\"\n        }\n    ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 414, "to": 436 } }
        }
      }
    ],
    [
      "bcce585e-9348-4558-9cdf-828ab1bc6f2c",
      {
        "pageContent": "## Monitor-17\"\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n### Payload\n\n```json\n{\n  \"product\": {\n    \"sku\": \"Monitor-17\",\n    \"name\": \"Monitor 17\\\"\",\n    \"attribute_set_id\": 4,\n    \"price\": 150,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"simple\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"qty\": \"10\",\n            \"is_in_stock\": true\n        }\n    },\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"Monitor 17\\\"\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        }\n    ]\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 438, "to": 479 } }
        }
      }
    ],
    [
      "0b389abf-685d-43f3-8c83-a2fd9ebb6ff0",
      {
        "pageContent": "### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 481, "to": 481 } }
        }
      }
    ],
    [
      "b94ce016-78ab-47ef-957f-f4e2430c1b84",
      {
        "pageContent": "```json\n{\n    \"id\": 19,\n    \"sku\": \"Monitor-17\",\n    \"name\": \"Monitor 17\\\"\",\n    \"attribute_set_id\": 4,\n    \"price\": 150,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"simple\",\n    \"created_at\": \"2022-04-08 22:06:21\",\n    \"updated_at\": \"2022-04-08 22:06:21\",\n    \"weight\": 0.5,\n    \"extension_attributes\": {\n        \"website_ids\": [\n            1\n        ],\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"32\"\n            }\n        ],\n        \"stock_item\": {\n            \"item_id\": 19,\n            \"product_id\": 19,\n            \"stock_id\": 1,\n            \"qty\": 10,\n            \"is_in_stock\": true,\n            \"is_qty_decimal\": false,\n            \"show_default_notification_message\": false,\n            \"use_config_min_qty\": true,\n            \"min_qty\": 0,\n            \"use_config_min_sale_qty\": 1,\n            \"min_sale_qty\": 1,\n            \"use_config_max_sale_qty\": true,\n            \"max_sale_qty\": 10000,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 483, "to": 519 } }
        }
      }
    ],
    [
      "f1cbdee3-d093-4b01-b70a-35fc956e2af7",
      {
        "pageContent": "\"use_config_backorders\": true,\n            \"backorders\": 0,\n            \"use_config_notify_stock_qty\": true,\n            \"notify_stock_qty\": 1,\n            \"use_config_qty_increments\": true,\n            \"qty_increments\": 0,\n            \"use_config_enable_qty_inc\": true,\n            \"enable_qty_increments\": false,\n            \"use_config_manage_stock\": true,\n            \"manage_stock\": true,\n            \"low_stock_date\": null,\n            \"is_decimal_divided\": false,\n            \"stock_status_changed_auto\": 0\n        }\n    },\n    \"options\": [],\n    \"media_gallery_entries\": [],\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"options_container\",\n            \"value\": \"container2\"\n        },\n        {\n            \"attribute_code\": \"msrp_display_actual_price_type\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"monitor-17\"\n        },\n        {\n            \"attribute_code\": \"required_options\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 520, "to": 551 } }
        }
      }
    ],
    [
      "99df30d9-d919-4693-84ba-8f7374b66071",
      {
        "pageContent": "\"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"has_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        },\n        {\n            \"attribute_code\": \"category_ids\",\n            \"value\": [\n                \"32\"\n            ]\n        },\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"Monitor 17\\\"\"\n        }\n    ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 552, "to": 574 } }
        }
      }
    ],
    [
      "4a1b85fc-72cf-4eb6-aeae-1a5dd51e02d1",
      {
        "pageContent": "## Verify this step\n\n*  Log in to the Adobe Commerce Admin Panel and select <b>Catalog > Products</b> and confirm that your products appear in the grid.\n\n  ![Simple products](../../../_images/simple-products-admin-grid.png)\n\n <InlineAlert variant=\"info\" slots=\"text\"/>\n\nIf you do not see your products in the catalog, you can try reindexing and clearing the cache.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/create-simple-products.md",
          "loc": { "lines": { "from": 576, "to": 584 } }
        }
      }
    ],
    [
      "a2d4ffb8-aa87-4bdf-bcd0-29dcf407e254",
      {
        "pageContent": "---\ntitle: Create a bundle product tutorial\ndescription: In this tutorial you will learn how to create a bundled product\ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/magento-optimization-service\nkeywords:\n  - REST\n--- \n \n# Create a bundle product tutorial\n\nThis tutorial shows a way to use Adobe Commerce REST APIs to create a _bundle product_. A bundle product is a \"create your own\" type of product.\n\nIn this tutorial, we will create a desktop computer by bundling a processor, monitor, video card and RAM. We will have to create a simple product for each of these and then attach them to the bundle _computer_ product.\n\nThis **3-step tutorial** generally takes **40 minutes**.\n\n### Before you begin\n\n*  Install a Commerce instance with sample data.\n\n*  Install a REST client. We will use Postman in this tutorial.\n\n*  Generate an admin authorization token. All calls in this tutorial require administrator privileges.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/index.md",
          "loc": { "lines": { "from": 1, "to": 24 } }
        }
      }
    ],
    [
      "ef053b2e-9ed8-47a8-b54e-61823ecb590e",
      {
        "pageContent": "---\ntitle: Step 1. Plan the product\ndescription: In this step of the tutorial you will plan the product\ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/magento-optimization-service\nkeywords:\n  - REST\n--- \n \n# Step 1. Plan the product\n\nTo create a bundle product with REST, you need:\n\n*  The attribute names and values for the attribute set assigned to a bundle product.\n*  The category IDs assigned to a bundle product.\n*  Simple product SKUs assigned to a bundle product.\n\nWe will use a `Default` attribute set.\n\nRAM and Monitor sizes will be the customizable aspect of the bundle product. We will create a simple product for each size of RAM and Monitor (12GB, 24GB, 15\" and 20\").",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "f2a11016-c583-4c9e-8f19-13a5f15afa8b",
      {
        "pageContent": "## Define product characteristics\n\nThe table below has the general characteristics of the desktop computer we are creating:\n\nCharacteristic | Description\n--- | ---\nAttribute Set | Default\nProduct Name | Desktop Computer\nSKU | Desktop-Computer\nTax Class | Taxable Goods\nVisibility | Catalog, Search\nDescription | Desktop computer",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 22, "to": 33 } }
        }
      }
    ],
    [
      "a5b2cf4a-cab1-432c-83be-5163b5dd91f6",
      {
        "pageContent": "## Find attribute values\n\nWe will make several API calls to find values needed to create simple/bundle products. We will use `default` as the store code.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 35, "to": 37 } }
        }
      }
    ],
    [
      "8775e8ef-7e29-43dd-8eff-f3735572ec01",
      {
        "pageContent": "### Find attribute set ID\n\nWe will use the `Default` attribute set. We will need to find the corresponding `attribute_set_id`.\n\nThe following API call can be used to search for the attribute set named `Default` and `entity_type_id` equals `4`. The `catalog_product` entity has an `entity_type_id` value of `4`.\n\n**Endpoint:**\n\n```html\nGET http://domain.com/rest/default/V1/eav/attribute-sets/list?searchCriteria[filter_groups][0][filters][0][field]=attribute_set_name&searchCriteria[filter_groups][0][filters][0][value]=Default&searchCriteria[filter_groups][0][filters][0][condition_type]=eq&searchCriteria[filter_groups][1][filters][0][field]=entity_type_id&searchCriteria[filter_groups][1][filters][0][value]=4&searchCriteria[filter_groups][1][filters][0][condition_type]=eq",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 39, "to": 48 } }
        }
      }
    ],
    [
      "73fca30f-d6f5-4d3d-9c80-410f3d0ce68d",
      {
        "pageContent": "```\n\n**Response:**\n\nThe `attribute_set_id` for the `Default` attribute set is `4`:\n\n```json\n{\n    \"items\": [\n        {\n            \"attribute_set_id\": 4,\n            \"attribute_set_name\": \"Default\",\n            \"sort_order\": 1,\n            \"entity_type_id\": 4\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"attribute_set_name\",\n                        \"value\": \"Default\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            },\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"entity_type_id\",\n                        \"value\": \"4\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ],\n        \"page_size\": 20\n    },\n    \"total_count\": 1\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 49, "to": 90 } }
        }
      }
    ],
    [
      "13dab9bb-d44a-4f14-956e-fb413c5ba31f",
      {
        "pageContent": "### List attributes for the attribute set\n\n**Endpoint:**\n\n```html\nGET http://domain.com/rest/default/V1/products/attribute-sets/4/attributes",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 92, "to": 97 } }
        }
      }
    ],
    [
      "ff3a2829-4588-4b48-a14b-c9cfc4b2113b",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 98, "to": 100 } }
        }
      }
    ],
    [
      "4a6cd160-6490-4279-9219-8ea9da3f1c45",
      {
        "pageContent": "```json\n[\n    {\n        \"attribute_id\": 87,\n        \"attribute_code\": \"image\",\n        \"frontend_input\": \"media_image\",\n        \"entity_type_id\": \"4\",\n        \"is_required\": false,\n        \"options\": [],\n        \"is_user_defined\": false,\n        \"default_frontend_label\": \"Base\",\n        \"frontend_labels\": [],\n        \"backend_type\": \"varchar\",\n        \"is_unique\": \"0\",\n        \"validation_rules\": []\n    },\n    {\n        \"attribute_id\": 125,\n        \"attribute_code\": \"shipment_type\",\n        \"frontend_input\": \"select\",\n        \"entity_type_id\": \"4\",\n        \"is_required\": true,\n        \"options\": [\n            {\n                \"label\": \"Together\",\n                \"value\": \"0\"\n            },\n            {\n                \"label\": \"Separately\",\n                \"value\": \"1\"\n            }\n        ],\n        \"is_user_defined\": false,\n        \"default_frontend_label\": \"Ship Bundle Items\",\n        \"frontend_labels\": [],\n        \"backend_type\": \"int\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 102, "to": 137 } }
        }
      }
    ],
    [
      "db0e7134-3292-476b-9753-6ccc45425894",
      {
        "pageContent": "\"source_model\": \"Magento\\\\Bundle\\\\Model\\\\Product\\\\Attribute\\\\Source\\\\Shipment\\\\Type\",\n        \"default_value\": \"0\",\n        \"is_unique\": \"0\",\n        \"validation_rules\": []\n    }\n]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 138, "to": 143 } }
        }
      }
    ],
    [
      "af661ee0-5497-44f1-9b4c-738f66152780",
      {
        "pageContent": "```\n\nBecause this response can be very long, we have abbreviated the example response above. The table below has attributes that are relevant in this tutorial.\n\nAdmin label | Selected value | Attribute ID | attribute_code  | Attribute value\n--- | --- | --- | --- | ---\nTax Class | Taxable Goods | 134 | `tax_class_id` | 2\nVisibility | Catalog, Search | 99 | `visibility` | 4\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nThe attribute ID and value numbers will vary between different installations. Check the values carefully before using them in your calls.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 144, "to": 155 } }
        }
      }
    ],
    [
      "b7efd676-b9ad-497c-a8ac-f86f23cef509",
      {
        "pageContent": "### List category values\n\nWe will assign our Desktop Computer to the `What's New` category.\n\nUse the following endpoint to find out category's ID.\n\n**Endpoint:**\n\n```html\nGET http://domain.com/rest/default/V1/categories?searchCriteria[filter_groups][0][filters][0][field]=id&searchCriteria[filter_groups][0][filters][0][value]=1&searchCriteria[filter_groups][0][filters][0][condition_type]=gte\n```\n\n**Response:**\n\n```json\n{\n    \"id\": 2,\n    \"parent_id\": 1,\n    \"name\": \"Default Category\",\n    \"is_active\": true,\n    \"position\": 1,\n    \"level\": 1,\n    \"product_count\": 0,\n    \"children_data\": [\n        {\n            \"id\": 32,\n            \"parent_id\": 2,\n            \"name\": \"What's New\",\n            \"is_active\": true,\n            \"position\": 1,\n            \"level\": 2,\n            \"product_count\": 0,\n            \"children_data\": []\n        }\n    ]\n}\n```\n\nWe can see from the above response that the `id` for `What's New` is equal to `32`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 157, "to": 195 } }
        }
      }
    ],
    [
      "57800fda-64c5-43b3-bd9a-830818a00869",
      {
        "pageContent": "## Verify this step\n\nSince we are only gathering information, there is nothing to verify.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/bundle-product/plan-product.md",
          "loc": { "lines": { "from": 197, "to": 199 } }
        }
      }
    ],
    [
      "8828fa89-3fc6-41b7-a94a-8cad6d054e1d",
      {
        "pageContent": "---\ntitle: Step 2. Create the configurable product\ndescription: In this step of the tutorial you will create the configurable product\nkeywords:\n  - REST\n--- \n \n# Step 2. Create the configurable product\n\nWe have the information we need to create the Champ Tee configurable product.\n\nThe sample payload does not contain the price or the size. These attributes will be defined in the simple products.\n\nThe `visibility` attribute is set to 4, meaning the product can be found by browsing or searching. This value will be changed for the simple products.\n\nThe below table shows the equivalent code for the visibility attribute\n\nVisibility | Code\n--- | ---\n`Not Visible Individually` | 1\n`Catalog` | 2\n`Search` | 3\n`Catalog, Search` | 4\n\n<InlineAlert variant=\"info\" slots=\"text\"/>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "55dcf105-5baf-4e55-aa01-f9caeeb4c7d7",
      {
        "pageContent": "Before you using this code sample, verify that the attribute values are the same in your installation. See [Get the list of attributes defined in an attribute searchCriteria](/rest/tutorials/configurable-product/plan-product/#get-the-list-of-attributes-defined-in-an-attribute-searchcriteria ) for more information.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/products`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 27, "to": 33 } }
        }
      }
    ],
    [
      "4a997fd9-3708-4bbf-8f3a-74e778bde715",
      {
        "pageContent": "```json\n{\n  \"product\": {\n    \"sku\": \"MS-Champ\",\n    \"name\": \"Champ Tee\",\n    \"attribute_set_id\": 9,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"configurable\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"11\"\n            },\n            {\n                \"position\": 1,\n                \"category_id\": \"12\"\n            },\n            {\n                \"position\": 2,\n                \"category_id\": \"16\"\n            }\n        ]\n    },\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        },\n        {\n            \"attribute_code\": \"material\",\n            \"value\": \"148\"\n        },\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 35, "to": 74 } }
        }
      }
    ],
    [
      "a66b18e0-41e1-44d9-b28d-c77bf80cbecf",
      {
        "pageContent": "{\n            \"attribute_code\": \"pattern\",\n            \"value\": \"196\"\n        },\n        {\n            \"attribute_code\": \"color\",\n            \"value\": \"52\"\n        }\n    ]\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 74, "to": 84 } }
        }
      }
    ],
    [
      "58411942-2384-4cb1-ba86-2cf330602658",
      {
        "pageContent": "```\n\n**Response:**\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 85, "to": 90 } }
        }
      }
    ],
    [
      "fafa7895-f58b-4608-ac20-d2df8eab003f",
      {
        "pageContent": "```json\n{\n    \"id\": 2078,\n    \"sku\": \"MS-Champ\",\n    \"name\": \"Champ Tee\",\n    \"attribute_set_id\": 9,\n    \"price\": 0,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"configurable\",\n    \"created_at\": \"2017-11-29 19:57:20\",\n    \"updated_at\": \"2017-11-29 19:57:20\",\n    \"weight\": 0.5,\n    \"extension_attributes\": {\n        \"website_ids\": [\n            1\n        ],\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"11\"\n            },\n            {\n                \"position\": 1,\n                \"category_id\": \"12\"\n            },\n            {\n                \"position\": 2,\n                \"category_id\": \"16\"\n            }\n        ],\n        \"stock_item\": {\n            \"item_id\": 2078,\n            \"product_id\": 2078,\n            \"stock_id\": 1,\n            \"qty\": 0,\n            \"is_in_stock\": false,\n            \"is_qty_decimal\": false,\n            \"show_default_notification_message\": false,\n            \"use_config_min_qty\": true,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 92, "to": 131 } }
        }
      }
    ],
    [
      "03fb560e-7170-48f5-84e1-570904c6cd0b",
      {
        "pageContent": "\"min_qty\": 0,\n            \"use_config_min_sale_qty\": 1,\n            \"min_sale_qty\": 1,\n            \"use_config_max_sale_qty\": true,\n            \"max_sale_qty\": 10000,\n            \"use_config_backorders\": true,\n            \"backorders\": 0,\n            \"use_config_notify_stock_qty\": true,\n            \"notify_stock_qty\": 1,\n            \"use_config_qty_increments\": true,\n            \"qty_increments\": 0,\n            \"use_config_enable_qty_inc\": true,\n            \"enable_qty_increments\": false,\n            \"use_config_manage_stock\": true,\n            \"manage_stock\": true,\n            \"low_stock_date\": null,\n            \"is_decimal_divided\": false,\n            \"stock_status_changed_auto\": 0\n        },\n        \"configurable_product_options\": [],\n        \"configurable_product_links\": []\n    },\n    \"product_links\": [],\n    \"options\": [],\n    \"media_gallery_entries\": [],\n    \"tier_prices\": [],\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 132, "to": 160 } }
        }
      }
    ],
    [
      "7c34fe77-d1fd-4ad0-ba92-440824dde989",
      {
        "pageContent": "\"value\": \"The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\"\n        },\n        {\n            \"attribute_code\": \"color\",\n            \"value\": \"52\"\n        },\n        {\n            \"attribute_code\": \"category_ids\",\n            \"value\": [\n                \"11\",\n                \"12\",\n                \"16\"\n            ]\n        },\n        {\n            \"attribute_code\": \"options_container\",\n            \"value\": \"container2\"\n        },\n        {\n            \"attribute_code\": \"required_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"has_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"champ-tee\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        },\n        {\n            \"attribute_code\": \"material\",\n            \"value\": \"148\"\n        },",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 161, "to": 198 } }
        }
      }
    ],
    [
      "b3d52baa-562c-43ae-bebd-cd19548c96f9",
      {
        "pageContent": "},\n        {\n            \"attribute_code\": \"size\",\n            \"value\": \"91\"\n        },\n        {\n            \"attribute_code\": \"pattern\",\n            \"value\": \"196\"\n        }\n    ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 198, "to": 208 } }
        }
      }
    ],
    [
      "20a8af08-f6d4-4438-9b7e-f7239ce64234",
      {
        "pageContent": "```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 209, "to": 211 } }
        }
      }
    ],
    [
      "160c9b98-d74a-43ae-8805-e254877b1f3b",
      {
        "pageContent": "## Verify this step\n\n*  Log in to the Luma website and select **Catalog > Products**. The product appears in the grid.\n\n  ![Product page with configurable product](../../../_images/products-page.png)\n\n*  On the Luma storefront page, search for `Champ`. No results are returned.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-configurable-product.md",
          "loc": { "lines": { "from": 213, "to": 219 } }
        }
      }
    ],
    [
      "a26bbecc-9714-473d-8556-850d863ad029",
      {
        "pageContent": "---\ntitle: Step 5. Create the personalization option\ndescription: In this step of the tutorial you will create the personalization options\nkeywords:\n  - REST\n---\n \n# Step 5. Create the personalization option\n\nLet's add a text box to the product page that allows the customer to add his name (up to 15 characters) to the back of shirt.\n\nThe `product_sku` is the `sku` of the configurable product. The `sku` specified in the payload is a string that is appended to the `product_sku` when a customer decides to purchase this option. Likewise, the `price` supplied in the payload is added to the configurable product price.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/products/options`\n\n**Payload:**\n\n```json\n{\n  \"option\": {\n    \"product_sku\": \"MS-Champ\",\n    \"title\": \"Add Your Name (Max 15 Characters)\",\n    \"type\": \"field\",\n    \"sort_order\": 1,\n    \"is_require\": false,\n    \"price\": 10,\n    \"price_type\": \"fixed\",\n    \"sku\": \"Personalized\",\n    \"max_characters\": 15\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-personalization-option.md",
          "loc": { "lines": { "from": 1, "to": 33 } }
        }
      }
    ],
    [
      "b318d110-d339-44a6-837d-00721a52770c",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n    \"product_sku\": \"MS-Champ\",\n    \"option_id\": 7,\n    \"title\": \"Add Your Name (Max 15 Characters)\",\n    \"type\": \"field\",\n    \"sort_order\": 1,\n    \"is_require\": false,\n    \"price\": 10,\n    \"price_type\": \"fixed\",\n    \"sku\": \"Personalized\",\n    \"max_characters\": 15\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-personalization-option.md",
          "loc": { "lines": { "from": 34, "to": 51 } }
        }
      }
    ],
    [
      "c9d3af3c-1352-4d38-b02a-d57284426ed9",
      {
        "pageContent": "## Verify this step\n\n*  Log in to the Luma website and select **Catalog > Products**. Click on the **Champ Tee** configurable product and expand the **Customizable Options** section.\n\n  ![Product page with configurable and simple products](../../../_images/options-section.png)\n\n*  On the Luma storefront page, search for `Champ`. Then click on the Champ Tee product.\n\n  ![Search results](../../../_images/add-your-name.png)\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nIf the personalization option is not displayed, go to the **Champ Tee** configuration product page in Admin and set  **Stock Status** to **In Stock**.\n\n## Congratulations! You've finished.\n\n### Related topics\n\n[Order Processing with REST APIs Tutorial](/rest/tutorials/orders/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-personalization-option.md",
          "loc": { "lines": { "from": 53, "to": 71 } }
        }
      }
    ],
    [
      "0f949c83-a7f9-418d-a6c7-fc5e3c2a1846",
      {
        "pageContent": "---\ntitle: Step 3. Create the simple products\ndescription: In this step of the tutorial you will create the simple products\nkeywords:\n  - REST\n--- \n \n# Step 3. Create the simple products\n\nThe payloads for creating a simple product and a configurable product are identical, with the following exceptions:\n\n*  The simple product `sku` appends the configurable option (the size in this tutorial) to the configurable product `sku`.\n*  The `name` indicates the size.\n*  The `type_id` is set to `simple`.\n*  The `visibility` is set to `1`, indicating the simple product should not be displayed on the store.\n*  The `price` and `size` attributes are specified.\n\nAlthough it's not required, the simple product payload also includes `stock_item` information. By default, the Luma store hides out-of-stock items, so adding stock will make the Champ Tee visible on the website.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "52268de5-e6ae-4d96-9a2a-ce2e51912e99",
      {
        "pageContent": "## Create the first simple product\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nBefore using this code sample, verify that the attribute values are the same in your installation. See [Get the list of attributes defined in an attribute searchCriteria](/rest/tutorials/configurable-product/plan-product/#get-the-list-of-attributes-defined-in-an-attribute-searchcriteria ) for more information.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/products`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 20, "to": 30 } }
        }
      }
    ],
    [
      "3f001ceb-f7d6-4bc4-bbff-b7e2ccd2d680",
      {
        "pageContent": "```json\n{\n  \"product\": {\n    \"sku\": \"MS-Champ-S\",\n    \"name\": \"Champ Tee Small\",\n    \"attribute_set_id\": 9,\n    \"price\": 25,\n    \"status\": 1,\n    \"visibility\": 1,\n    \"type_id\": \"simple\",\n    \"weight\": \"0.5\",\n    \"extension_attributes\": {\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"11\"\n            },\n            {\n                \"position\": 1,\n                \"category_id\": \"12\"\n            },\n            {\n                \"position\": 2,\n                \"category_id\": \"16\"\n            }\n        ],\n        \"stock_item\": {\n            \"qty\": \"10\",\n            \"is_in_stock\": true\n        }\n    },\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",\n            \"value\": \"The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 32, "to": 70 } }
        }
      }
    ],
    [
      "b8a4f21b-2a79-4590-b9d5-bb9a7d648cd0",
      {
        "pageContent": "},\n        {\n            \"attribute_code\": \"material\",\n            \"value\": \"148\"\n        },\n        {\n            \"attribute_code\": \"pattern\",\n            \"value\": \"196\"\n        },\n        {\n            \"attribute_code\": \"color\",\n            \"value\": \"52\"\n        },\n        {\n            \"attribute_code\": \"size\",\n            \"value\": \"168\"\n        }\n    ]\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 71, "to": 90 } }
        }
      }
    ],
    [
      "08065646-c891-4e90-97de-95ed04125d34",
      {
        "pageContent": "```\n\n**Response:**\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 91, "to": 96 } }
        }
      }
    ],
    [
      "9ce44950-e1f6-4b4e-92c6-3d9931a11597",
      {
        "pageContent": "```json\n{\n    \"id\": 2079,\n    \"sku\": \"MS-Champ-S\",\n    \"name\": \"Champ Tee Small\",\n    \"attribute_set_id\": 9,\n    \"price\": 25,\n    \"status\": 1,\n    \"visibility\": 1,\n    \"type_id\": \"simple\",\n    \"created_at\": \"2017-11-29 20:40:07\",\n    \"updated_at\": \"2017-11-29 20:40:07\",\n    \"weight\": 0.5,\n    \"extension_attributes\": {\n        \"website_ids\": [\n            1\n        ],\n        \"category_links\": [\n            {\n                \"position\": 0,\n                \"category_id\": \"11\"\n            },\n            {\n                \"position\": 1,\n                \"category_id\": \"12\"\n            },\n            {\n                \"position\": 2,\n                \"category_id\": \"16\"\n            }\n        ],\n        \"stock_item\": {\n            \"item_id\": 2079,\n            \"product_id\": 2079,\n            \"stock_id\": 1,\n            \"qty\": 10,\n            \"is_in_stock\": true,\n            \"is_qty_decimal\": false,\n            \"show_default_notification_message\": false,\n            \"use_config_min_qty\": true,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 98, "to": 137 } }
        }
      }
    ],
    [
      "edc09426-9e77-4187-b7e1-b235752f4f81",
      {
        "pageContent": "\"min_qty\": 0,\n            \"use_config_min_sale_qty\": 1,\n            \"min_sale_qty\": 1,\n            \"use_config_max_sale_qty\": true,\n            \"max_sale_qty\": 10000,\n            \"use_config_backorders\": true,\n            \"backorders\": 0,\n            \"use_config_notify_stock_qty\": true,\n            \"notify_stock_qty\": 1,\n            \"use_config_qty_increments\": true,\n            \"qty_increments\": 0,\n            \"use_config_enable_qty_inc\": true,\n            \"enable_qty_increments\": false,\n            \"use_config_manage_stock\": true,\n            \"manage_stock\": true,\n            \"low_stock_date\": null,\n            \"is_decimal_divided\": false,\n            \"stock_status_changed_auto\": 0\n        }\n    },\n    \"product_links\": [],\n    \"options\": [],\n    \"media_gallery_entries\": [],\n    \"tier_prices\": [],\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"description\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 138, "to": 164 } }
        }
      }
    ],
    [
      "4b6d46c8-3ae1-442f-a12f-1068b7d1594b",
      {
        "pageContent": "\"value\": \"The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\"\n        },\n        {\n            \"attribute_code\": \"color\",\n            \"value\": \"52\"\n        },\n        {\n            \"attribute_code\": \"category_ids\",\n            \"value\": [\n                \"11\",\n                \"12\",\n                \"16\"\n            ]\n        },\n        {\n            \"attribute_code\": \"options_container\",\n            \"value\": \"container2\"\n        },\n        {\n            \"attribute_code\": \"required_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"has_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"champ-tee-small\"\n        },\n        {\n            \"attribute_code\": \"tax_class_id\",\n            \"value\": \"2\"\n        },\n        {\n            \"attribute_code\": \"material\",\n            \"value\": \"148\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 165, "to": 201 } }
        }
      }
    ],
    [
      "cc8f19d6-6b68-4253-b63b-321edae13e09",
      {
        "pageContent": "},\n        {\n            \"attribute_code\": \"size\",\n            \"value\": \"168\"\n        },\n        {\n            \"attribute_code\": \"pattern\",\n            \"value\": \"196\"\n        }\n    ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 202, "to": 212 } }
        }
      }
    ],
    [
      "8499e5ff-30a2-46dd-80ab-13a9d298895c",
      {
        "pageContent": "```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 213, "to": 215 } }
        }
      }
    ],
    [
      "0616ccc8-a28d-4d93-9ddc-7ea433482134",
      {
        "pageContent": "## Create the other simple products\n\nRepeat the call with the following changes to the payload:\n\nAttribute | Medium Value | Large Value\n--- | ---\n`sku` | MS-Champ-M | MS-Champ-L\n`name` | Champ Tee Medium | Champ Tee Large\n`size` | 169 | 170\n\n## Verify this step\n\n*  Log in to the Luma website and select <b>Catalog > Products</b>. The product appears in the grid.\n\n  ![Product page with configurable and simple products](../../../_images/products-page-all.png)\n\n*  On the Luma storefront page, search for `Champ`. No results are returned.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/create-simple-products.md",
          "loc": { "lines": { "from": 217, "to": 233 } }
        }
      }
    ],
    [
      "76d3e895-1f3a-49a5-bed5-f7dbce61967e",
      {
        "pageContent": "---\ntitle: Step 4. Define configurable product options\ndescription: In this step of the tutorial you will define the configurable product options\nkeywords:\n  - REST\n--- \n \n# Step 4. Define configurable product options\n\nNow that we've created all the Champ Tee products, we need to assign `size` as the configurable attribute and link the simple products to the configurable product.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "39cc4d32-a447-4d33-90bc-b9022a4adb07",
      {
        "pageContent": "## Set the configurable attribute\n\nThe `POST V1/configurable-products/:sku/options` call assigns the specified `attribute_id` to be the configurable attribute. Specify the `sku` of the configurable product in the URI.\n\nThe value assigned to the `value_index` must be unique within the system.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/configurable-products/MS-Champ/options`\n\n**Payload:**\n\n```json\n{\n  \"option\": {\n    \"attribute_id\": \"141\",\n    \"label\": \"Size\",\n    \"position\": 0,\n    \"is_use_default\": true,\n    \"values\": [\n      {\n        \"value_index\": 9\n      }\n    ]\n  }\n}\n```\n\n**Response:**\n\nA configurable option ID number, such as `\"335\"`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 12, "to": 42 } }
        }
      }
    ],
    [
      "08587bb7-dfc7-4a9d-a7cf-920144b0c7e8",
      {
        "pageContent": "## Link the simple products to the configurable product\n\nThe call to link a simple (child) product to the configurable product accepts only one `childSku` value. You must repeat this call for the `MS-Champ-M` and `MS-Champ-L` products.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/configurable-products/MS-Champ/child`\n\n**Payload:**\n\n```json\n{\n  \"childSku\": \"MS-Champ-S\"\n}\n```\n\n**Response:**\n\n`true`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 44, "to": 62 } }
        }
      }
    ],
    [
      "9894d47b-fc46-4b60-b061-8c5c04af2018",
      {
        "pageContent": "## Verify this step\n\n*  Log in to the Luma website and select **Catalog > Products**. Click on the **Champ Tee** configurable product and expand the **Configurations** section.\n\n![Product page with configurable and simple products](../../../_images/configurations-section.png)\n\n*  On the Luma storefront page, search for `Champ`.\n\n![Search results](../../../_images/search-results.png)\n\n*  Call `GET /V1/products/MS-Champ`. The response includes the `configurable_product_options` and `configurable_product_links` arrays.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 64, "to": 74 } }
        }
      }
    ],
    [
      "29fe4594-1f8e-41f1-9b5e-9b75c1d420e2",
      {
        "pageContent": "```json\n...\n\"configurable_product_options\": [\n    {\n        \"id\": 338,\n        \"attribute_id\": \"141\",\n        \"label\": \"Size\",\n        \"position\": 0,\n        \"values\": [\n            {\n                \"value_index\": 168\n            },\n            {\n                \"value_index\": 169\n            },\n            {\n                \"value_index\": 170\n            }\n        ],\n        \"product_id\": 2078\n    }\n],\n\"configurable_product_links\": [\n    2079,\n    2080,\n    2081\n]\n},\n...\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/define-config-product-options.md",
          "loc": { "lines": { "from": 76, "to": 105 } }
        }
      }
    ],
    [
      "58c58a3d-c296-4aed-9420-1663ac374e45",
      {
        "pageContent": "---\ntitle: Create a configurable product tutorial\ndescription: This tutorial describes how to create a configurable product using the REST API\nkeywords:\n  - REST\n--- \n \n# Create a configurable product tutorial\n\nThis tutorial shows a system integrator how to use Adobe Commerce REST APIs to create a _configurable product_. A configurable product is a parent product of multiple simple products. You define a configurable product so that the buyer must make one or more choices to select a product. For example, most clothing comes in a variety of colors and sizes. If you are offering a skirt in black, red, and blue colorways in sizes small, medium, and large, then you would create a configurable product with 9 simple products, one for each combination of color and size.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/index.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "2cb1ee4a-b8fd-4871-8be6-4f1360d99835",
      {
        "pageContent": "In this tutorial, we will create a gray t-shirt that comes in three sizes (small, medium, and large).  The configurable product defines basic characteristics of the t-shirt. Then we will create a simple product for each size and link each of them to the configurable product. Finally, we will add an option that allows the customer to specify text that can be added to the shirt.\n\nThis **5-step tutorial** generally takes **45 minutes**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/index.md",
          "loc": { "lines": { "from": 12, "to": 14 } }
        }
      }
    ],
    [
      "4008afd8-5369-4272-923e-38e03962b4e9",
      {
        "pageContent": "### Before you begin\n\n*  Install a Commerce instance with sample data. The sample data defines a functional store, called Luma, that sells fitness clothing and accessories.\n\n*  Install a REST client. You can use any REST client to send calls to Commerce. [Postman](https://www.getpostman.com/) is recommended.\n\n*  [Install and configure RabbitMQ](https://experienceleague.adobe.com/docs/commerce-operations/installation-guide/prerequisites/rabbitmq.html), which is the default message broker for bulk API endpoints.\n\n*  Obtain an admin authorization token. All calls in this tutorial require administrator privileges. See [Generate the admin token](/rest/tutorials/prerequisite-tasks/) for more information.\n\n### Other resources\n\n*  [REST Tutorials](/rest/tutorials/index/) provides additional information about completing any Commerce REST tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/index.md",
          "loc": { "lines": { "from": 16, "to": 28 } }
        }
      }
    ],
    [
      "ef506504-2e34-45a9-be5a-d7e9ceebadd4",
      {
        "pageContent": "---\ntitle: Step 1. Plan the product\ndescription: In this step of the tutorial you will plan the product\nkeywords:\n  - REST\n--- \n \n# Step 1. Plan the product\n\nTo create a configurable product programmatically, you'll need to know the following:\n\n*  The attribute names and values defined in the attribute set assigned to the configurable product.\n*  The categories numbers assigned to the configurable product.\n*  Which attributes to use as the configuration options.\n\nSince this tutorial uses the sample data, we can take advantage of the options that the Top attribute set provides. This attribute set contains attributes that describe the fabric, sleeve length, and other characteristics that are specific to clothing. It also includes EAV attributes such as size and color, which are commonly available to all types of physical products.\n\nThe size of the t-shirt will be the configurable aspect of this product. Therefore, we'll create a simple product for each size (Small, Medium, and Large).",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "215f042c-b8e2-4d35-afee-3b006c084f87",
      {
        "pageContent": "## Define product characteristics\n\nThe following table lists the general characteristics of men's t-shirt we're creating. These items are among those listed on the New Product page in Admin when the Top attribute set is selected.\n\nCharacteristic | Description\n--- | ---\nAttribute Set | Top\nProduct Name | Champ Tee\nSKU | MS-Champ\nPrice | 25.00\nTax Class | Taxable Goods\nWeight | 0.5\nCategories | Men, Tops, Tees\nVisibility | Catalog, Search\nMaterial | LumaTech\nPattern | Graphic Print\nColor | Gray\nSize | Configurable in small, medium, or large\nDescription | The Champ Tee keeps you cool and dry while you do your thing. Let everyone know who you are by adding your name on the back for only $10.\n\nA merchant typically provides the product name, SKU, price, weight, and description. The other characteristics are defined by the system.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 20, "to": 40 } }
        }
      }
    ],
    [
      "b52e364a-a927-4744-a067-f7c27100d338",
      {
        "pageContent": "## Find the system-defined values\n\nWe'll make several calls to find the values needed to create the product",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 42, "to": 44 } }
        }
      }
    ],
    [
      "2ae1d68b-bfe7-4bd7-aaad-093ab38aeef7",
      {
        "pageContent": "### Get the attribute set ID\n\nThe sample data provides multiple attribute sets, including Default, Top, and Bottom. To assign the Top attribute set to the product, we need to know the corresponding `attribute_set_id`.\n\nUse the following call to search for the attribute set named `Top` and `entity_type_id` equals to `4`.\nBy default, the `catalog_product` entity has the `entity_type_id` value as `4`.\n\n**Endpoint:**\n\n```html\nGET <host>/rest/<store_code>/V1/eav/attribute-sets/list?\nsearchCriteria[filter_groups][0][filters][0][field]=attribute_set_name&\nsearchCriteria[filter_groups][0][filters][0][value]=Top&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=eq&\nsearchCriteria[filter_groups][1][filters][0][field]=entity_type_id&\nsearchCriteria[filter_groups][1][filters][0][value]=4&\nsearchCriteria[filter_groups][1][filters][0][condition_type]=eq",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 46, "to": 62 } }
        }
      }
    ],
    [
      "22a1afc1-625a-483d-9e17-eafb3598bf25",
      {
        "pageContent": "```\n\n**Response:**\n\nThe `attribute_set_id` for the Top attribute set is `9`.\n\n```json\n{\n    \"items\": [\n        {\n            \"attribute_set_id\": 9,\n            \"attribute_set_name\": \"Top\",\n            \"sort_order\": 0,\n            \"entity_type_id\": 4\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"attribute_set_name\",\n                        \"value\": \"Top\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            },\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"entity_type_id\",\n                        \"value\": \"4\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 1\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 63, "to": 103 } }
        }
      }
    ],
    [
      "fca26f2a-4ac1-46c3-a1e4-2384d814aa67",
      {
        "pageContent": "### Get the list of attributes defined in an attribute searchCriteria\n\nUse the `GET V1/products/attribute-sets/:attributeSetId/attributes` call to return information about the attributes defined in the Top attribute set.\n\n**Endpoint:**\n\n```html\nGET <host>/rest/default/V1/products/attribute-sets/9/attributes",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 105, "to": 112 } }
        }
      }
    ],
    [
      "1bbcf8de-e8da-41ff-9649-75d5c620f019",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n[\n    {\n        \"attribute_id\": 141,\n        \"attribute_code\": \"size\",\n        \"frontend_input\": \"select\",\n        \"entity_type_id\": \"4\",\n        \"is_required\": false,\n        \"options\": [\n            {\n                \"label\": \" \",\n                \"value\": \"\"\n            },\n            {\n                \"label\": \"Small\",\n                \"value\": \"168\"\n            },\n            {\n                \"label\": \"Medium\",\n                \"value\": \"169\"\n            },\n            {\n                \"label\": \"Large\",\n                \"value\": \"170\"\n            }\n        ],\n        \"is_user_defined\": true,\n        \"default_frontend_label\": \"Size\",\n        \"frontend_labels\": [],\n        \"backend_type\": \"int\",\n        \"source_model\": \"Magento\\\\Eav\\\\Model\\\\Entity\\\\Attribute\\\\Source\\\\Table\",\n        \"default_value\": \"\",\n        \"is_unique\": \"0\",\n        \"validation_rules\": []\n    }\n]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 113, "to": 152 } }
        }
      }
    ],
    [
      "3411cb40-773a-4107-ac8a-5efd2740a4ca",
      {
        "pageContent": "```\n\nThe response contains almost 3,000 lines and the above is a part of the response from the endpoint. The following table provides a summary of the attributes that are relevant in this tutorial.\n\nAdmin label | Selected value | Attribute ID | attribute_code  | Attribute value\n--- | --- | --- | --- | ---\nTax Class | Taxable Goods | 132 | `tax_class_id` | 2\nVisibility | Catalog, Search | 99 | `visibility` | 4\nMaterial | LumaTech  | 136 | `material` | 148\nPattern | Graphic Print | 152 | `pattern` | 196\nColor | Gray | 93 | `color` | 52\nSize | Not applicable | 141 | `size` | 168 (small), 169 (medium), 170 (large)\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nThe attribute ID and value numbers might be different on your installation. Check the values carefully before using them in your calls.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 153, "to": 168 } }
        }
      }
    ],
    [
      "d494deca-7c96-40d3-8dfa-832f18792456",
      {
        "pageContent": "### Get the list of category values\n\nYou must assign the product to one or more categories to enable customers to find the product by browsing. We'll assign the Champ Tee to the Men, Tops, and Tees categories.\n\nUse the following call to search for all categories (`id` is greater than or equal to `0`).\n\n**Endpoint:**\n\n```html\nGET <host>/rest/default/V1/categories?\nsearchCriteria[filter_groups][0][filters][0][field]=id&\nsearchCriteria[filter_groups][0][filters][0][value]=1&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=gte\n```\n\n**Response:**\n\n```json\n{\n    \"id\": 2,\n    \"parent_id\": 1,\n    \"name\": \"Default Category\",\n    \"is_active\": true,\n    \"position\": 1,\n    \"level\": 1,\n    \"product_count\": 0,\n    \"children_data\": [\n        {\n            \"id\": 11,\n            \"parent_id\": 2,\n            \"name\": \"Men\",\n            \"is_active\": true,\n            \"position\": 1,\n            \"level\": 2,\n            \"product_count\": 1,\n            \"children_data\": []\n        }\n    ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 170, "to": 208 } }
        }
      }
    ],
    [
      "78138795-a2ee-4391-aec6-f12bca37ba72",
      {
        "pageContent": "```\n\nNote that women's tops and tees have different ids than men's tops and tees. The values for men's clothing are:\n\n*  Men - `11`\n*  Tops - `12`\n*  Tees - `16`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 209, "to": 215 } }
        }
      }
    ],
    [
      "96eb1fba-09f5-4577-b485-2ac2fef2ad98",
      {
        "pageContent": "## Verify this step\n\nAt this point, we're gathering information, so there is nothing to verify.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/configurable-product/plan-product.md",
          "loc": { "lines": { "from": 217, "to": 219 } }
        }
      }
    ],
    [
      "b74a65fe-3117-4e09-b5fd-8325f032e85b",
      {
        "pageContent": "---\ntitle: Create and manage grouped products tutorial\ndescription: In this tutorial you will create and manage grouped products\nkeywords:\n  - REST\n--- \n \n# Create and manage grouped products tutorial\n\nA grouped product consists of simple standalone products that are presented as a group. A group can contain variations of a single product or a collection of products that are to be sold together.\n\nThis tutorial describes how you can use the Adobe Commerce REST API to create and manage grouped products.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "3b617783-69e5-4eaf-94cb-3901b0ad1060",
      {
        "pageContent": "### Before you begin\n\n*  Install a Commerce instance with sample data. The sample data defines a functional store, called Luma, that sells fitness clothing and accessories.\n\n*  Install a REST client. You can use any REST client to send calls to Commerce. [Postman](https://www.getpostman.com/) is recommended.\n\n*  Obtain an admin authorization token. All calls in this tutorial require administrator privileges. See [Generate the admin token](/rest/tutorials/prerequisite-tasks/) for more information.\n\n### Other resources\n\n*  [REST Tutorials](/rest/tutorials/index/) provides additional information about completing any Commerce REST tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 14, "to": 24 } }
        }
      }
    ],
    [
      "87372cc0-7278-4bb3-85d2-d12cdc25b5a5",
      {
        "pageContent": "## 1. Create an empty grouped product\n\nThe first step is to create the grouped product container. In the next step, we'll add individual products to the grouped product.\n\n### Endpoint\n\n`POST V1/products`\n\n### Payload\n\nThe `attribute_set_id: 11` line corresponds to gear. The value of `4` for the `visibility` attribute indicates the product will be displayed on the storefront and can be searched.\n\n```json\n    {\n       \"product\":{\n          \"sku\":\"new-grouped\",\n          \"name\":\"New Grouped Product\",\n          \"attribute_set_id\":11,\n          \"type_id\":\"grouped\",\n          \"visibility\":4\n       }\n    }\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 26, "to": 48 } }
        }
      }
    ],
    [
      "39bb8228-2d68-428a-ad57-2e8604670232",
      {
        "pageContent": "### Response",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 50, "to": 50 } }
        }
      }
    ],
    [
      "c1298afa-b9f0-4ce2-9744-43ca49f4d68b",
      {
        "pageContent": "```json\n{\n    \"id\": 2053,\n    \"sku\": \"new-grouped\",\n    \"name\": \"New Grouped Product\",\n    \"attribute_set_id\": 11,\n    \"status\": 1,\n    \"visibility\": 4,\n    \"type_id\": \"grouped\",\n    \"created_at\": \"2019-08-15 17:51:13\",\n    \"updated_at\": \"2019-08-15 17:51:13\",\n    \"extension_attributes\": {\n        \"website_ids\": [\n            1\n        ],\n        \"stock_item\": {\n            \"item_id\": 2053,\n            \"product_id\": 2053,\n            \"stock_id\": 1,\n            \"qty\": 0,\n            \"is_in_stock\": false,\n            \"is_qty_decimal\": false,\n            \"show_default_notification_message\": false,\n            \"use_config_min_qty\": true,\n            \"min_qty\": 0,\n            \"use_config_min_sale_qty\": 1,\n            \"min_sale_qty\": 1,\n            \"use_config_max_sale_qty\": true,\n            \"max_sale_qty\": 10000,\n            \"use_config_backorders\": true,\n            \"backorders\": 0,\n            \"use_config_notify_stock_qty\": true,\n            \"notify_stock_qty\": 1,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 52, "to": 84 } }
        }
      }
    ],
    [
      "a337b8d6-87d1-4554-af65-48d8d8240bc9",
      {
        "pageContent": "\"use_config_qty_increments\": true,\n            \"qty_increments\": 0,\n            \"use_config_enable_qty_inc\": true,\n            \"enable_qty_increments\": false,\n            \"use_config_manage_stock\": true,\n            \"manage_stock\": true,\n            \"low_stock_date\": null,\n            \"is_decimal_divided\": false,\n            \"stock_status_changed_auto\": 0\n        }\n    },\n    \"product_links\": [],\n    \"options\": [],\n    \"media_gallery_entries\": [],\n    \"tier_prices\": [],\n    \"custom_attributes\": [\n        {\n            \"attribute_code\": \"options_container\",\n            \"value\": \"container2\"\n        },\n        {\n            \"attribute_code\": \"url_key\",\n            \"value\": \"new-grouped-product\"\n        },\n        {\n            \"attribute_code\": \"required_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"has_options\",\n            \"value\": \"0\"\n        },\n        {\n            \"attribute_code\": \"category_ids\",\n            \"value\": []",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 85, "to": 119 } }
        }
      }
    ],
    [
      "ffe92081-5d7a-4221-8dd9-b1307f121d3c",
      {
        "pageContent": "}\n    ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 120, "to": 123 } }
        }
      }
    ],
    [
      "21958f14-fdb0-4520-a12e-e6c5904d43c8",
      {
        "pageContent": "## 2. Populate the grouped product with simple products\n\nNow that we have created a grouped product, we need to add simple items to it. In this example, we add three types of backpacks.\n\n### Endpoint\n\n`POST V1/products/new-grouped/links`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 125, "to": 131 } }
        }
      }
    ],
    [
      "0a4bfc3f-cfe0-4f14-9aad-8642c963c2bd",
      {
        "pageContent": "### Payload\n\n```json\n    {\n       \"items\":[\n          {\n             \"sku\":\"new-grouped\",\n             \"link_type\":\"associated\",\n             \"linked_product_sku\":\"24-WB01\",\n             \"linked_product_type\":\"simple\",\n             \"position\":1,\n             \"extension_attributes\":{\n                \"qty\":1\n             }\n          },\n          {\n             \"sku\":\"new-grouped\",\n             \"link_type\":\"associated\",\n             \"linked_product_sku\":\"24-WB02\",\n             \"linked_product_type\":\"simple\",\n             \"position\":2,\n             \"extension_attributes\":{\n                \"qty\":1\n             }\n          },\n          {\n             \"sku\":\"new-grouped\",\n             \"link_type\":\"associated\",\n             \"linked_product_sku\":\"24-WB05\",\n             \"linked_product_type\":\"simple\",\n             \"position\":3,\n             \"extension_attributes\":{\n                \"qty\":1\n             }\n          }\n       ]\n    }\n```\n\n### Response\n\n`true`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 133, "to": 174 } }
        }
      }
    ],
    [
      "bbf0e638-f850-4d29-8133-8b386ca4fdaf",
      {
        "pageContent": "## 3. Add another simple product to the grouped product\n\nThis step uses the `PUT /V1/products/new-grouped/links` endpoint to add an item to the grouped product.\n\n### Endpoint\n\n`PUT /V1/products/new-grouped/links`\n\n### Payload\n\n```json\n    {\n       \"entity\":{\n          \"sku\":\"new-grouped\",\n          \"link_type\":\"associated\",\n          \"linked_product_sku\":\"24-UG01\",\n          \"linked_product_type\":\"simple\",\n          \"position\":4,\n          \"extension_attributes\":{\n             \"qty\":1\n          }\n       }\n    }\n```\n\n### Response\n\n`true`\n\n<InlineAlert variant=\"success\" slots=\"text\"/>\n\nYou also can use the `DELETE` endpoint to delete a simple product from the group product:\n`DELETE /V1/products/{sku}/links/{type}/{linkedProductSku}`\n\n## Verify the steps\n\n1. Log into the Admin.\n1. Select **Catalog > Products**.\n1. Click on the **New Grouped Product** grouped product and expand the **Grouped Products** section.\n\n  ![New grouped product](../../../_images/new-grouped-product.png)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 176, "to": 216 } }
        }
      }
    ],
    [
      "ead8549c-8d21-4b89-9aa1-5ef169e5d54f",
      {
        "pageContent": "## Add a grouped product to a cart\n\nCustomers can now add this grouped products to their carts, as shown below.\n\nRefer to the [Order processing tutorial](/rest/tutorials/orders/) for more information about how to add items to a cart with REST.\n\n### Endpoint\n\n`POST /V1/carts/mine/items`\n\n### Payload\n\n```json\n{\n \"cartItem\": {\n   \"sku\": \"new-grouped\",\n   \"qty\": 1,\n   \"quote_id\": \"3\"\n   }\n}\n```\n\n### Response\n\n```json\n{\n   \"item_id\": 5,\n   \"sku\": \"24-WB01\",\n   \"qty\": 1,\n   \"name\": \"Voyage Yoga Bag\",\n   \"price\": 32,\n   \"product_type\": \"grouped\",\n   \"quote_id\": \"3\"\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/grouped-product/index.md",
          "loc": { "lines": { "from": 218, "to": 252 } }
        }
      }
    ],
    [
      "ee08be1a-edbd-447d-9d18-b6fa28501957",
      {
        "pageContent": "---\ntitle: Step 4. Delete an image \ndescription: We will learn how to delete an existing image.\ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/\nkeywords:\n  - REST\n--- \n\n# Step 4. Delete an image\n\nIn this step, we will delete an image from a SKU. In this example, we'll use the image `id` of `695`. Use the [list API call](../image/list.md) to see image IDs for your SKU.\n\nRun the following command to delete an image from the specified SKU:\n\n**Endpoint:**\n\n```html\nDELETE http://domain.com/rest/default/V1/products/MJ03/media/695\n```\n\nThe payload must be empty.\n\n**Response:**\n\n```json\ntrue\n```\n\nThe request might take 30 seconds or so depending on the host.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/delete.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "f12c07e9-332b-45c1-a6a6-0740a7e85007",
      {
        "pageContent": "## Verify this step\n\nRefresh the `MJ03` product page and see if your image was deleted.\n\n![Deleted Image](../../../_images/delete-image-frontend.png).\n\nYou can re-run this call to verify that the image can no longer be found. You should receive the following message: `No image with the provided ID was found. Verify the ID and try again`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/delete.md",
          "loc": { "lines": { "from": 32, "to": 38 } }
        }
      }
    ],
    [
      "7f138024-5ad2-4963-ad49-9d63f79c6f8a",
      {
        "pageContent": "---\ntitle: Manage product images tutorial\ndescription: We will learn how to add, list, update and delete product images.\ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/\nkeywords:\n  - REST\n--- \n \n# Add and manage product images tutorial\n\nThis tutorial demonstrates how to use the Adobe Commerce REST APIs to:\n\n1. [List all available images](list.md)\n\n1. [Add an image to a product](new.md)\n\n1. [Update an existing image with a new one](update.md)\n\n1. [Delete an image](delete.md)\n\nThis **4-step tutorial** generally takes **30 minutes**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/index.md",
          "loc": { "lines": { "from": 1, "to": 22 } }
        }
      }
    ],
    [
      "366c95a3-108a-4d4b-a859-79f72dad2893",
      {
        "pageContent": "## Before you begin\n\n*  Install an Adobe Commerce instance with [sample data](https://experienceleague.adobe.com/docs/commerce-operations/installation-guide/next-steps/sample-data/overview.html?lang=en) or use Adobe Commerce Cloud with [sample data (cloud)](https://experienceleague.adobe.com/docs/commerce-cloud-service/user-guide/develop/test/sample-data.html).\n\n*  Install a REST client, such as Postman.\n\n*  Generate an [admin access token](../../../get-started/authentication/gs-authentication-token.md), which will we will use to make image managing API calls.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/index.md",
          "loc": { "lines": { "from": 24, "to": 30 } }
        }
      }
    ],
    [
      "3b51fbee-b542-46a7-985d-eb1fb3343072",
      {
        "pageContent": "---\ntitle: Step 1. Getting a list of product images \ndescription: We will learn how to get a list of all product images.\ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/\nkeywords:\n  - REST\n--- \n\n# Step 1. Get a list of product images\n\nIn this step, we will get all image information for the product with SKU `MJ03`.\n\nRun the following command to list all images for the specified SKU:\n\n**Endpoint:**\n\n`GET http://domain.com/rest/default/V1/products/MJ03/media`\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/list.md",
          "loc": { "lines": { "from": 1, "to": 20 } }
        }
      }
    ],
    [
      "50e0a8c7-a2c3-4a6d-8031-732f07943b1e",
      {
        "pageContent": "**Response:**\n\n```json\n[\n    {\n        \"id\": 694,\n        \"media_type\": \"image\",\n        \"label\": \"\",\n        \"position\": 1,\n        \"disabled\": false,\n        \"types\": [\n            \"image\",\n            \"small_image\",\n            \"thumbnail\"\n        ],\n        \"file\": \"/m/j/mj03-black_main_1.jpg\"\n    },\n    {\n        \"id\": 695,\n        \"media_type\": \"image\",\n        \"label\": \"\",\n        \"position\": 2,\n        \"disabled\": false,\n        \"types\": [],\n        \"file\": \"/m/j/mj03-black_alt1_1.jpg\"\n    },\n    {\n        \"id\": 696,\n        \"media_type\": \"image\",\n        \"label\": \"\",\n        \"position\": 3,\n        \"disabled\": false,\n        \"types\": [],\n        \"file\": \"/m/j/mj03-black_back_1.jpg\"\n    }\n]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/list.md",
          "loc": { "lines": { "from": 20, "to": 55 } }
        }
      }
    ],
    [
      "c86cf5f8-6aef-44d6-955c-4a02b037eda5",
      {
        "pageContent": "```\n\nWe will use the image `id` for later steps in this tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/list.md",
          "loc": { "lines": { "from": 56, "to": 58 } }
        }
      }
    ],
    [
      "a29914f7-5705-4dd1-bf89-d00830889822",
      {
        "pageContent": "## Verify this step\n\n1. On the storefront page, search for `MJ03`.\n\n1. Select the product in the search results.\n\n    ![Product](../../../_images/list-product-images.png)\n\n1. Confirm that the number of images in the storefront matches the number of images in your API response.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/list.md",
          "loc": { "lines": { "from": 60, "to": 68 } }
        }
      }
    ],
    [
      "0e803206-4e14-4eab-bcd4-cbde29b8a0ba",
      {
        "pageContent": "---\ntitle: Step 2. Add a new image \ndescription: We will learn how to add a new image to a product.\ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/\nkeywords:\n  - REST\n---\n\n# Step 2. Add a new image\n\nIn this step, we will add the following image to the product with SKU `MJ03`.\n\n![New Image](../../../_images/api-new-image.png)\n\nWe need to convert this image into a `base64` string.\n\n1. Open a bash terminal and use the `base64` command to convert the image into `base64`.\n\n    Command:\n\n    ```bash\n    base64 -i ~/Desktop/new-image.png",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/new.md",
          "loc": { "lines": { "from": 1, "to": 23 } }
        }
      }
    ],
    [
      "88e4cd98-9e6a-4f63-9613-839fc4d37632",
      {
        "pageContent": "```\n\n    Response:\n\n    ```bash\n    iVBORw0KGgoAAAANSUhEUgAAAc4AAAFmCAYAAADkqXozAAAKrGlDQ1BJQ0MgUHJvZmlsZQAASImVlwdUU8kax+fem16AkBABKaE3QToBpITQQpcONkISIJQQA0HFriwu4FpQEcGKLooouBZA1oootkWxANYNsqgo62LBhsq7wCG4+85777zvnDnzu//7zTffzJm557sAUNX4UmkmrAZAliRXFhngw4pPSGThnwIyIAIacAYIX5Aj5UREhADUJvq/2/tOAI32t61HY/37+/9qNKEoRwAAFIFysjBHkIXycbS9EEhluQAgu1HdaEGudJRbUWbI0ARR7h7l1HEeGOXkMcaAMZ/oSC7KDAAIFD5flgoAhYXqrDxBKhqH4o2yrUQolqAsRdkzKytbiPIRlM1RH1SjjMZnJ38XJ/VvMZOVMfn8VCWPr2XMCL7iHGkmf9H/uR3/27Iy5RNzmKKNkiYLjER7dXTPujOyg5UsSQ4Ln2CxcMx/jNPkgTETLMjhJk6wkO8brBybGRYywSlif54yTi4veoJFOX5REyzLjlTOlSLjciaYL5ucV54Ro9TTRDxl/Py06LgJzhPHhk1wTkZU8KQPV6nL5JHK/EWSAJ/Jef2Va8/K+W69Yp5y..........[more characters]\n    ```\n\n1. Copy the `base64` string and use it in the following API call.\n\n**Endpoint:**\n\n```html\nPOST http://domain.com/rest/default/V1/products/MJ03/media\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/new.md",
          "loc": { "lines": { "from": 24, "to": 40 } }
        }
      }
    ],
    [
      "4bc2c728-82d4-4370-9175-a373516ed610",
      {
        "pageContent": "#### Payload\n\n```json\n{\n    \"entry\": {\n        \"media_type\": \"image\",\n        \"label\": \"Custom Image Number 1\",\n        \"position\": 1,\n        \"disabled\": false,\n        \"types\": [],\n        \"content\": {\n            \"base64_encoded_data\": \"iVBORw0KGgoAAAANSUhEUgAAAc4AAAFmCAYAAADkqXozAAAKrGlDQ1BJQ0MgUHJvZmlsZQAASImVlwdUU8kax+fem16AkBABKaE3QToBpITQQpcONkISIJQQA0HFriwu4FpQEcGKLooouBZA1oootkWxANYNsqgo62LBhsq7wCG4+85..........[more characters]\",\n            \"type\": \"image/png\",\n            \"name\": \"custom_image_1.png\"\n        }\n    }\n}\n```\n\n#### Response\n\n```json\n\"3418\"\n```\n\nThe request might take 30 seconds or so depending on the host.\n\nThe response provides the new image `id` for the added image.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/new.md",
          "loc": { "lines": { "from": 42, "to": 69 } }
        }
      }
    ],
    [
      "ca4eb777-553a-4e1e-8dae-602ed9b22cad",
      {
        "pageContent": "## Verify this step\n\nRefresh the `MJ03` product page and see if your new image was added.\n\n![New Product Image](../../../_images/api-frontend-new-image.png)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/new.md",
          "loc": { "lines": { "from": 71, "to": 75 } }
        }
      }
    ],
    [
      "6bc3c790-2f70-4df8-a16f-aca615761d21",
      {
        "pageContent": "---\ntitle: Step 3. Update an image \ndescription: We will learn how to update an existing image \ncontributor_name: Goivvy LLC\ncontributor_link: https://www.goivvy.com/\nkeywords:\n  - REST\n---\n\n# Step 3. Update an image\n\nIn this step, we will update an existing image with the `id` of `694`. We previously retrieved this `id` number in [Step 1. Getting a list of product images](list.md).\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nThe `id` on the sample data images might not match the `id` listed in this tutorial, refer back to the [list call](list.md) for information on how to get a list of images for a SKU.\n\n1. Using the following image, open a bash terminal and convert the image into `base64`:\n\n    ![New Image](../../../_images/update-new-image.png)\n\n    Command:\n\n    ```bash\n    base64 -i ~/update-new-image.png",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/update.md",
          "loc": { "lines": { "from": 1, "to": 25 } }
        }
      }
    ],
    [
      "8b24de8f-3555-4443-b4a6-bcee28877457",
      {
        "pageContent": "```\n\n    Response:\n\n    ```bash\n    iVBORw0KGgoAAAANSUhEUgAAARwAAAFICAYAAACC60EBAAAKrGlDQ1BJQ0MgUHJvZmlsZQAASImVlwdUU8kax+fem16AkBABKaE3QToBpITQQpcONkISIJQQA0HFriwu4FpQEcGKLooouBZA1oootkWxANYNsqgo62LBhsq7wCG4+85777zvnDnzu//7zTffzJm557sAUNX4UmkmrAZAliRXFhngw4pPSGThnwIyIAIacAYIX5Aj5....[more characters]\n    ```\n\n1. Make the following API call using the `base64-encoded` string.\n\n**Endpoint:**\n\n```html\nPUT http://domain.com/rest/default/V1/products/MJ03/media/694\n```\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/update.md",
          "loc": { "lines": { "from": 26, "to": 42 } }
        }
      }
    ],
    [
      "2a684c71-ad95-4955-9848-761bc10d2dcd",
      {
        "pageContent": "#### Payload",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/update.md",
          "loc": { "lines": { "from": 44, "to": 44 } }
        }
      }
    ],
    [
      "c557a10c-3b92-4185-a1e4-4d70cd53adb2",
      {
        "pageContent": "```json\n{\n    \"entry\": {\n        \"id\": 694,\n        \"media_type\": \"image\",\n        \"label\": \"Custom Image Number 2\",\n        \"position\": 1,\n        \"disabled\": false,\n        \"types\": [\n            \"image\",\n            \"small_image\",\n            \"thumbnail\"\n        ],\n        \"content\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/update.md",
          "loc": { "lines": { "from": 46, "to": 59 } }
        }
      }
    ],
    [
      "f093e8bc-bba9-40c9-bf85-2b5a05620c46",
      {
        "pageContent": "\"base64_encoded_data\": \"iVBORw0KGgoAAAANSUhEUgAAARwAAAFICAYAAACC60EBAAAKrGlDQ1BJQ0MgUHJvZmlsZQAASImVlwdUU8kax+fem16AkBABKaE3QToBpITQQpcONkISIJQQA0HFriwu4FpQEcGKLooouBZA1oootkWxANYNsqgo62LBhsq7wCG4+85777zvnDnzu//7zTffzJm557sAUNX4UmkmrAZAliRXFhngw4pPSGThnwIyIAIacAYIX5Aj5UREhADUJvq/2/tOAI32t61HY/37+/9qNKEoRwAAFIFysjBHkIXycbS9EEhluQAgu1HdaEGudJRbUWbI0ARR7h7l1HEeGOXkMcaAMZ/oSC7KDAAIFD5flgoAhYXqrDxBKhqH4o2yrUQolqAsRdkzKytbiPIRlM1RH1SjjMZnJ38XJ/VvMZOVMfn8VCWPr2XMCL7iHGkmf9H/uR3/27Iy5RNzmKKNkiYLjER7dXTPujOyg5UsSQ4Ln2CxcMx/jNPkgTETLMjhJk6wkO8brBybGRYywSlif54yTi4veoJFOX5REyzLjlTOlSLjciaYL5ucV54Ro9TTRDxl/Py06LgJzhPHhk1wTkZU8KQPV6nL5JHK/EWSAJ/Jef2Va8/K+W69Yp5ybG5adKBy7fzJ/EUSzmTMnHhlbkKRr9+kT4zSX5rro5xLmhmh9BdlBij1nLwo5dhc9EBOjo1Q7mE6PyhiggEXZINMtMkAC4SgT74A5IoW5o4uhJstXSQTp6blsjjoDROxeBKBzTSWva29PQCj93X8OLxljt1DiHl1UstqQo8xgt6RokkteRAAVAa01knN1BoA1a8AnFYI5LK8cW3sLmEBCagCBtACesAImANrYI9....[more characters]\",\n            \"type\": \"image/png\",\n            \"name\": \"custom_image_2.png\"",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/update.md",
          "loc": { "lines": { "from": 60, "to": 62 } }
        }
      }
    ],
    [
      "41f3d8b2-2a52-40cb-8fac-6612d175e27e",
      {
        "pageContent": "}\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/update.md",
          "loc": { "lines": { "from": 63, "to": 66 } }
        }
      }
    ],
    [
      "3d5eb66c-99f2-4f83-b34d-53b96238332b",
      {
        "pageContent": "#### Response\n\n```json\ntrue\n```\n\nThe request might take 30 seconds or so depending on the host.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/update.md",
          "loc": { "lines": { "from": 68, "to": 74 } }
        }
      }
    ],
    [
      "be0c2b04-bdae-4082-a726-079685141598",
      {
        "pageContent": "## Verify this step\n\nRefresh the `MJ03` product page and see if the existing image was updated.\n\n![Updated Image](../../../_images/update-image-frontend.png)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/image/update.md",
          "loc": { "lines": { "from": 76, "to": 80 } }
        }
      }
    ],
    [
      "7706027a-7a06-4820-9e79-da223df985c1",
      {
        "pageContent": "---\ntitle: REST tutorials\ndescription: A list of tutorials on the Commerce REST APIs\nkeywords:\n  - REST\n---\nimport * as Vars from '../../../data/vars.js';\n\n# Tutorials\n\nThe REST tutorials provide an introduction to Adobe Commerce web APIs. In general, the tutorials guide you through commonly-performed complex tasks:\n\n*  The [**order processing** tutorial](/rest/tutorials/orders/) demonstrates the lifecycle of an order. Major steps include creating a quote, converting it to an order, issuing an invoice, and shipping the order.\n\n*  The [**order processing with Inventory Management**](/rest/tutorials/inventory/index/) tutorial builds upon the original order processing tutorial. It also configures sources and stocks and other Inventory Management features.\n\n*  The [**configurable product** tutorial](/rest/tutorials/configurable-product/) helps you plan then create a configurable product and its component simple products.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/index.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "d308f61d-482c-4476-9bb9-48697d968ec3",
      {
        "pageContent": "*  The [**bulk API configurable product** tutorial](/rest/tutorials/bulk-configurable-product/) demonstrates how to create configurable products using bulk APIs.\n\n*  The [**grouped products** tutorial](/rest/tutorials/grouped-product/) demonstrates how to create and manage grouped products.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/index.md",
          "loc": { "lines": { "from": 19, "to": 21 } }
        }
      }
    ],
    [
      "b3726538-75c0-4906-a86a-06bb1081c910",
      {
        "pageContent": "## Complete these prerequisites\n\nBefore you begin any tutorial, make sure you know the basics about <Vars.sitedatavarce/>\n\n*  Install an Commerce instance with sample data.\n\n  The sample data defines a functional store, called Luma, that sells fitness clothing and accessories. The store does not provide any sandbox accounts for testing credit card payments, so transactions will be simulated using an offline payment method.\n\n*  Install a REST client. You can use any REST client to send calls to Commerce. [Postman](https://www.getpostman.com/) is recommended.\n\n*  Know how to construct a REST call in Commerce. See [Construct a request](/get-started/gs-web-api-request) for details.\n\n*  Find the Commerce REST API documentation. You can view the [static REST API documentation on devdocs](../quick-reference/index.md) or [generate a local API reference](/rest/use-rest/generate-local/).",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/index.md",
          "loc": { "lines": { "from": 23, "to": 35 } }
        }
      }
    ],
    [
      "8c1eb4fb-8b7e-4e9f-b7fc-f268ecc56000",
      {
        "pageContent": "*  Find the Commerce Merchant documentation. Refer to [Getting Started with <Vars.sitedatavarce/>](https://docs.magento.com/user-guide/getting-started.html) for information about the Luma store that is created when you install Commerce with the sample data.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/index.md",
          "loc": { "lines": { "from": 37, "to": 37 } }
        }
      }
    ],
    [
      "f344b067-95ae-4a1a-9b34-57dced6457ec",
      {
        "pageContent": "## Performing steps\n\nAlthough some steps require that you configure Commerce in some way, you perform most steps by sending one or more REST calls to Commerce. Each step that makes a REST call provides the following information:\n\n**Endpoint:**\n\nThis section lists the HTTP verb and full path to the endpoint. The basic structure of a REST call in Commerce is\n\n`<HTTP verb> http://<host>/rest/<scope>/<endpoint>`\n\nwhere:\n\nElement | Description\n--- | ---\n`HTTP verb` | One of `GET`, `POST`, `PUT`, or `DELETE`\n`host` | The hostname or IP address (and optionally, port) of the Commerce installation.\n`scope` | Specifies which store the call affects. In this tutorial, this value is `default`.\n`endpoint` | The full URI (Uniform Resource Identifier) to the endpoint. These values always start with `/V1`. For example, `/V1/orders/4`.\n\n**Scope:**\n\nThe **Scope:** section is included when the tutorial requires that you send requests to different stores.\n\n**HTTP headers:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/index.md",
          "loc": { "lines": { "from": 39, "to": 62 } }
        }
      }
    ],
    [
      "e4111d0f-f8ef-4c3b-82c8-c6fb1f376a07",
      {
        "pageContent": "**HTTP headers:**\n\nThis section indicates which key/value pairs you must specify in the HTTP headers. All calls require one or more HTTP headers.\n\n**Payload:**\n\nThis section lists the information that is sent to Commerce. All payload samples are valid and can be copied and pasted into your calls, but you might need to change the `id` values that Commerce returns.\n\n**Response:**\n\nThis section lists the information that Commerce sends to the REST client. These values are often referenced in other steps in the tutorial. The values Commerce returns might be different than the values listed in the examples provided in this tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/index.md",
          "loc": { "lines": { "from": 62, "to": 72 } }
        }
      }
    ],
    [
      "61c53828-460d-4c89-9567-35db73c122a0",
      {
        "pageContent": "---\ntitle: Step 4. Link stocks and sources\ndescription: In this step of the tutorial you will link stocks and sources together\nkeywords:\n  - Inventory\n  - REST\n---\n \n# Step 4. Link stocks and sources\n\nThis step links the sources we created in [Step 2. Create sources](/rest/tutorials/inventory/create-sources) with the stocks we created in [Step 3. Create stocks](/rest/tutorials/inventory/create-stock/).\n\nEach stock can be assigned one or more sources. Adobe Commerce uses these associations to calculate the virtual aggregated inventory per product.\n\n<InlineAlert variant=\"success\" slots=\"text\"/>\n\nYou must reindex and flush cache after performing this step.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/assign-source-to-stock.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "a0b053be-c1be-4fc1-aaa7-2248a253a704",
      {
        "pageContent": "## Assign the source\n\nTo link a source to a stock, you must specify the `source_code`, `stock_id`, and `priority` attributes. The `priority` value indicates where the source ranks in descending order. The Source Selection Algorithm uses this priority order when recommending order fulfillment. All added sources display in prioritized order in the Admin.\n\nThe `POST V1/inventory/stock-source-links` endpoint accepts an array of links, so we can link all the stocks and sources we created in the previous steps with a single call. The `stock_id` of \"North America Stock\" is `2`, and the `stock_id` of \"Europe Stock\" is `3`. The HQ source is assigned to both stocks.\n\nIn this example, we configure the Northeast warehouse to be the primary source for North America orders. The stores located in the New York City area are other available sources in North America. In Europe, the Leipzig warehouse is preferred, followed by the Berlin and Frankfurt stores. HQ is the last choice for both stocks.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/assign-source-to-stock.md",
          "loc": { "lines": { "from": 19, "to": 25 } }
        }
      }
    ],
    [
      "9f3533a4-dbc2-41a3-9a8d-e33d396ef588",
      {
        "pageContent": "**Endpoint:**\n\n`POST <host>/rest/default/V1/inventory/stock-source-links`\n\n**Scope:**\n\n`default` store views\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/assign-source-to-stock.md",
          "loc": { "lines": { "from": 27, "to": 41 } }
        }
      }
    ],
    [
      "e8fceb09-e36f-4880-8ed7-110cb253fa32",
      {
        "pageContent": "**Payload:**\n\n```json\n{\n   \"links\" : [\n      {\n         \"source_code\" : \"ne_wh\",\n         \"stock_id\" : 2,\n         \"priority\" : 1\n      },\n      {\n        \"source_code\" : \"west_wh\",\n        \"stock_id\" : 2,\n        \"priority\" : 2\n      },\n      {\n        \"source_code\" : \"brooklyn\",\n        \"stock_id\" : 2,\n        \"priority\" : 3\n      },\n      {\n        \"source_code\" : \"manhattan\",\n        \"stock_id\" : 2,\n        \"priority\" : 4\n      },\n      {\n        \"source_code\" : \"huntington\",\n        \"stock_id\" : 2,\n        \"priority\": 5\n      },\n      {\n        \"source_code\" : \"berkeley\",\n        \"stock_id\" : 2,\n        \"priority\" : 6\n      },\n      {\n         \"source_code\" : \"sausalito\",\n         \"stock_id\" : 2,\n         \"priority\" : 7\n      },\n      {\n        \"source_code\" : \"hq\",\n        \"stock_id\" : 2,\n        \"priority\" : 8\n      }\n   ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/assign-source-to-stock.md",
          "loc": { "lines": { "from": 41, "to": 87 } }
        }
      }
    ],
    [
      "199b6d5b-fe40-414b-8561-f417435ef66a",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returns empty array.\n\n[]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/assign-source-to-stock.md",
          "loc": { "lines": { "from": 88, "to": 94 } }
        }
      }
    ],
    [
      "d83d9040-dd36-48c7-a87b-0776b83ed889",
      {
        "pageContent": "## Reindex and flush cache\n\n**Required:** After you have assigned a source to stock, use the following command to perform a full reindex and flush the cache. This is required!\n\n```bash\nbin/magento indexer:reindex && bin/magento cache:flush\n```\n\n### Verify this step\n\nIn Admin, click **Stores** > Inventory > **Stocks**. The **Assign Sources** column lists the linked sources for each stock.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/assign-source-to-stock.md",
          "loc": { "lines": { "from": 96, "to": 106 } }
        }
      }
    ],
    [
      "8dabe0df-8aaf-4033-9fd9-5e0396f03206",
      {
        "pageContent": "---\ntitle: Step 13. Bulk transfer products\ndescription: In this step of the tutorial you will transfer products in bulk\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 13. Bulk transfer products\n\nThe Northeast warehouse is out of stock of Voyage Yoga Bags (`24-WB01`). In this step, we'll bulk transfer all of the stock from the Huntington store to the Northeast warehouse. As a result, the product cannot be shipped from that store. We will also transfer five bags from the Sausalito store to the West warehouse.\n\nIn this scenario, there are no pending orders that contain the product, nor is the product on back-order. In production, make sure that you fulfill any pending orders before you bulk transfer a product. You might want to remove the product from the European website before performing the bulk transfer.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/bulk-transfer-products.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "9793211b-7b4e-4567-92fa-c484d73f99c9",
      {
        "pageContent": "## Bulk transfer the product from the Huntington store to the Northeast warehouse\n\nThe `POST /V1/inventory/bulk-product-source-transfer` endpoint allows you to specify an array of SKUs to bulk transfer from one source to another, but this example includes only one SKU. If you set the `unassignFromOrigin` attribute to `true`, the origin source is no longer associated with the specified products. If the attribute is `false`, Adobe Commerce designates the products as being out of stock at the origin source with a quantity of 0.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/inventory/bulk-product-source-transfer`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**\n\n```json\n{\n  \"skus\": [\n    \"24-WB01\"\n  ],\n  \"originSource\": \"huntington\",\n  \"destinationSource\": \"ne_wh\",\n  \"unassignFromOrigin\": false\n}\n```\n\n**Response:**\n\n`true`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/bulk-transfer-products.md",
          "loc": { "lines": { "from": 15, "to": 48 } }
        }
      }
    ],
    [
      "f24905a1-b9d0-4104-81c1-4fb7aec7faff",
      {
        "pageContent": "## Partially transfer the product from Sausalito to the West warehouse\n\nUse the `bulk-partial-source-transfer endpoint` to transfer a portion of in-stock units from one source to another.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/inventory/bulk-partial-source-transfer`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**\n\n```json\n{\n  \"originSourceCode\": \"sausalito\",\n  \"destinationSourceCode\": \"west_wh\",\n  \"items\": [\n    {\n      \"sku\": \"24-WB01\",\n      \"qty\": 5\n    }\n  ]\n}\n```\n\n**Response:**\n\nAn empty array.\n\n[]\n\n## Verify this step\n\nIn Admin, click **Catalog** > **Products**. Scroll down to the Driven Backpack row and note the new quantities.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/bulk-transfer-products.md",
          "loc": { "lines": { "from": 50, "to": 91 } }
        }
      }
    ],
    [
      "1c08d3b6-21d4-4d10-b446-0998a0231499",
      {
        "pageContent": "---\ntitle: Step 1. Configure your environment\ndescription: In this step of the tutorial you will configure your environment\nkeywords:\n  - Inventory\n  - REST\n--- \n\n# Step 1. Configure your environment\n\nThis step guides you through the process of configuring your Adobe Commerce instance so that you can perform the Order Processing with Inventory Management tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/configure-environment.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "fa2dc0e4-01ec-44db-8345-4554988f531b",
      {
        "pageContent": "## Configure payment and delivery methods\n\nFor this tutorial, we'll assume that payment and delivery methods are configured globally. You can also make configuration changes at the website or store view level.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/configure-environment.md",
          "loc": { "lines": { "from": 13, "to": 15 } }
        }
      }
    ],
    [
      "b369d601-5ebd-43b1-abea-90fc1d29d868",
      {
        "pageContent": "### Set the payment method\n\nIf an order contains one or more physical products, then the customer must either specify a delivery method or select a location for in-store pickup. Downloadable items cannot be shipped, and Magento does not calculate shipping charges for downloadable items.\n\nSince we are not actually shipping any products in this tutorial, we do not need to set up an account with a shipping company such as UPS or Federal Express. Instead, we can use the offline delivery methods that are configured by default.\n\nShipping type | Configuration name | Enabled by default?\n--- | --- | ---\nFlat rate | `flatrate` | Yes\nTable rate | `tablerate` | Yes\nFree shipping | `freeshipping` | No\nIn-store pickup | `pickup`| No\n\nTo change which offline delivery methods are available:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/configure-environment.md",
          "loc": { "lines": { "from": 17, "to": 30 } }
        }
      }
    ],
    [
      "8a7c1f5a-1ae0-484d-9677-e73f3823285c",
      {
        "pageContent": "1. Select **Stores** > **Settings** > **Configuration** > **Sales** > **Delivery Methods** in Admin.\n1. Enable the In-store pickup delivery method and adjust the status of any other delivery method, as desired.\n1. Click **Save Config**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/configure-environment.md",
          "loc": { "lines": { "from": 32, "to": 34 } }
        }
      }
    ],
    [
      "11883c1a-fad6-40db-bbaf-b0487fb19e59",
      {
        "pageContent": "### Configure supported delivery methods\n\nSince the Luma store is for demonstration purposes only, it is not set up to handle credit card payments. However, it can simulate any of the following offline payment methods:\n\nPayment type | Configuration name | Enabled by default?\n--- | --- | ---\nCheck/Money Order | `checkmo` | Yes\nBank Transfer Payment | `banktransfer` | No\nCash on Delivery | `cashondelivery` | No\nPurchase Order | `purchaseorder` | No\nZero Subtotal Checkout | `free` | Yes\n\nIn this tutorial, configure Magento to accept bank transfer payments. To allow bank transfer payments (or any other offline payment method) as a payment method:\n\n1. Log in to Admin and select **Stores** > **Settings** > **Configuration** > **Sales** > **Payment Methods**.\n1. Enable the payment method.\n1. Click **Save Config**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/configure-environment.md",
          "loc": { "lines": { "from": 36, "to": 52 } }
        }
      }
    ],
    [
      "edfefb47-9462-49a4-b17b-f3d242c8fa13",
      {
        "pageContent": "### Configure distance calculations\n\nThis tutorial uses an offline method to calculate distances for shipping and in-store pickup.\n\n1. Set the **Stores** > Settings > **Catalog** > **Inventory** > **Distance Provider for Distance Based SSA** > **Provider** field to **Offline calculation**.\n\n1. Run the following command to import US geocodes:\n\n   `bin/magento inventory-geonames:import us`\n\n   [Inventory CLI reference](https://experienceleague.adobe.com/docs/commerce-admin/inventory/cli.html#import-geocodes) provides additional information about this command.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/configure-environment.md",
          "loc": { "lines": { "from": 54, "to": 64 } }
        }
      }
    ],
    [
      "e26d1dda-231b-46f1-af46-6c4ae6cafbb6",
      {
        "pageContent": "## Deactivate a cart price rule\n\nBy default, the Luma store includes a promotion where shipping is free if you spend at least $50. Since this tutorial shows shipping calculations, we need to deactivate this promotion. The promotion is defined in a cart price rule, which is also known as a sales rule. When you deactivate the cart price rule, shipping is charged at a flat rate of $5 per item.\n\nTo disable this cart price rule, select **Marketing** > Promotions > **Cart Price Rules**. Then edit rule ID 2 (Spend $50 or more - shipping is free!), and toggle the Active switch to No. Be sure to save the change.\n\n## Flush the cache\n\nRun the following command to cache the changes in configuration.\n\n```bash\nbin/magento cache:flush\n```\n\n## Verify this step\n\nClick **Stores** > Settings > **All Stores**. The websites, stores, and store views are displayed in the grid.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/configure-environment.md",
          "loc": { "lines": { "from": 66, "to": 82 } }
        }
      }
    ],
    [
      "a7bb7cf0-b162-4c3f-8cf6-e20de9ff6d55",
      {
        "pageContent": "---\ntitle: Step 7. Create a cart and add products to it\ndescription: In this step of the tutorial you will create a card and add products\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 7. Create a cart and add products to it\n\nNext, we'll create a cart and add the items that we modified in [Step 5. Reassign products to custom sources](./reassign-products-to-another-source.md).\n\n## Create a cart\n\nThe call to create a cart and add items must contain the customer's authorization token in the authorization header.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer_token>`\n\n**Payload:**\n\nNone\n\n**Response:**\n\nThe response is the `quoteId`: 3",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 1, "to": 37 } }
        }
      }
    ],
    [
      "6bf20f63-2e44-4aba-9b8e-377100982595",
      {
        "pageContent": "## Check for product availability\n\nIn [Step 5. Reassign products to custom sources](./reassign-products-to-another-source.md), we defined the quantities of products `24-WB01` and `24-WB03` for the US source as follows:\n\nProduct | Northeast Warehouse | Brooklyn Store  | Manhattan Store | Long Island Store | West Warehouse | Berkeley Store | Sausalito Store\n--- | --- | --- | ---\n`24-WB01` | 35 | 10 | 10 | 10 | 15 | 10 | 10\n`24-WB03` | 50 | 0 | 0 | 0 | 10 | 20 | 20\n\nLater in this step, we'll order 40 `24-WB01` items and 20 `24-WB03` items. We can see that we have enough salable items for both products, but let's check programmatically.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 39, "to": 48 } }
        }
      }
    ],
    [
      "937f1d56-d597-4fe4-8bbd-fd31d689ea0d",
      {
        "pageContent": "### Check for product `24-WB01`\n\nThe `get-product-salable-quantity` endpoint indicates how many items are available for sale for the specified product (24-WB01) and source (2).\n\n**Endpoint:**\n\n`GET <host>/rest/default/V1/inventory/get-product-salable-quantity/24-WB01/2`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**\n\nNot applicable\n\n**Response:**\n\n`100`\n\n### Check for product `24-WB03`\n\nUse the same endpoint to check the quantity available for product `24-WB03`.\n\n**Endpoint:**\n\n`GET <host>/rest/default/V1/inventory/get-product-salable-quantity/24-WB03/2`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**\n\nNot applicable\n\n**Response:**\n\n`100`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 50, "to": 100 } }
        }
      }
    ],
    [
      "f5578101-373c-4a5a-90fd-c1eb0947a21d",
      {
        "pageContent": "## Add items to the cart\n\nWe have ensured that we have enough physical products in stock to fulfill the potential order.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 102, "to": 104 } }
        }
      }
    ],
    [
      "e1244327-42ad-4e9c-bc5f-652efcf6d3af",
      {
        "pageContent": "### Add the first simple product\n\nIn this call, we'll add 20 `24-WB03` items. This portion of the order can be fulfilled from the Northeast warehouse.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine/items`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer_token>`\n\n**Payload:**\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"24-WB03\",\n    \"qty\": 20,\n    \"quote_id\": \"3\"\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 106, "to": 133 } }
        }
      }
    ],
    [
      "318a8e4f-41c1-4b99-9ad0-dad71e22d5a7",
      {
        "pageContent": "```\n\n**Response:**\n\nNote the `item_id` for use in subsequent steps.\n\nThe discount is a result of the \"20% OFF Every $200-plus purchase!\" cart price rule.\n\n```json\n{\n    \"item_id\": 5,\n    \"sku\": \"24-WB03\",\n    \"qty\": 20,\n    \"name\": \"Driven Backpack\",\n    \"price\": 36,\n    \"product_type\": \"simple\",\n    \"quote_id\": \"3\",\n    \"extension_attributes\": {\n        \"discounts\": [\n            {\n                \"discount_data\": {\n                    \"amount\": 144,\n                    \"base_amount\": 144,\n                    \"original_amount\": 144,\n                    \"base_original_amount\": 144\n                },\n                \"rule_label\": \"Discount\",\n                \"rule_id\": 3\n            }\n        ]\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 134, "to": 166 } }
        }
      }
    ],
    [
      "ec0b6797-bc5a-4fbd-b24a-b43df2f56b58",
      {
        "pageContent": "### Add the second simple product\n\nUse the same endpoint to add 40 items of `24-WB01` to the cart. Multiple sources will be required to fulfill this potential order.\n\n**Payload:**\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"24-WB01\",\n    \"qty\": 40,\n    \"quote_id\": \"3\"\n  }\n}\n```\n\n**Response:**\n\nNote the `item_id` for use in subsequent steps.\n\n```json\n{\n    \"item_id\": 6,\n    \"sku\": \"24-WB01\",\n    \"qty\": 40,\n    \"name\": \"Voyage Yoga Bag\",\n    \"price\": 32,\n    \"product_type\": \"simple\",\n    \"quote_id\": \"3\",\n    \"extension_attributes\": {\n        \"discounts\": [\n            {\n                \"discount_data\": {\n                    \"amount\": 256,\n                    \"base_amount\": 256,\n                    \"original_amount\": 256,\n                    \"base_original_amount\": 256\n                },\n                \"rule_label\": \"Discount\",\n                \"rule_id\": 3\n            }\n        ]\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 168, "to": 212 } }
        }
      }
    ],
    [
      "28895c1b-c0c0-42c6-a45b-de0408571196",
      {
        "pageContent": "### Add a downloadable product\n\nFinally, we'll add a single instance of a downloadable product to the cart.\n\n**Payload:**\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"240-LV06\",\n    \"qty\": 1,\n    \"quote_id\": \"3\"\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 214, "to": 227 } }
        }
      }
    ],
    [
      "53b425cb-e333-48e1-b8c3-cabdf40f1e00",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n    \"item_id\": 7,\n    \"sku\": \"240-LV06\",\n    \"qty\": 1,\n    \"name\": \"Yoga Adventure\",\n    \"price\": 22,\n    \"product_type\": \"downloadable\",\n    \"quote_id\": \"3\",\n    \"product_option\": {\n        \"extension_attributes\": {\n            \"downloadable_option\": {\n                \"downloadable_links\": [\n                    3\n                ]\n            }\n        }\n    },\n    \"extension_attributes\": {\n        \"discounts\": [\n            {\n                \"discount_data\": {\n                    \"amount\": 4.4,\n                    \"base_amount\": 4.4,\n                    \"original_amount\": 4.4,\n                    \"base_original_amount\": 4.4\n                },\n                \"rule_label\": \"Discount\",\n                \"rule_id\": 3\n            }\n        ]\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 228, "to": 264 } }
        }
      }
    ],
    [
      "4b248bd0-d511-4d55-9e39-b07208282202",
      {
        "pageContent": "## Verify this step\n\nSign in as the customer at `http://<host>` and click on the shopping cart. All the items you added display in the cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-cart-add-products.md",
          "loc": { "lines": { "from": 266, "to": 268 } }
        }
      }
    ],
    [
      "5fef4132-6322-4758-8179-529f744587be",
      {
        "pageContent": "---\ntitle: Step 6. Create a customer and generate a customer token\ndescription: In this step of the tutorial you will create a customer and generate a customer token\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 6. Create a customer and generate a customer token\n\nThis step creates a customer that lives close to several stores that serve as in-store pickup locations. Although this tutorial ships the order using a traditional shipping method, the GraphQL tutorial shows how in-store pickup can be implemented.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-customer.md",
          "loc": { "lines": { "from": 1, "to": 11 } }
        }
      }
    ],
    [
      "9aeb125e-5dba-4ad0-a6ec-228c12a2c867",
      {
        "pageContent": "## Create a customer\n\nIf you prefer to use a customer that is already defined on your installation, scroll down to [Generate the customer's access token](#generate-the-customers-access-token).\n\nThe response of the `POST /V1/customers` endpoint includes an address ID. This value will be used in a later step.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/customers`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-customer.md",
          "loc": { "lines": { "from": 13, "to": 33 } }
        }
      }
    ],
    [
      "1fa17701-daef-4465-9783-5df2cadfb19f",
      {
        "pageContent": "**Payload:**\n\n```json\n{\n   \"customer\" : {\n      \"lastname\" : \"Doe\",\n      \"firstname\" : \"Jane\",\n      \"email\" : \"jdoe@example.com\",\n      \"addresses\" : [\n         {\n            \"defaultBilling\" : true,\n            \"defaultShipping\" : true,\n            \"firstname\" : \"Jane\",\n            \"lastname\" : \"Doe\",\n            \"region\" : {\n               \"regionCode\" : \"NY\",\n               \"regionId\" : 43,\n               \"region\" : \"New York\"\n            },\n            \"countryId\" : \"US\",\n            \"postcode\" : \"11501\",\n            \"city\" : \"Mineola\",\n            \"street\" : [\n               \"160 1st St.\"\n            ],\n            \"telephone\" : \"516-555-1111\"\n         }\n      ]\n   },\n   \"password\" : \"Password1\"\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-customer.md",
          "loc": { "lines": { "from": 33, "to": 63 } }
        }
      }
    ],
    [
      "6ae49ff6-92d8-4f7e-bee5-ec2a4350d753",
      {
        "pageContent": "```\n\n**Response:**\n\nThe customer `id` is `2`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-customer.md",
          "loc": { "lines": { "from": 64, "to": 68 } }
        }
      }
    ],
    [
      "bc52d192-1498-4912-8d07-8e3ccc1e0c8a",
      {
        "pageContent": "```json\n{\n    \"id\": 2,\n    \"group_id\": 1,\n    \"default_billing\": \"2\",\n    \"default_shipping\": \"2\",\n    \"created_at\": \"2020-07-22 23:12:47\",\n    \"updated_at\": \"2020-07-22 23:13:15\",\n    \"created_in\": \"Default Store View\",\n    \"email\": \"jdoe@example.com\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"store_id\": 1,\n    \"website_id\": 1,\n    \"addresses\": [\n        {\n            \"id\": 2,\n            \"customer_id\": 2,\n            \"region\": {\n                \"region_code\": \"NY\",\n                \"region\": \"New York\",\n                \"region_id\": 43\n            },\n            \"region_id\": 43,\n            \"country_id\": \"US\",\n            \"street\": [\n                \"160 1st St.\"\n            ],\n            \"telephone\": \"516-555-1111\",\n            \"postcode\": \"11501\",\n            \"city\": \"Mineola\",\n            \"firstname\": \"Jane\",\n            \"lastname\": \"Doe\",\n            \"default_shipping\": true,\n            \"default_billing\": true\n        }\n    ],\n    \"disable_auto_group_change\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-customer.md",
          "loc": { "lines": { "from": 70, "to": 107 } }
        }
      }
    ],
    [
      "8f9d68ba-8142-42ce-8ea7-72b80c0328df",
      {
        "pageContent": "\"extension_attributes\": {\n        \"is_subscribed\": false\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-customer.md",
          "loc": { "lines": { "from": 108, "to": 112 } }
        }
      }
    ],
    [
      "5e385a04-9eb1-4dc7-b0c0-beba038bd92d",
      {
        "pageContent": "## Generate the customer's access token\n\nTo generate a customer's access token, you must specify the customer's username and password in the payload. You do not specify an admin authorization token.\n\nBy default, a customer token is valid for 1 hour. To change this value, click **Stores** > Settings > **Configuration** > **Services** > **OAuth** > **Access Token Expiration**. Then enter a new value for **Customer Token Lifetime (hours)**.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/integration/customer/token`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n**Payload:**\n\n```json\n{\n\"username\": \"jdoe@example.com\",\n\"password\": \"Password1\"\n}\n```\n\n**Response:**\n\nAdobe Commerce returns the customer's access token. Your integration must specify a customer token in the authorization header of every call customers make on their own behalf.\n\n`fl0o0yr1xota4w88negpwfsle38807yb`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-customer.md",
          "loc": { "lines": { "from": 114, "to": 145 } }
        }
      }
    ],
    [
      "2a1bc63a-cb4a-4c14-b1c6-1579c674fcb8",
      {
        "pageContent": "## Verify this step\n\n1. Log in to the Test website using the email `jdoe@example.com` and password `Password1`.\n1. Click the account name (Jane) in the upper right corner and select **My Account**.\n1. Click **Address Book** to view the default billing and shipping addresses.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-customer.md",
          "loc": { "lines": { "from": 147, "to": 151 } }
        }
      }
    ],
    [
      "c3bc68d1-79e8-4764-8ea1-1198acd2bdb5",
      {
        "pageContent": "---\ntitle: Step 10. Create an invoice\ndescription: In this step of the tutorial you will create an invoice\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 10. Create an invoice\n\nYou create an invoice after you receive payment for an order. In this example, the order was paid offline via a bank transfer. Therefore, you must tell Adobe Commerce that payment for the order has been captured.\n\nAfter you submit the invoice, Commerce adjusts the Quantity per Source value for non-physical products.\n\n## Capture payment\n\nThis example creates a full invoice.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/order/3/invoice`\n\nwhere `3` is the `orderid`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin token>`\n\n**Payload:**\n\n```json\n{\n  \"capture\": true,\n  \"notify\": true\n}\n```\n\n**Response:**\n\nAn invoice `id`, such as `3`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-invoice.md",
          "loc": { "lines": { "from": 1, "to": 46 } }
        }
      }
    ],
    [
      "8f5fdefb-70ab-4333-9290-cf7bd7047713",
      {
        "pageContent": "## Retrieve the order item IDs\n\nWhen you create an order, Commerce generates an `order_item_id` for each product. These values will be used in [Step 12. Create a shipment](/rest/tutorials/inventory/create-shipment/).\n\n**Endpoint:**\n\n`GET <host>/rest/default/V1/invoices/3`\n\nwhere `3` is the invoice ID\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin token>`\n\n**Payload:**\n\nNot applicable\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-invoice.md",
          "loc": { "lines": { "from": 48, "to": 72 } }
        }
      }
    ],
    [
      "b2cc1fd0-6963-4573-b9a3-d9f0fb846511",
      {
        "pageContent": "```json\n{\n    \"base_currency_code\": \"USD\",\n    \"base_discount_amount\": -404.4,\n    \"base_grand_total\": 1917.6,\n    \"base_discount_tax_compensation_amount\": 0,\n    \"base_shipping_amount\": 300,\n    \"base_shipping_discount_tax_compensation_amnt\": 0,\n    \"base_shipping_incl_tax\": 300,\n    \"base_shipping_tax_amount\": 0,\n    \"base_subtotal\": 2022,\n    \"base_subtotal_incl_tax\": 2022,\n    \"base_tax_amount\": 0,\n    \"base_to_global_rate\": 1,\n    \"base_to_order_rate\": 1,\n    \"billing_address_id\": 6,\n    \"can_void_flag\": 0,\n    \"created_at\": \"2020-07-23 16:59:20\",\n    \"discount_amount\": -404.4,\n    \"email_sent\": 1,\n    \"entity_id\": 3,\n    \"global_currency_code\": \"USD\",\n    \"grand_total\": 1917.6,\n    \"discount_tax_compensation_amount\": 0,\n    \"increment_id\": \"000000003\",\n    \"order_currency_code\": \"USD\",\n    \"order_id\": 3,\n    \"shipping_address_id\": 5,\n    \"shipping_amount\": 300,\n    \"shipping_discount_tax_compensation_amount\": 0,\n    \"shipping_incl_tax\": 300,\n    \"shipping_tax_amount\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-invoice.md",
          "loc": { "lines": { "from": 74, "to": 105 } }
        }
      }
    ],
    [
      "37abfeef-eb45-4549-a4d4-510e57a2049f",
      {
        "pageContent": "\"state\": 2,\n    \"store_currency_code\": \"USD\",\n    \"store_id\": 1,\n    \"store_to_base_rate\": 0,\n    \"store_to_order_rate\": 0,\n    \"subtotal\": 2022,\n    \"subtotal_incl_tax\": 2022,\n    \"tax_amount\": 0,\n    \"total_qty\": 61,\n    \"updated_at\": \"2020-07-23 16:59:21\",\n    \"items\": [\n        {\n            \"base_discount_amount\": 144,\n            \"base_discount_tax_compensation_amount\": 0,\n            \"base_price\": 36,\n            \"base_price_incl_tax\": 36,\n            \"base_row_total\": 720,\n            \"base_row_total_incl_tax\": 720,\n            \"base_tax_amount\": 0,\n            \"discount_amount\": 144,\n            \"entity_id\": 3,\n            \"discount_tax_compensation_amount\": 0,\n            \"name\": \"Driven Backpack\",\n            \"parent_id\": 3,\n            \"price\": 36,\n            \"price_incl_tax\": 36,\n            \"product_id\": 12,\n            \"row_total\": 720,\n            \"row_total_incl_tax\": 720,\n            \"sku\": \"24-WB03\",\n            \"tax_amount\": 0,\n            \"order_item_id\": 3,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-invoice.md",
          "loc": { "lines": { "from": 106, "to": 137 } }
        }
      }
    ],
    [
      "cec495d7-58da-4aaa-bfbd-e3f84543e581",
      {
        "pageContent": "\"qty\": 20\n        },\n        {\n            \"base_discount_amount\": 256,\n            \"base_discount_tax_compensation_amount\": 0,\n            \"base_price\": 32,\n            \"base_price_incl_tax\": 32,\n            \"base_row_total\": 1280,\n            \"base_row_total_incl_tax\": 1280,\n            \"base_tax_amount\": 0,\n            \"discount_amount\": 256,\n            \"entity_id\": 4,\n            \"discount_tax_compensation_amount\": 0,\n            \"name\": \"Voyage Yoga Bag\",\n            \"parent_id\": 3,\n            \"price\": 32,\n            \"price_incl_tax\": 32,\n            \"product_id\": 8,\n            \"row_total\": 1280,\n            \"row_total_incl_tax\": 1280,\n            \"sku\": \"24-WB01\",\n            \"tax_amount\": 0,\n            \"order_item_id\": 4,\n            \"qty\": 40\n        },\n        {\n            \"base_discount_amount\": 4.4,\n            \"base_discount_tax_compensation_amount\": 0,\n            \"base_price\": 22,\n            \"base_price_incl_tax\": 22,\n            \"base_row_total\": 22,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-invoice.md",
          "loc": { "lines": { "from": 138, "to": 168 } }
        }
      }
    ],
    [
      "f736c717-1658-4a03-abad-1d83a9d11e72",
      {
        "pageContent": "\"base_row_total_incl_tax\": 22,\n            \"base_tax_amount\": 0,\n            \"discount_amount\": 4.4,\n            \"entity_id\": 5,\n            \"discount_tax_compensation_amount\": 0,\n            \"name\": \"Yoga Adventure\",\n            \"parent_id\": 3,\n            \"price\": 22,\n            \"price_incl_tax\": 22,\n            \"product_id\": 47,\n            \"row_total\": 22,\n            \"row_total_incl_tax\": 22,\n            \"sku\": \"240-LV06\",\n            \"tax_amount\": 0,\n            \"order_item_id\": 5,\n            \"qty\": 1\n        }\n    ],\n    \"comments\": []\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-invoice.md",
          "loc": { "lines": { "from": 169, "to": 189 } }
        }
      }
    ],
    [
      "984cac5a-791c-4430-945a-17b835d4859b",
      {
        "pageContent": "## Verify this step\n\n1. Click **Sales** > **Invoices**. The invoice displays in the grid with a status of Paid. Then click **Sales** > **Orders**. The status is Processing.\n\n1. Click **Catalog** > **Products**. For `vp1`, Commerce adjusted the value of **Quantity per Source** and **Salable Quantity** to 9998 for all sources and stocks.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-invoice.md",
          "loc": { "lines": { "from": 191, "to": 195 } }
        }
      }
    ],
    [
      "970f9623-4ab2-403b-9584-b11a8913173f",
      {
        "pageContent": "---\ntitle: Step 9. Create an order\ndescription: In this step of the tutorial you will create an order\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 9. Create an order\n\nThe shopping cart contains 71 items totaling $2462. The shipping charges are $350, making the grand total $2812. We're now ready to convert the quote to an order.\n\nWhen you create an order, Adobe Commerce enters reservations for the total amount of products. These reservations place a hold on that amount of inventory per stock, temporarily deducting the amount from the salable quantity. On the Products page of Admin, the **Salable Quantity** column accounts for reservations. When an order is shipped, Commerce updates the quantities in the **Quantity per Source** column.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-order.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "f6e0bed3-b6fb-426b-998a-2f4316cb717e",
      {
        "pageContent": "## Send payment information\n\nWhen you submit payment information, Commerce creates an order and sends an order confirmation to the customer. Since we are using an offline payment method in this tutorial, we do not need to provide detailed payment information. The endpoint used in this example requires only the payment method and billing address information.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine/payment-information`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer token>`\n\n**Payload:**\n\n```json\n{\n  \"paymentMethod\": {\n    \"method\": \"banktransfer\"\n  },\n  \"billing_address\": {\n    \"email\": \"jdoe@example.com\",\n    \"region\": \"New York\",\n    \"region_id\": 43,\n    \"region_code\": \"NY\",\n    \"country_id\": \"US\",\n    \"street\": [\"160 1st St.\"],\n    \"postcode\": \"11501\",\n    \"city\": \"Mineola\",\n    \"telephone\": \"516-555-1111\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\"\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-order.md",
          "loc": { "lines": { "from": 15, "to": 53 } }
        }
      }
    ],
    [
      "e38ba657-6f84-48d9-92bd-0c7aa0efc5f5",
      {
        "pageContent": "```\n\n**Response:**\n\nAn `orderID`, such as `3`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-order.md",
          "loc": { "lines": { "from": 54, "to": 58 } }
        }
      }
    ],
    [
      "b5e54e60-b279-465e-9e1f-1aae99258b3e",
      {
        "pageContent": "## Verify this step\n\n1. Log in to the US store as the customer. The dashboard shows the order.\n1. Log in to Admin. Click **Sales** > **Orders**. The order is displayed in the grid. Its status is Pending.\n1. Click **Catalog** > **Products**. The **Salable Quantity** column shows that fewer items of the ordered products are available. The values in the **Quantity per Source** are not affected until shipment.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-order.md",
          "loc": { "lines": { "from": 60, "to": 64 } }
        }
      }
    ],
    [
      "5fd6ba71-8026-4ee1-b06d-0117339be670",
      {
        "pageContent": "---\ntitle: Step 12. Create a shipment\ndescription: In this step of the tutorial you will create a shipment\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 12. Create a shipment\n\nIn the previous step, the SSA recommended shipping 35 `24-WB01` items and 20 `24-WB03` items from the Northeast warehouse. It also recommended shipping 5 `24-WB01` items from the West warehouse.\n\nYou can always override the SSA recommendations. It would be valid, for example, to ship 25 `24-WB01` items and 5 `24-WB03` items each from the Brooklyn, Manhattan, and Huntington stores.\n\nFulfilling the order requires a minimum of two partial shipments. In this example, we will follow the SSA recommendations.\n\nWhen you complete a partial or full shipment, Adobe Commerce deducts the reserved products from corresponding sources.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-shipment.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "cb871786-67d0-48dd-a9d3-0c2ca51bd3ba",
      {
        "pageContent": "## Send a partial shipment\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nAlthough you can use the `POST V1/shipment` endpoint to create a shipment, the `POST /V1/order/:orderId/ship` endpoint is a better option in that it is more efficient and the payload can be simpler.\n\nWe'll ship 35 `24-WB01` items and 20 `24-WB03` items from the Northeast warehouse. The `order_item_id` value for `24-WB01` is 3, and the value for `24-WB03` is 4.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/order/3/ship`\n\nwhere `3` is the `orderid`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin token>`\n\n**Payload:**\n\n```json\n{\n  \"items\": [\n    {\n      \"order_item_id\": 3,\n      \"qty\": 20\n    },\n    {\n      \"order_item_id\": 4,\n      \"qty\": 35\n    }\n  ],\n  \"notify\": true,\n  \"comment\": {\n    \"comment\": \"Shipment from the Northeast warehouse\"\n  },\n  \"arguments\": {\n    \"extension_attributes\": {\n      \"source_code\": \"ne_wh\"\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-shipment.md",
          "loc": { "lines": { "from": 19, "to": 66 } }
        }
      }
    ],
    [
      "6cd7d4a3-9d87-4e74-b6e0-4626e760a330",
      {
        "pageContent": "```\n\n**Response:**\n\nThe shipment ID, such as `3`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-shipment.md",
          "loc": { "lines": { "from": 67, "to": 71 } }
        }
      }
    ],
    [
      "4fc1f35a-356b-44f9-a6e8-790863295f41",
      {
        "pageContent": "### Ship from the West warehouse\n\nUse the same endpoint to ship the remaining five `24-WB03` items from the West warehouse.\n\n**Payload:**\n\n```json\n{\n  \"items\": [\n    {\n      \"order_item_id\": 3,\n      \"qty\": 5\n    }\n  ],\n  \"notify\": true,\n  \"comment\": {\n    \"comment\": \"Shipment from the West warehouse\"\n  },\n  \"arguments\": {\n    \"extension_attributes\": {\n      \"source_code\": \"west_wh\"\n    }\n  }\n}\n```\n\n**Response:**\n\nThe shipment ID, such as `4`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-shipment.md",
          "loc": { "lines": { "from": 73, "to": 101 } }
        }
      }
    ],
    [
      "0fad9170-8082-4897-93b8-6df603bba20b",
      {
        "pageContent": "## Verify this step\n\n1. Click **Sales** > **Shipments**. The two shipments for this order are displayed in the grid.\n1. Click **Catalog** > **Products**. Verify that the **Quantity per Source** values are correct for each product, based on the selections you made at shipment.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-shipment.md",
          "loc": { "lines": { "from": 103, "to": 106 } }
        }
      }
    ],
    [
      "8beadf65-0b9b-42f8-9ddd-e5267f42daf7",
      {
        "pageContent": "---\ntitle: Step 2. Create sources\ndescription: In this step of the tutorial you will create sources\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 2. Create sources\n\n**Sources** are the physical locations from which you manage product inventory and ship orders. These locations can include warehouses, brick-and-mortar stores, distribution centers, and drop shippers. Adobe Commerce leverages the quantities and salable quantities per stock and manages inventory amounts automatically for managed products and orders. Virtual and downloadable products can also be assigned to a source.\n\nYou cannot delete or disable the default source. You can create, modify, enable, and disable custom sources, but you cannot delete them.\n\nThis step guides you through the process of creating sources for your inventory, including warehouses for the physical products and another source for virtual and downloadable products.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "a408b867-d2a0-4e07-b993-bb6b1fb9500c",
      {
        "pageContent": "For more information about sources, see [Inventory Management overview](https://developer.adobe.com/commerce/webapi/rest/inventory/).\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nThis step requires an admin token. See [Generate the admin token](/rest/tutorials/prerequisite-tasks/) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 17, "to": 21 } }
        }
      }
    ],
    [
      "a40fd39e-4d4f-42ab-bdcd-a32fbb41dd11",
      {
        "pageContent": "## Create the first source\n\nThe `POST V1/inventory/sources` endpoint creates the Baltimore Warehouse (`baltimore_wh`) source. The `name`, `source_code`, `country_id`, and `postcode` attributes are required. The  `latitude`, `longitude`, and other address-related attributes enable the Distance Priority Source Selection Algorithm (SSA) to calculate the distance between the source and the shipping address. The value assigned to `source_code` cannot be changed.\n\nThe `source_code` values will be used in subsequent steps.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/inventory/sources`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 23, "to": 43 } }
        }
      }
    ],
    [
      "87f14d23-9762-40d5-9b10-66bf93b6b53e",
      {
        "pageContent": "**Payload:**\n\n```json\n{\n   \"source\" : {\n      \"name\" : \"Northeast Warehouse\",\n      \"source_code\" : \"ne_wh\",\n      \"postcode\" : \"07306\",\n      \"enabled\" : true,\n      \"contact_name\" : \"Ethan Carter\",\n      \"country_id\" : \"US\",\n      \"street\": \"645 Newark Ave.\",\n      \"city\" : \"Jersey City\",\n      \"region_id\": 41,\n      \"region\": \"New Jersey\",\n      \"latitude\": 40.733790,\n      \"longitude\": -74.058720\n   }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 43, "to": 61 } }
        }
      }
    ],
    [
      "d76042f0-de2a-4fce-85c1-04bfc6b23fe5",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returns an empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 62, "to": 68 } }
        }
      }
    ],
    [
      "10b42d48-6e1e-49b6-b407-6f3f96c9140d",
      {
        "pageContent": "## Add more sources\n\nUse the same endpoint to create a source for the Leipzig warehouse. We will designate the Brooklyn, Huntington, Manhattan, Berlin, and Frankfurt stores as in-store pick up locations. We will also create the HQ source for virtual and downloadable products.\n\n### West warehouse\n\nUse the following payload to create the Leipzig warehouse:\n\n```json\n{\n   \"source\" : {\n      \"name\" : \"West Warehouse\",\n      \"source_code\" : \"west_wh\",\n      \"postcode\" : \"95207\",\n      \"enabled\" : true,\n      \"contact_name\" : \"Claudia Mabuse\",\n      \"country_id\" : \"US\",\n      \"street\": \"7554 Pacific Ave\",\n      \"city\" : \"Stockton\",\n      \"region_id\": 12,\n      \"region\": \"California\",\n      \"latitude\": 38.018180,\n      \"longitude\": -121.319930\n   }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 70, "to": 95 } }
        }
      }
    ],
    [
      "3ac75f8e-7cfd-47ad-a577-122eb104abc5",
      {
        "pageContent": "### Brooklyn store\n\nUse the following payload to create the Brooklyn store.\n\n```json\n{\n   \"source\" : {\n      \"name\" : \"Brooklyn Store\",\n      \"source_code\" : \"brooklyn\",\n      \"postcode\" : \"11211\",\n      \"enabled\" : true,\n      \"contact_name\" : \"Tai Hozie\",\n      \"country_id\" : \"US\",\n      \"street\": \"263 S 4th St\",\n      \"city\" : \"Brooklyn\",\n      \"region_id\": 43,\n      \"region\": \"New York\",\n      \"latitude\": 40.710070,\n      \"longitude\": -73.957160,\n      \"phone\": \"555 737-8088\",\n      \"extension_attributes\": {\n        \"is_pickup_location_active\": true,\n        \"frontend_name\": \"Brooklyn (Williamsburg) Store\",\n        \"frontend_description\": \"Williamsburg, Brooklyn\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 97, "to": 124 } }
        }
      }
    ],
    [
      "f0c09792-8275-45f6-ba70-ce45cbb5be0b",
      {
        "pageContent": "### Long Island store\n\nUse the following payload to create the Long Island store:\n\n```json\n{\n   \"source\" : {\n      \"name\" : \"Long Island Store\",\n      \"source_code\" : \"huntington\",\n      \"postcode\" : \"11743\",\n      \"enabled\" : true,\n      \"contact_name\" : \"Leslie Arzy\",\n      \"country_id\" : \"US\",\n      \"street\": \"55 Gerard St,\",\n      \"city\" : \"Huntington\",\n      \"region_id\": 43,\n      \"region\": \"New York\",\n      \"latitude\": 40.872510,\n      \"longitude\": -73.429352,\n      \"phone\": \"555 939-4444\",\n      \"extension_attributes\": {\n        \"is_pickup_location_active\": true,\n        \"frontend_name\": \"Long Island (Huntington) Store\",\n        \"frontend_description\": \"Huntington, Long Island\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 126, "to": 153 } }
        }
      }
    ],
    [
      "1401af43-5b41-40c9-b5ab-1d6f1bd74047",
      {
        "pageContent": "### Manhattan store\n\nUse the following payload to create the Manhattan store:\n\n``` json\n{\n   \"source\" : {\n      \"name\" : \"Manhattan Store\",\n      \"source_code\" : \"manhattan\",\n      \"postcode\" : \"10011\",\n      \"enabled\" : true,\n      \"contact_name\" : \"Kiara Smith\",\n      \"country_id\" : \"US\",\n      \"street\": \"70 W. 10th St\",\n      \"city\" : \"New York\",\n      \"region_id\": 43,\n      \"region\": \"New York\",\n      \"latitude\": 40.734600,\n      \"longitude\": -73.998490,\n      \"phone\": \"555 838-4500\",\n      \"extension_attributes\": {\n        \"is_pickup_location_active\": true,\n        \"frontend_name\": \"Manhattan (Greenwich Village) Store\",\n        \"frontend_description\": \"Greenwich Village, Manhattan\"\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 155, "to": 182 } }
        }
      }
    ],
    [
      "3a0956d6-e78d-43eb-811d-8d72dda48634",
      {
        "pageContent": "### Berkeley store\n\nUse the following payload to create the Berkeley store:\n\n```json\n{\n   \"source\" : {\n      \"name\" : \"Berkeley Store\",\n      \"source_code\" : \"berkeley\",\n      \"postcode\" : \"94705\",\n      \"enabled\" : true,\n      \"contact_name\" : \"Tereza Schmidt\",\n      \"country_id\" : \"US\",\n      \"street\": \"2705 Webster St\",\n      \"city\" : \"Berkeley\",\n      \"region_id\": 12,\n      \"region\": \"California\",\n      \"latitude\": 37.855850,\n      \"longitude\": -122.252460,\n      \"phone\": \"510 555-2020\",\n      \"extension_attributes\": {\n        \"is_pickup_location_active\": true,\n        \"frontend_name\": \"Berkeley Store\",\n        \"frontend_description\": \"Near College Ave. and Ashby Ave.\"\n      }\n   }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 184, "to": 211 } }
        }
      }
    ],
    [
      "0d85002d-2a37-4e7a-b73f-78a3b043917b",
      {
        "pageContent": "### Sausalito store\n\nUse the following payload to create the Frankfurt store:\n\n```json\n{\n   \"source\" : {\n      \"name\" : \"Sausalito Store\",\n      \"source_code\" : \"sausalito\",\n      \"postcode\" : \"94965\",\n      \"enabled\" : true,\n      \"contact_name\" : \"Ralf Schneider\",\n      \"country_id\" : \"US\",\n      \"street\": \"150 Harbor Dr.\",\n      \"city\" : \"Sausalito\",\n      \"region_id\": 12,\n      \"region\": \"California\",\n      \"latitude\": 37.867168,\n      \"longitude\": -122.499367,\n      \"phone\": \"415-555-6666\",\n      \"extension_attributes\": {\n        \"is_pickup_location_active\": true,\n        \"frontend_name\": \"Sausalito Store\",\n        \"frontend_description\": \"Just off Bridgeway\"\n      }\n   }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 213, "to": 240 } }
        }
      }
    ],
    [
      "dc8eb7de-7266-4868-aac8-ff5f74fe56a0",
      {
        "pageContent": "### Headquarters\n\nThe `hq` source will fulfill virtual and downloadable products.\n\n```json\n{\n   \"source\" : {\n      \"name\" : \"HQ\",\n      \"source_code\" : \"hq\",\n      \"postcode\" : \"10022\",\n      \"enabled\" : true,\n      \"contact_name\" : \"Francine Helen\",\n      \"country_id\" : \"US\",\n      \"street\": \"909 3rd Ave\",\n      \"city\" : \"New York\",\n      \"region_id\": 43,\n      \"region\": \"New York\",\n      \"latitude\": 40.7571,\n      \"longitude\": -73.9657\n   }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 242, "to": 263 } }
        }
      }
    ],
    [
      "664a5370-c8f8-4ca6-9baf-e0be1470bdc3",
      {
        "pageContent": "## Verify this step\n\nIn Admin, click **Stores** > Inventory > **Sources**.  The new sources are displayed in the Sources grid.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-sources.md",
          "loc": { "lines": { "from": 265, "to": 267 } }
        }
      }
    ],
    [
      "0db11e80-d4bf-4ad5-afc1-83eaf3cbc924",
      {
        "pageContent": "---\ntitle: Step 3. Create stocks\ndescription: In this step of the tutorial you will create stocks\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 3. Create stocks\n\nThis step guides through the process for creating **stock**. Stock represents a virtual, aggregated inventory of products for sources of your sales channels. Each stock maps sales channels with sources to determine available inventories and salable quantities.\n\nA sales channel can only be assigned to one stock.\n\nThe `stock_id` of the default stock is `1`.  You cannot delete or add sources to the default stock, but you can perform these actions with custom stocks.\n\nFor more information about stock, see [Inventory Management overview](https://developer.adobe.com/commerce/webapi/rest/inventory/).",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-stock.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "082fd5fd-029b-4b65-a6bb-f1b1b5a05ae2",
      {
        "pageContent": "## Create the stock\n\nThe `POST V1/inventory/stocks` endpoint creates a stock. The `name`, `type`, and `code` attributes are required. The `code` value cannot be changed.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/inventory/stocks`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**\n\nThe `name` attribute is required.\n\n```json\n{\n  \"stock\": {\n    \"name\": \"US Stock\",\n    \"extension_attributes\": {\n      \"sales_channels\": [\n        {\n          \"type\": \"website\",\n          \"code\": \"base\"\n        }\n      ]\n    }\n  }\n}\n```\n\n**Response:**\n\nCommerce returnsthe `stock_id`, such as `2`. The value will be used in subsequent steps.\n\n## Verify this step\n\nIn Admin, click **Stores** > **Inventory** > **Stocks**.  The new stocks are displayed in the Stock grid.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/create-stock.md",
          "loc": { "lines": { "from": 19, "to": 63 } }
        }
      }
    ],
    [
      "e43ccff8-ea63-44d6-9946-a041a7ab471c",
      {
        "pageContent": "---\ntitle: Step 14. Create an order for in-store pickup (optional)\ndescription: In this step of the tutorial you will create an order for in-store pickup\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 14. Create an order for in-store pickup (optional)\n\nThe in-store pickup feature allows shoppers to select a physical location where they can pick up an entire order. As a result, any orders that are fulfilled with this method bypass the shipping steps in the standard workflow.\n\nAn order must meet the following requirements to be eligible for in-store pickup:\n\n*  All physical products must be assigned to the source that serves as the in-store pickup location.\n*  All items must be in stock.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "5373a728-da3f-48a3-8f3a-ab8cf099051a",
      {
        "pageContent": "In this step, we will create a second order from the same customer. In [Step 2. Create sources](/rest/tutorials/inventory/create-sources/), we created three stores in the New York City area. The customer will be able to choose from these stores when she selects a pickup location. We will skip some of the steps we performed earlier that provides information we already know.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 18, "to": 18 } }
        }
      }
    ],
    [
      "7ab7d777-ba08-4561-a383-829db5bc3bcc",
      {
        "pageContent": "## Create a new cart\n\nWe must create a new cart for the customer.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer_token>`\n\n**Payload:**\n\nNone\n\n**Response:**\n\nThe response is the `quoteId`: 6\n\n## Add products to the new cart\n\nThis time, we will add two Voyage Yoga Bags (`24-WB01`).\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine/items`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer_token>`\n\n**Payload:**\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"24-WB01\",\n    \"qty\": 2,\n    \"quote_id\": \"6\"\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n    \"item_id\": 11,\n    \"sku\": \"24-WB01\",\n    \"qty\": 2,\n    \"name\": \"Voyage Yoga Bag\",\n    \"price\": 32,\n    \"product_type\": \"simple\",\n    \"quote_id\": \"6\"\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 20, "to": 88 } }
        }
      }
    ],
    [
      "d12b830c-6f9f-4ab3-a37f-12e7643bdca6",
      {
        "pageContent": "## Search for pickup locations\n\nThe `GET /V1/inventory/in-store-pickup/pickup-locations` endpoint searches for locations, given a city name or postal code and a radius, in kilometers. You must also specify the sales channel code to search in the `scopeCode` parameter. The endpoint is described in detail in the [In-Store Pickup](/rest/inventory/in-store-pickup/) reference topic.\n\nIn this example, we will search for locations within 50 km of New York, New York that are pickup locations for product `24-WB01`.\n\n**Endpoint:**\n\n`GET http://<host>/rest/default/V1/inventory/in-store-pickup/pickup-locations/?\nsearchRequest[area][radius]=50&\nsearchRequest[area][searchTerm]=New%20York&\nsearchRequest[scopeCode]=base&\nsearchRequest[extensionAttributes][productsInfo][0][sku]=24-WB01`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n**Payload:**\n\nNot applicable\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 90, "to": 116 } }
        }
      }
    ],
    [
      "f87dbae9-bb38-43e3-b05e-7e90fe29ec3c",
      {
        "pageContent": "**Response:**\n\nThe endpoint returns the Manhattan, Brooklyn, and Long Island stores. The Northeast warehouse is within the specified radius, but it is not listed, because it is not a pickup location.\n\nIn the previous step, we transferred the entire stock of Voyage Yoga Bags from the Long Island (`huntington`) store to the Northeast warehouse. Although the store is out of stock locally, it can still be used as a pick-up location.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 116, "to": 120 } }
        }
      }
    ],
    [
      "ef960302-bd50-479c-bf06-a8ff74b1e989",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"pickup_location_code\": \"manhattan\",\n            \"name\": \"Manhattan Store\",\n            \"contact_name\": \"Kiara Smith\",\n            \"description\": \"Greenwich Village, Manhattan\",\n            \"latitude\": 40.7346,\n            \"longitude\": -73.99849,\n            \"country_id\": \"US\",\n            \"region_id\": 43,\n            \"region\": \"New York\",\n            \"city\": \"New York\",\n            \"street\": \"70 W. 10th St\",\n            \"postcode\": \"10011\",\n            \"phone\": \"555 838-4500\"\n        },\n        {\n            \"pickup_location_code\": \"brooklyn\",\n            \"name\": \"Brooklyn Store\",\n            \"contact_name\": \"Tai Hozie\",\n            \"description\": \"Williamsburg, Brooklyn\",\n            \"latitude\": 40.71007,\n            \"longitude\": -73.95716,\n            \"country_id\": \"US\",\n            \"region_id\": 43,\n            \"region\": \"New York\",\n            \"city\": \"Brooklyn\",\n            \"street\": \"263 S 4th St\",\n            \"postcode\": \"11211\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 122, "to": 152 } }
        }
      }
    ],
    [
      "132a919d-73df-44b4-82f2-565ecc67adba",
      {
        "pageContent": "\"phone\": \"555 737-8088\"\n        },\n        {\n            \"pickup_location_code\": \"huntington\",\n            \"name\": \"Long Island Store\",\n            \"contact_name\": \"Leslie Arzy\",\n            \"description\": \"Huntington, Long Island\",\n            \"latitude\": 40.87251,\n            \"longitude\": -73.429352,\n            \"country_id\": \"US\",\n            \"region_id\": 43,\n            \"region\": \"New York\",\n            \"city\": \"Huntington\",\n            \"street\": \"55 Gerard St,\",\n            \"postcode\": \"11743\",\n            \"phone\": \"555 939-4444\"\n        }\n    ],\n    \"search_request\": {\n        \"area\": {\n            \"radius\": 50,\n            \"search_term\": \"New York\"\n        },\n        \"current_page\": 1,\n        \"scope_type\": \"website\",\n        \"scope_code\": \"base\",\n        \"extension_attributes\": {\n            \"products_info\": [\n                {\n                    \"sku\": \"24-WB01\"\n                }\n            ]\n        }\n    },\n    \"total_count\": 3\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 153, "to": 189 } }
        }
      }
    ],
    [
      "238a3703-7213-47bc-86cd-f928a61999e6",
      {
        "pageContent": "## Set the shipping and billing information\n\nThe customer has chosen to pick up the order at the Brooklyn store. Once again, we will use the `POST /V1/carts/mine/shipping-information` endpoint to set the shipping and billing information. This time we will make the following changes to the payload:\n\n*  The shipping address is that of the Brooklyn store but includes the customer's first and last name to help the store personnel identify who placed the order. The shipping address also includes the `pickup_location_code` extension attribute.\n\n*  The billing address includes the customer's billing address ID. In [Step 6. Create a customer and generate a customer token](/rest/tutorials/inventory/create-customer/), the `POST /V1/customers` endpoint returned an address ID of `2`.\n\n*  The `shipping_method_code` and `shipping_carrier_code` attributes are set to `pickup` and `instore`, respectively.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine/shipping-information`\n\n**Scope:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 191, "to": 205 } }
        }
      }
    ],
    [
      "37298106-0329-4a11-91f7-a12648b84c07",
      {
        "pageContent": "**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer_token>`\n\n**Payload:**\n\n```json\n{\n\"addressInformation\": {\n  \"shipping_address\": {\n    \"region_id\": 43,\n    \"country_id\": \"US\",\n    \"street\": [\n      \"263 S 4th St\"\n    ],\n    \"postcode\": \"11211\",\n    \"city\": \"Brooklyn\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"telephone\": \"516-555-1111\",\n    \"extension_attributes\": {\n      \"pickup_location_code\": \"brooklyn\"\n    }\n  },\n    \"billing_address\": {\n      \"id\": 2\n    },\n    \"shipping_method_code\": \"pickup\",\n    \"shipping_carrier_code\": \"instore\"\n   }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 205, "to": 241 } }
        }
      }
    ],
    [
      "4f4d4476-b21a-45e6-8094-cbd965af1568",
      {
        "pageContent": "```\n\n**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 242, "to": 244 } }
        }
      }
    ],
    [
      "fe9537c2-c6cd-4ea3-bea8-c573919d095d",
      {
        "pageContent": "```json\n{\n    \"payment_methods\": [\n        {\n            \"code\": \"checkmo\",\n            \"title\": \"Check / Money order\"\n        },\n        {\n            \"code\": \"banktransfer\",\n            \"title\": \"Bank Transfer Payment\"\n        }\n    ],\n    \"totals\": {\n        \"grand_total\": 64,\n        \"base_grand_total\": 64,\n        \"subtotal\": 64,\n        \"base_subtotal\": 64,\n        \"discount_amount\": 0,\n        \"base_discount_amount\": 0,\n        \"subtotal_with_discount\": 64,\n        \"base_subtotal_with_discount\": 64,\n        \"shipping_amount\": 0,\n        \"base_shipping_amount\": 0,\n        \"shipping_discount_amount\": 0,\n        \"base_shipping_discount_amount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,\n        \"weee_tax_applied_amount\": null,\n        \"shipping_tax_amount\": 0,\n        \"base_shipping_tax_amount\": 0,\n        \"subtotal_incl_tax\": 64,\n        \"shipping_incl_tax\": 0,\n        \"base_shipping_incl_tax\": 0,\n        \"base_currency_code\": \"USD\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 246, "to": 279 } }
        }
      }
    ],
    [
      "4caf7873-3e12-4ef2-a62b-e653d510c947",
      {
        "pageContent": "\"quote_currency_code\": \"USD\",\n        \"items_qty\": 2,\n        \"items\": [\n            {\n                \"item_id\": 11,\n                \"price\": 32,\n                \"base_price\": 32,\n                \"qty\": 2,\n                \"row_total\": 64,\n                \"base_row_total\": 64,\n                \"row_total_with_discount\": 0,\n                \"tax_amount\": 0,\n                \"base_tax_amount\": 0,\n                \"tax_percent\": 0,\n                \"discount_amount\": 0,\n                \"base_discount_amount\": 0,\n                \"discount_percent\": 0,\n                \"price_incl_tax\": 32,\n                \"base_price_incl_tax\": 32,\n                \"row_total_incl_tax\": 64,\n                \"base_row_total_incl_tax\": 64,\n                \"options\": \"[]\",\n                \"weee_tax_applied_amount\": null,\n                \"weee_tax_applied\": null,\n                \"name\": \"Voyage Yoga Bag\"\n            }\n        ],\n        \"total_segments\": [\n            {\n                \"code\": \"subtotal\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 280, "to": 309 } }
        }
      }
    ],
    [
      "d3369760-f92c-45ef-bee2-bfd1fbf6092b",
      {
        "pageContent": "\"title\": \"Subtotal\",\n                \"value\": 64\n            },\n            {\n                \"code\": \"giftwrapping\",\n                \"title\": \"Gift Wrapping\",\n                \"value\": null,\n                \"extension_attributes\": {\n                    \"gw_item_ids\": [],\n                    \"gw_price\": \"0.0000\",\n                    \"gw_base_price\": \"0.0000\",\n                    \"gw_items_price\": \"0.0000\",\n                    \"gw_items_base_price\": \"0.0000\",\n                    \"gw_card_price\": \"0.0000\",\n                    \"gw_card_base_price\": \"0.0000\"\n                }\n            },\n            {\n                \"code\": \"shipping\",\n                \"title\": \"Shipping & Handling (In-Store Pickup Delivery - Brooklyn (Williamsburg) Store)\",\n                \"value\": 0\n            },\n            {\n                \"code\": \"tax\",\n                \"title\": \"Tax\",\n                \"value\": 0,\n                \"extension_attributes\": {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 310, "to": 336 } }
        }
      }
    ],
    [
      "329b45ab-75b9-4dcd-a3d2-bd66cad9dbbb",
      {
        "pageContent": "\"tax_grandtotal_details\": []\n                }\n            },\n            {\n                \"code\": \"grand_total\",\n                \"title\": \"Grand Total\",\n                \"value\": 64,\n                \"area\": \"footer\"\n            },\n            {\n                \"code\": \"customerbalance\",\n                \"title\": \"Store Credit\",\n                \"value\": -0\n            },\n            {\n                \"code\": \"reward\",\n                \"title\": \"0 Reward points\",\n                \"value\": -0\n            }\n        ],\n        \"extension_attributes\": {\n            \"reward_points_balance\": 0,\n            \"reward_currency_amount\": 0,\n            \"base_reward_currency_amount\": 0\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 337, "to": 364 } }
        }
      }
    ],
    [
      "e485c7b6-a2ad-4338-930d-a8efe838338d",
      {
        "pageContent": "## Send payment information\n\nSend the payment information to create an order.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine/payment-information`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer token>`\n\n**Payload:**\n\n```json\n{\n  \"paymentMethod\": {\n    \"method\": \"banktransfer\"\n  },\n  \"billing_address\": {\n    \"email\": \"jdoe@example.com\",\n    \"region\": \"New York\",\n    \"region_id\": 43,\n    \"region_code\": \"NY\",\n    \"country_id\": \"US\",\n    \"street\": [\"160 1st St.\"],\n    \"postcode\": \"11501\",\n    \"city\": \"Mineola\",\n    \"telephone\": \"516-555-1111\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\"\n  }\n}\n```\n\n**Response:**\n\nAn `orderID`, such as `6`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 366, "to": 409 } }
        }
      }
    ],
    [
      "51237f42-e6d0-4fbc-a437-8ebe9689686e",
      {
        "pageContent": "## Mark the order as ready for pick-up\n\nWhen the order is ready to be picked up, send a notification email to the customer. The payload contains an array of order IDs.\n\nThis call creates a shipment.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/order/notify-orders-are-ready-for-pickup`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin token>`\n\n**Payload:**\n\n```json\n{\n  \"orderIds\": [\n    6\n  ]\n}\n```\n\n**Response:**\n\nThe response includes the success status as well as an array of error messages for each failed order.\n\n```json\n{\n  \"successful\": true,\n  \"failed\": []\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/in-store-pickup.md",
          "loc": { "lines": { "from": 411, "to": 450 } }
        }
      }
    ],
    [
      "73d11726-1afc-43c8-88e1-5bcd9f7c53f7",
      {
        "pageContent": "---\ntitle: Order Processing with Inventory Management\ndescription: In this tutorial you will process orders using Inventory Management in the REST API\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Order Processing with Inventory Management\n\nThis tutorial builds upon the workflow described in the [Order Processing with REST APIs tutorial](/rest/tutorials/orders/). The Order Processing with Inventory Management tutorial provides additional steps that detail how to create stocks and sources, assign products to a custom source, and run the Source Selection Algorithms to recommend shipping options.\n\nFor more information about key inventory features, see [Inventory Management overview](https://developer.adobe.com/commerce/webapi/rest/inventory/).\n\nThis **14-step tutorial** generally takes **1 hour**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/index.md",
          "loc": { "lines": { "from": 1, "to": 15 } }
        }
      }
    ],
    [
      "231f258c-693d-43a1-862c-1f627299ac22",
      {
        "pageContent": "### Complete these prerequisites\n\n*  Install Adobe Commerce.\n\n*  Install a REST client. You can use any REST client to send calls to Commerce. [Postman](https://www.getpostman.com/) is recommended.\n\n*  Know how to construct a REST call in Commerce. See [Construct a request](/get-started/gs-web-api-request) for details.\n\n*  Obtain an admin authorization token. Multiple calls in this tutorial require administrator privileges. See [Generate the admin token](/rest/tutorials/prerequisite-tasks/) for more information.\n\n### Other resources\n\n*  Commerce uses [Swagger](https://swagger.io) to provide REST API documentation on local instances of Commerce. See [Generate a local API reference](/rest/use-rest/generate-local/) for more information. You can view the [static REST API documentation](../../quick-reference/index.md), which displays reference information using ReDoc.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/index.md",
          "loc": { "lines": { "from": 17, "to": 29 } }
        }
      }
    ],
    [
      "ae3d4f55-e6f2-425c-9c1b-1cad3ba1c3d6",
      {
        "pageContent": "---\ntitle: Step 8. Prepare for checkout\ndescription: In this step of the tutorial you will prepare for checkout\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 8. Prepare for checkout\n\nNow that all the items have been added to the cart, we can prepare the quote for checkout. This process includes the following steps:\n\n*  Estimate shipping costs\n*  Set shipping and billing information",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "0ae09438-cd3c-42b0-bfc6-c49d873cb50f",
      {
        "pageContent": "### Estimate shipping costs\n\nAdobe Commerce calculates shipping costs for each shipping method that can be applied to the order. In this tutorial, the `flatrate` ($5 per item) shipping method is active.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine/estimate-shipping-methods`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer token>`\n\n**Payload:**\n\nThe payload contains the shipping address.\n\n```json\n{  \"address\": {\n      \"region\": \"New York\",\n      \"region_id\": 43,\n      \"region_code\": \"NY\",\n      \"country_id\": \"US\",\n      \"street\": [\n        \"160 1st St.\"\n        ],\n      \"postcode\": \"11501\",\n      \"city\": \"Mineola\",\n      \"firstname\": \"Jane\",\n      \"lastname\": \"Doe\",\n      \"customer_id\": 5,\n      \"email\": \"jdoe@example.com\",\n      \"telephone\": \"(516) 555-1111\",\n      \"same_as_billing\": 1\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 16, "to": 56 } }
        }
      }
    ],
    [
      "6e31eecd-2621-47ba-8b9e-3aedb91ae95c",
      {
        "pageContent": "```\n\n**Response:**\n\nThe cost for the `flatrate` shipping method is $300 (60 items x $5 each). The downloadable item does not have a shipping charge because it is not a physical product.\n\n```json\n[\n    {\n        \"carrier_code\": \"flatrate\",\n        \"method_code\": \"flatrate\",\n        \"carrier_title\": \"Flat Rate\",\n        \"method_title\": \"Fixed\",\n        \"amount\": 300,\n        \"base_amount\": 300,\n        \"available\": true,\n        \"error_message\": \"\",\n        \"price_excl_tax\": 300,\n        \"price_incl_tax\": 300\n    }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 57, "to": 78 } }
        }
      }
    ],
    [
      "29570413-811a-4b55-a282-e4eff24bf468",
      {
        "pageContent": "### Set shipping and billing information\n\nIn this call, you specify the shipping and billing addresses, as well as the selected `carrier_code` and `method_code`. The customer has selected the Flat Rate shipping method.\n\nCommerce returnsa list of payment options and calculates the order totals.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/carts/mine/shipping-information`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <customer token>`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 80, "to": 100 } }
        }
      }
    ],
    [
      "b17b6b03-e22b-489f-91be-1cd4d134810d",
      {
        "pageContent": "**Payload:**\n\n```json\n{\n\"addressInformation\": {\n    \"shipping_address\": {\n        \"region\": \"New York\",\n        \"region_id\": 43,\n        \"region_code\": \"NY\",\n        \"country_id\": \"US\",\n        \"street\": [\n            \"160 1st St.\"\n        ],\n        \"postcode\": \"11501\",\n        \"city\": \"Mineola\",\n        \"firstname\": \"Jane\",\n        \"lastname\": \"Doe\",\n        \"email\": \"jdoe@example.com\",\n        \"telephone\": \"516-555-1111\"\n    },\n    \"billing_address\": {\n        \"region\": \"New York\",\n        \"region_id\": 43,\n        \"region_code\": \"NY\",\n        \"country_id\": \"US\",\n        \"street\": [\n            \"160 1st St.\"\n        ],\n        \"postcode\": \"11501\",\n        \"city\": \"Mineola\",\n        \"firstname\": \"Jane\",\n        \"lastname\": \"Doe\",\n        \"email\": \"jdoe@example.com\",\n        \"telephone\": \"516-555-1111\"\n    },\n    \"shipping_carrier_code\": \"flatrate\",\n    \"shipping_method_code\": \"flatrate\"\n    }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 100, "to": 138 } }
        }
      }
    ],
    [
      "cb30d258-a559-4a03-86a3-b8cdf8abeb3d",
      {
        "pageContent": "```\n\n**Response:**\n\nThe subtotal of the order is $2022, and shipping charges are $300. The grand total is $2322.\n\nThe available payment methods are `banktransfer` and `checkmo`. The customer will specify a payment method in the next step.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 139, "to": 145 } }
        }
      }
    ],
    [
      "bac91d46-97ac-4c38-bd6c-773b28ee9010",
      {
        "pageContent": "```json\n{\n    \"payment_methods\": [\n        {\n            \"code\": \"checkmo\",\n            \"title\": \"Check / Money order\"\n        },\n        {\n            \"code\": \"banktransfer\",\n            \"title\": \"Bank Transfer Payment\"\n        }\n    ],\n    \"totals\": {\n        \"grand_total\": 1917.6,\n        \"base_grand_total\": 1917.6,\n        \"subtotal\": 2022,\n        \"base_subtotal\": 2022,\n        \"discount_amount\": -404.4,\n        \"base_discount_amount\": -404.4,\n        \"subtotal_with_discount\": 1617.6,\n        \"base_subtotal_with_discount\": 1617.6,\n        \"shipping_amount\": 300,\n        \"base_shipping_amount\": 300,\n        \"shipping_discount_amount\": 0,\n        \"base_shipping_discount_amount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,\n        \"weee_tax_applied_amount\": null,\n        \"shipping_tax_amount\": 0,\n        \"base_shipping_tax_amount\": 0,\n        \"subtotal_incl_tax\": 2022,\n        \"shipping_incl_tax\": 300,\n        \"base_shipping_incl_tax\": 300,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 147, "to": 179 } }
        }
      }
    ],
    [
      "074c5cef-bc14-4576-bac2-5a54be893d70",
      {
        "pageContent": "\"base_currency_code\": \"USD\",\n        \"quote_currency_code\": \"USD\",\n        \"items_qty\": 61,\n        \"items\": [\n            {\n                \"item_id\": 5,\n                \"price\": 36,\n                \"base_price\": 36,\n                \"qty\": 20,\n                \"row_total\": 720,\n                \"base_row_total\": 720,\n                \"row_total_with_discount\": 0,\n                \"tax_amount\": 0,\n                \"base_tax_amount\": 0,\n                \"tax_percent\": 0,\n                \"discount_amount\": 144,\n                \"base_discount_amount\": 144,\n                \"discount_percent\": 20,\n                \"price_incl_tax\": 36,\n                \"base_price_incl_tax\": 36,\n                \"row_total_incl_tax\": 720,\n                \"base_row_total_incl_tax\": 720,\n                \"options\": \"[]\",\n                \"weee_tax_applied_amount\": null,\n                \"weee_tax_applied\": null,\n                \"name\": \"Driven Backpack\"\n            },\n            {\n                \"item_id\": 6,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 180, "to": 208 } }
        }
      }
    ],
    [
      "0e89fa18-32cb-40b4-bb15-3ee501f59c5b",
      {
        "pageContent": "\"price\": 32,\n                \"base_price\": 32,\n                \"qty\": 40,\n                \"row_total\": 1280,\n                \"base_row_total\": 1280,\n                \"row_total_with_discount\": 0,\n                \"tax_amount\": 0,\n                \"base_tax_amount\": 0,\n                \"tax_percent\": 0,\n                \"discount_amount\": 256,\n                \"base_discount_amount\": 256,\n                \"discount_percent\": 20,\n                \"price_incl_tax\": 32,\n                \"base_price_incl_tax\": 32,\n                \"row_total_incl_tax\": 1280,\n                \"base_row_total_incl_tax\": 1280,\n                \"options\": \"[]\",\n                \"weee_tax_applied_amount\": null,\n                \"weee_tax_applied\": null,\n                \"name\": \"Voyage Yoga Bag\"\n            },\n            {\n                \"item_id\": 9,\n                \"price\": 22,\n                \"base_price\": 22,\n                \"qty\": 1,\n                \"row_total\": 22,\n                \"base_row_total\": 22,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 209, "to": 236 } }
        }
      }
    ],
    [
      "089c5490-2044-4624-8d41-9c47c1ffc3f6",
      {
        "pageContent": "\"row_total_with_discount\": 0,\n                \"tax_amount\": 0,\n                \"base_tax_amount\": 0,\n                \"tax_percent\": 0,\n                \"discount_amount\": 4.4,\n                \"base_discount_amount\": 4.4,\n                \"discount_percent\": 20,\n                \"price_incl_tax\": 22,\n                \"base_price_incl_tax\": 22,\n                \"row_total_incl_tax\": 22,\n                \"base_row_total_incl_tax\": 22,\n                \"options\": \"[{\\\"value\\\":\\\"Yoga Adventure\\\",\\\"label\\\":\\\"Downloads\\\"}]\",\n                \"weee_tax_applied_amount\": null,\n                \"weee_tax_applied\": null,\n                \"name\": \"Yoga Adventure\"\n            }\n        ],\n        \"total_segments\": [\n            {\n                \"code\": \"subtotal\",\n                \"title\": \"Subtotal\",\n                \"value\": 2022\n            },\n            {\n                \"code\": \"giftwrapping\",\n                \"title\": \"Gift Wrapping\",\n                \"value\": null,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 237, "to": 263 } }
        }
      }
    ],
    [
      "5952bff9-3571-4ea5-84d1-12a9ca3f43fb",
      {
        "pageContent": "\"extension_attributes\": {\n                    \"gw_item_ids\": [],\n                    \"gw_price\": \"0.0000\",\n                    \"gw_base_price\": \"0.0000\",\n                    \"gw_items_price\": \"0.0000\",\n                    \"gw_items_base_price\": \"0.0000\",\n                    \"gw_card_price\": \"0.0000\",\n                    \"gw_card_base_price\": \"0.0000\"\n                }\n            },\n            {\n                \"code\": \"discount\",\n                \"title\": \"Discount\",\n                \"value\": -404.4\n            },\n            {\n                \"code\": \"shipping\",\n                \"title\": \"Shipping & Handling (Flat Rate - Fixed)\",\n                \"value\": 300\n            },\n            {\n                \"code\": \"tax\",\n                \"title\": \"Tax\",\n                \"value\": 0,\n                \"extension_attributes\": {\n                    \"tax_grandtotal_details\": []\n                }\n            },\n            {\n                \"code\": \"grand_total\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 264, "to": 293 } }
        }
      }
    ],
    [
      "58ec4171-3a0c-4a11-a86d-2dfa3e332704",
      {
        "pageContent": "\"title\": \"Grand Total\",\n                \"value\": 1917.6,\n                \"area\": \"footer\"\n            },\n            {\n                \"code\": \"customerbalance\",\n                \"title\": \"Store Credit\",\n                \"value\": -0\n            },\n            {\n                \"code\": \"reward\",\n                \"title\": \"0 Reward points\",\n                \"value\": -0\n            }\n        ],\n        \"extension_attributes\": {\n            \"reward_points_balance\": 0,\n            \"reward_currency_amount\": 0,\n            \"base_reward_currency_amount\": 0\n        }\n    }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 294, "to": 316 } }
        }
      }
    ],
    [
      "96407179-4cb9-4faa-a3d7-1d9a17268777",
      {
        "pageContent": "### Verify this step\n\nSign in to the US store (`http://<host>/us`) as the customer and go to the checkout page.\n\nThe payment method is Bank Transfer, the billing and shipping addresses are displayed, and the shipping charges and shipping charges calculate and display.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/prepare-for-checkout.md",
          "loc": { "lines": { "from": 318, "to": 322 } }
        }
      }
    ],
    [
      "c5b18fa6-7d50-487d-a3a2-857aa276036a",
      {
        "pageContent": "---\ntitle: Step 5. Reassign products to custom sources\ndescription: In this step of the tutorial you will reassign products to custom sources\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 5. Reassign products to custom sources\n\nWhen you install or upgrade Adobe Commerce, the system assigns all existing products to the default source. Commerce also assigns all subsequently-created products to the default source. For this tutorial, we want to unassign three products from the default source and assign them to custom sources.\n\nThe following table describes the products we'll use in this tutorial.\n\nName | Type | SKU | Quantity\n--- | --- | --- | ---\nVoyage Yoga Bag | Simple | 24-WB01 | 100\nDriven Backpack | Simple | 24-WB03 | 100\nYoga Adventure | Downloadable | 240-LV06 | Not applicable",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "c1384ae1-9cbd-46d6-920d-e3a8281392b1",
      {
        "pageContent": "## Unassign products from the default source\n\nUse the `POST V1/inventory/source-items-delete` endpoint to unassign one or more products from the specified source. The `sku` and `source_code` attributes are required for each product.\n\n<InlineAlert variant=\"warning\" slots=\"text\"/>\n\nWhen you unassign a source from a product, all source data including inventory amounts is removed from that product. This can affect salable quantities and reservations for unprocessed orders. After checkout and before shipment, all product quantities in the order have associated reservations. If you unassign a source, you can cause issues with reservations and processing orders. In a production environment, Commerce strongly recommends completing all orders and shipments for those products prior to removing the source.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/inventory/source-items-delete`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 21, "to": 39 } }
        }
      }
    ],
    [
      "3d18f5d1-a198-41dc-83ad-8b427270a205",
      {
        "pageContent": "`Authorization`: `Bearer <admin_token>`\n\n**Payload:**\n\n```json\n{\n  \"sourceItems\": [{\n    \"sku\": \"24-WB01\",\n    \"source_code\": \"default\"\n  },\n  {\n    \"sku\": \"24-WB03\",\n    \"source_code\": \"default\"\n  },\n  {\n    \"sku\": \"240-LV06\",\n    \"source_code\": \"default\"\n  }]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 41, "to": 59 } }
        }
      }
    ],
    [
      "a2ca4c97-d248-4227-82d0-8441f5d9a835",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returnsan empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 60, "to": 66 } }
        }
      }
    ],
    [
      "74ceb3b3-8c5f-4c81-8d3c-6ca241c0910d",
      {
        "pageContent": "## Assign products to custom sources\n\nNow we can assign each product to one or more sources. The `POST V1/inventory/source-items` endpoint allows you to specify the quantity of each product that is available at each source.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/inventory/source-items`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n`Authorization`: `Bearer <admin_token>`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 68, "to": 85 } }
        }
      }
    ],
    [
      "7718a295-8063-4cb4-aef0-92e463ebb663",
      {
        "pageContent": "```json\n{\n  \"sourceItems\": [{\n    \"sku\": \"24-WB01\",\n    \"source_code\": \"ne_wh\",\n    \"quantity\": 35,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB01\",\n    \"source_code\": \"brooklyn\",\n    \"quantity\": 10,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB01\",\n    \"source_code\": \"huntington\",\n    \"quantity\": 10,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB01\",\n    \"source_code\": \"manhattan\",\n    \"quantity\": 10,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB01\",\n    \"source_code\": \"west_wh\",\n    \"quantity\": 15,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB01\",\n    \"source_code\": \"berkeley\",\n    \"quantity\": 10,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB01\",\n    \"source_code\": \"sausalito\",\n    \"quantity\": 10,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB03\",\n    \"source_code\": \"ne_wh\",\n    \"quantity\": 50,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB03\",\n    \"source_code\": \"brooklyn\",\n    \"quantity\": 0,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB03\",\n    \"source_code\": \"huntington\",\n    \"quantity\": 0,\n    \"status\": 1",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 87, "to": 147 } }
        }
      }
    ],
    [
      "71f69cf3-0f7c-426b-8910-0e95c07426f8",
      {
        "pageContent": "\"status\": 1\n  },\n  {\n    \"sku\": \"24-WB03\",\n    \"source_code\": \"manhattan\",\n    \"quantity\": 0,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB03\",\n    \"source_code\": \"west_wh\",\n    \"quantity\": 10,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB03\",\n    \"source_code\": \"berkeley\",\n    \"quantity\": 20,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"24-WB03\",\n    \"source_code\": \"sausalito\",\n    \"quantity\": 20,\n    \"status\": 1\n  },\n  {\n    \"sku\": \"240-LV06\",\n    \"source_code\": \"hq\",\n    \"quantity\": 9999,\n    \"status\": 1\n  }]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 147, "to": 179 } }
        }
      }
    ],
    [
      "f1e7ab0a-8345-4c91-8673-954c978f25ac",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returnsan empty array.\n\n`[]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 180, "to": 186 } }
        }
      }
    ],
    [
      "fdb4d3c1-67d3-4310-8aa0-4807c0210545",
      {
        "pageContent": "## Verify this step\n\nIn Admin, click **Catalog** > **Products**.  Products `24-WB01`, `24-WB03`, and `240-LV06` display quantities per assigned source in the **Quantity per Source** column and an aggregated total of products per stock in the **Salable Quantity** column.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/reassign-products-to-another-source.md",
          "loc": { "lines": { "from": 188, "to": 190 } }
        }
      }
    ],
    [
      "5cd19d66-9a55-4f20-a0f2-e9e553ca2d6e",
      {
        "pageContent": "---\ntitle: Step 11. Run the Source Selection Algorithms\ndescription: In this step of the tutorial you will run the source selection algorithms\nkeywords:\n  - Inventory\n  - REST\n--- \n \n# Step 11. Run the Source Selection Algorithms\n\nOne of the most significant parts of Inventory Management is the Source Selection Algorithm (SSA). The Source Priority SSA analyzes and determines the best match for sources and shipping based on the priorities you specified in [Step 4. Link stocks and sources\n](/rest/tutorials/inventory/assign-source-to-stock/). The Distance Priority SSA calculates the distance between the sources and the shipping address. Both algorithms also provide a list of source items with quantities to deduct per each source item.\n\nFor more information about shipping and SSAs, see [About Source Selection Algorithm and Reservations](https://experienceleague.adobe.com/docs/commerce-admin/inventory/basics/selection-reservations.html) in the Adobe Commerce user guide.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "ebdb11c5-4aed-4034-9fa3-47c725426d49",
      {
        "pageContent": "## Get the list of algorithms\n\nCurrently, Commerce supports SSAs based on priority and on distance. Third-party developers and future releases may add support for additional algorithms.\n\n**Endpoint:**\n\n`GET <host>/rest/default/V1/inventory/source-selection-algorithm-list`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type` `application/json`\n\n`Authorization` `Bearer <admin token>`\n\n**Payload:**\n\nNot applicable\n\n**Response:**\n\n```json\n[\n    {\n        \"code\": \"distance\",\n        \"title\": \"Distance Priority\",\n        \"description\": \"Algorithm which provides Source Selections based on shipping address distance from the source\"\n    },\n    {\n        \"code\": \"priority\",\n        \"title\": \"Source Priority\",\n        \"description\": \"Algorithm which provides Source Selections based on predefined priority of Source\"\n    }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 16, "to": 53 } }
        }
      }
    ],
    [
      "126b1e69-04fe-4215-ba2c-4d32d6a94d49",
      {
        "pageContent": "## Run an SSA\n\nThe `POST V1/inventory/source-selection-algorithm-result` endpoint uses the algorithm defined by the `algorithmCode` attribute to calculate the recommended sources and quantities for each item defined in the `items` array. In this example, we'll select the `priority` SSA. [Manage source selection algorithms](/rest/inventory/manage-source-selection/) includes an example using the `distance` priority.\n\nThis tutorial does not consider complications, such as selling out of products or back ordering. We can ask the SSA to determine the best way to immediately ship all the items ordered (40 items of product `24-WB01` and 20 items of product `24-WB03`). If the `shippable` attribute in the response is `false`, there are not enough salable items to complete a full shipment, but the merchant can still perform a partial shipment.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 55, "to": 59 } }
        }
      }
    ],
    [
      "9ef15336-3273-41d8-938b-bd8a43c73536",
      {
        "pageContent": "In [Step 4. Link stocks and sources](/rest/tutorials/inventory/assign-source-to-stock/), we assigned the `priority` value of the Northeast warehouse and West warehouse to be `1` and `2`, respectively. Thus, the `priority` SSA attempts to fulfill the order from the Northeast warehouse first. If the primary source does not have enough of a product in stock, the SSA goes down the prioritized list of sources until the ordered quantity can be found.\n\n**Endpoint:**\n\n`POST <host>/rest/default/V1/inventory/source-selection-algorithm-result`\n\n**Scope:**\n\n`default` store view\n\n**Headers:**\n\n`Content-Type`: `application/json`\n\n`Authorization`: `Bearer <admin token>`\n\n**Payload:**\n\n```json\n{\n    \"inventoryRequest\": {\n        \"stockId\": 2,\n        \"items\": [{\n            \"sku\": \"24-WB01\",\n            \"qty\": 40\n        },\n        {\n            \"sku\": \"24-WB03\",\n            \"qty\": 20\n        }]\n    },\n    \"algorithmCode\": \"priority\"\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 61, "to": 93 } }
        }
      }
    ],
    [
      "6b4e2120-5006-46f5-9324-b529098f6b06",
      {
        "pageContent": "```\n\n**Response:**\n\nThe SSA recommends shipping from the following sources:\n\nProduct | Source | Quantity\n--- | --- | ---\n`24-WB01` | Northeast warehouse | 35\n`24-WB01` | West warehouse | 5\n`24-WB03` | Northeast warehouse | 20",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 94, "to": 104 } }
        }
      }
    ],
    [
      "d03e3852-c474-411e-ab9b-dbc9b672df3a",
      {
        "pageContent": "```json\n{\n    \"source_selection_items\": [\n        {\n            \"source_code\": \"ne_wh\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 35,\n            \"qty_available\": 35\n        },\n        {\n            \"source_code\": \"ne_wh\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 20,\n            \"qty_available\": 50\n        },\n        {\n            \"source_code\": \"west_wh\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 5,\n            \"qty_available\": 15\n        },\n        {\n            \"source_code\": \"west_wh\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 10\n        },\n        {\n            \"source_code\": \"brooklyn\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 10\n        },\n        {\n            \"source_code\": \"brooklyn\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 0\n        },\n        {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 106, "to": 145 } }
        }
      }
    ],
    [
      "4d9e15f0-cf60-4f83-8c86-06c3aa0c861e",
      {
        "pageContent": "{\n            \"source_code\": \"manhattan\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 10\n        },\n        {\n            \"source_code\": \"manhattan\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 0\n        },\n        {\n            \"source_code\": \"huntington\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 10\n        },\n        {\n            \"source_code\": \"huntington\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 0\n        },\n        {\n            \"source_code\": \"berkeley\",\n            \"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 10\n        },\n        {\n            \"source_code\": \"berkeley\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 20\n        },\n        {\n            \"source_code\": \"sausalito\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 145, "to": 182 } }
        }
      }
    ],
    [
      "57857c47-2522-496e-9cb9-6b5920c165bf",
      {
        "pageContent": "\"sku\": \"24-WB01\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 10\n        },\n        {\n            \"source_code\": \"sausalito\",\n            \"sku\": \"24-WB03\",\n            \"qty_to_deduct\": 0,\n            \"qty_available\": 20\n        }\n    ],\n    \"shippable\": true\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 183, "to": 196 } }
        }
      }
    ],
    [
      "9bcfd6d5-d3f8-46eb-a5b2-e96565319ddb",
      {
        "pageContent": "## Verify this step\n\n1. Click **Sales** > **Orders**.\n1. Click the **View** link in the Action column for the order.\n1. Click **Ship**.\n1. Select different sources from the **Sources** menu.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/inventory/run-ssa.md",
          "loc": { "lines": { "from": 198, "to": 203 } }
        }
      }
    ],
    [
      "151c4dc8-0d38-4362-874a-b2a2ba92b4bb",
      {
        "pageContent": "---\ntitle: Order processing tutorial\ndescription: In this tutorial you will configure a store, create a customer, quotes, orders and more using the REST API\nkeywords:\n  - REST\n--- \nimport * as Vars from '../../../../data/vars.js';\n\n# Order processing tutorial\n\nThis tutorial shows a system integrator how REST APIs are used in the lifecycle of an order, including configuring a store and creating a customer; creating quotes, orders, invoices, and shipments; preparing for checkout; and more order-related tasks.\n\nThe **10-step tutorial** generally takes **30 minutes**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/index.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "009fcf98-3898-4cab-bcc7-1cc46dffee06",
      {
        "pageContent": "### Before you begin\n\nComplete the following prerequisites:\n\n*  Install an Adobe Commerce instance with sample data.\n\n  The sample data defines a functional store, called Luma, that sells fitness clothing and accessories. The store does not provide any sandbox accounts for testing credit card payments, so transactions will be simulated using an offline payment method.\n\n*  Install a REST client. You can use any REST client to send calls to Commerce. [Postman](https://www.getpostman.com/) is recommended.\n\n*  Set up [two-factor authentication](https://developer.adobe.com/commerce/testing/functional-testing-framework/two-factor-authentication/). This tutorial assumes Google Authenticator is your 2FA solution.\n\n*  Know how to construct a REST call in Commerce. See [Construct a request](/get-started/gs-web-api-request) for details.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/index.md",
          "loc": { "lines": { "from": 15, "to": 27 } }
        }
      }
    ],
    [
      "f33001db-3702-4a75-a566-90bfd87f0ac9",
      {
        "pageContent": "*  Find the Commerce REST API documentation. You can view the [static REST API documentation on devdocs](../../quick-reference/index.md) or [generate a local API reference](/rest/use-rest/generate-local/).\n\n*  Find the Commerce Merchant documentation. Refer to [Getting Started with <Vars.sitedatavarce/> 2.1](https://docs.magento.com/user-guide/getting-started.html) for information about the Luma store that is created when you install Commerce with the sample data.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/index.md",
          "loc": { "lines": { "from": 29, "to": 31 } }
        }
      }
    ],
    [
      "c088741d-e376-4a83-827a-0f81b3ffb1e7",
      {
        "pageContent": "### Other resources\n\n*  [REST Tutorials](/rest/tutorials/index/) provides additional information about completing any Commerce REST tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/index.md",
          "loc": { "lines": { "from": 33, "to": 35 } }
        }
      }
    ],
    [
      "d89edab3-363f-45fe-840b-9d5f6cb86831",
      {
        "pageContent": "---\ntitle: Step 5. Add items to the cart\ndescription: In this step of the tutorial you will add items to the cart\nkeywords:\n  - REST\n--- \n \n# Step 5. Add items to the cart\n\nThis step shows how to add a simple product, a downloadable product, and a bundle product to the cart.\n\nThese calls are performed on behalf of a customer, and the customer's token is specified in the authorization header.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nUse the `V1/guest-carts/<cartId>/items` endpoint to add items to the cart on behalf of a guest. Do not include an authorization token. The payload and response is same as the logged-in customer for all product types, except for from quote ID in the payload.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "ab6211d1-a74d-43eb-aa54-47bb72cc64a0",
      {
        "pageContent": "### Add a simple product to a cart\n\nTo add a simple product to a cart, you must provide a `sku`, the quantity, and the quote ID, which was generated when the cart was created.\n\nThe following example adds an orange medium-sized Radiant women's t-shirt (`sku`: `WS12-M-Orange`) to the cart.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine/items`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <customer token>`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"WS12-M-Orange\",\n    \"qty\": 1,\n    \"quote_id\": \"4\"\n  }\n}\n```\n\n#### Response\n\n```json\n{\n  \"item_id\": 7,\n  \"sku\": \"WS12-M-Orange\",\n  \"qty\": 1,\n  \"name\": \"Radiant Tee-M-Orange\",\n  \"price\": 19.99,\n  \"product_type\": \"simple\",\n  \"quote_id\": \"4\"\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 18, "to": 60 } }
        }
      }
    ],
    [
      "7d8b5ccb-b522-48c1-9848-17ae511110b1",
      {
        "pageContent": "### Add a downloadable product to a cart\n\nThe requirements for adding a downloadable product to a cart are the same as a simple product. You must specify the `sku`, the quantity, and quote ID.\n\nThe following example adds the downloadable product Advanced Pilates & Yoga (`sku`: 240-LV08)\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine/items`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <customer token>`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />\n\n#### Payload\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"240-LV08\",\n    \"qty\": 1,\n    \"quote_id\": \"4\"\n  }\n}\n```\n\n#### Response\n\n```json\n{\n  \"item_id\": 8,\n  \"sku\": \"240-LV08\",\n  \"qty\": 1,\n  \"name\": \"Advanced Pilates & Yoga (Strength)\",\n  \"price\": 18,\n  \"product_type\": \"downloadable\",\n  \"quote_id\": \"4\",\n  \"product_option\": {\n    \"extension_attributes\": {\n      \"downloadable_option\": {\n        \"downloadable_links\": [\n          5\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 62, "to": 113 } }
        }
      }
    ],
    [
      "10665c2b-a465-4721-9f6a-e4e559c74937",
      {
        "pageContent": "### Add a configurable product to a cart\n\nTo add a configurable product to a cart, you must specify the `sku` as well as the set of `option_id`/`option_value` pairs that make the product configurable.\n\nIn this example, we'll add the Chaz Kangeroo Hoodie (`sku: MH01`) configurable product to the cart. This product comes in three colors (black, gray, and orange) and five sizes (XS, S, M, L, XL). In the sample data, the `option_id` values for Size and Color are `141` and `93`, respectively. You can use the `GET /V1/configurable-products/:sku/options/all` call to determine the `option_id` values for the given SKU.\n\nThe `GET /V1/configurable-products/:sku/children` call returns information about each combination of color and size, 15 in all for `MH01`. The following sample shows the returned values for `size` and `color` for a small gray Chaz Kangeroo Hoodie.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 115, "to": 121 } }
        }
      }
    ],
    [
      "720fea32-83ce-44bb-9a52-f0841620fe72",
      {
        "pageContent": "```json\n{\n  \"custom_attributes\": [\n    {\n      \"attribute_code\": \"size\",\n      \"value\": \"168\"\n    },\n    {\n      \"attribute_code\": \"color\",\n      \"value\": \"52\"\n    }\n  ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 123, "to": 135 } }
        }
      }
    ],
    [
      "82104aa1-1f2d-4b69-9c34-e4cf8ee5f58d",
      {
        "pageContent": "```\n\nWe now know the values for `option_value` for `size` and `color` are `168` and `52`, so we're ready to add the product to the cart.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine/items`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <customer token>`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 136, "to": 150 } }
        }
      }
    ],
    [
      "63e57fdb-4b85-44e0-aed3-47c9786c19ad",
      {
        "pageContent": "#### Payload\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"MH01\",\n    \"qty\": 1,\n    \"quote_id\": \"4\",\n    \"product_option\": {\n      \"extension_attributes\": {\n        \"configurable_item_options\": [\n          {\n            \"option_id\": \"93\",\n            \"option_value\": 52\n          },\n          {\n            \"option_id\": \"141\",\n            \"option_value\": 168\n          }\n        ]\n      }\n    },\n    \"extension_attributes\": {}\n  }\n}\n```\n\n#### Response\n\n```json\n{\n  \"item_id\": 13,\n  \"sku\": \"MH01-S-Gray\",\n  \"qty\": 1,\n  \"name\": \"Chaz Kangeroo Hoodie\",\n  \"price\": 52,\n  \"product_type\": \"configurable\",\n  \"quote_id\": \"4\",\n  \"product_option\": {\n    \"extension_attributes\": {\n      \"configurable_item_options\": [\n        {\n          \"option_id\": \"93\",\n          \"option_value\": 52\n        },\n        {\n          \"option_id\": \"141\",\n          \"option_value\": 168\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 152, "to": 205 } }
        }
      }
    ],
    [
      "ff0e5665-6bb2-47ae-ba70-1b4db6a3d0ed",
      {
        "pageContent": "### Add a bundle product to a cart\n\nThe sample data provides one bundled product, the Sprite Yoga Companion Kit (`sku`: `24-WG080`). The kit contains the following items:\n\n*  Sprite Statis Ball in sizes 55 cm (`sku`: `24-WG081-blue`), 65 cm (`sku`: `24-WG082-blue`), or 75 cm (`sku`: `24-WG083-blue`)\n*  Sprite Foam Yoga brick (`sku`: `24-WG084`)\n*  Sprite Yoga Strap in lengths 6 ft (`sku`: `24-WG085`), 8 ft (`sku`: `24-WG086`), or 10 ft (`sku`: `24-WG087`)\n*  Sprite Foam Roller (`sku`: `24-WG088`)\n\nTo add a bundle product to a cart, you must specify the `sku` of the bundle product, but not the individual items. You add individual items to the bundle product by specifying the `id` defined in the item's `product_links` object. The `product_links` object primarily describes the ordering and placement of options on the customization page, but it also links an item's `sku` and `id` to the `sku` of the bundle product.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 207, "to": 216 } }
        }
      }
    ],
    [
      "4aa64db7-80e5-47c7-a78d-f98f4213f13a",
      {
        "pageContent": "The `GET <host>/rest/<store_code>/V1/bundle-products/24-WG080/options/all` call returns `id` values, as shown in the following simplified response:\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 218, "to": 221 } }
        }
      }
    ],
    [
      "67141726-da6f-4d55-b00d-69bf008618a0",
      {
        "pageContent": "```json\n[\n  {\n    \"option_id\": 1,\n    \"title\": \"Sprite Stasis Ball\",\n    \"required\": true,\n    \"type\": \"radio\",\n    \"position\": 1,\n    \"sku\": \"24-WG080\",\n    \"product_links\": [\n      {\n        \"id\": \"1\",\n        \"sku\": \"24-WG081-blue\",\n        \"option_id\": 1,\n        \"qty\": 1\n      },\n      {\n        \"id\": \"2\",\n        \"sku\": \"24-WG082-blue\",\n        \"option_id\": 1,\n        \"qty\": 1\n      },\n      {\n        \"id\": \"3\",\n        \"sku\": \"24-WG083-blue\",\n        \"option_id\": 1,\n        \"qty\": 1\n      }\n    ]\n  },\n  {\n    \"option_id\": 2,\n    \"title\": \"Sprite Foam Yoga Brick\",\n    \"required\": true,\n    \"type\": \"radio\",\n    \"position\": 2,\n    \"sku\": \"24-WG080\",\n    \"product_links\": [\n      {\n        \"id\": \"4\",\n        \"sku\": \"24-WG084\",\n        \"option_id\": 2,\n        \"qty\": 1\n      }\n    ]\n  },\n  {\n    \"option_id\": 3,\n    \"title\": \"Sprite Yoga Strap\",\n    \"required\": true,\n    \"type\": \"radio\",\n    \"position\": 3,\n    \"sku\": \"24-WG080\",\n    \"product_links\": [\n      {\n        \"id\": \"5\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 223, "to": 278 } }
        }
      }
    ],
    [
      "2f88a8e5-9542-43c4-b818-1917a4f164df",
      {
        "pageContent": "\"id\": \"5\",\n        \"sku\": \"24-WG085\",\n        \"option_id\": 3,\n        \"qty\": 1\n      },\n      {\n        \"id\": \"6\",\n        \"sku\": \"24-WG086\",\n        \"option_id\": 3,\n        \"qty\": 1\n      },\n      {\n        \"id\": \"7\",\n        \"sku\": \"24-WG087\",\n        \"option_id\": 3,\n        \"qty\": 1\n      }\n    ]\n  },\n  {\n    \"option_id\": 4,\n    \"title\": \"Sprite Foam Roller\",\n    \"required\": true,\n    \"type\": \"radio\",\n    \"position\": 4,\n    \"sku\": \"24-WG080\",\n    \"product_links\": [\n      {\n        \"id\": \"8\",\n        \"sku\": \"24-WG088\",\n        \"option_id\": 4,\n        \"qty\": 1\n      }\n    ]\n  }\n]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 278, "to": 313 } }
        }
      }
    ],
    [
      "235b9e73-6893-4963-9aee-86cd50a0b7a3",
      {
        "pageContent": "```\n\n</details>\n\nFor this example, we'll configure the Sprite Yoga Companion Kit as follows:\n\n*  65 cm Sprite Stasis Ball (`id`: `2`)\n*  Sprite Foam Yoga Brick (`id`: `4`)\n*  8 ft Sprite Yoga strap (`id`: `6`)\n*  Sprite Foam Roller (`id`: `8`)\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine/items`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <customer token>`\n\n<CodeBlock slots=\"heading, code\" repeat=\"2\" languages=\"JSON, JSON\" />",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 314, "to": 335 } }
        }
      }
    ],
    [
      "aeac1bbd-6d81-4a98-bc4f-b5183efe8f38",
      {
        "pageContent": "#### Payload\n\n```json\n{\n  \"cartItem\": {\n    \"sku\": \"24-WG080\",\n    \"qty\": 1,\n    \"quote_id\": \"4\",\n    \"product_option\": {\n      \"extension_attributes\": {\n        \"bundle_options\": [\n          {\n            \"option_id\": 1,\n            \"option_qty\": 1,\n            \"option_selections\": [2]\n          },\n          {\n            \"option_id\": 2,\n            \"option_qty\": 1,\n            \"option_selections\": [4]\n          },\n          {\n            \"option_id\": 3,\n            \"option_qty\": 1,\n            \"option_selections\": [6]\n          },\n          {\n            \"option_id\": 4,\n            \"option_qty\": 1,\n            \"option_selections\": [8]\n          }\n        ]\n      }\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 337, "to": 373 } }
        }
      }
    ],
    [
      "94f19458-2a67-48bf-8cb1-31d4f268c25c",
      {
        "pageContent": "#### Response\n\n```json\n{\n  \"item_id\": 9,\n  \"sku\": \"24-WG080-24-WG084-24-WG088-24-WG082-blue-24-WG086\",\n  \"qty\": 1,\n  \"name\": \"Sprite Yoga Companion Kit\",\n  \"price\": 68,\n  \"product_type\": \"bundle\",\n  \"quote_id\": \"4\",\n  \"product_option\": {\n    \"extension_attributes\": {\n      \"bundle_options\": [\n        {\n          \"option_id\": 1,\n          \"option_qty\": 1,\n          \"option_selections\": [\n            2\n          ]\n        },\n        {\n          \"option_id\": 2,\n          \"option_qty\": 1,\n          \"option_selections\": [\n            4\n          ]\n        },\n        {\n          \"option_id\": 3,\n          \"option_qty\": 1,\n          \"option_selections\": [\n            6\n          ]\n        },\n        {\n          \"option_id\": 4,\n          \"option_qty\": 1,\n          \"option_selections\": [\n            8\n          ]\n        }\n      ]\n    }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 375, "to": 421 } }
        }
      }
    ],
    [
      "a0a488be-ff5a-48e8-9b70-70a75a3554d8",
      {
        "pageContent": "### Verify this step\n\nSign in as the customer and click on the shopping cart. All the items you added are displayed.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-add-items.md",
          "loc": { "lines": { "from": 423, "to": 425 } }
        }
      }
    ],
    [
      "9278d287-6648-471b-89be-df3af17df8e4",
      {
        "pageContent": "---\ntitle: Step 2. Get the admin token\ndescription: In this step of the tutorial you will get the admin token\nkeywords:\n  - REST\n--- \n \n# Step 2. Get the admin token\n\nEach step in this tutorial provides the following information:\n\n**Endpoint:**\n\nThis section lists the HTTP verb and full path to the endpoint. The basic structure of a REST call in Adobe Commerce is\n\n`<HTTP verb> http://<host>/rest/<scope>/<endpoint>`\n\nwhere:\n\nElement | Description\n--- | ---\n`HTTP verb` | One of `GET`, `POST`, `PUT`, or `DELETE`\n`host` | The hostname or IP address (and optionally, port) of the Commerce installation.\n`scope` | Specifies which store the call affects. In this tutorial, this value is `default`.\n`endpoint` | The full URI (Uniform Resource Identifier) to the endpoint. These values always start with `/V1`. For example, `/V1/orders/4`.\n\n**HTTP headers:**\n\nThis section indicates which key/value pairs you must specify in the HTTP headers. All calls require one or more HTTP headers.\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-admin-token.md",
          "loc": { "lines": { "from": 1, "to": 31 } }
        }
      }
    ],
    [
      "f2473a23-7f3d-4baa-8c14-e46860a6b0ff",
      {
        "pageContent": "**Payload:**\n\nThis section lists the information that is sent to Commerce. All payload samples are valid and can be copied and pasted into your calls, but you might need to change the `id` values that Commerce returns.\n\n**Response:**\n\nThis section lists the information that Commerce sends to the REST client. These values are often referenced in other steps in the tutorial. The values Commerce returnsmight be different than the values listed in the examples provided in this tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-admin-token.md",
          "loc": { "lines": { "from": 31, "to": 37 } }
        }
      }
    ],
    [
      "d95698eb-8f26-46c9-9e23-9ecd5513d282",
      {
        "pageContent": "### Get the admin authorization token\n\nIn a production environment, you would typically [create an integration](/get-started/create-integration) and supply the integration token with any REST call that requires admin privileges. The token allows Commerce to verify that the caller is authorized to access a system resource.\n\nHere, we will supply an admin token instead. To get a token, you must have 2FA configured. This tutorial assumes that you are using Google Authenticator as your 2FA solution. The endpoint and payload will be different for other 2FA solutions. See [Two-Factor Authentication](https://developer.adobe.com/commerce/testing/functional-testing-framework/two-factor-authentication/) for more information.\n\nYour request must specify the admin user's `username`, `password` and `otp` (one time password). The `otp` value is the six-digit authorization code that Google Authenticator generates.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-admin-token.md",
          "loc": { "lines": { "from": 39, "to": 45 } }
        }
      }
    ],
    [
      "c2515ef7-440e-4fe3-9b67-c40137239cd7",
      {
        "pageContent": "By default, an admin token is valid for 4 hours. To change this value, log in to Admin and go to **Stores** > **Settings** > **Configuration** > **Services** > **OAuth** > **Access Token Expiration** > **Admin Token Lifetime (hours)**.\n\nSee [Token-based authentication](/get-started/authentication/gs-authentication-token) for more information about authorization tokens.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/tfa/provider/google/authenticate`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n**Payload:**\n\n```json\n{\n  \"username\": \"admin\",\n  \"password\": \"<admin-password>\",\n  \"otp\": \"<otp-value>\"\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-admin-token.md",
          "loc": { "lines": { "from": 47, "to": 66 } }
        }
      }
    ],
    [
      "bbb89487-0098-44ba-88f2-c22f28c140f5",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce returnsthe admin's access token.\n\n`5r8cvmpr11j6gmau8990rcj2qk7unh8i`\n\nThis token must be specified in the authorization header of every call that requires admin permissions.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-admin-token.md",
          "loc": { "lines": { "from": 67, "to": 75 } }
        }
      }
    ],
    [
      "a057c02a-c93c-44e2-8e93-5e571eaf33ad",
      {
        "pageContent": "### Verify this step\n\nThere are no additional verification steps. Tokens are not displayed in Admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-admin-token.md",
          "loc": { "lines": { "from": 77, "to": 79 } }
        }
      }
    ],
    [
      "98b678de-ca50-4c92-b014-5ec4ba48ca70",
      {
        "pageContent": "---\ntitle: Step 1. Configure the store\ndescription: In this step of the tutorial you will configure the store\nkeywords:\n  - REST\n--- \n \n# Step 1. Configure the store\n\nThe default Luma store needs additional configuration to run the REST calls mentioned in this tutorial.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-config-store.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "ee8ff539-464c-41c5-9db0-0ba72a40bd28",
      {
        "pageContent": "### Set the payment method\n\nSince the Luma store is for demonstration purposes only, it is not set up to handle credit card payments. However, it can simulate any of the following offline payment methods:\n\nPayment type | Configuration name | Enabled by default?\n--- | --- | ---\nCheck/Money Order | `checkmo` | Yes\nBank Transfer Payment | `banktransfer` | No\nCash on Delivery | `cashondelivery` | No\nPurchase Order | `purchaseorder` | No\nZero Subtotal Checkout | `free` | Yes\n\nIn this tutorial, configure Adobe Commerce to accept bank transfer payments. To allow bank transfer payments (or any other offline payment method) as a payment method, log in to Admin and select **Stores** > **Settings** > **Configuration** > **Sales** > **Payment Methods**. Then enable the payment method and click **Save**.\n\nUpon clicking **Save**, a notification message states that the cache needs to be refreshed. Click the **System** > **Tools** > **Cache Management** link to refresh the cache.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-config-store.md",
          "loc": { "lines": { "from": 12, "to": 26 } }
        }
      }
    ],
    [
      "9c07d945-c4db-4599-be31-625000b63bfb",
      {
        "pageContent": "### Deactivate a cart price rule\n\nBy default, the Luma store includes a promotion where shipping is free if you spend at least $50. Since this tutorial shows shipping calculations, we need to deactivate this promotion. The promotion is defined in a cart price rule, which is also known as a sales rule. When you deactivate the cart price rule, shipping is charged at a flat rate of $5 per item.\n\nTo disable this cart price rule, select **Marketing** > **Promotions** > **Cart Price Rules**. Then edit rule ID 2 (Spend $50 or more - shipping is free!), and toggle the **Active** switch to **No**. Be sure to save the change.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-config-store.md",
          "loc": { "lines": { "from": 28, "to": 32 } }
        }
      }
    ],
    [
      "1047c070-5e0d-48de-b7e2-f5faae5ef333",
      {
        "pageContent": "### Configure supported delivery methods (optional)\n\nIf an order contains one or more simple, configurable, bundle, or group products, then you must specify how the order will be shipped. Downloadable items cannot be shipped, and Commerce does not calculate shipping charges for downloadable items.\n\nSince we are not actually shipping any products in this tutorial, we do not need to set up an account with a shipping company such as UPS or Federal Express. Instead, we can use the offline delivery methods that are configured by default.\n\nShipping type | Configuration name | Enabled by default?\n--- | --- | ---\nFlat rate | `flatrate` | Yes\nTable rate | `tablerate` | Yes\nFree shipping | `freeshipping` | No\n\nIf you want to change which offline delivery methods are available, select **Stores** > Settings > **Configuration** > **Sales** > **Delivery Methods** in Admin. Enable or disable the delivery methods as desired, then click **Save**.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-config-store.md",
          "loc": { "lines": { "from": 34, "to": 46 } }
        }
      }
    ],
    [
      "cc6a5e06-9bff-4096-96be-7a96840bd8ad",
      {
        "pageContent": "Upon clicking **Save**, a notification message states that the cache needs to be refreshed. Click the **Cache Management** link to refresh the cache.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-config-store.md",
          "loc": { "lines": { "from": 48, "to": 48 } }
        }
      }
    ],
    [
      "5824699c-5251-4378-8147-8c8728a506e3",
      {
        "pageContent": "---\ntitle: Step 3. Create a customer\ndescription: In this step of the tutorial you will create a customer\nkeywords:\n  - REST\n--- \n \n# Step 3. Create a customer\n\nCustomers can make purchases in three ways:\n\n*  As a logged-in user\n*  As a guest user who logs in or creates an account when the order is placed\n*  As a guest user who does not create an account\n\nThis tutorial creates an order by a logged-in user. Adobe Commerce provides additional REST endpoints for handling guest users.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-customer.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "0f1e0078-471f-477e-8619-f5da79c1a97b",
      {
        "pageContent": "### Create a customer account\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nThis example shows a simplified way of creating a customer account. Typically, you would not define a customer password using plain text. Instead, you would specify the payload without the `password` parameter. By default if the call is successful, Commerce sends a \"Welcome\" email to the customer that includes a request to set the password. You could also initiate a password reset email by calling `PUT /V1/customers/password`.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/customers`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n**Payload:**\n\nIt is recommended that you substitute the value of the `email` parameter with a real email address so that you receive all notifications.\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-customer.md",
          "loc": { "lines": { "from": 18, "to": 37 } }
        }
      }
    ],
    [
      "52761eca-7f4f-4f4e-b673-b6a6b14fc0c8",
      {
        "pageContent": "```json\n{\n  \"customer\": {\n    \"email\": \"jdoe@example.com\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"addresses\": [\n      {\n        \"defaultShipping\": true,\n        \"defaultBilling\": true,\n        \"firstname\": \"Jane\",\n        \"lastname\": \"Doe\",\n        \"region\": {\n          \"regionCode\": \"NY\",\n          \"region\": \"New York\",\n          \"regionId\": 43\n        },\n        \"postcode\": \"10755\",\n        \"street\": [\n          \"123 Oak Ave\"\n        ],\n        \"city\": \"Purchase\",\n        \"telephone\": \"512-555-1111\",\n        \"countryId\": \"US\"\n      }\n    ]\n  },\n  \"password\": \"Password1\"\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-customer.md",
          "loc": { "lines": { "from": 39, "to": 67 } }
        }
      }
    ],
    [
      "e075d4f1-b8d0-432a-9a31-065cb051cede",
      {
        "pageContent": "```\n\n</details>\n\n**Response:**\n\nCommerce assigned this user `id` value of `2`.\n\n<details>\n      <summary><b>Show code sample</b></summary>\n\n```json\n{\n  \"id\": 2,\n  \"group_id\": 1,\n  \"default_billing\": \"2\",\n  \"default_shipping\": \"2\",\n  \"created_at\": \"2017-01-31 01:18:13\",\n  \"updated_at\": \"2017-01-31 01:18:13\",\n  \"created_in\": \"Default Store View\",\n  \"email\": \"jdoe@example.com\",\n  \"firstname\": \"Jane\",\n  \"lastname\": \"Doe\",\n  \"store_id\": 1,\n  \"website_id\": 1,\n  \"addresses\": [\n    {\n      \"id\": 2,\n      \"customer_id\": 2,\n      \"region\": {\n        \"region_code\": \"NY\",\n        \"region\": \"New York\",\n        \"region_id\": 43\n      },\n      \"region_id\": 43,\n      \"country_id\": \"US\",\n      \"street\": [\n        \"123 Oak Ave\"\n      ],\n      \"telephone\": \"512-555-1111\",\n      \"postcode\": \"10755\",\n      \"city\": \"Purchase\",\n      \"firstname\": \"Jane\",\n      \"lastname\": \"Doe\",\n      \"default_shipping\": true,\n      \"default_billing\": true\n    }\n  ],\n  \"disable_auto_group_change\": 0\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-customer.md",
          "loc": { "lines": { "from": 68, "to": 117 } }
        }
      }
    ],
    [
      "9fa60d5f-cb87-48d3-9315-eeb46fff1c8a",
      {
        "pageContent": "```\n\n</details>\n\nYou can log in to the Luma store using the username `jdoe@example.com` and password `Password1`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-customer.md",
          "loc": { "lines": { "from": 118, "to": 122 } }
        }
      }
    ],
    [
      "d716ffc7-ad37-4b22-b3a7-37b0f4d1810d",
      {
        "pageContent": "### Get the customer's access token\n\nTo get a customer's access token, you must specify the customer's username and password in the payload. You do not need to specify an admin authorization token.\n\nBy default, a customer token is valid for 1 hour. To change this value, log in to Admin and go to **Stores** > Settings > **Configuration** > **Services** > **OAuth** > **Access Token Expiration**.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/integration/customer/token`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n**Payload:**\n\n```json\n{\n  \"username\": \"jdoe@example.com\",\n  \"password\": \"Password1\"\n}\n```\n\n**Response:**\n\nCommerce returns the customer's access token. This token must be specified in the authorization header of every call the customer makes on his or her own behalf.\n\n`q0u66k8h42yaevtchv09uyy3y9gaj2ap`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-customer.md",
          "loc": { "lines": { "from": 124, "to": 151 } }
        }
      }
    ],
    [
      "0b507a7c-c48a-41f3-b4da-4eb93624c73c",
      {
        "pageContent": "### Verify this step\n\n1. Log in to the Luma website using the email `jdoe@example.com` and password `Password1`.\n1. Click the account name (Jane) in the upper right corner and select **My Account**.\n1. Click **Address Book** to view the default billing and shipping addresses.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-customer.md",
          "loc": { "lines": { "from": 153, "to": 157 } }
        }
      }
    ],
    [
      "11f2b5b5-d0f9-4604-85dd-ba28185b3c52",
      {
        "pageContent": "---\ntitle: Step 8. Create an invoice\ndescription: In this step of the tutorial you will create an invoice\nkeywords:\n  - REST\n--- \n \n# Step 8. Create an invoice\n\nYou create an invoice after you receive payment for an order. In this example, the order was paid offline via a bank transfer. Therefore, you must tell Adobe Commerce that payment for the order has been captured.\n\n### Capture payment\n\nThis example creates a full invoice. You can create a partial invoice by adding to the payload an array of items to be invoiced.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/order/3/invoice`\n\nwhere `3` is the `orderid`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer` `<administrator token>`\n\n**Payload:**\n\n```json\n{\n  \"capture\": true,\n  \"notify\": true\n}\n```\n\n**Response:**\n\nAn invoice `id`, such as `3`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 1, "to": 39 } }
        }
      }
    ],
    [
      "cecf53b7-5f65-4593-9b29-c23569de97e2",
      {
        "pageContent": "### View the invoice\n\nAn invoice is structurally similar to an order, but an order contains more details.\n\n**Endpoint:**\n\n`GET <host>/rest/<store_code>/V1/invoices/3`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <administrator token>`\n\n**Payload:**\n\nNot applicable\n\n**Response:**\n\nYou will use the `order_item_id` values to create a shipment in the next step.\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 41, "to": 64 } }
        }
      }
    ],
    [
      "0ca155ca-1917-4654-aa36-ba3320f825f4",
      {
        "pageContent": "```json\n{\n  \"base_currency_code\": \"USD\",\n  \"base_discount_amount\": 0,\n  \"base_grand_total\": 165,\n  \"base_discount_tax_compensation_amount\": 0,\n  \"base_shipping_amount\": 5,\n  \"base_shipping_incl_tax\": 5,\n  \"base_shipping_tax_amount\": 0,\n  \"base_subtotal\": 160,\n  \"base_subtotal_incl_tax\": 160,\n  \"base_tax_amount\": 0,\n  \"base_to_global_rate\": 1,\n  \"base_to_order_rate\": 1,\n  \"billing_address_id\": 6,\n  \"can_void_flag\": 0,\n  \"created_at\": \"2017-08-21 22:36:02\",\n  \"discount_amount\": 0,\n  \"email_sent\": 1,\n  \"entity_id\": 3,\n  \"global_currency_code\": \"USD\",\n  \"grand_total\": 165,\n  \"discount_tax_compensation_amount\": 0,\n  \"increment_id\": \"000000003\",\n  \"order_currency_code\": \"USD\",\n  \"order_id\": 3,\n  \"shipping_address_id\": 5,\n  \"shipping_amount\": 5,\n  \"shipping_discount_tax_compensation_amount\": 0,\n  \"shipping_incl_tax\": 5,\n  \"shipping_tax_amount\": 0,\n  \"state\": 2,\n  \"store_currency_code\": \"USD\",\n  \"store_id\": 1,\n  \"store_to_base_rate\": 0,\n  \"store_to_order_rate\": 0,\n  \"subtotal\": 160,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 66, "to": 102 } }
        }
      }
    ],
    [
      "db497b38-7dfe-475b-bb31-2aba1662e3de",
      {
        "pageContent": "\"subtotal\": 160,\n  \"subtotal_incl_tax\": 160,\n  \"tax_amount\": 0,\n  \"total_qty\": 9,\n  \"updated_at\": \"2017-08-21 22:36:03\",\n  \"items\": [\n    {\n      \"base_discount_tax_compensation_amount\": 0,\n      \"base_price\": 22,\n      \"base_price_incl_tax\": 22,\n      \"base_row_total\": 22,\n      \"base_row_total_incl_tax\": 22,\n      \"base_tax_amount\": 0,\n      \"entity_id\": 3,\n      \"discount_tax_compensation_amount\": 0,\n      \"name\": \"Radiant Tee-M-Orange\",\n      \"parent_id\": 3,\n      \"price\": 22,\n      \"price_incl_tax\": 22,\n      \"product_id\": 1553,\n      \"row_total\": 22,\n      \"row_total_incl_tax\": 22,\n      \"sku\": \"WS12-M-Orange\",\n      \"tax_amount\": 0,\n      \"order_item_id\": 3,\n      \"qty\": 1\n    },\n    {\n      \"base_discount_tax_compensation_amount\": 0,\n      \"base_price\": 18,\n      \"base_price_incl_tax\": 18,\n      \"base_row_total\": 18,\n      \"base_row_total_incl_tax\": 18,\n      \"base_tax_amount\": 0,\n      \"entity_id\": 4,\n      \"discount_tax_compensation_amount\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 102, "to": 137 } }
        }
      }
    ],
    [
      "0f527569-37c4-4844-a477-70ae08e38650",
      {
        "pageContent": "\"name\": \"Advanced Pilates & Yoga (Strength)\",\n      \"parent_id\": 3,\n      \"price\": 18,\n      \"price_incl_tax\": 18,\n      \"product_id\": 49,\n      \"row_total\": 18,\n      \"row_total_incl_tax\": 18,\n      \"sku\": \"240-LV08\",\n      \"tax_amount\": 0,\n      \"order_item_id\": 4,\n      \"qty\": 1\n    },\n    {\n      \"base_price\": 68,\n      \"base_price_incl_tax\": 68,\n      \"entity_id\": 5,\n      \"name\": \"Sprite Yoga Companion Kit\",\n      \"parent_id\": 3,\n      \"price\": 68,\n      \"price_incl_tax\": 68,\n      \"product_id\": 51,\n      \"sku\": \"24-WG080-24-WG084-24-WG088-24-WG082-blue-24-WG086\",\n      \"order_item_id\": 5,\n      \"qty\": 1\n    },\n    {\n      \"base_discount_tax_compensation_amount\": 0,\n      \"base_price\": 27,\n      \"base_price_incl_tax\": 27,\n      \"base_row_total\": 27,\n      \"base_row_total_incl_tax\": 27,\n      \"base_tax_amount\": 0,\n      \"entity_id\": 6,\n      \"discount_tax_compensation_amount\": 0,\n      \"name\": \"Sprite Stasis Ball 65 cm\",\n      \"parent_id\": 3,\n      \"price\": 27,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 138, "to": 174 } }
        }
      }
    ],
    [
      "1f1c4332-3590-44b5-9a8f-542fdd111032",
      {
        "pageContent": "\"price\": 27,\n      \"price_incl_tax\": 27,\n      \"product_id\": 29,\n      \"row_total\": 27,\n      \"row_total_incl_tax\": 27,\n      \"sku\": \"24-WG082-blue\",\n      \"tax_amount\": 0,\n      \"order_item_id\": 6,\n      \"qty\": 1\n    },\n    {\n      \"base_discount_tax_compensation_amount\": 0,\n      \"base_price\": 5,\n      \"base_price_incl_tax\": 5,\n      \"base_row_total\": 5,\n      \"base_row_total_incl_tax\": 5,\n      \"base_tax_amount\": 0,\n      \"entity_id\": 7,\n      \"discount_tax_compensation_amount\": 0,\n      \"name\": \"Sprite Foam Yoga Brick\",\n      \"parent_id\": 3,\n      \"price\": 5,\n      \"price_incl_tax\": 5,\n      \"product_id\": 21,\n      \"row_total\": 5,\n      \"row_total_incl_tax\": 5,\n      \"sku\": \"24-WG084\",\n      \"tax_amount\": 0,\n      \"order_item_id\": 7,\n      \"qty\": 1\n    },\n    {\n      \"base_discount_tax_compensation_amount\": 0,\n      \"base_price\": 17,\n      \"base_price_incl_tax\": 17,\n      \"base_row_total\": 17,\n      \"base_row_total_incl_tax\": 17,\n      \"base_tax_amount\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 174, "to": 211 } }
        }
      }
    ],
    [
      "a478339b-71b0-45d3-a575-a4dd319154d2",
      {
        "pageContent": "\"entity_id\": 8,\n      \"discount_tax_compensation_amount\": 0,\n      \"name\": \"Sprite Yoga Strap 8 foot\",\n      \"parent_id\": 3,\n      \"price\": 17,\n      \"price_incl_tax\": 17,\n      \"product_id\": 34,\n      \"row_total\": 17,\n      \"row_total_incl_tax\": 17,\n      \"sku\": \"24-WG086\",\n      \"tax_amount\": 0,\n      \"order_item_id\": 8,\n      \"qty\": 1\n    },\n    {\n      \"base_discount_tax_compensation_amount\": 0,\n      \"base_price\": 19,\n      \"base_price_incl_tax\": 19,\n      \"base_row_total\": 19,\n      \"base_row_total_incl_tax\": 19,\n      \"base_tax_amount\": 0,\n      \"entity_id\": 9,\n      \"discount_tax_compensation_amount\": 0,\n      \"name\": \"Sprite Foam Roller\",\n      \"parent_id\": 3,\n      \"price\": 19,\n      \"price_incl_tax\": 19,\n      \"product_id\": 22,\n      \"row_total\": 19,\n      \"row_total_incl_tax\": 19,\n      \"sku\": \"24-WG088\",\n      \"tax_amount\": 0,\n      \"order_item_id\": 9,\n      \"qty\": 1\n    },\n    {\n      \"base_discount_tax_compensation_amount\": 0,\n      \"base_price\": 52,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 212, "to": 249 } }
        }
      }
    ],
    [
      "43f00ad1-5e73-47e0-9a93-04383143f0c2",
      {
        "pageContent": "\"base_price_incl_tax\": 52,\n      \"base_row_total\": 52,\n      \"base_row_total_incl_tax\": 52,\n      \"base_tax_amount\": 0,\n      \"entity_id\": 10,\n      \"discount_tax_compensation_amount\": 0,\n      \"name\": \"Chaz Kangeroo Hoodie\",\n      \"parent_id\": 3,\n      \"price\": 52,\n      \"price_incl_tax\": 52,\n      \"product_id\": 67,\n      \"row_total\": 52,\n      \"row_total_incl_tax\": 52,\n      \"sku\": \"MH01-S-Gray\",\n      \"tax_amount\": 0,\n      \"order_item_id\": 10,\n      \"qty\": 1\n    },\n    {\n      \"base_price\": 0,\n      \"entity_id\": 11,\n      \"name\": \"Chaz Kangeroo Hoodie-S-Gray\",\n      \"parent_id\": 3,\n      \"price\": 0,\n      \"product_id\": 56,\n      \"sku\": \"MH01-S-Gray\",\n      \"order_item_id\": 11,\n      \"qty\": 1\n    }\n  ],\n  \"comments\": []\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 250, "to": 281 } }
        }
      }
    ],
    [
      "c8a8a1d5-a652-4763-a66e-06fc4339c6cb",
      {
        "pageContent": "```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 282, "to": 284 } }
        }
      }
    ],
    [
      "f8a0b0f7-8d18-4b54-a378-0c741beb34db",
      {
        "pageContent": "### Verify this step\n\nLog in to Admin. Click **Sales** > **Invoices**. The invoice is displayed in the grid. The status is Paid. Then click **Sales** > **Orders**. The status is Processing.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-invoice.md",
          "loc": { "lines": { "from": 286, "to": 288 } }
        }
      }
    ],
    [
      "98b7563e-fa7a-4a90-9b5c-b8aef0738036",
      {
        "pageContent": "---\ntitle: Step 7. Create an order\ndescription: In this step of the tutorial you will create an order\nkeywords:\n  - REST\n--- \n \n# Step 7. Create an order\n\nThe shopping cart contains three items totaling $108. The shipping charges are $10, making the grand total $118. We're now ready to convert the quote to an order.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 1, "to": 10 } }
        }
      }
    ],
    [
      "f7bf882f-a0dc-4aaa-ac33-59d8f024dcf2",
      {
        "pageContent": "### Send payment information\n\nWhen you submit payment information, Adobe Commerce creates an order and sends an order confirmation to the customer. Since we are using an offline payment method in this tutorial, we do not need to provide detailed payment information. The endpoint used in this example requires only the payment method and billing address information.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nUse the `V1/guest-carts/<cartId>/payment-information` endpoint to set the payment information on behalf of a guest. Do not include an authorization token.\nYou must include the `email` attribute in the payload at the same level as `paymentMethod` and `billing_address`.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine/payment-information`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <customer token>`\n\n**Payload:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 12, "to": 31 } }
        }
      }
    ],
    [
      "32abf5a5-e79d-417e-8376-8a5781dc0915",
      {
        "pageContent": "**Payload:**\n\n```json\n{\n  \"paymentMethod\": {\n    \"method\": \"banktransfer\"\n  },\n  \"billing_address\": {\n    \"email\": \"jdoe@example.com\",\n    \"region\": \"New York\",\n    \"region_id\": 43,\n    \"region_code\": \"NY\",\n    \"country_id\": \"US\",\n    \"street\": [\n      \"123 Oak Ave\"\n    ],\n    \"postcode\": \"10577\",\n    \"city\": \"Purchase\",\n    \"telephone\": \"512-555-1111\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\"\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 31, "to": 53 } }
        }
      }
    ],
    [
      "2d421b3b-ad80-4273-af72-ac9788dd204f",
      {
        "pageContent": "```\n\n**Response:**\n\nAn `orderID`, such as `3`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 54, "to": 58 } }
        }
      }
    ],
    [
      "65d755bb-bc1b-4e42-807f-a1ce27281cc7",
      {
        "pageContent": "### Review the order as an admin\n\nWhen you request an order object, the response contains full details about the order, including customer information, payment details, as well as totals and subtotals for the order and each individual item.\n\n**Endpoint:**\n\n`GET <host>/rest/<store_code>/V1/orders/3`\n\nwhere `3` is the `orderid`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <administrator token>`\n\n**Payload:**\n\nNot applicable\n\n**Response:**\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 60, "to": 83 } }
        }
      }
    ],
    [
      "656d3704-1a7b-4137-a985-a9e22b5b66c4",
      {
        "pageContent": "```json\n{\n  \"applied_rule_ids\": \"1\",\n  \"base_currency_code\": \"USD\",\n  \"base_discount_amount\": 0,\n  \"base_grand_total\": 165,\n  \"base_discount_tax_compensation_amount\": 0,\n  \"base_shipping_amount\": 5,\n  \"base_shipping_discount_amount\": 0,\n  \"base_shipping_incl_tax\": 5,\n  \"base_shipping_tax_amount\": 0,\n  \"base_subtotal\": 160,\n  \"base_subtotal_incl_tax\": 160,\n  \"base_tax_amount\": 0,\n  \"base_total_due\": 165,\n  \"base_to_global_rate\": 1,\n  \"base_to_order_rate\": 1,\n  \"billing_address_id\": 6,\n  \"created_at\": \"2017-08-21 22:22:19\",\n  \"customer_email\": \"jdoe@example.com\",\n  \"customer_firstname\": \"Jane\",\n  \"customer_group_id\": 1,\n  \"customer_id\": 3,\n  \"customer_is_guest\": 0,\n  \"customer_lastname\": \"Doe\",\n  \"customer_note_notify\": 1,\n  \"discount_amount\": 0,\n  \"email_sent\": 1,\n  \"entity_id\": 3,\n  \"global_currency_code\": \"USD\",\n  \"grand_total\": 165,\n  \"discount_tax_compensation_amount\": 0,\n  \"increment_id\": \"000000003\",\n  \"is_virtual\": 0,\n  \"order_currency_code\": \"USD\",\n  \"protect_code\": \"61f76d\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 85, "to": 120 } }
        }
      }
    ],
    [
      "a852df4f-b191-4a0f-a20d-3a7866684c48",
      {
        "pageContent": "\"quote_id\": 4,\n  \"shipping_amount\": 5,\n  \"shipping_description\": \"Best Way - Table Rate\",\n  \"shipping_discount_amount\": 0,\n  \"shipping_discount_tax_compensation_amount\": 0,\n  \"shipping_incl_tax\": 5,\n  \"shipping_tax_amount\": 0,\n  \"state\": \"new\",\n  \"status\": \"pending\",\n  \"store_currency_code\": \"USD\",\n  \"store_id\": 1,\n  \"store_name\": \"Main Website\\nMain Website Store\\n\",\n  \"store_to_base_rate\": 0,\n  \"store_to_order_rate\": 0,\n  \"subtotal\": 160,\n  \"subtotal_incl_tax\": 160,\n  \"tax_amount\": 0,\n  \"total_due\": 165,\n  \"total_item_count\": 7,\n  \"total_qty_ordered\": 4,\n  \"updated_at\": \"2017-08-21 22:22:20\",\n  \"weight\": 2,\n  \"items\": [\n    {\n      \"amount_refunded\": 0,\n      \"applied_rule_ids\": \"1\",\n      \"base_amount_refunded\": 0,\n      \"base_discount_amount\": 0,\n      \"base_discount_invoiced\": 0,\n      \"base_discount_tax_compensation_amount\": 0,\n      \"base_original_price\": 22,\n      \"base_price\": 22,\n      \"base_price_incl_tax\": 22,\n      \"base_row_invoiced\": 0,\n      \"base_row_total\": 22,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 121, "to": 155 } }
        }
      }
    ],
    [
      "1ac4a3b4-5350-4de9-8f13-29bc8c4f6e97",
      {
        "pageContent": "\"base_row_total_incl_tax\": 22,\n      \"base_tax_amount\": 0,\n      \"base_tax_invoiced\": 0,\n      \"created_at\": \"2017-08-21 22:22:19\",\n      \"discount_amount\": 0,\n      \"discount_invoiced\": 0,\n      \"discount_percent\": 0,\n      \"free_shipping\": 0,\n      \"discount_tax_compensation_amount\": 0,\n      \"is_qty_decimal\": 0,\n      \"is_virtual\": 0,\n      \"item_id\": 3,\n      \"name\": \"Radiant Tee-M-Orange\",\n      \"no_discount\": 0,\n      \"order_id\": 3,\n      \"original_price\": 22,\n      \"price\": 22,\n      \"price_incl_tax\": 22,\n      \"product_id\": 1553,\n      \"product_type\": \"simple\",\n      \"qty_canceled\": 0,\n      \"qty_invoiced\": 0,\n      \"qty_ordered\": 1,\n      \"qty_refunded\": 0,\n      \"qty_shipped\": 0,\n      \"quote_item_id\": 6,\n      \"row_invoiced\": 0,\n      \"row_total\": 22,\n      \"row_total_incl_tax\": 22,\n      \"row_weight\": 1,\n      \"sku\": \"WS12-M-Orange\",\n      \"store_id\": 1,\n      \"tax_amount\": 0,\n      \"tax_invoiced\": 0,\n      \"tax_percent\": 0,\n      \"updated_at\": \"2017-08-21 22:22:19\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 156, "to": 191 } }
        }
      }
    ],
    [
      "a8e0d4ee-3870-41e9-98d7-3afc8bb17cde",
      {
        "pageContent": "\"weight\": 1\n    },\n    ...\n  ],\n  \"billing_address\": {\n    \"address_type\": \"billing\",\n    \"city\": \"Purchase\",\n    \"country_id\": \"US\",\n    \"email\": \"jdoe@example.com\",\n    \"entity_id\": 6,\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"parent_id\": 3,\n    \"postcode\": \"10577\",\n    \"region\": \"New York\",\n    \"region_code\": \"NY\",\n    \"region_id\": 43,\n    \"street\": [\n      \"123 Oak Ave\"\n    ],\n    \"telephone\": \"512-555-1111\"\n  },\n  \"payment\": {\n    \"account_status\": null,\n    \"additional_information\": [\n      \"Bank Transfer Payment\",\n      \"\"\n    ],\n    \"amount_ordered\": 165,\n    \"base_amount_ordered\": 165,\n    \"base_shipping_amount\": 5,\n    \"cc_last4\": null,\n    \"entity_id\": 3,\n    \"method\": \"banktransfer\",\n    \"parent_id\": 3,\n    \"shipping_amount\": 5\n  },\n  \"status_histories\": [],\n  \"extension_attributes\": {\n    \"shipping_assignments\": [\n      {\n        \"shipping\": {\n          \"address\": {\n            \"address_type\": \"shipping\",\n            \"city\": \"Purchase\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 192, "to": 236 } }
        }
      }
    ],
    [
      "44f232c4-0362-4376-afef-28aecb22060e",
      {
        "pageContent": "\"country_id\": \"US\",\n            \"email\": \"jdoe@example.com\",\n            \"entity_id\": 5,\n            \"firstname\": \"Jane\",\n            \"lastname\": \"Doe\",\n            \"parent_id\": 3,\n            \"postcode\": \"10577\",\n            \"region\": \"New York\",\n            \"region_code\": \"NY\",\n            \"region_id\": 43,\n            \"street\": [\n              \"123 Oak Ave\"\n            ],\n            \"telephone\": \"512-555-1111\"\n          },\n          \"method\": \"tablerate_bestway\",\n          \"total\": {\n            \"base_shipping_amount\": 5,\n            \"base_shipping_discount_amount\": 0,\n            \"base_shipping_incl_tax\": 5,\n            \"base_shipping_tax_amount\": 0,\n            \"shipping_amount\": 5,\n            \"shipping_discount_amount\": 0,\n            \"shipping_discount_tax_compensation_amount\": 0,\n            \"shipping_incl_tax\": 5,\n            \"shipping_tax_amount\": 0\n          }\n        },\n        \"items\": [\n          {\n            \"amount_refunded\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 237, "to": 267 } }
        }
      }
    ],
    [
      "426154c0-9ddc-46e9-a095-ce2b54a4c0fa",
      {
        "pageContent": "\"applied_rule_ids\": \"1\",\n            \"base_amount_refunded\": 0,\n            \"base_discount_amount\": 0,\n            \"base_discount_invoiced\": 0,\n            \"base_discount_tax_compensation_amount\": 0,\n            \"base_original_price\": 22,\n            \"base_price\": 22,\n            \"base_price_incl_tax\": 22,\n            \"base_row_invoiced\": 0,\n            \"base_row_total\": 22,\n            \"base_row_total_incl_tax\": 22,\n            \"base_tax_amount\": 0,\n            \"base_tax_invoiced\": 0,\n            \"created_at\": \"2017-08-21 22:22:19\",\n            \"discount_amount\": 0,\n            \"discount_invoiced\": 0,\n            \"discount_percent\": 0,\n            \"free_shipping\": 0,\n            \"discount_tax_compensation_amount\": 0,\n            \"is_qty_decimal\": 0,\n            \"is_virtual\": 0,\n            \"item_id\": 3,\n            \"name\": \"Radiant Tee-M-Orange\",\n            \"no_discount\": 0,\n            \"order_id\": 3,\n            \"original_price\": 22,\n            \"price\": 22,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 268, "to": 294 } }
        }
      }
    ],
    [
      "eba46933-1634-44a7-a30f-2b2713249030",
      {
        "pageContent": "\"price_incl_tax\": 22,\n            \"product_id\": 1553,\n            \"product_type\": \"simple\",\n            \"qty_canceled\": 0,\n            \"qty_invoiced\": 0,\n            \"qty_ordered\": 1,\n            \"qty_refunded\": 0,\n            \"qty_shipped\": 0,\n            \"quote_item_id\": 6,\n            \"row_invoiced\": 0,\n            \"row_total\": 22,\n            \"row_total_incl_tax\": 22,\n            \"row_weight\": 1,\n            \"sku\": \"WS12-M-Orange\",\n            \"store_id\": 1,\n            \"tax_amount\": 0,\n            \"tax_invoiced\": 0,\n            \"tax_percent\": 0,\n            \"updated_at\": \"2017-08-21 22:22:19\",\n            \"weight\": 1\n          },\n          ...\n        ]\n      }\n    ]\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 295, "to": 321 } }
        }
      }
    ],
    [
      "47adf7bc-0bdb-4e49-82e2-fa7eefcac769",
      {
        "pageContent": "```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 322, "to": 324 } }
        }
      }
    ],
    [
      "8cc10c7d-0ae5-4351-ab51-494b49a35477",
      {
        "pageContent": "### Verify this step\n\n1. Log in to the Luma store as the customer. The dashboard shows the order.\n1. Log in to Admin. Click **Sales** > **Orders**. The order is displayed in the grid. Its status is Pending.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-order.md",
          "loc": { "lines": { "from": 326, "to": 329 } }
        }
      }
    ],
    [
      "fa5bcfec-d7cd-4931-93aa-7bb340569de0",
      {
        "pageContent": "---\ntitle: Step 4. Create a quote\ndescription: In this step of the tutorial you will create a quote\nkeywords:\n  - REST\n--- \n \n# Step 4. Create a quote\n\nWhen a customer adds an item to their shopping cart for the first time, Adobe Commerce creates a quote. Commerce uses a quote to perform tasks such as\n\n*  Track each item the customer wants to buy, including the quantity and base cost\n*  Gather information about the customer, including billing and shipping addresses\n*  Determine shipping costs\n*  Calculate the subtotal, add costs (shipping fees, taxes, etc.) and apply coupons to determine the grand total\n*  Determine the payment method\n*  Place the order so that the merchant can fulfill it.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-quote.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "46408e05-4832-49ff-b589-3fc29af1de50",
      {
        "pageContent": "### Types of carts\n\nCommerce identifies three types of users that can create a shopping cart:\n\n*  An admin user can create a cart on behalf of a customer. For all admin requests, you must provide an admin authorization token in the call's authorization header.\n*  A logged-in customer. Calls to create a cart and add items must contain the customer's authorization token in the authorization header.\n*  A guest user. These users could be customers who haven't logged in yet, or they could be users who have no intention of creating an account. An anonymous user's cart is called a guest cart.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-quote.md",
          "loc": { "lines": { "from": 19, "to": 25 } }
        }
      }
    ],
    [
      "f1f3f8e9-c910-4a66-99aa-7f5295deaf21",
      {
        "pageContent": "### Create a cart for a logged-in customer\n\nAll calls for a logged in customer must specify customer's token `q0u66k8h42yaevtchv09uyy3y9gaj2ap` in the header.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nUse the `V1/guest-carts` endpoint to create a cart on behalf of a guest. Do not include an authorization token. The `quoteId` for the guest customer quote will be masked.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <customer token>`\n\n**Payload:**\n\nNone\n\n**Response:**\n\nThe response is the `quoteId: 4`\n\n<InlineAlert variant=\"success\" slots=\"text\"/>\n\nSome calls refer to this parameter as the `cartId`.\n\n### Verify this step\n\nThere are no additional verification steps.`quoteId` values are not displayed on the website or in Admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-quote.md",
          "loc": { "lines": { "from": 27, "to": 59 } }
        }
      }
    ],
    [
      "0027c008-1926-4e93-babf-683e7bfa9ee6",
      {
        "pageContent": "---\ntitle: Step 9. Create a shipment\ndescription: In this step of the tutorial you will create a shipment\nkeywords:\n  - REST\n---\n\n# Step 9. Create a shipment\n\nTo create a shipment, you need the `order_item_id` of each item to be shipped. Since the Sprite Yoga Companion Kit is a bundle item, you only need to include the top-level `order_item_id` (`5`). The `order_item_id` for the Radiant Tee-M-Orange is `3`.\n\nTo create a partial shipment, specify only those `order_item_id`s that are to be shipped now.\n\nIf the call is successful on a full shipment, Adobe Commerce changes the status of an order to Complete.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/order/3/ship`\n\nwhere `3` is the order id.\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <administrator token>`\n\n**Payload:**\n\nThe `notify` field is used to trigger Commerce to send the shipment email. The `tracks` array optionally allows you to include one or more tracking numbers for the shipment.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-shipment.md",
          "loc": { "lines": { "from": 1, "to": 30 } }
        }
      }
    ],
    [
      "99fdcfec-9338-4cc7-a9f6-11b9b95046d6",
      {
        "pageContent": "```json\n{\n  \"items\": [\n    {\n      \"order_item_id\": 3,\n      \"qty\": 1\n    },\n    {\n      \"order_item_id\": 5,\n      \"qty\": 1\n    },\n    {\n      \"order_item_id\": 11,\n      \"qty\": 1\n    }\n  ],\n  \"notify\": true,\n  \"tracks\": [\n    {\n      \"track_number\": \"1Y-9876543210\",\n      \"title\": \"United Parcel Service\",\n      \"carrier_code\": \"ups\"\n    }\n  ]\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-shipment.md",
          "loc": { "lines": { "from": 32, "to": 56 } }
        }
      }
    ],
    [
      "73699aa2-c64c-4eea-baeb-b7381b23e6a3",
      {
        "pageContent": "```\n\n**Response:**\n\nA shipment ID, such as `3`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-shipment.md",
          "loc": { "lines": { "from": 57, "to": 61 } }
        }
      }
    ],
    [
      "8ad5307d-312f-4f73-92ba-1e6659ead6d6",
      {
        "pageContent": "## Verify this step\n\nLog in to Admin. Click **Sales** > **Shipments**. The shipment is displayed in the grid. Then click **Sales** > **Orders**. The order status is Complete.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-create-shipment.md",
          "loc": { "lines": { "from": 63, "to": 65 } }
        }
      }
    ],
    [
      "bbb07efb-37c1-4535-a254-195b7eb91b79",
      {
        "pageContent": "---\ntitle: Step 10. Issue a partial refund\ndescription: In this step of the tutorial you will issue a partial refund\nkeywords:\n  - REST\n--- \n \n# Step 10. Issue a partial refund\n\nAdobe Commerce introduced two endpoints that streamline the process of issuing a refund by creating a creditmemo and updating the order or invoice in one call.\n\nEndpoint | Description\n--- | ---\n`POST /V1/order/<order_ID>/refund` | Issues an offline refund\n`POST /V1/invoice/<invoice_ID>/refund` | Issue a refund with an online payment system\n\nIn this example, the customer did not like the fit of the Radiant T-M-Orange shirt and wants a refund.\n\nSince the customer paid for the order with a bank transfer, we'll call `POST /V1/order/<order ID>/refund`. The `order_item_id` for the Radiant Tee-M-Orange is `3`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-issue-refund.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "33f8f3c2-9670-47ad-8045-77c46c43108b",
      {
        "pageContent": "The `arguments` object allows you to adjust the amount of the credit to be refunded. Since the customer used the `tablerate` shipping method, which applied to the whole order, we'll assume that a refund can't be applied to the shipping costs. Therefore, the shipping_amount is set to `0`.\n\nIf the customer had selected the `flatrate` shipping method ($5 per item), we would set the value of `shipping_amount` to `5`.\n\nThe `return_to_stock_items` array specifies which `order_item_id`s can be returned to stock and be resold.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/order/5/refund`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <administrator token>`\n\n**Payload:**\n\n```json\n{\n  \"items\": [\n    {\n      \"order_item_id\": 3,\n      \"qty\": 1\n    }\n  ],\n  \"notify\": true,\n  \"arguments\": {\n    \"shipping_amount\": 0,\n    \"adjustment_positive\": 0,\n    \"adjustment_negative\": 0,\n    \"extension_attributes\": {\n      \"return_to_stock_items\": [\n        3\n      ]\n    }\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-issue-refund.md",
          "loc": { "lines": { "from": 21, "to": 58 } }
        }
      }
    ],
    [
      "8db42b44-8377-41ed-8392-39c26fdba872",
      {
        "pageContent": "```\n\n**Response:**\n\nA credit memo id, such as `3`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-issue-refund.md",
          "loc": { "lines": { "from": 59, "to": 63 } }
        }
      }
    ],
    [
      "5b4ca305-7ffe-4468-ae0e-2be21d3e576c",
      {
        "pageContent": "### Verify this step\n\nLog in to Admin. Click **Sales** > **Credit Memos**. The credit memo is displayed in the grid.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-issue-refund.md",
          "loc": { "lines": { "from": 65, "to": 67 } }
        }
      }
    ],
    [
      "31af3153-1058-4402-b991-4c68db3d8301",
      {
        "pageContent": "## Congratulations! You've finished.\n\n### Related topics\n\n*  [Getting Started with Adobe Commerce Web APIs](/get-started/)\n*  [Create a configurable product Tutorial](/rest/tutorials/configurable-product/)\n*  [REST API Reference Overview](/rest/)\n*  [REST API documentation](../../quick-reference/index.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-issue-refund.md",
          "loc": { "lines": { "from": 69, "to": 76 } }
        }
      }
    ],
    [
      "f913866e-6b5a-46a4-b3c3-eaff06d7f388",
      {
        "pageContent": "---\ntitle: Step 6. Prepare for checkout\ndescription: In this step of the tutorial you will prepare for checkout\nkeywords:\n  - REST\n--- \n \n# Step 6. Prepare for checkout\n\nNow that all the items have been added to the cart, we can prepare the order for checkout. This process includes the following steps:\n\n*  Estimate shipping costs\n*  Set shipping and billing information",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "3a7b5e00-9638-4dca-8ce1-984ee2b07175",
      {
        "pageContent": "### Estimate shipping costs\n\nAdobe Commerce calculates shipping costs for each shipping method that can be applied to the order. In this tutorial, the `flatrate` ($5 per item) and `tablerate` shipping methods are active.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nUse the `V1/guest-carts/<cartId>/estimate-shipping-methods` endpoint to estimate shipping costs on behalf of a guest. Do not include an authorization token.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine/estimate-shipping-methods`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <customer token>`\n\n**Payload:**\n\nThe payload contains the shipping address.\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 15, "to": 38 } }
        }
      }
    ],
    [
      "6878cf36-0b77-452e-b90f-52fdad48d6ae",
      {
        "pageContent": "```json\n{\n  \"address\": {\n    \"region\": \"New York\",\n    \"region_id\": 43,\n    \"region_code\": \"NY\",\n    \"country_id\": \"US\",\n    \"street\": [\n      \"123 Oak Ave\"\n    ],\n    \"postcode\": \"10577\",\n    \"city\": \"Purchase\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"customer_id\": 4,\n    \"email\": \"jdoe@example.com\",\n    \"telephone\": \"(512) 555-1111\",\n    \"same_as_billing\": 1\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 40, "to": 59 } }
        }
      }
    ],
    [
      "b3cc9fa8-e489-49c2-8d61-192050e18f57",
      {
        "pageContent": "```\n\n</details>\n\n**Response:**\n\nNote that the cost for the `flatrate` shipping method is $15. The Sprite Yoga Companion Kit bundled product counts as one item. The Advanced Pilates & Yoga item does not have a shipping charge because the customer downloads this item.\n\n<details>\n      <summary><b>Show code sample</b></summary>\n\n```json\n[\n  {\n    \"carrier_code\": \"flatrate\",\n    \"method_code\": \"flatrate\",\n    \"carrier_title\": \"Flat Rate\",\n    \"method_title\": \"Fixed\",\n    \"amount\": 15,\n    \"base_amount\": 15,\n    \"available\": true,\n    \"error_message\": \"\",\n    \"price_excl_tax\": 15,\n    \"price_incl_tax\": 15\n  },\n  {\n    \"carrier_code\": \"tablerate\",\n    \"method_code\": \"bestway\",\n    \"carrier_title\": \"Best Way\",\n    \"method_title\": \"Table Rate\",\n    \"amount\": 5,\n    \"base_amount\": 5,\n    \"available\": true,\n    \"error_message\": \"\",\n    \"price_excl_tax\": 5,\n    \"price_incl_tax\": 5\n  }\n]\n```\n\n</details>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 60, "to": 100 } }
        }
      }
    ],
    [
      "eaa83507-8877-4d78-808d-41a7c57a6ee7",
      {
        "pageContent": "### Set shipping and billing information\n\nIn this call, you specify the shipping and billing addresses, as well as the selected `carrier_code` and `method_code`. Since the Table Rate shipping method costs only $5, the customer selected this option.\n\nCommerce returnsa list of payment options and calculates the order totals.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nUse the `V1/guest-carts/<cartId>/shipping-information` endpoint to set the billing and shipping information on behalf of a guest. Do not include an authorization token.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/carts/mine/shipping-information`\n\n**Headers:**\n\n`Content-Type: application/json`\n\n`Authorization: Bearer <customer token>`\n\n**Payload:**\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 102, "to": 125 } }
        }
      }
    ],
    [
      "8d4e1efc-6e4a-4537-bb64-94bf276d4877",
      {
        "pageContent": "```json\n{\n  \"addressInformation\": {\n    \"shipping_address\": {\n      \"region\": \"New York\",\n      \"region_id\": 43,\n      \"region_code\": \"NY\",\n      \"country_id\": \"US\",\n      \"street\": [\n        \"123 Oak Ave\"\n      ],\n      \"postcode\": \"10577\",\n      \"city\": \"Purchase\",\n      \"firstname\": \"Jane\",\n      \"lastname\": \"Doe\",\n      \"email\": \"jdoe@example.com\",\n      \"telephone\": \"512-555-1111\"\n    },\n    \"billing_address\": {\n      \"region\": \"New York\",\n      \"region_id\": 43,\n      \"region_code\": \"NY\",\n      \"country_id\": \"US\",\n      \"street\": [\n        \"123 Oak Ave\"\n      ],\n      \"postcode\": \"10577\",\n      \"city\": \"Purchase\",\n      \"firstname\": \"Jane\",\n      \"lastname\": \"Doe\",\n      \"email\": \"jdoe@example.com\",\n      \"telephone\": \"512-555-1111\"\n    },\n    \"shipping_carrier_code\": \"tablerate\",\n    \"shipping_method_code\": \"bestway\"\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 127, "to": 163 } }
        }
      }
    ],
    [
      "13e5ec4f-78be-40a7-b3fa-0fe2e433c4fa",
      {
        "pageContent": "```\n\n</details>\n\n**Response:**\n\nThe subtotal of the order is $160, and shipping charges are $5. The grand total is $165.\n\nThe available payment methods are `banktransfer` and `checkmo`. The customer will specify a payment method in the next step.\n\n<details>\n      <summary><b>Show code sample</b></summary>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 164, "to": 175 } }
        }
      }
    ],
    [
      "ddb07f4b-572e-4494-a73f-79ebefbe9363",
      {
        "pageContent": "```json\n{\n  \"payment_methods\": [\n    {\n      \"code\": \"cashondelivery\",\n      \"title\": \"Cash On Delivery\"\n    },\n    {\n      \"code\": \"banktransfer\",\n      \"title\": \"Bank Transfer Payment\"\n    },\n    {\n      \"code\": \"purchaseorder\",\n      \"title\": \"Purchase Order\"\n    },\n    {\n      \"code\": \"checkmo\",\n      \"title\": \"Check / Money order\"\n    }\n  ],\n  \"totals\": {\n    \"grand_total\": 165,\n    \"base_grand_total\": 165,\n    \"subtotal\": 160,\n    \"base_subtotal\": 160,\n    \"discount_amount\": 0,\n    \"base_discount_amount\": 0,\n    \"subtotal_with_discount\": 160,\n    \"base_subtotal_with_discount\": 160,\n    \"shipping_amount\": 5,\n    \"base_shipping_amount\": 5,\n    \"shipping_discount_amount\": 0,\n    \"base_shipping_discount_amount\": 0,\n    \"tax_amount\": 0,\n    \"base_tax_amount\": 0,\n    \"weee_tax_applied_amount\": null,\n    \"shipping_tax_amount\": 0,\n    \"base_shipping_tax_amount\": 0,\n    \"subtotal_incl_tax\": 160,\n    \"shipping_incl_tax\": 5,\n    \"base_shipping_incl_tax\": 5,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 177, "to": 217 } }
        }
      }
    ],
    [
      "5021fb19-dbcb-49fa-9826-db22cefb4664",
      {
        "pageContent": "\"base_currency_code\": \"USD\",\n    \"quote_currency_code\": \"USD\",\n    \"items_qty\": 4,\n    \"items\": [\n      {\n        \"item_id\": 6,\n        \"price\": 22,\n        \"base_price\": 22,\n        \"qty\": 1,\n        \"row_total\": 22,\n        \"base_row_total\": 22,\n        \"row_total_with_discount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,\n        \"tax_percent\": 0,\n        \"discount_amount\": 0,\n        \"base_discount_amount\": 0,\n        \"discount_percent\": 0,\n        \"price_incl_tax\": 22,\n        \"base_price_incl_tax\": 22,\n        \"row_total_incl_tax\": 22,\n        \"base_row_total_incl_tax\": 22,\n        \"options\": \"[]\",\n        \"weee_tax_applied_amount\": null,\n        \"weee_tax_applied\": null,\n        \"name\": \"Radiant Tee-M-Orange\"\n      },\n      {\n        \"item_id\": 7,\n        \"price\": 18,\n        \"base_price\": 18,\n        \"qty\": 1,\n        \"row_total\": 18,\n        \"base_row_total\": 18,\n        \"row_total_with_discount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 218, "to": 254 } }
        }
      }
    ],
    [
      "fb00beeb-7ab0-4fa8-857c-4700a4cc6eab",
      {
        "pageContent": "\"tax_percent\": 0,\n        \"discount_amount\": 0,\n        \"base_discount_amount\": 0,\n        \"discount_percent\": 0,\n        \"price_incl_tax\": 18,\n        \"base_price_incl_tax\": 18,\n        \"row_total_incl_tax\": 18,\n        \"base_row_total_incl_tax\": 18,\n        \"options\": \"[{\\\"value\\\":\\\"Advanced Pilates & Yoga (Strength)\\\",\\\"label\\\":\\\"Downloads\\\"}]\",\n        \"weee_tax_applied_amount\": null,\n        \"weee_tax_applied\": null,\n        \"name\": \"Advanced Pilates & Yoga (Strength)\"\n      },\n      {\n        \"item_id\": 8,\n        \"price\": 68,\n        \"base_price\": 68,\n        \"qty\": 1,\n        \"row_total\": 68,\n        \"base_row_total\": 68,\n        \"row_total_with_discount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,\n        \"discount_amount\": 0,\n        \"base_discount_amount\": 0,\n        \"discount_percent\": 0,\n        \"price_incl_tax\": 68,\n        \"base_price_incl_tax\": 68,\n        \"row_total_incl_tax\": 68,\n        \"base_row_total_incl_tax\": 68,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 255, "to": 284 } }
        }
      }
    ],
    [
      "39ae2b5c-c772-4604-89f9-4e3879689d9b",
      {
        "pageContent": "\"options\": \"[{\\\"value\\\":\\\"1 x Sprite Stasis Ball 65 cm <span class=\\\\\\\"price\\\\\\\">$27.00<\\\\/span>\\\",\\\"label\\\":\\\"Sprite Stasis Ball\\\"},{\\\"value\\\":\\\"1 x Sprite Foam Yoga Brick <span class=\\\\\\\"price\\\\\\\">$5.00<\\\\/span>\\\",\\\"label\\\":\\\"Sprite Foam Yoga Brick\\\"},{\\\"value\\\":\\\"1 x Sprite Yoga Strap 8 foot <span class=\\\\\\\"price\\\\\\\">$17.00<\\\\/span>\\\",\\\"label\\\":\\\"Sprite Yoga Strap\\\"},{\\\"value\\\":\\\"1 x Sprite Foam Roller <span class=\\\\\\\"price\\\\\\\">$19.00<\\\\/span>\\\",\\\"label\\\":\\\"Sprite Foam Roller\\\"}]\",\n        \"weee_tax_applied_amount\": null,\n        \"weee_tax_applied\": null,\n        \"name\": \"Sprite Yoga Companion Kit\"\n      },\n      {\n        \"item_id\": 13,\n        \"price\": 52,\n        \"base_price\": 52,\n        \"qty\": 1,\n        \"row_total\": 52,\n        \"base_row_total\": 52,\n        \"row_total_with_discount\": 0,\n        \"tax_amount\": 0,\n        \"base_tax_amount\": 0,\n        \"tax_percent\": 0,\n        \"discount_amount\": 0,\n        \"base_discount_amount\": 0,\n        \"discount_percent\": 0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 285, "to": 303 } }
        }
      }
    ],
    [
      "2899b7be-cf55-41b2-b351-23b5b85f35fc",
      {
        "pageContent": "\"price_incl_tax\": 52,\n        \"base_price_incl_tax\": 52,\n        \"row_total_incl_tax\": 52,\n        \"base_row_total_incl_tax\": 52,\n        \"options\": \"[{\\\"value\\\":\\\"Gray\\\",\\\"label\\\":\\\"Color\\\"},{\\\"value\\\":\\\"S\\\",\\\"label\\\":\\\"Size\\\"}]\",\n        \"weee_tax_applied_amount\": null,\n        \"weee_tax_applied\": null,\n        \"name\": \"Chaz Kangeroo Hoodie\"\n      }\n    ],\n    \"total_segments\": [\n      {\n        \"code\": \"subtotal\",\n        \"title\": \"Subtotal\",\n        \"value\": 160\n      },\n      {\n        \"code\": \"shipping\",\n        \"title\": \"Shipping & Handling (Best Way - Table Rate)\",\n        \"value\": 5\n      },\n      {\n        \"code\": \"tax\",\n        \"title\": \"Tax\",\n        \"value\": 0,\n        \"extension_attributes\": {\n          \"tax_grandtotal_details\": []\n        }\n      },\n      {\n        \"code\": \"grand_total\",\n        \"title\": \"Grand Total\",\n        \"value\": 165,\n        \"area\": \"footer\"\n      }\n    ]\n  }\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 304, "to": 341 } }
        }
      }
    ],
    [
      "feb07422-ce13-4b88-a076-45abd18474dd",
      {
        "pageContent": "```\n\n</details>\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nIf you tried this call on your own, and the value of the `shipping_amount` parameter is `0`, then you did not deactivate the \"Spend $50 or more - shipping is free!\" cart price rule. See [Deactivate a cart price rule](/rest/tutorials/orders/order-config-store#deactivate-a-cart-price-rule) for details.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 342, "to": 348 } }
        }
      }
    ],
    [
      "47acd2dd-de3a-431e-894c-32e95ebe2f18",
      {
        "pageContent": "### Verify this step\n\nSign in as the customer and go to the checkout page.\n\nThe payment method is Bank Transfer, the billing and shipping addresses are displayed, and the shipping charges have been calculated.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/orders/order-prepare-checkout.md",
          "loc": { "lines": { "from": 350, "to": 354 } }
        }
      }
    ],
    [
      "3f98bc67-3bb3-45f2-8e3f-ce4e6282beac",
      {
        "pageContent": "---\ntitle: Generate the admin token\ndescription: In this tutorial you will generate the admin token necessary for other tutorials \nkeywords:\n  - REST\n--- \n \n# Generate the admin token\n\nIn a production environment, you would typically [create an integration](/get-started/create-integration) and use OAuth to provide authentication for any REST call that requires admin privileges. This process allows Adobe Commerce to verify that the caller is authorized to access the affected system resource.\n\nIn this tutorial, we will supply an admin token instead. To get a token, you must have 2FA configured. This tutorial assumes that you are using Google Authenticator as your 2FA solution. The endpoint and payload will be different for other 2FA solutions. See [Two-Factor Authentication](https://developer.adobe.com/commerce/testing/functional-testing-framework/two-factor-authentication/) for more information.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/prerequisite-tasks/index.md",
          "loc": { "lines": { "from": 1, "to": 12 } }
        }
      }
    ],
    [
      "3b0e1b12-fd1f-44b4-8e6c-e8d8afa31782",
      {
        "pageContent": "Your request must specify the admin user's `username`, `password` and `otp` (one time password). The `otp` value is the six-digit authorization code that Google Authenticator generates.\n\nBy default, an admin token is valid for 4 hours. To change this value, log in to Admin and go to **Stores** > **Settings** > **Configuration** > **Services** > **OAuth** > **Access Token Expiration** > **Admin Token Lifetime (hours)**.\n\nSee [Token-based authentication](/get-started/authentication/gs-authentication-token) for more information about authorization tokens.\n\n**Endpoint:**\n\n`POST <host>/rest/<store_code>/V1/tfa/provider/google/authenticate`\n\n**Headers:**\n\n`Content-Type` `application/json`\n\n**Payload:**\n\n```json\n{\n  \"username\": \"admin\",\n  \"password\": \"<admin-password>\",\n  \"otp\": \"<otp-value>\"\n}",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/prerequisite-tasks/index.md",
          "loc": { "lines": { "from": 14, "to": 35 } }
        }
      }
    ],
    [
      "7ef425ff-0186-4c27-8a14-cff257f22c27",
      {
        "pageContent": "```\n\n**Response:**\n\nCommerce generates the admin's access token\n\n`5r8cvmpr11j6gmau8990rcj2qk7unh8i`\n\nThis token must be specified in the authorization header of every call that requires admin permissions.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/prerequisite-tasks/index.md",
          "loc": { "lines": { "from": 36, "to": 44 } }
        }
      }
    ],
    [
      "a85c11ff-6435-483d-aba1-0c9447b4c460",
      {
        "pageContent": "### Verify this step\n\nThere are no additional verification steps. Tokens are not displayed in Admin.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/tutorials/prerequisite-tasks/index.md",
          "loc": { "lines": { "from": 46, "to": 48 } }
        }
      }
    ],
    [
      "ead9f2df-c1e9-4880-930a-9a3e383bc878",
      {
        "pageContent": "---\ntitle: Restricting access to anonymous web APIs\ndescription: How to restrict anonymous access to the REST API\nkeywords:\n  - REST\n  - Security\n--- \n \n# Restricting access to anonymous web APIs\n\nAdobe Commerce allows some web APIs to be accessed by unauthenticated (anonymous) users. Many of these APIs allow a customer to have a robust shopping experience on the website without having to log in.\n\nA subset of these APIs can return information about products, promotions, and storefronts that a merchant might consider proprietary. For example, Catalog module APIs can provide information about an item's pricing and quantity, as well as items that are currently not for sale. The CMS module could reveal information about upcoming promotional landing pages and coupons. The Store module can reveal too much information about individual websites.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 1, "to": 13 } }
        }
      }
    ],
    [
      "9d313070-943d-4f6b-a76a-3b24cc1454cd",
      {
        "pageContent": "For this reason, by default, Commerce now prevents anonymous users from accessing the APIs that could reveal sensitive information.  When the feature is enabled, the user must have administrator privileges to execute the affected APIs.\n\nThe following table lists the APIs that are no longer available to an anonymous user by default:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 15, "to": 17 } }
        }
      }
    ],
    [
      "6edbab95-d8da-44fa-b507-5d51e65df5b4",
      {
        "pageContent": "| Product | Module | API | Action |\n| --- | --- | --- | --- |\n| Open Source | Catalog | /V1/products | GET |\n| Open Source | Catalog | /V1/products/:sku | GET |\n| Open Source | Catalog | /V1/products/attributes/:attributeCode | GET |\n| Open Source | Catalog | /V1/products/types | GET |\n| Open Source | Catalog | /V1/products/attribute-sets/sets/list | GET |\n| Open Source | Catalog | /V1/products/attribute-sets/:attributeSetId | GET |\n| Open Source | Catalog | /V1/products/attribute-sets/:attributeSetId/attributes | GET |\n| Open Source | Catalog | /V1/products/attribute-sets/groups/list | GET |\n| Open Source | Catalog | /V1/products/attributes/:attributeCode/options | GET |\n| Open Source | Catalog | /V1/products/media/types/:attributeSetName | GET |\n| Open Source | Catalog | /V1/products/:sku/media/:entryId | GET |\n| Open Source | Catalog | /V1/products/:sku/media | GET |\n| Open Source | Catalog | /V1/products/:sku/group-prices/:customerGroupId/tiers | GET |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 19, "to": 33 } }
        }
      }
    ],
    [
      "c99e6922-91b8-49cd-97a8-60e45f268d55",
      {
        "pageContent": "| Open Source | Catalog | /V1/categories/:categoryId | GET |\n| Open Source | Catalog | /V1/categories | GET |\n| Open Source | Catalog | /V1/products/:sku/options | GET |\n| Open Source | Catalog | /V1/products/:sku/options/:optionId | GET |\n| Open Source | Catalog | /V1/products/links/types | GET |\n| Open Source | Catalog | /V1/products/links/:type/attributes | GET |\n| Open Source | Catalog | /V1/products/:sku/links/:type | GET |\n| Open Source | Catalog | /V1/categories/:categoryId/products | GET |\n| Open Source | CatalogInventory | /V1/stockStatuses/:productSku | GET |\n| Open Source | Cms | /V1/cmsPage/:pageId | GET |\n| Open Source | Cms | /V1/cmsBlock/:blockId | GET |\n| Open Source | ConfigurableProduct | /V1/configurable-products/:sku/children | GET |\n| Open Source | ConfigurableProduct | /V1/configurable-products/:sku/options/:id | GET |\n| Open Source | ConfigurableProduct | /V1/configurable-products/:sku/options/all | GET |\n| Open Source | Store | /V1/store/storeViews | GET |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 34, "to": 48 } }
        }
      }
    ],
    [
      "e208ed03-447c-4bd5-a541-a903a2a0ce3b",
      {
        "pageContent": "| Open Source | Store | /V1/store/storeGroups | GET |\n| Open Source | Store | /V1/store/websites | GET |\n| Open Source | Store | /V1/store/storeConfigs | GET |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 49, "to": 51 } }
        }
      }
    ],
    [
      "4a8a803c-abf5-4ee6-869b-14df2be19e88",
      {
        "pageContent": "<InlineAlert variant=\"warning\" slots=\"text\"/>\n\n<div>\n<p></p>\nPreventing anonymous access to these endpoints could cause third-party integrations to fail. If a third-party integration calls any of these endpoints, it will receive an authentication error instead of the expected response. In this case, you might need to disable this feature.\n<p></p><p></p><p>&nbsp;</p>\nTo disable this feature, log in to the Admin panel and navigate to <strong>Stores</strong> &gt; <strong>Settings</strong> &gt; <strong>Configuration</strong> &gt; <strong>Services</strong> &gt; <strong>Magento Web API</strong> &gt; <strong>Web API Security</strong>. Then select <strong>Yes</strong> from the <strong>Allow Anonymous Guest Access</strong> menu.\n</div>\n\nIf the list of APIs that are inaccessible to anonymous users must be updated for a third-party extension, an integrator can add to their extension's `di.xml` file to update or replace the functionality defined in the WebapiSecurity module.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 53, "to": 62 } }
        }
      }
    ],
    [
      "41296b09-ed4c-4d08-8473-92fafe57d5b6",
      {
        "pageContent": "The following APIs remain accessible to anonymous users. Most of these must remain accessible to support the checkout and add-to-cart Ajax functionalities.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 64, "to": 64 } }
        }
      }
    ],
    [
      "26daa3d2-8b45-4fff-a53f-b16352c05665",
      {
        "pageContent": "| Product | Module | API | Action |\n| --- | --- | --- | --- |\n| Open Source | Catalog | /V1/products-render-info | GET |\n| Open Source | Checkout | /V1/guest-carts/:cartId/payment-information | POST |\n| Open Source | Checkout | /V1/guest-carts/:cartId/payment-information | GET |\n| Open Source | Checkout | /V1/guest-carts/:cartId/set-payment-information | POST |\n| Open Source | Checkout | /V1/guest-carts/:cartId/shipping-information | POST |\n| Open Source | Checkout | /V1/guest-carts/:cartId/totals-information | POST |\n| Open Source | Customer | /V1/customers | POST |\n| Open Source | Customer | /V1/customers/:customerId/password/resetLinkToken/:resetPasswordLinkToken | GET |\n| Open Source | Customer | /V1/customers/password | PUT |\n| Open Source | Customer | /V1/customers/resetPassword | POST |\n| Open Source | Customer | /V1/customers/isEmailAvailable | POST |\n| Open Source | Directory | /V1/directory/countries | GET |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 66, "to": 79 } }
        }
      }
    ],
    [
      "0a49c3e8-9012-49dd-a2ac-37483a1f0915",
      {
        "pageContent": "| Open Source | Directory | /V1/directory/countries/:countryId | GET |\n| Open Source | Directory | /V1/directory/currency | GET |\n| Open Source | GiftMessage | /V1/guest-carts/:cartId/gift-message | GET |\n| Open Source | GiftMessage | /V1/guest-carts/:cartId/gift-message | POST |\n| Open Source | GiftMessage | /V1/guest-carts/:cartId/gift-message/:itemId | GET |\n| Open Source | GiftMessage | /V1/guest-carts/:cartId/gift-message/:itemId | POST |\n| Open Source | Integration | /V1/integration/admin/token | POST |\n| Open Source | Integration | /V1/integration/customer/token | POST |\n| Open Source | Quote | /V1/guest-carts/:cartId/billing-address | GET |\n| Open Source | Quote | /V1/guest-carts/:cartId/billing-address | POST |\n| Open Source | Quote | /V1/guest-carts/:cartId/items | GET |\n| Open Source | Quote | /V1/guest-carts/:cartId/items | POST |\n| Open Source | Quote | /V1/guest-carts/:cartId/items/:itemId | PUT |\n| Open Source | Quote | /V1/guest-carts/:cartId/items/:itemId | DELETE |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 80, "to": 93 } }
        }
      }
    ],
    [
      "9c5402f9-fa40-49df-a477-7af38b89c785",
      {
        "pageContent": "| Open Source | Quote | /V1/guest-carts | POST |\n| Open Source | Quote | /V1/guest-carts/:cartId/order | PUT |\n| Open Source | Quote | /V1/guest-carts/:cartId | GET |\n| Open Source | Quote | /V1/guest-carts/:cartId/collect-totals | PUT |\n| Open Source | Quote | /V1/guest-carts/:cartId/totals | GET |\n| Open Source | Quote | /V1/guest-carts/:cartId/coupons | GET |\n| Open Source | Quote | /V1/guest-carts/:cartId/coupons/:couponCode | PUT |\n| Open Source | Quote | /V1/guest-carts/:cartId/coupons | DELETE |\n| Open Source | Quote | /V1/guest-carts/:cartId/selected-payment-method | GET |\n| Open Source | Quote | /V1/guest-carts/:cartId/selected-payment-method | PUT |\n| Open Source | Quote | /V1/guest-carts/:cartId/payment-methods | GET |\n| Open Source | Quote | /V1/guest-carts/:cartId/estimate-shipping-methods | POST |\n| Open Source | Quote | /V1/guest-carts/:cartId/shipping-methods | GET |\n| Open Source | Search | /V1/search | GET |",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 94, "to": 107 } }
        }
      }
    ],
    [
      "58c7a503-1cf6-40cd-a7ee-d69dead8ed85",
      {
        "pageContent": "| Commerce | GiftCardAccount | /V1/carts/guest-carts/:cartId/giftCards/:giftCardCode | DELETE |\n| Commerce | GiftCardAccount | /V1/carts/guest-carts/:cartId/giftCards | POST |\n| Commerce | GiftCardAccount | /V1/carts/guest-carts/:cartId/checkGiftCard/:giftCardCode | GET |\n| Commerce | GiftRegistry | /V1/guest-giftregistry/:cartId/estimate-shipping-methods | POST |\n| Commerce | WorldPay | /V1/worldpay-guest-carts/:cartId/payment-information | POST",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/anonymous-api-security.md",
          "loc": { "lines": { "from": 108, "to": 112 } }
        }
      }
    ],
    [
      "172a372b-fc01-4636-9a54-7f9a87c3b85d",
      {
        "pageContent": "---\ntitle: Asynchronous web endpoints\ndescription: Learn about asynchronous web points, how they are used and how to define store scopes\ncontributor_name: comwrap GmbH\ncontributor_link: http://comwrap.com/\nkeywords:\n  - REST\n--- \nimport * as Vars from '../../../data/vars.js';\n\n# Asynchronous web endpoints\n\nAn asynchronous web endpoint intercepts messages to a Web API and writes them to the message queue. Each time the system accepts such an API request, it generates a UUID identifier. Adobe Commerce includes this UUID when it adds the message to the queue. Then, a consumer reads the messages from the queue and executes them one-by-one.\n\n<InlineAlert variant=\"success\" slots=\"text\"/>\n\nUse the `bin/magento queue:consumers:start async.operations.all` command to start the consumer that handles asynchronous and bulk API messages.\n\nCommerce supports the following types of asynchronous requests:\n\n*  POST\n*  PUT\n*  DELETE\n*  PATCH\n\n<InlineAlert variant=\"info\" slots=\"text\"/>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/asynchronous-web-endpoints.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "8951d474-2c94-46e7-883b-32c0e1f75df2",
      {
        "pageContent": "GET requests are not supported. Although Commerce does not currently implement any PATCH requests, they are supported in custom extensions.\n\nThe route to all asynchronous calls contains the prefix `/async`, added before `/V1` of a standard synchronous endpoint. For example:\n\n```http\nPOST /async/V1/products\nPUT /async/V1/products/:sku",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/asynchronous-web-endpoints.md",
          "loc": { "lines": { "from": 28, "to": 34 } }
        }
      }
    ],
    [
      "355eeae9-3820-4680-b273-0512ab06bf6f",
      {
        "pageContent": "```\n\n<Vars.sitedatavarce/> and <Vars.sitedatavaree/> installations support asynchronous web endpoints.\n\nThe [REST API documentation](/rest/) provides a list of all current synchronous Commerce API routes.\n\nThe response of an asynchronous request contains the following fields:\n\nField name | Data type | Description\n--- | --- | ---\n`bulk_uuid` | String | A generated universally unique identifier.\n`request_items` | Object | An array containing information about the status of the asynchronous request.\n`id` | Integer | A generated ID that identifies the request.\n`data_hash` | String | SHA256 encoded content of incoming message.\n`status` | String | Reserved for future use. Currently, the value is always `accepted`.\n`errors` | Boolean | Reserved for future use. Currently, the value is always `false`. If an error occurs, the system provides all error-related information as a standard `webapi` exception.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/asynchronous-web-endpoints.md",
          "loc": { "lines": { "from": 35, "to": 50 } }
        }
      }
    ],
    [
      "c547961a-8169-47c9-8a67-41e07e24c279",
      {
        "pageContent": "## Sample usage\n\nThe following call asynchronously changes the price of the product that has a `sku` of `24-MB01`:\n\n```http\nPUT <host>/rest/<store_code>/async/V1/products/24-MB01\n```\n\n### Payload\n\n```json\n{\n  \"product\": {\n    \"price\": 29\n  }\n}\n```\n\n### Response\n\nCommerce generates a `bulk_uuid` for each asynchronous request. Use the `bulk_uuid` to determine the [operation status](/rest/use-rest/operation-status-endpoints/) of your request.\n\n```json\n{\n    \"bulk_uuid\": \"fbfca270-7a90-4c4e-9f32-d6cf3728cdc7\",\n    \"request_items\": [\n        {\n            \"id\": 0,\n            \"data_hash\": \"9c1bd4bfd8defcc856ddf129cc01d172625d139d5f7dcf53b6cb09a0e9a843a3\",\n            \"status\": \"accepted\"\n        }\n    ],\n    \"errors\": false\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/asynchronous-web-endpoints.md",
          "loc": { "lines": { "from": 52, "to": 86 } }
        }
      }
    ],
    [
      "f3fb2618-93c9-435b-b902-9e35325139f9",
      {
        "pageContent": "## Store scopes\n\nYou can specify a store code (which is labeled in the Admin as store view code) in the route of an asynchronous endpoint so that it operates on a specific store, as shown below:\n\n```http\nPOST /<store_code>/async/V1/products\nPUT /<store_code>/async/V1/products/:sku\n```\n\nAs a result, the asynchronous calls update the products on the specific store, instead of the default store.\n\nYou can specify the `all` store code to perform operations on all existing stores:\n\n```http\nPOST /all/async/V1/products\nPUT /all/async/V1/products/:sku\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/asynchronous-web-endpoints.md",
          "loc": { "lines": { "from": 88, "to": 104 } }
        }
      }
    ],
    [
      "b5f98180-5126-4db6-acb7-97aa05406f34",
      {
        "pageContent": "### Fallback and creating/updating objects when setting store scopes\n\nThe following rules apply when you create or update an object, such as a product.\n\n*  If you do not set the store code while creating a new product, Commerce creates a new object with all values set globally for each scope.\n*  If you do not set the store code while updating a product, then by fallback, Commerce updates values for the default store only.\n*  If you include the `all` parameter, then Commerce updates values for all store scopes (in case a particular store doesn't yet have its own value set).\n*  If `<store_code>` parameter is set, then values for only defined store will be updated.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/asynchronous-web-endpoints.md",
          "loc": { "lines": { "from": 106, "to": 113 } }
        }
      }
    ],
    [
      "88c6c84a-0883-4121-8a51-0126269e9023",
      {
        "pageContent": "---\ntitle: Bulk endpoints\ndescription: Learn how to combine multiple API calls of the same type into a single request\ncontributor_name: comwrap GmbH\ncontributor_link: http://comwrap.com/\nkeywords:\n  - REST\n--- \n \n# Bulk endpoints\n\nBulk API endpoints differ from other REST endpoints in that they combine multiple calls of the same type into an array and execute them as a single request. The endpoint handler splits the array into individual entities and writes them as separate messages to the message queue.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/bulk-endpoints.md",
          "loc": { "lines": { "from": 1, "to": 14 } }
        }
      }
    ],
    [
      "d60ada0e-1383-4d6d-8611-8f8d25c0a6d9",
      {
        "pageContent": "Use the [`bin/magento queue:consumers:start async.operations.all`](https://experienceleague.adobe.com/docs/commerce-operations/configuration-guide/cli/start-message-queues.html) command to start the consumer that handles asynchronous and bulk API messages. Also, before using the Bulk API to process messages, you must install and configure RabbitMQ, which is the default message broker. See [RabbitMQ](https://experienceleague.adobe.com/docs/commerce-operations/installation-guide/prerequisites/rabbitmq.html).",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/bulk-endpoints.md",
          "loc": { "lines": { "from": 16, "to": 16 } }
        }
      }
    ],
    [
      "15b1e85b-210f-4ec0-8544-b929aa5ee676",
      {
        "pageContent": "## Routes\n\nTo call a bulk endpoint, add the prefix `/async/bulk` before the `/V1` of a synchronous endpoint route. For example:\n\n```http\nPOST /async/bulk/V1/products\nPOST /async/bulk/V1/customers\n```\n\nEndpoint routes that contain input parameters require additional changes. For example, `PUT /V1/products/:sku/media/:entryId` contains the `:sku` and `:entryId` input parameters. The route of a bulk request cannot contain input parameters, so you must change the route so that it does not contain any. To do this, replace the colon (`:`) with `by` and change the first letter of the parameter to uppercase.\n\nThe following table provides several examples:\n\nSynchronous route | Bulk route\n--- | ---\n`PUT /V1/products/:sku/media/:entryId` | `PUT async/bulk/V1/products/bySku/media/byEntryId`\n`POST /V1/carts/:quoteId/items` | `POST async/bulk/V1/carts/byQuoteId/items`\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\nGET requests are not supported.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/bulk-endpoints.md",
          "loc": { "lines": { "from": 18, "to": 38 } }
        }
      }
    ],
    [
      "1d4f981e-74e0-496b-a3a3-2390b43ed1c4",
      {
        "pageContent": "## Payloads\n\nThe payload of a bulk request contains an array of request bodies. For example, the minimal payload for creating four customers with `POST /async/bulk/V1/customers` would be structured as follows:\n\n```json\n[{\n    \"customer\": {\n        \"email\": \"mshaw@example.com\",\n        \"firstname\": \"Melanie Shaw\",\n        \"lastname\": \"Doe\"\n    },\n    \"password\": \"Strong-Password\"\n},\n{\n    \"customer\": {\n        \"email\": \"bmartin@example.com\",\n        \"firstname\": \"Bryce\",\n        \"lastname\": \"Martin\"\n    },\n    \"password\": \"Strong-Password\"\n},\n{\n    \"customer\": {\n        \"email\": \"bmartin@example.com\",\n        \"firstname\": \"Bryce\",\n        \"lastname\": \"Martin\"\n    },\n    \"password\": \"Strong-Password\"\n},\n{\n    \"customer\": {\n        \"email\": \"tgomez@example.com\",\n        \"firstname\": \"Teresa\",\n        \"lastname\": \"Gomez\"\n    },\n    \"password\": \"Strong-Password\"\n}\n]\n```\n\n<InlineAlert variant=\"success\" slots=\"text\"/>\n\nThe second and third requests are duplicates.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/bulk-endpoints.md",
          "loc": { "lines": { "from": 40, "to": 82 } }
        }
      }
    ],
    [
      "f27b29af-82fd-44de-84c1-4c487ce6d9ae",
      {
        "pageContent": "## Responses\n\nThe response contains an array that indicates whether the call successfully added each request to the message queue. Although the duplicated request to create a customer will fail, Commerce added it to the message queue successfully.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/bulk-endpoints.md",
          "loc": { "lines": { "from": 84, "to": 86 } }
        }
      }
    ],
    [
      "748df699-ca60-4728-89c0-ccbe77788615",
      {
        "pageContent": "```json\n{\n    \"bulk_uuid\": \"799a59c0-09ca-4d60-b432-2953986c1c38\",\n    \"request_items\": [\n        {\n            \"id\": 0,\n            \"data_hash\": \"3d3d853839dd442d0b99a1badea756a03f19ffb0fb7aab672c05f83d5a914181\",\n            \"status\": \"accepted\"\n        },\n        {\n            \"id\": 1,\n            \"data_hash\": \"bf8859d03545f0fa80084a47348a629cdf571fc064b952e7396c338d5cf3bf6e\",\n            \"status\": \"accepted\"\n        },\n        {\n            \"id\": 2,\n            \"data_hash\": \"876f3f2e4b226d54dcbf3f5ce752a9f748a45310261d2dd5cc7a7c9ef74b4369\",\n            \"status\": \"accepted\"\n        },\n        {\n            \"id\": 3,\n            \"data_hash\": \"9c1bd4bfd8defcc856ddf129cc01d172625d139d5f7dcf53b6cb09a0e9a843a3\",\n            \"status\": \"accepted\"\n        }\n    ],\n    \"errors\": false\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/bulk-endpoints.md",
          "loc": { "lines": { "from": 88, "to": 115 } }
        }
      }
    ],
    [
      "dfbe80a6-92e2-4f8b-a5a8-a02aafd01092",
      {
        "pageContent": "## DELETE requests\n\nThe following call asynchronously deletes CMS blocks with IDs `1` and `2`:\n\n```http\nDELETE <host>/rest/async/bulk/V1/cmsPage/byPageId\n```\n\n### DELETE request payload\n\n```json\n[\n    {\n        \"pageId\": \"1\"\n    },\n    {\n        \"pageId\": \"2\"\n    }\n]\n```\n\n## Store scopes\n\nYou can specify a store code (which is labeled in the Admin as store view code) in the route of an asynchronous endpoint so that it operates on a specific store, as shown below:\n\n```http\nPOST /<store_code>/async/bulk/V1/products\nPUT /<store_code>/async/bulk/V1/products/bySku\n```\n\nAs a result, the asynchronous calls update the products on the specific store, instead of the default store.\n\nYou can specify the `all` store code to perform operations on all existing stores:\n\n```http\nPOST /all/async/bulk/V1/products\nPUT /all/async/bulk/V1/products/bySku\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/bulk-endpoints.md",
          "loc": { "lines": { "from": 117, "to": 154 } }
        }
      }
    ],
    [
      "a7b1ae05-0557-4e1e-83a8-623631ec2aea",
      {
        "pageContent": "## Fallback and creating/updating objects when setting store scopes\n\nThe following rules apply when you create or update an object, such as a product.\n\n*  If you do not set the store code while creating a new product, Commerce creates a new object with all values set globally for each scope.\n*  If you do not set the store code while updating a product, then by fallback, Commerce updates values for the default store only.\n*  If you include the `all` parameter, then Commerce updates values for all store scopes (in case a particular store doesn't yet have its own value set).\n*  If `<store_code>` parameter is set, then values for only defined store will be updated.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/bulk-endpoints.md",
          "loc": { "lines": { "from": 156, "to": 163 } }
        }
      }
    ],
    [
      "4ec80071-0c2f-48cb-9e0d-f93628a1db48",
      {
        "pageContent": "---\ntitle: Using REST endpoints\ndescription: Links to other pages describing the endpoints for the Adobe Commerce REST\nkeywords:\n  - REST\n---\n\n# Using REST endpoints\n\nReview the following pages for more information about Adobe Commerce REST endpoints:\n\n- [Search using REST](performing-searches.md)\n- [Search with the /search endpoint](search-endpoint.md)\n- [Retrieve filtered search responses](retrieve-filtered-responses.md)\n- [Protected endpoints](protected-endpoints.md)\n- [Restricting access to anonymous web APIs](anonymous-api-security.md)\n- [Asynchronous web endpoints](asynchronous-web-endpoints.md)\n- [Bulk endpoints](bulk-endpoints.md)\n- [Bulk operation status endpoints](operation-status-endpoints.md)\n- [Search for the status of a bulk operation](operation-status-search.md)\n- [API usage notes](notes.md)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/index.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "8776fab1-ba99-4ca1-a143-0f98dd36ac0e",
      {
        "pageContent": "---\ntitle: REST usage notes\ndescription: Issues you may encounter when using REST endpoints.\nkeywords:\n  - REST\n--- \n \n# REST usage notes\n\nYou might encounter the following issues when using REST endpoints.\n\n## Duplicate parameters in an REST call\n\nIn a REST call, it is possible that a route variable contains one value while the request body contains a different value.\nWhenever this type of conflict occurs, Adobe Commerce uses the value specified in the request body.\n\nFor example:\n\nThe REST URL to update a customer is `PUT /V1/customers/:id`. If you specify an ID value of `1` in the URL (`http://<host>/rest/<store_code>/V1/customers/1`), and a body of `{ \"customer\": { \"id\": 2, \"attr\": \"value\" }}`, the customer with ID of `2` will be modified.\n\nThis applies to all REST APIs where a parameter is passed in the URL. Any value specified in the URL with the same parameter name as in the request body is ignored.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/notes.md",
          "loc": { "lines": { "from": 1, "to": 21 } }
        }
      }
    ],
    [
      "9e626618-9766-4d64-af80-092ebbf6d6d2",
      {
        "pageContent": "## Create a bundle product\n\nThe following sample code creates a bundle product. The `price_type` attribute code defined in the `custom_attributes` object is set to `1` to allow the product to have a fixed price.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/notes.md",
          "loc": { "lines": { "from": 23, "to": 25 } }
        }
      }
    ],
    [
      "68ae2438-013e-4937-9413-9d733ef98767",
      {
        "pageContent": "```json\n{\n   \"product\":{\n      \"sku\":\"box-of-watches\",\n      \"name\":\"Box of Watches\",\n      \"attribute_set_id\":11,\n      \"price\":100,\n      \"status\":1,\n      \"visibility\":4,\n      \"type_id\":\"bundle\",\n      \"extension_attributes\":{\n         \"website_ids\":[\n            1,\n            2\n         ],\n         \"category_links\":[\n            {\n               \"position\":0,\n               \"category_id\":\"3\"\n            },\n            {\n               \"position\":0,\n               \"category_id\":\"6\"\n            }\n         ],\n         \"bundle_product_options\":[\n            {\n               \"title\":\"Men's Watches\",\n               \"required\":true,\n               \"type\":\"radio\",\n               \"position\":1,\n               \"sku\":\"box-of-watches\",\n               \"product_links\":[\n                  {\n                     \"sku\":\"24-MG04\",\n                     \"qty\":50,\n                     \"position\":2,\n                     \"is_default\":false,\n                     \"price\":0,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/notes.md",
          "loc": { "lines": { "from": 27, "to": 65 } }
        }
      }
    ],
    [
      "2d3ed963-013a-481a-a435-972359542b1b",
      {
        "pageContent": "\"price_type\":0,\n                     \"can_change_quantity\":0\n                  },\n                  {\n                     \"sku\":\"24-MG05\",\n                     \"qty\":50,\n                     \"position\":4,\n                     \"is_default\":false,\n                     \"price\":0,\n                     \"price_type\":0,\n                     \"can_change_quantity\":0\n                  }\n               ]\n            },\n            {\n               \"title\":\"Women's Watches\",\n               \"required\":true,\n               \"type\":\"radio\",\n               \"position\":2,\n               \"sku\":\"box-of-watches\",\n               \"product_links\":[\n                  {\n                     \"sku\":\"24-WG01\",\n                     \"qty\":50,\n                     \"position\":1,\n                     \"is_default\":false,\n                     \"price\":0,\n                     \"price_type\":0,\n                     \"can_change_quantity\":0\n                  },\n                  {",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/notes.md",
          "loc": { "lines": { "from": 66, "to": 96 } }
        }
      }
    ],
    [
      "6f5d4ae0-3612-486d-a9e0-51e12a4fe206",
      {
        "pageContent": "{\n                     \"sku\":\"24-WG09\",\n                     \"qty\":50,\n                     \"position\":2,\n                     \"is_default\":false,\n                     \"price\":0,\n                     \"price_type\":0,\n                     \"can_change_quantity\":0\n                  }\n               ]\n            }\n         ]\n      },\n      \"custom_attributes\":[\n         {\n            \"attribute_code\":\"price_type\",\n            \"value\":\"1\"\n         },\n         {\n            \"attribute_code\":\"price_view\",\n            \"value\":\"0\"\n         },\n         {\n            \"attribute_code\":\"required_options\",\n            \"value\":\"1\"\n         },\n         {\n            \"attribute_code\":\"has_options\",\n            \"value\":\"1\"\n         },\n         {\n            \"attribute_code\":\"meta_title\",\n            \"value\":\"watch-test\"\n         },\n         {\n            \"attribute_code\":\"sku_type\",\n            \"value\":\"1\"\n         },\n         {\n            \"attribute_code\":\"meta_description\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/notes.md",
          "loc": { "lines": { "from": 96, "to": 135 } }
        }
      }
    ],
    [
      "ff4d867b-3a8e-4779-9124-7a6d89931dfd",
      {
        "pageContent": "\"value\":\"watch-test This is a box of watches!\"\n         },\n         {\n            \"attribute_code\":\"weight_type\",\n            \"value\":\"0\"\n         },\n         {\n            \"attribute_code\":\"category_ids\",\n            \"value\":[\n               \"3\",\n               \"6\"\n            ]\n         },\n         {\n            \"attribute_code\":\"description\",\n            \"value\":\"<p>This is a box of watches!</p>\"\n         },\n         {\n            \"attribute_code\":\"short_description\",\n            \"value\":\"<p>A box of watches</p>\"\n         }\n      ]\n   }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/notes.md",
          "loc": { "lines": { "from": 136, "to": 160 } }
        }
      }
    ],
    [
      "e6cf7166-a95a-45e0-bd04-0bd3fe546411",
      {
        "pageContent": "### Related topics\n\n[Search using REST APIs](/rest/use-rest/performing-searches/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/notes.md",
          "loc": { "lines": { "from": 162, "to": 164 } }
        }
      }
    ],
    [
      "18eeb3f3-448b-4c5d-a260-0cf99132d315",
      {
        "pageContent": "---\ntitle: Bulk operation status endpoints\ndescription: Track the status of bulk endpoints\ncontributor_name: comwrap GmbH\ncontributor_link: https://www.comwrap.com/\nkeywords:\n  - REST\n--- \n \n# Bulk operation status endpoints\n\nAdobe Commerce generates a `bulk_uuid` each time it executes an [asynchronous API request](/rest/use-rest/asynchronous-web-endpoints/). You can track the status of an asynchronous operation with the following endpoints:\n\n*  `GET /V1/bulk/:bulkUuid/status`\n*  `GET /V1/bulk/:bulkUuid/operation-status/:status`\n*  `GET /V1/bulk/:bulkUuid/detailed-status`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "4889e076-2360-4f31-8a3f-1c4ec5adc88f",
      {
        "pageContent": "## Get the status summary\n\nThe `GET <host>/rest/<store_code>/V1/bulk/:bulkUuid/status` endpoint returns the abbreviated status of the specified operation:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 18, "to": 20 } }
        }
      }
    ],
    [
      "1d30a2b2-1f95-47a4-bccd-aca3f2320252",
      {
        "pageContent": "Field name | Data type | Description\n--- | --- | ---\n`operations_list` | Object | An array containing information about each operation in a bulk or asynchronous request.\n`id` | Integer | Identifies the bulk or asynchronous request.\n`status` | Integer | The operation status <br/>\\* `1` = Complete <br/>\\* `2` = The operation failed, but you can try to perform it again<br/>\\* `3` = The operation failed. You must change something to retry it.<br/>\\* `4` = Open<br/>\\* `5` = Rejected\n`result_message` | String | Describes the result of the operation. If successful, the value contains the string `Service execution success` as well as the method that executed the operation.\n`error_code` | Integer | If applicable, an error code associated with the operation.\n`user_type` | Integer | Type of user who made this request. Possible values are: <br/>\\* `1` = Integration <br/>\\* `2` = Administrator <br/>\\* `3` = Customer <br/>\\* `4` = Guest User",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 22, "to": 29 } }
        }
      }
    ],
    [
      "16ad513e-b7d9-4205-bcbb-de10a9bba3a3",
      {
        "pageContent": "`bulk_id` | String | UUID generated by an [asynchronous API request](/rest/asynchronous-web-endpoints) or [Bulk API request](/rest/use-rest/bulk-endpoints/).\n`description` | String | Contains the message queue topic.\n`start_time` | String | The time that a bulk or asynchronous operation started.\n`user_id` | Integer | The user ID that executed the request.\n`operation_count` | Integer | The number of operations processed in the request.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 30, "to": 34 } }
        }
      }
    ],
    [
      "639adbf0-6255-46ab-8861-23b680aed88c",
      {
        "pageContent": "**Response:**\n\n```json\n{\n  \"operations_list\": [\n    {\n      \"id\": 12,\n      \"status\": 1,\n      \"result_message\": \"Service execution success Magento\\\\Catalog\\\\Model\\\\ProductRepository\\\\Interceptor::save\",\n      \"error_code\": null\n    }\n  ],\n  \"user_type\": 2,\n  \"bulk_id\": \"fbfca270-7a90-4c4e-9f32-d6cf3728cdc7\",\n  \"description\": \"Topic async.magento.catalog.api.productrepositoryinterface.save.put\",\n  \"start_time\": \"2018-07-12 16:07:53\",\n  \"user_id\": 1,\n  \"operation_count\": 1\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 36, "to": 55 } }
        }
      }
    ],
    [
      "94deadc3-5b26-4571-8055-52957df937c0",
      {
        "pageContent": "## Get operations count by bulk uuid and status\n\nThe `GET <host>/rest/<store_code>/V1/bulk/:bulkUuid/operation-status/:status` endpoint returns the number of operations from the bulk batch that have the specified status.\n\nStatus | Description\n--- | ---\n`1` | Complete\n`2` | The operation failed, but you can try to perform it again.\n`3` | The operation failed. You must change something to retry it.\n`4` | Open\n`5` | Rejected\n\n**Response:**\n\n```json\n0\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 57, "to": 73 } }
        }
      }
    ],
    [
      "6ad656b3-6e95-4020-8024-78aabc28c591",
      {
        "pageContent": "## Get the detailed status\n\nThe `GET /V1/bulk/:bulkUuid/detailed-status` endpoint returns detailed information about status of a specified operation. It is similar to the `GET /V1/bulk/:bulkUuid/status` endpoint, except that the `operations_list` array also contains the message queue topic name and serialized data for each operation.\n\n```http\nGET <host>/rest/<store_code>/V1/bulk/:bulkUuid/detailed-status",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 75, "to": 80 } }
        }
      }
    ],
    [
      "6eccd76d-d367-465f-aafd-f9648b96edb8",
      {
        "pageContent": "```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 79, "to": 79 } }
        }
      }
    ],
    [
      "0945f0e9-4906-44b8-b4a1-ceea5e4f9989",
      {
        "pageContent": "Field name | Data type | Description\n--- | --- | ---\n`operations_list` | Object | An array containing information about each operation in a bulk or asynchronous request.\n`id` | Integer | Identifies the bulk or asynchronous request.\n`bulk_uuid` | String |  UUID generated by an [asynchronous API request](/rest/asynchronous-web-endpoints) or [Bulk API request](/rest/use-rest/bulk-endpoints/).\n`topic_name` | String | The name of the message queue topic, in the format `async.<service.contract.path>.<method>`. The service contract path is lowercase, and the method is either `post`, `put`, or `delete`.\n`serialized_data` | String | An array of serialized input data. It contains serialized JSON with the following keys: `entity_id` - `null`, `entity_link` - an empty string, `meta_info` - the body of the API request that was executed.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 83, "to": 89 } }
        }
      }
    ],
    [
      "8fb5f580-b661-4ffd-943a-b5114b8b149c",
      {
        "pageContent": "`result_serialized_data` | String | Contains serialized output of the corresponding synchronous API call. For example, if you call `POST /async/V1/products`, this field contains serialized response from `POST /V1/products`.\n`status` | Integer | The operation status <br/>\\* `1` = Complete <br/>\\* `2` = The operation failed, but you can try to perform it again<br/>\\* `3` = The operation failed. You must change something to retry it.<br/>\\* `4` = Open<br/>\\* `5` = Rejected\n`result_message` | String | Describes the result of the operation. If successful, the value contains the string `Service execution success` as well as the method that executed the operation.\n`error_code` | Integer | If applicable, an error code associated with the operation.\n`user_type` | Integer | Type of user who made this request. Possible values are: <br/>\\* `1` = Integration <br/>\\* `2` = Administrator <br/>\\* `3` = Customer <br/>\\* `4` = Guest User",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 90, "to": 94 } }
        }
      }
    ],
    [
      "d019d311-27bf-4f73-bf28-48c3186af955",
      {
        "pageContent": "`bulk_id` | String | UUID generated by an [asynchronous API request](/rest/asynchronous-web-endpoints) or [Bulk API request](/rest/use-rest/bulk-endpoints/).\n`description` | String | Contains the message queue topic name.\n`start_time` | String | The time that a bulk or asynchronous operation started.\n`user_id` | Integer | The user ID that executed the request.\n`operation_count` | Integer | The number of operations processed in the request.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 95, "to": 99 } }
        }
      }
    ],
    [
      "24f58320-6267-4889-8c84-04b3f89a4480",
      {
        "pageContent": "**Response:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 101, "to": 101 } }
        }
      }
    ],
    [
      "a0482411-ce24-4b6e-9ee5-994445feceeb",
      {
        "pageContent": "```json\n{\n  \"operations_list\": [\n    {\n      \"id\": 4,\n      \"bulk_uuid\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n      \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",\n      \"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"mshaw@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Melanie Shaw\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Doe\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n      \"result_serialized_data\": null,\n      \"status\": 3,\n      \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n      \"error_code\": 0\n    },\n    {\n      \"id\": 5,\n      \"bulk_uuid\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n      \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 103, "to": 119 } }
        }
      }
    ],
    [
      "be3f2ebc-9437-4b39-bd30-57b1066ee810",
      {
        "pageContent": "\"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"bmartin@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Bryce\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Martin\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n      \"result_serialized_data\": null,\n      \"status\": 3,\n      \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n      \"error_code\": 0\n    },\n    {\n      \"id\": 6,\n      \"bulk_uuid\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n      \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",\n      \"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"bmartin@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Bryce\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Martin\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n      \"result_serialized_data\": null,\n      \"status\": 3,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 120, "to": 132 } }
        }
      }
    ],
    [
      "a3b2dd5b-3bb6-40b0-95c8-8e97b13c1cc1",
      {
        "pageContent": "\"status\": 3,\n      \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n      \"error_code\": 0\n    },\n    {\n      \"id\": 7,\n      \"bulk_uuid\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n      \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",\n      \"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"tgomez@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Teresa\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Gomez\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n      \"result_serialized_data\": null,\n      \"status\": 3,\n      \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n      \"error_code\": 0\n    }\n  ],\n  \"user_type\": 2,\n  \"bulk_id\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n  \"description\": \"Topic async.magento.customer.api.accountmanagementinterface.createaccount.post\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 132, "to": 149 } }
        }
      }
    ],
    [
      "ff2bd03a-c155-4354-8b58-749e64cbcb41",
      {
        "pageContent": "\"start_time\": \"2018-07-11 20:07:14\",\n  \"user_id\": null,\n  \"operation_count\": 4\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-endpoints.md",
          "loc": { "lines": { "from": 150, "to": 154 } }
        }
      }
    ],
    [
      "10176615-5376-4a75-89ca-c2dbf417ad23",
      {
        "pageContent": "---\ntitle: Search for the status of a bulk operation\ndescription: Search for bulk operation statuses\ncontributor_name: comwrap GmbH\ncontributor_link: https://www.comwrap.com\nkeywords:\n  - REST\n--- \n \n# Search for the status of a bulk operation\n\nThe Status Operation Search endpoint (`GET /V1/bulk/?searchCriteria`) allows you to search for bulk operation statuses.\n\nYou can specify any of the following fields to filter on operation statuses:\n\n*  `start_time` - The time that a bulk operation started.\n*  `status` - The operation status:\n   *  `1` = Complete\n   *  `2` = The operation failed, but you can try to perform it again.\n   *  `3` = The operation failed. You must change something to retry it.\n   *  `4` = Open\n   *  `5` = Rejected\n*  `bulk_uuid` - UUID generated by an [asynchronous API request](/rest/asynchronous-web-endpoints) or [Bulk API request](/rest/use-rest/bulk-endpoints/).\n*  `topic_name` - Queue topic name\n\n**Sample usage:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-search.md",
          "loc": { "lines": { "from": 1, "to": 26 } }
        }
      }
    ],
    [
      "3bd8e8f4-c3cf-4ac3-b65f-cdf0db05a352",
      {
        "pageContent": "**Sample usage:**\n\nThe following call returns bulk operations that contain an error that cannot be retried.\n\n```http\nGET <host>/rest/<store_code>/V1/bulk/?\nsearchCriteria[filter_groups][0][filters][0][field]=status&\nsearchCriteria[filter_groups][0][filters][0][value]=3&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=eq",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-search.md",
          "loc": { "lines": { "from": 26, "to": 34 } }
        }
      }
    ],
    [
      "3fa7fdca-ecd1-4576-8e74-c2472d421003",
      {
        "pageContent": "```\n\nSee [Search using REST APIs](/rest/use-rest/performing-searches/) for more information about the syntax of search requests.\n\n**Response:**\n\nThe operation with bulk UUID `c43ed402-3dd3-4100-92e2-dc5852d3009b` contains a `status` code of 3.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-search.md",
          "loc": { "lines": { "from": 35, "to": 41 } }
        }
      }
    ],
    [
      "63155ed0-c937-4da0-bdbd-6955debe6bbb",
      {
        "pageContent": "```json\n{\n    \"items\": [\n        {\n            \"extension_attributes\": {\n                \"start_time\": \"2018-07-11 20:07:14\"\n            },\n            \"id\": 4,\n            \"bulk_uuid\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n            \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",\n            \"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"mshaw@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Melanie Shaw\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Doe\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n            \"result_serialized_data\": null,\n            \"status\": 3,\n            \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n            \"error_code\": 0\n        },\n        {\n            \"extension_attributes\": {\n                \"start_time\": \"2018-07-11 20:07:14\"\n            },\n            \"id\": 5,",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-search.md",
          "loc": { "lines": { "from": 43, "to": 63 } }
        }
      }
    ],
    [
      "5dc8cceb-77b8-4fc5-a8c4-2eaa8a97908e",
      {
        "pageContent": "\"bulk_uuid\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n            \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",\n            \"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"bmartin@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Bryce\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Martin\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n            \"result_serialized_data\": null,\n            \"status\": 3,\n            \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n            \"error_code\": 0\n        },\n        {\n            \"extension_attributes\": {\n                \"start_time\": \"2018-07-11 20:07:14\"\n            },\n            \"id\": 6,\n            \"bulk_uuid\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n            \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-search.md",
          "loc": { "lines": { "from": 64, "to": 78 } }
        }
      }
    ],
    [
      "ce89ed3c-c6f8-443b-af12-94dc98d79ddb",
      {
        "pageContent": "\"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"bmartin@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Bryce\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Martin\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n            \"result_serialized_data\": null,\n            \"status\": 3,\n            \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n            \"error_code\": 0\n        },\n        {\n            \"extension_attributes\": {\n                \"start_time\": \"2018-07-11 20:07:14\"\n            },\n            \"id\": 7,\n            \"bulk_uuid\": \"c43ed402-3dd3-4100-92e2-dc5852d3009b\",\n            \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-search.md",
          "loc": { "lines": { "from": 79, "to": 91 } }
        }
      }
    ],
    [
      "965c4fbf-a246-4ea1-9233-433e34ff789b",
      {
        "pageContent": "\"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"tgomez@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Teresa\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Gomez\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n            \"result_serialized_data\": null,\n            \"status\": 3,\n            \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n            \"error_code\": 0\n        },\n        {\n            \"extension_attributes\": {\n                \"start_time\": \"2018-07-11 20:58:31\"\n            },\n            \"id\": 10,\n            \"bulk_uuid\": \"799a59c0-09ca-4d60-b432-2953986c1c38\",\n            \"topic_name\": \"async.magento.customer.api.accountmanagementinterface.createaccount.post\",",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-search.md",
          "loc": { "lines": { "from": 92, "to": 104 } }
        }
      }
    ],
    [
      "c09b379a-8347-43ca-aaa9-f6c069e1408e",
      {
        "pageContent": "\"serialized_data\": \"{\\\"entity_id\\\":null,\\\"entity_link\\\":\\\"\\\",\\\"meta_information\\\":\\\"{\\\\\\\"customer\\\\\\\":{\\\\\\\"email\\\\\\\":\\\\\\\"bmartin@example.com\\\\\\\",\\\\\\\"firstname\\\\\\\":\\\\\\\"Bryce\\\\\\\",\\\\\\\"lastname\\\\\\\":\\\\\\\"Martin\\\\\\\"},\\\\\\\"password\\\\\\\":\\\\\\\"Password1\\\\\\\",\\\\\\\"redirectUrl\\\\\\\":\\\\\\\"\\\\\\\"}\\\"}\",\n            \"result_serialized_data\": null,\n            \"status\": 3,\n            \"result_message\": \"A customer with the same email address already exists in an associated website.\",\n            \"error_code\": 0\n        }\n    ],\n    \"search_criteria\": {\n        \"filter_groups\": [\n            {\n                \"filters\": [\n                    {\n                        \"field\": \"status\",\n                        \"value\": \"3\",\n                        \"condition_type\": \"eq\"\n                    }\n                ]\n            }\n        ]\n    },\n    \"total_count\": 5\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/operation-status-search.md",
          "loc": { "lines": { "from": 105, "to": 127 } }
        }
      }
    ],
    [
      "2d2497af-6cc5-4ab8-ada3-313bd1b3fcd4",
      {
        "pageContent": "---\ntitle: Search using REST endpoints\ndescription: How to search using REST endpoints with examples\nkeywords:\n  - REST\n--- \nimport * as Vars from '../../../data/vars.js';\n\n# Search using REST endpoints\n\nPOST, PUT, and DELETE requests to the REST Web API require the service method parameters to be in the body of the request. For example, to create a Customer, you would specify a JSON array (or XML structure) in the body of the message.\n\nFor search APIs that invoke a `*Repository::getList(SearchCriteriaInterface *)` call, the searchCriteria must be specified in the URL of the GET request. The basic pattern for specifying the criteria is\n\n```http\nsearchCriteria[filter_groups][<index>][filters][<index>][field]=<field_name>\nsearchCriteria[filter_groups][<index>][filters][<index>][value]=<search_value>\nsearchCriteria[filter_groups][<index>][filters][<index>][condition_type]=<operator>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 1, "to": 18 } }
        }
      }
    ],
    [
      "2ac71e19-1f4f-4ded-9a79-bb314133ec1c",
      {
        "pageContent": "```\n\nwhere:\n\n*  `field` is an attribute name.\n*  `value` specifies the value to search for.\n*  `condition_type` is one of the following values:\n\nCondition | Notes\n--- | ---\n`eq` | Equals\n`finset` | A value within a set of values\n`from` | The beginning of a range. Must be used with `to`.\n`gt` | Greater than\n`gteq` |  Greater than or equal\n`in` | In. The `value` can contain a comma-separated list of values.\n`like` | Like. The `value` can contain the SQL wildcard characters when `like` is specified.\n`lt` | Less than\n`lteq` | Less than or equal\n`moreq` | More or equal\n`neq` | Not equal\n`nfinset` | A value that is not within a set of values.\n`nin` | Not in. The `value` can contain a comma-separated list of values.\n`nlike` | Not like\n`notnull` | Not null\n`null` | Null\n`to` | The end of a range. Must be used with `from`.\n\n<InlineAlert variant=\"info\" slots=\"text\"/>\n\n`condition_type` is optional if the operator is `eq`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 19, "to": 49 } }
        }
      }
    ],
    [
      "d0d26651-be32-42f8-a96d-d0cf7727ebc7",
      {
        "pageContent": "The `filter_groups` array defines one or more `filters`. Each filter defines a search term, and the `field`, `value`, and `condition_type` of a search term must be assigned the same index number, starting with 0. Increment additional terms as needed.\n\nWhen constructing a search, keep the following in mind:\n\n*  To perform a logical OR, specify multiple `filters` within a `filter_groups`.\n*  To perform a logical AND, specify multiple `filter_groups`.\n*  You cannot perform a logical OR across different `filter_groups`, such as `(A AND B) OR (X AND Y)`. ORs can be performed only within the context of a single `filter_groups`.\n*  You can only search top-level attributes.\n\nThe following sections provide examples of each type of search. These examples use the <Vars.sitedatavarce/> sample data.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 51, "to": 60 } }
        }
      }
    ],
    [
      "3d34bfce-48e3-4b82-bad0-8ebbd5780c82",
      {
        "pageContent": "## Simple search\n\nThe <Vars.sitedatavarce/> sample data uses the `category_gear` field to describe the categories for each item listed under Gear on sample store. Each item can be assigned to multiple categories. Electronics are assigned the code 86. The following example returns all gear tagged as electronics.\n\n```http\nGET <host>/rest/<store_code>/V1/products/?\nsearchCriteria[filter_groups][0][filters][0][field]=category_gear&\nsearchCriteria[filter_groups][0][filters][0][value]=86&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=finset\n```\n\nThe system creates an array, as shown in the following pseudo-code.\n\n```http\nsearchCriteria => [\n  'filterGroups' => [\n    0 => [\n      'filters' => [\n         0 => [\n           'field' => 'category_gear',\n           'value' => '86',\n           'condition_type' => 'finset'\n         ]\n      ]\n    ]\n  ]\n```\n\nThe query returns 9 items.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 62, "to": 90 } }
        }
      }
    ],
    [
      "eb9ffe43-a30d-4479-b98c-11845548c79e",
      {
        "pageContent": "## Simple search using a timestamp\n\nThe following search finds all invoices created after the specified time (midnight, July 1 2016). You can set up a similar search to run periodically to poll for changes.\n\n```http\nGET <host>/rest/<store_code>/V1/invoices?\nsearchCriteria[filter_groups][0][filters][0][field]=created_at&\nsearchCriteria[filter_groups][0][filters][0][value]=2016-07-01 00:00:00&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=gt\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 92, "to": 101 } }
        }
      }
    ],
    [
      "cf123a2c-31dc-4019-a15b-6f003d3ef95e",
      {
        "pageContent": "## Simple search using an `in` conditions type\n\nThe following search finds all the products that are provided in the value field. When you specify the `in` condition type, the value field must be a comma separated list.\n\n```http\nGET <host>/rest/<store_code>/V1/products?\nsearchCriteria[filter_groups][0][filters][0][field]=entity_id&\nsearchCriteria[filter_groups][0][filters][0][value]=1,2,3,4,5&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=in\n```\n\nThe query returns 5 items.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 103, "to": 114 } }
        }
      }
    ],
    [
      "d55ff4b5-22ad-4d91-9a8f-4866ecc7d7f3",
      {
        "pageContent": "### Logical OR search\n\nThe following example searches for all products whose names contain the string `Leggings` or `Parachute`. The instances of `%25` in the example are converted into the SQL wildcard character `%`.\n\n```http\nGET <host>/rest/<store_code>/V1/products?\nsearchCriteria[filter_groups][0][filters][0][field]=name&\nsearchCriteria[filter_groups][0][filters][0][value]=%25Leggings%25&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=like&\nsearchCriteria[filter_groups][0][filters][1][field]=name&\nsearchCriteria[filter_groups][0][filters][1][value]=%25Parachute%25&\nsearchCriteria[filter_groups][0][filters][1][condition_type]=like",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 116, "to": 127 } }
        }
      }
    ],
    [
      "c6db2f2d-3422-4d95-b4c0-d42517a265ff",
      {
        "pageContent": "```\n\nThe system creates an array, as shown in the following pseudo-code.\n\n```http\nsearchCriteria => [\n  'filterGroups' => [\n    0 => [\n      'filters' => [\n         0 => [\n           'field' => 'name',\n           'value' => '%25Leggings%25',\n           'condition_type' => 'like'\n         ]\n         1 => [\n           'field' => 'name',\n           'value' => '%25Parachute%25',\n           'condition_type' => 'like'\n         ]\n      ]\n    ]\n  ]\n```\n\nThe search returns 14 products that contain the string `Leggings` in the `name` field and 14 products that contain the string `Parachute`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 128, "to": 152 } }
        }
      }
    ],
    [
      "3f784cf8-41df-4e21-8fd0-f4dc85c7ce4d",
      {
        "pageContent": "### Logical AND search\n\nThis sample searches for women's shorts that are size 31 and costs less than $30. In the CE sample data, women's shorts have a `sku` value that begins with `WSH`. The `sku` also contains the size and color, such as `WSH02-31-Yellow`.\n\n```http\nGET <host>/rest/<store_code>/V1/products?\nsearchCriteria[filter_groups][0][filters][0][field]=sku&\nsearchCriteria[filter_groups][0][filters][0][value]=WSH%2531%25&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=like&\nsearchCriteria[filter_groups][1][filters][0][field]=price&\nsearchCriteria[filter_groups][1][filters][0][value]=30&\nsearchCriteria[filter_groups][1][filters][0][condition_type]=lt",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 154, "to": 165 } }
        }
      }
    ],
    [
      "d2c73981-aefd-463a-957c-f377d561143c",
      {
        "pageContent": "```\n\nThe system creates an array, as shown in the following pseudo-code.\n\n```http\nsearchCriteria => [\n    'filterGroups' => [\n      0 => [\n        'filters' => [\n           0 => [\n             'field' => 'sku',\n             'value' => 'WSH%31%',\n             'condition_type' => 'like'\n           ]\n        ]\n      ]  \n      1 => [\n        'filters' => [\n           0 => [\n             'field' => 'price',\n             'value' => '30',\n             'condition_type' => 'lt'\n           ]\n        ]\n      ]\n    ]\n```\n\nThe query returns 9 items.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 166, "to": 194 } }
        }
      }
    ],
    [
      "5c517368-1e2d-44e3-9d1d-f3f447c9d2e6",
      {
        "pageContent": "### Logical AND and OR search\n\nThis sample is similar the Logical AND sample. It searches the `sku`s for women's shorts (WSH%) or pants (WP%)in size 29. The system performs two logical ANDs to restrict the results to those that cost from $40 to $49.99",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 196, "to": 198 } }
        }
      }
    ],
    [
      "dc14abb3-e3ba-4acd-afb5-1d1302d3328b",
      {
        "pageContent": "```http\nGET <host>/rest/<store_code>/V1/products?\nsearchCriteria[filter_groups][0][filters][0][field]=sku&\nsearchCriteria[filter_groups][0][filters][0][value]=WSH%2529%25&\nsearchCriteria[filter_groups][0][filters][0][condition_type]=like&\nsearchCriteria[filter_groups][0][filters][1][field]=sku&\nsearchCriteria[filter_groups][0][filters][1][value]=WP%2529%25&\nsearchCriteria[filter_groups][0][filters][1][condition_type]=like&\nsearchCriteria[filter_groups][1][filters][0][field]=price&\nsearchCriteria[filter_groups][1][filters][0][value]=40&\nsearchCriteria[filter_groups][1][filters][0][condition_type]=from&\nsearchCriteria[filter_groups][2][filters][0][field]=price&\nsearchCriteria[filter_groups][2][filters][0][value]=49.99&\nsearchCriteria[filter_groups][2][filters][0][condition_type]=to",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 200, "to": 213 } }
        }
      }
    ],
    [
      "e4aa923d-fb40-43f5-9abd-d710f6c58495",
      {
        "pageContent": "```\n\nThe query returns 37 items.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 214, "to": 216 } }
        }
      }
    ],
    [
      "41f69cc6-1824-4383-9461-8b4ebffd3184",
      {
        "pageContent": "## Other search criteria\n\nThe following searchCriteria can be used to determine the sort order and the number of items to return.\n\n*  `searchCriteria[sortOrders][<index>][field]=<field-name>` - Specifies the field to sort on. By default, search results are returned in descending order. You can sort on multiple fields. For example, to sort on `price` first and then by `name`, call `searchCriteria[sortOrders][0][field]=price&searchCriteria[sortOrders][1][field]=name`.\n\n*  `searchCriteria[sortOrders][<index>][direction]=ASC | DESC` - Specifies whether to return results in ascending (ASC) or descending (DESC) order. To expand the previous example and sort the `price` fields in descending order and the `name` fields in ascending order, call `searchCriteria[sortOrders][0][field]=price&searchCriteria[sortOrders][1][field]=name&searchCriteria[sortOrders][1][direction]=ASC`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 218, "to": 224 } }
        }
      }
    ],
    [
      "83972473-45ac-4518-91ed-f7b7de20026d",
      {
        "pageContent": "*  `searchCriteria[pageSize]` - Specifies the maximum number of items to return. The value must be an integer. If the `pageSize` is not specified, the system returns all matches.\n\n*  `searchCriteria[currentPage]` - Returns the current page.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 226, "to": 228 } }
        }
      }
    ],
    [
      "cb578db4-b417-4e73-9c99-a554c75b3c73",
      {
        "pageContent": "### Example for search criteria to determine the sort order and attributes to return\n\nThis example shows how to use search criteria to determine the sort order and attributes to return. It returns orders with status `pending`.\n\n**Endpoint:**\n\n`GET <host>/rest/V1/orders/`\n\n**Headers:**\n\n`Content-Type` `application/json`\n\n`Authorization` `Bearer <administrator token>`\n\n**Parameters:**\n\nParameter | Value | Description\n--- | --- | ---\nsearchCriteria[filter_groups][0][filters][0][field] | status | Attribute name to filter\nsearchCriteria[filter_groups][0][filters][0][value] | pending | Attribute value to filter\nfields | items[increment_id,entity_id] | Attributes to return in the response. If you do not specify this parameter, all attributes will be returned.\n\n**Payload:**\n\nNot applicable\n\n**Request:**",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 230, "to": 256 } }
        }
      }
    ],
    [
      "b9e1561f-fe56-4cc5-9657-fe163a90200e",
      {
        "pageContent": "**Request:**\n\n```http\nGET <host>/rest/V1/orders?\nsearchCriteria[filter_groups][0][filters][0][field]=status&\nsearchCriteria[filter_groups][0][filters][0][value]=pending&\nsearchCriteria[sortOrders][0][field]=increment_id&\nfields=items[increment_id,entity_id]",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 256, "to": 263 } }
        }
      }
    ],
    [
      "e994ac27-e939-472e-ac66-fe572882dffe",
      {
        "pageContent": "```\n\n**Response:**\n\n```json\n{\n    \"items\": [\n        {\n            \"entity_id\": 3003,\n            \"increment_id\": \"WA0003003\"\n        },\n        {\n            \"entity_id\": 3140,\n            \"increment_id\": \"WA0003140\"\n        },\n        {\n            \"entity_id\": 9435,\n            \"increment_id\": \"WA0009435\"\n        }\n    ]\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/performing-searches.md",
          "loc": { "lines": { "from": 264, "to": 285 } }
        }
      }
    ],
    [
      "acb50d67-cb56-4901-9071-ed9a78b4c805",
      {
        "pageContent": "---\ntitle: Protected endpoints\ndescription: How to supply authentication for protected endpoints that use CAPTCHA\nkeywords:\n  - REST\n  - Security\n--- \n \n# Protected endpoints\n\nIf CAPTCHA or reCAPTCHA is enabled on pages requiring shopper input, then in most cases, the corresponding endpoints that send requests to the Adobe Commerce server must include an HTTP header that contains a value entered by the shopper (for CAPTCHA) or generated by the Google API (for reCAPTCHA). However, if you specify an integration authorization token in the header of the endpoint, then you do not supply a header specific to CAPTCHA or reCAPTCHA.\n\nThe HTTP `X-Captcha` and `X-ReCaptcha` headers:\n\n*  Cannot be received by an automated script or a non-UI API call. They are captured and returned by the UI Web form only.\n*  Are optional in protected mutation API calls that provide **_integration authorization_** tokens only. They cannot be skipped when you provide an Admin or Bearer token.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/protected-endpoints.md",
          "loc": { "lines": { "from": 1, "to": 16 } }
        }
      }
    ],
    [
      "eb0958e6-7ec9-48fc-81bb-38c0d6315a2c",
      {
        "pageContent": "## CAPTCHA\n\nThe following table lists the forms that can be configured to require CAPTCHA. Go to **Stores** > **Configuration** > **Customers** > **Customer Configuration** > **CAPTCHA** > **Forms** to enable or disable CAPTCHA on these forms.\n\nThe endpoint that corresponds to a CAPTCHA-enabled form must include the HTTP `X-Captcha` header, along with the text the shopper entered in response to the CAPTCHA challenge.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/protected-endpoints.md",
          "loc": { "lines": { "from": 18, "to": 22 } }
        }
      }
    ],
    [
      "2cded2f1-9630-4dc5-84e0-36da20ee880c",
      {
        "pageContent": "Form name | REST endpoint\n--- | ---\nAdd Gift Card Code | `POST /V1/carts/mine/giftCards` <br/>`POST /V1/carts/guest-carts/:cartId/giftCards`\nApplying Coupon Code | `PUT /V1/carts/:cartId/coupons/:couponCode` <br/>`PUT /V1/guest-carts/:cartId/coupons/:couponCode`\nChange password | `PUT /V1/customers/me/password`\nCheckout/Placing Order | `POST /V1/carts/mine/payment-information` <br/>`POST /V1/carts/mine/set-payment-information` <br/>`POST /V1/guest-carts/:cartId/payment-information` <br/>`POST /V1/guest-carts/:cartId/set-payment-information`\nContact Us | Not applicable\nCreate company | `POST /V1/company`\nCreate user | `POST /V1/customers`\nForgot password | `POST /V1/customers/resetPassword`<br/>`PUT /V1/customers/password`\nLogin | `POST /V1/integration/customer/token`\nPayflow Pro | Not applicable\nSend to Friend Form | Not applicable\nShare Wishlist Form | Not applicable",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/protected-endpoints.md",
          "loc": { "lines": { "from": 24, "to": 37 } }
        }
      }
    ],
    [
      "89abc8fd-ac7b-45f1-8f0c-c147ce4e3662",
      {
        "pageContent": "## reCAPTCHA\n\nThe following table lists the forms that can be configured to require reCAPTCHA. Go to **Stores** > **Configuration** > **Security** > **Google reCAPTCHA Storefront** > **Storefront** to enable or disable reCAPTCHA on these forms. If reCAPTCHA is enabled, unless an integration token is provided, always specify the HTTP `X-ReCaptcha` header and the value generated by the Google API.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/protected-endpoints.md",
          "loc": { "lines": { "from": 39, "to": 41 } }
        }
      }
    ],
    [
      "707893df-a314-41ba-8ea4-decf84f3a4ec",
      {
        "pageContent": "Field name | Mutation\n--- | ---\nEnable for Customer Login | `PUT /V1/integration/customer/token`\nEnable for Forgot Password | `PUT /V1/customers/me/password`\nEnable for Create New Customer Account | `POST /V1/customers`\nEnable for Edit Customer Account | `PUT /V1/customers/me`\nEnable for Contact Us | Not applicable\nEnable for Product Review | Not applicable\nEnable for Newsletter Subscription | Not applicable\nEnable for Send To Friend | Not applicable\nEnable for PayPal PayflowPro payment form | Not applicable\nEnable for Braintree payment form | Not applicable\nEnable for Checkout/Placing Order | `POST /V1/carts/mine/payment-information` <br/>`POST /V1/carts/mine/set-payment-information` <br/>`POST /V1/guest-carts/:cartId/payment-information` <br/>`POST /V1/guest-carts/:cartId/set-payment-information`\nEnable for Coupon Codes | `PUT /V1/carts/:cartId/coupons/:couponCode` <br/>`PUT /V1/guest-carts/:cartId/coupons/:couponCode`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/protected-endpoints.md",
          "loc": { "lines": { "from": 43, "to": 56 } }
        }
      }
    ],
    [
      "8b2f36a6-046c-4a1e-a995-4a5aace800a0",
      {
        "pageContent": "### Related topics\n\n[Construct a request](/get-started/gs-web-api-request)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/protected-endpoints.md",
          "loc": { "lines": { "from": 58, "to": 60 } }
        }
      }
    ],
    [
      "b49891b4-b3aa-48ad-8600-38f4519eb6ac",
      {
        "pageContent": "---\ntitle: Retrieve filtered responses for REST endpoints\ndescription: How to filter your REST responses\nkeywords:\n  - REST\n--- \nimport * as Vars from '../../../data/vars.js';\n\n# Retrieve filtered responses for REST endpoints\n\nSome REST calls return dozens or even hundreds of parameters, and parsing through all this data can be unwieldy. In addition, mobile app developers might find the bandwidth needed to process a request to be excessive. To resolve these problems, Adobe Commerce provides a query parameter-based syntax for REST requests that return partial responses.\n\n<InlineAlert variant=\"success\" slots=\"text\"/>\n\nThis feature is not available for SOAP, because SOAP does not allow partial responses.\n\nYou can append `?fields=<field_or_object1>,<field_or_object2>,...` to any GET, POST, or PUT operation to filter unimportant information from the response. `<field_or_object>` can be any of the following:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 1, "to": 17 } }
        }
      }
    ],
    [
      "a350cbbf-6a17-4e1c-8598-e89aeaf41b0d",
      {
        "pageContent": "*  Simple top-level field\n*  Top-level object that includes all fields\n*  Top-level object with selected fields\n*  Nested objects\n\nSeparate each field or object with a comma.\n\nOn POST and PUT requests, Commerce ignores the `fields` parameter as input, but the response includes only the requested fields and objects.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 19, "to": 26 } }
        }
      }
    ],
    [
      "7da0d25b-4adb-4c6e-93b2-26312d228ef5",
      {
        "pageContent": "## Examples\n\nAll examples use Luma sample data.\n\n## Simple fields\n\nThe following example returns only the `sku`, `price`, and `name` for the specified product:\n\n`GET <host>/rest/<store_code>/V1/products/24-MB01?fields=sku,price,name`\n\n```json\n{\n  \"sku\": \"24-MB01\"\n  \"name\": \"Joust Duffle Bag\"\n  \"price\": 24.99\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 28, "to": 44 } }
        }
      }
    ],
    [
      "c1b2dc84-8702-44ac-9470-34a88b9fcebf",
      {
        "pageContent": "## Simple fields and top-level objects with all fields\n\nThe following example returns only the customer first name, last name, and the entire `billing_address` object from a specified order. Do not include brackets `[]` after an object name when you want to return all of the object's contents.\n\n`GET <host>/rest/<store_code>/V1/orders/2?fields=billing_address,customer_firstname,customer_lastname`\n\n```json\n{\n\"customer_firstname\": \"Veronica\"\n\"customer_lastname\": \"Costello\"\n\"billing_address\": {\n  \"address_type\": \"billing\"\n  \"city\": \"Calder\"\n  \"country_id\": \"US\"\n  \"customer_address_id\": 1\n  \"email\": \"roni_cost@example.com\"\n  \"entity_id\": 4\n  \"firstname\": \"Veronica\"\n  \"lastname\": \"Costello\"\n  \"parent_id\": 2\n  \"postcode\": \"49628-7978\"\n  \"region\": \"Michigan\"\n  \"region_code\": \"MI\"\n  \"region_id\": 33\n  \"street\": \"6146 Honey Bluff Parkway\"\n  \"telephone\": \"(555) 229-3326\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 46, "to": 74 } }
        }
      }
    ],
    [
      "6d4089af-4cc1-4b7e-b093-4ad39371f4ed",
      {
        "pageContent": "## Top-level object with selected fields\n\nThe following example returns only the `name`, `qty`, and `sku` fields defined in an `items` object from a specified shipment:\n\n`GET <host>/rest/<store_code>/V1/shipment/2?fields=items[name,qty,sku]`\n\n```json\n\"items\": [\n   {\n     \"name\": \"Minerva LumaTech&trade; V-Tee-XS-Blue\",\n     \"qty\": 1,\n     \"sku\": \"WS08-XS-Blue\",\n   }\n]\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 76, "to": 90 } }
        }
      }
    ],
    [
      "2e710167-f49a-42f3-99a5-6c1131ed5660",
      {
        "pageContent": "## Nested objects\n\nThis example returns only the following:\n\n*  The product's `sku` and `name`\n*  The entire `category_links` object, which is defined in `extension_attributes`\n*  The `item_id` and `qty` fields of the `stock_item` object, which is also defined in `extension_attributes`\n\n`GET <host>/rest/<store_code>/V1/products/MT12?fields=name,sku,extension_attributes[category_links,stock_item[item_id,qty]]`\n\n```json\n{\n  \"sku\": \"MT12\"\n  \"name\": \"Cassius Sparring Tank\"\n  \"extension_attributes\": {\n    \"category_links\": {\n      \"position\": 1\n      \"category_id\": \"18\"\n    }\n    \"stock_item\": {\n      \"item_id\": 732\n      \"qty\": 0\n      }\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 92, "to": 117 } }
        }
      }
    ],
    [
      "bd1dcbde-3b27-4a74-a1ab-3c49ffbfa07f",
      {
        "pageContent": "## POST operation\n\nThe following POST operation and payload creates a catalog category named `New Category`. Commerce returns only the `id`, `parent_id`, and `name` attributes\n\n`POST <host>/rest/<store_code>/V1/categories?fields=id,parent_id,name`\n\n**Payload:**\n\n```json\n{\n  \"category\": {\n    \"name\": \"New Category\",\n    \"is_active\": true\n  }\n}\n```\n\n**Response:**\n\n```json\n{\n\"id\": 43\n\"parent_id\": 2\n\"name\": \"New Category\"\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 119, "to": 144 } }
        }
      }
    ],
    [
      "2b81d031-d19c-45ee-bd69-cf56d10a75a5",
      {
        "pageContent": "## Using with searchCriteria\n\nThe [`searchCriteria` query parameter](/rest/use-rest/performing-searches/) allows you to search across multiple objects in a collection. You can use the `fields` query parameter in conjunction with `searchCriteria` to limit the output. The question mark (?) that precedes `fields` in all the other examples in this document is replaced with an ampersand (&amp;).\n\nThe following query returns only the `sku` and `name` parameters for product items whose `category_gear` attribute includes the value `86`.\n\n`GET <host>/rest/<store_code>/V1/products/?searchCriteria[filter_groups][0][filters][0][field]=category_gear&searchCriteria[filter_groups][0][filters][0][value]=86&searchCriteria[filter_groups][0][filters][0][condition_type]=finset&fields=items[sku,name]`",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 146, "to": 152 } }
        }
      }
    ],
    [
      "c227581f-4743-4f54-aa88-aae8176adbbb",
      {
        "pageContent": "```json\n{\n\"items\":\n  {\n    \"sku\": \"24-MG04\"\n    \"name\": \"Aim Analog Watch\"\n  }\n  {\n    \"sku\": \"24-MG01\"\n    \"name\": \"Endurance Watch\"\n  }\n  {\n    \"sku\": \"24-MG03\"\n    \"name\": \"Summit Watch\"\n  }\n  {\n    \"sku\": \"24-MG05\"\n    \"name\": \"Cruise Dual Analog Watch\"\n  }\n  {\n    \"sku\": \"24-MG02\"\n    \"name\": \"Dash Digital Watch\"\n  }\n  {\n    \"sku\": \"24-WG09\"\n    \"name\": \"Luma Analog Watch\"\n  }\n  {\n    \"sku\": \"24-WG01\"\n    \"name\": \"Bolo Sport Watch\"\n  }\n  {\n    \"sku\": \"24-WG03\"\n      \"name\": \"Clamber Watch\"\n  }\n  {\n    \"sku\": \"24-WG02\"\n    \"name\": \"Didi Sport Watch\"\n  }\n}\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 154, "to": 194 } }
        }
      }
    ],
    [
      "69344ff4-ffc8-4020-9530-9ba991d43310",
      {
        "pageContent": "### Related topics\n\n*  [Search using REST APIs](/rest/use-rest/performing-searches/)",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/retrieve-filtered-responses.md",
          "loc": { "lines": { "from": 196, "to": 198 } }
        }
      }
    ],
    [
      "acf785f4-8c03-4812-87a8-362233b21054",
      {
        "pageContent": "---\ntitle: Search for products with the /search endpoint\ndescription: Search for products using the /search endpoints\ncontributor_name: comwrap GmbH\ncontributor_link: https://www.comwrap.com/\nkeywords:\n  - REST\n--- \n \n# Search for products with the /search endpoint\n\nAdobe Commerce provides two endpoints for searching products:\n\n*  `GET V1/search`\n*  `GET V1/products`\n\nThe `GET V1/search` endpoint replicates the search capabilities that customers and guests use to find products on the storefront. The `GET V1/products` endpoint returns results like you would receive by searching on the product grid page in the Admin.\n\nThe following table highlights the differences between these two endpoints:",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 1, "to": 19 } }
        }
      }
    ],
    [
      "ab3f84f5-7932-47ad-b927-f07bb1c27fef",
      {
        "pageContent": "Property | V1/products | V1/search\n--- | --- | ---\nRequires authorization token? | Yes | No\nHas direct access to product data? | Yes | No (the Search engine acts as proxy)\nCan specify any product attribute? | Yes | No\nContains product data in the response? | Yes | No\nAre results sorted by search relevance? | No | Yes\nContains aggregations/buckets in the response? | No | Yes, for `quick_search_container` and `catalog_view_container` searches\n\nThe `V1/search` endpoint is generally more useful when you have only human (or human-like) search terms at hand, targeted to isolate a single product or a limited set of products. An added benefit is that the results are pre-sorted by their applicable search relevance.\n\nIn all other cases, for example when building and filtering product collections, and especially when other non-human backend data is available, such as an attribute's option IDs, the `V1/products` endpoint is a good choice.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 21, "to": 32 } }
        }
      }
    ],
    [
      "53b63f70-cc99-4972-b94e-6c0cbb293929",
      {
        "pageContent": "## Build queries for V1/search\n\nWhen you use `V1/search`, you are searching for products through the catalog. The response comes from the configured search engine (**Stores** > Settings > **Configuration** > **Catalog** > **Catalog Search** > **Search engine**), and the results are the same as those returned by using the regular frontend search.\n\nAll search queries run against the `catalogsearch_fulltext` index.\n\nThe basic structure of a REST call using `V1/search` follows:\n\n```http\nGET <host>/rest/<store_code>/V1/search?searchCriteria[requestName]=<container_name>&\nsearchCriteria[filterGroups][0][filters][0][field]=<filter_name>&\nsearchCriteria[filterGroups][0][filters][0][value]=<search_value>",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 34, "to": 45 } }
        }
      }
    ],
    [
      "86946193-af65-4e2a-b816-8908e4bc07ba",
      {
        "pageContent": "```\n\nBy default, the container name can be one of these values:\n\n*  quick_search_container\n*  advanced_search_container\n*  catalog_view_container\n\nThe possible values for the filter name and the search value are specific for each container.\n\nEach searchable attribute defines a search boost value, which defaults to 1. However, some predefined attributes have higher values. For example, the default boost value for `sku` is 6, while the `name` has a default value of 5.\n\nFor more details about the capabilities of searches using `V1/search`, review `Magento/CatalogSearch/etc/search_request.xml`.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 46, "to": 58 } }
        }
      }
    ],
    [
      "8d94c216-55f0-47e8-b6c2-fd065dfb8d9f",
      {
        "pageContent": "### Quick searches\n\nThe `quick_search_container` request allows you to perform the same search that a customer performs on the storefront.\n\nBy default, a filter name can be one of these:\n\n*  `category_ids`\n*  `price.from`\n*  `price.to`\n*  `search_term`\n*  `visibility`\n\nQuick searches return aggreggations and buckets.\n\n#### Example\n\nThe following example performs a quick search for `digital watch`:\n\n```http\nGET <host>/rest/<store_code>/V1/search?searchCriteria[requestName]=quick_search_container&\nsearchCriteria[filterGroups][0][filters][0][field]=search_term&\nsearchCriteria[filterGroups][0][filters][0][value]=digital watch\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 60, "to": 82 } }
        }
      }
    ],
    [
      "69c3d585-31f9-4e7f-92c9-603f325173ce",
      {
        "pageContent": "### Advanced searches\n\nThe `advanced_search_container` request performs more complex searches, like those possible on the Advanced Search page.\n\nThe default filters for advanced searches can use the following [field] value:\n\n*  `category_ids`\n*  `price.from`\n*  `price.to`\n*  `sku`\n\nThe filter can also be any searchable attribute. To make an attribute searchable, set **Stores** > Attributes > **Product** > <selected_attribute> >  **Storefront Properties** > **Use in Search** to **Yes**. The search query can include attributes such as the product name, SKU, or any other custom attribute.\n\nAdvanced searches can use any condition type to make comparisions, such as `like`, `eq`, or `finset`. See [Search using REST](/rest/use-rest/performing-searches/) describes condition types.\n\nAdvanced searches do not return aggregation data.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 84, "to": 99 } }
        }
      }
    ],
    [
      "05fcc02b-e5df-4fa1-a801-8c8bd6c2034c",
      {
        "pageContent": "#### Examples\n\nThe following example get products within a price range:\n\n```http\nGET <host>/rest/<store_code>/V1/search?searchCriteria[requestName]=advanced_search_container&\nsearchCriteria[filterGroups][0][filters][0][field]=price.from&\nsearchCriteria[filterGroups][0][filters][0][value]=2&\nsearchCriteria[filterGroups][0][filters][1][field]=price.to&\nsearchCriteria[filterGroups][0][filters][1][value]=3\n```\n\nThe following example gets products where the SKU might contain a specified string:\n\n```http\nGET <host>/rest/<store_code>/V1/search?searchCriteria[requestName]=advanced_search_container&\nsearchCriteria[filterGroups][0][filters][0][field]=sku&\nsearchCriteria[filterGroups][0][filters][0][value]=shirt&\nsearchCriteria[filterGroups][0][filters][0][condition_type]=like\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 101, "to": 120 } }
        }
      }
    ],
    [
      "cda2d1a0-70f1-41b7-8d29-206854ae3ff1",
      {
        "pageContent": "### Catalog view searches\n\nThe `catalog_view_container`request accepts the following filters:\n\n*  `category_ids`\n*  `price.from`\n*  `price.to`\n*  `visibility`\n\nQuick searches return aggreggations and buckets.\n\n#### Example\n\nThe following example gets all products in a given category:\n\n```http\nGET <host>/rest/<store_code>/V1/search?searchCriteria[requestName]=catalog_view_container&\nsearchCriteria[filterGroups][0][filters][0][field]=category_ids&\nsearchCriteria[filterGroups][0][filters][0][value][0]=4&\nsearchCriteria[filterGroups][0][filters][0][condition_type]=eq\n```",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 122, "to": 142 } }
        }
      }
    ],
    [
      "8a166f36-95b1-4689-ad26-0221a7fc5f95",
      {
        "pageContent": "## Build queries for V1/products\n\n[Search using REST](/rest/use-rest/performing-searches/) provides examples that can be used to search for products.",
        "metadata": {
          "source": "commerce-webapi/src/pages/rest/use-rest/search-endpoint.md",
          "loc": { "lines": { "from": 144, "to": 146 } }
        }
      }
    ]
  ],
  {
    "0": "abc997f4-2f2a-4e5e-b38b-f9daf3deb544",
    "1": "1223ff4d-90e1-4202-bcc6-9ed97a452fd2",
    "2": "5d0d990d-ccb7-47fb-9d37-6639f7ee2b77",
    "3": "574625d5-adb7-4743-a552-3c0164fc2b67",
    "4": "c79e5d0f-451e-4c7d-bdcc-363a9f30d372",
    "5": "b07077be-3e03-4760-9d12-f81a2718d284",
    "6": "f84133be-445b-4447-bef3-4f344208bd1e",
    "7": "72a41c30-413f-46d4-a3e9-17953f4389dd",
    "8": "9076bde4-ab3b-4198-8ca8-bfa2f407fe10",
    "9": "497704f9-b3f1-4314-9949-52949ab3fec3",
    "10": "d249a224-879f-43df-b409-b31a26d52b27",
    "11": "e3d5cc9b-8fd7-4e4e-a669-91ccf24f3d79",
    "12": "16e384ce-a715-4ea2-8560-555c2cd7fbce",
    "13": "7aaaac1f-4ca0-4c76-9cfb-adf5d1c9fafd",
    "14": "a78b89ac-f25b-44e1-bc36-8d0ef1a1a72e",
    "15": "12507b8b-5040-40c0-aca7-9a6f668174be",
    "16": "ce152405-cb75-4364-a1ac-d242573b9534",
    "17": "30658aa7-f1f2-4844-9b48-3da45c35ae92",
    "18": "f3fc1a48-e563-418d-8077-0ef501528791",
    "19": "4e9445ef-98c9-4b5b-b72d-b4af908cd27a",
    "20": "3b4c3704-bc99-46c2-bd08-2e33bc07bcc5",
    "21": "ef93989a-0cd3-458e-add1-6e23542ba3fd",
    "22": "53318c7f-8f5e-4fe1-9fa1-971fddcd5346",
    "23": "bbb0d78d-29f4-4f1e-8ffe-657ea49215a7",
    "24": "57efb2c9-3b04-41e7-a140-ae64776d1dd2",
    "25": "736bdb5d-bf88-4fe5-ad55-6cb661617f1c",
    "26": "72e2fd02-c029-4a0e-9743-d62fb3e50e0d",
    "27": "8dc2591d-267d-4a90-abb8-42751bece361",
    "28": "f49fa38d-3623-4073-b429-550f8a03c9b5",
    "29": "21ac613a-9cb5-4e1e-aad6-0f16c340abd9",
    "30": "4c164c76-ab7e-4be3-bb23-1f9616b202fc",
    "31": "3714cfb8-0374-4bdc-ab71-9f99ef4ed7bd",
    "32": "c59dbcd6-63d0-460d-bbb4-bcb8b721106c",
    "33": "51d737a6-0138-432b-9a10-f971da51a3ba",
    "34": "3799a6f3-d41d-4305-9a94-1cdfbe085c96",
    "35": "4260404b-0466-4abe-89f2-fff8d25b757a",
    "36": "12fa7309-2988-4e46-9e7a-7b426f12e1ef",
    "37": "e77dba2f-78a0-491f-b7c7-2951e4e5fa26",
    "38": "44359acf-752a-4976-a032-198383bf8799",
    "39": "c65ae491-93b0-423a-aab2-1b1b71bb17e2",
    "40": "2566857e-b7d4-4578-b424-bbc7bcf527aa",
    "41": "a71f11bc-ba2a-4e83-8f77-24cacfd7db83",
    "42": "acf470fe-3437-4650-999e-980d28895751",
    "43": "82baaee7-8036-4cb5-baeb-8c50df2ade12",
    "44": "94d2c551-f1b6-4a5a-9f4a-4d8dcd36f946",
    "45": "a097385e-dea7-4519-a1b3-f53fddd7ba55",
    "46": "d044bb0a-aa62-47ac-9d42-f61433a9c12e",
    "47": "af4abfd3-b58b-4879-96c4-5718bb3222a8",
    "48": "7b6cfb91-b5d7-438d-9a7b-89f9cf6e61b1",
    "49": "d29d65d0-0b46-4aba-b797-0bcd83823a6c",
    "50": "adc2db75-ee0d-4ceb-97ad-6d92ab7ab171",
    "51": "02ba3399-5d20-4967-90e9-0e44feca72c4",
    "52": "15ca1e47-7c15-4b4a-ab30-7b8629b6c0e0",
    "53": "706584d2-d4a4-44d1-ad6f-616f90ba83b0",
    "54": "7100d070-1acb-44c1-bff6-3232c90727b1",
    "55": "b2466a36-15b9-44b0-bd9a-15064dd76043",
    "56": "e7dbbca9-685f-454b-b76c-d99738849268",
    "57": "aae3b721-a7fd-49af-a542-189d0f21bf47",
    "58": "bffafa35-d46d-4c26-ab4f-e0f91086dbdb",
    "59": "f7e0756f-4e4a-47be-9ec5-f89c430265ca",
    "60": "b749862f-d0a0-4339-82b7-be07546b4339",
    "61": "16dfa56f-31fd-40df-8bdf-95567d6babac",
    "62": "455d9dad-9dcc-4ebe-beaf-c77feef43b89",
    "63": "f5e5f030-f999-42ff-89fa-e395abdd5062",
    "64": "5e09133a-19b5-48a8-945b-2f411d435ddf",
    "65": "f9f7e318-00cf-4366-8a71-ecd3f78050ee",
    "66": "7150fee1-9cc2-4cba-9436-e204663b3089",
    "67": "d193075a-9cd8-462b-9a4c-9dc876d8ea2d",
    "68": "824f589a-8566-48de-80de-84d693f93b91",
    "69": "317a113f-427b-45d0-b152-0d3cf915fbae",
    "70": "97f21760-220b-4ac2-bad0-0de80ec74d2e",
    "71": "5f3c20c2-51b5-4a9e-a7da-777df62cea7b",
    "72": "5b80638f-a31a-4016-b038-b6caee39a345",
    "73": "049937be-26ad-4f86-afa8-0d44b9679268",
    "74": "685b735a-3792-4722-84db-b5f7e3b44d45",
    "75": "2c9bc250-e98c-4dee-ac17-baf71fe8e69a",
    "76": "e4101e07-ea03-4e17-b9e6-a4b8b8634ac2",
    "77": "7c3d3f7a-acea-45aa-a089-63a3316ccf18",
    "78": "26ad89c9-8684-4b83-a5cb-6a9430a45c51",
    "79": "8d0a9265-65ff-455d-b6e3-a06dcd6e65d1",
    "80": "e357a304-049c-43b9-a0d7-4e8575493bdc",
    "81": "a562f051-99d2-487d-be45-e0954e4c73d5",
    "82": "e07dc0b9-f765-4938-a54d-7def73c394bf",
    "83": "f3812feb-b6b6-4594-ab2e-4ed5c37432b8",
    "84": "2d871851-826a-4a89-95a7-de334bd33635",
    "85": "dd205013-bc44-4e34-b392-5c052bb00998",
    "86": "eb4d988b-64e1-4e9b-b4cd-ba1cf20a3287",
    "87": "ae07161b-7e6b-42d5-80c5-9941487738d8",
    "88": "feebd26d-c34c-4e75-95a2-7e8801005d24",
    "89": "32a5d1e8-c9ed-4fdb-b9e8-0fed941cb251",
    "90": "242445a0-ca1f-493f-87c7-0c715148113c",
    "91": "bb99a969-dc7c-43e5-93fa-ab564926f634",
    "92": "f6618b94-4cfe-47f2-8d35-403a1c271ac7",
    "93": "59716f16-9e8b-444c-a7b3-0e5d3ea5d9c0",
    "94": "f6358e87-0d13-4f9c-9417-d10178a92f4c",
    "95": "00387d6b-f619-47f5-89e4-740a7f48b50e",
    "96": "be020c28-82b1-4e2c-b8eb-b9b36c8a39fd",
    "97": "ee30962a-49fb-4f5d-9fe9-9cd4bab54c4f",
    "98": "2c208737-3d93-421c-8ca6-1c7c298074e5",
    "99": "7f1c3ffa-2007-4d7f-8f94-75d9bda4b8b6",
    "100": "34ff6fdb-39de-4579-857d-e9511142893d",
    "101": "a7d945eb-4ee2-48dc-910b-6170309e71f5",
    "102": "c67f8c20-9ac6-4518-94ac-5d7597b708bd",
    "103": "d5d80a22-de24-416d-a73b-4127c7d65c99",
    "104": "6e04c0ca-7910-400e-9524-d606c7a6e84c",
    "105": "ee88d995-3aac-445f-b067-036d35cc2536",
    "106": "7fde4851-6dc0-4512-9acf-f447adee0443",
    "107": "1fa58303-18d4-4777-9b60-eaadf28761cf",
    "108": "b2906248-6766-4c6f-930a-f31e42b39fc5",
    "109": "789f0de4-d899-4a8c-9291-f26b4988322d",
    "110": "347f7ce4-00c5-4510-9e07-d2989e3dc635",
    "111": "2c533791-86ce-4367-8782-539c2c5e9a1c",
    "112": "a7b3cf4d-a956-4d92-be74-2284e10a7dca",
    "113": "b3f00fec-3fda-41d8-83d9-352f0f868af2",
    "114": "9f29cd0f-ba92-4808-b4c5-fca996031f40",
    "115": "515e06b4-05e4-4f83-9106-b50e45766b04",
    "116": "d7f05463-d239-4a74-8685-60cfb8052bd2",
    "117": "2f63726c-88f4-46e5-b845-ec90963353f6",
    "118": "5baa5d27-9f15-455c-9dfa-83782f8d0789",
    "119": "7781b9d5-be10-4aea-8b81-dc2d1279d914",
    "120": "8698484b-c05d-4762-b5ce-770fa990fa53",
    "121": "464c88b9-6951-4418-ae36-085da6b4a93a",
    "122": "8449f724-d214-4f1e-b1ab-27409d469493",
    "123": "4fbfac88-da76-48d6-b8a2-d95430bc872d",
    "124": "a8b16c5a-8dc6-47bf-abeb-00a3d8a522fb",
    "125": "ca034559-196f-4379-a1ae-a285800b2b91",
    "126": "fda3d065-e5a7-483d-8de5-59062e2639a1",
    "127": "23d742f3-5179-4aee-8023-a7d2d78a5811",
    "128": "1e57ede9-6fa3-4502-bf84-1986d239bc4c",
    "129": "413d6db3-fb1f-4ac6-a46b-405b44e4c9eb",
    "130": "31755c68-4574-4a80-a649-1f09c7fae0e8",
    "131": "3d550d1e-d125-4a36-88fb-af696a1b1cbc",
    "132": "6c73a9eb-6b4a-4b58-b6d2-7610bea02fab",
    "133": "7afabe0f-7325-4b14-940a-fd5f3dba3673",
    "134": "d836c263-05a8-46d9-8bd8-509e793a8e9b",
    "135": "fccce62d-02ea-4031-bc0e-ca2b6c2b653f",
    "136": "80366301-09a4-4bd0-9928-4d1860a918fb",
    "137": "75f6c595-f156-41d1-846d-8be75f240a25",
    "138": "f3e203fa-3430-46e6-912d-2b33e1f67aa6",
    "139": "f24b63af-bd2d-4112-9956-bd7775ac174f",
    "140": "34bb6c46-4ab9-47ea-97de-04e6ebd6673d",
    "141": "9d1285b1-eaca-49f9-b918-36e57d188044",
    "142": "60c60ddc-9281-4851-8a6a-0b34136fa7ec",
    "143": "4e353903-d253-439f-9954-0d9764dabf20",
    "144": "a24665ba-aa52-4456-bbcc-d481649f6227",
    "145": "97474730-6c5d-46c2-a76d-b326e8910af9",
    "146": "84e66d7b-9942-4d1d-bccf-d0a639592e97",
    "147": "497a73ef-7653-4c59-9e1e-9e3de022c7f3",
    "148": "2771d465-4f7d-45a2-986a-0c07ec95125b",
    "149": "31269a08-4676-4318-8a1b-c81af54f1e24",
    "150": "96e59277-086b-43cb-b986-7dc1a45f42d6",
    "151": "bf5b69c4-12e9-40d5-9286-8b414619f3e4",
    "152": "a2ad07f4-d001-48c6-9f02-8a41fc4fee7f",
    "153": "d05f988f-1c2b-4bcf-9264-ef87d5f3d6dd",
    "154": "880dec18-bd22-40ec-b91a-69e5a2331932",
    "155": "171bf2fc-05e7-479f-ba20-e47f0874d7f4",
    "156": "c5292ec6-91df-40c1-ad41-b271e9ce88ee",
    "157": "c1c25e05-0fd2-4087-8508-85716ff9a3b8",
    "158": "ee836d76-4a4d-4797-8020-2531a14b138d",
    "159": "c0028268-6d3b-4e1f-8d7b-dbbb0085c6a3",
    "160": "125d01f2-d66f-4ee4-989b-560aece042ff",
    "161": "c2fc7b65-8d42-4832-91f3-530fc12450dd",
    "162": "f3bd1e29-1e41-4deb-afd8-df5b8dbb9b26",
    "163": "d60eccee-706f-44d0-a135-593fe2773be9",
    "164": "766f3a88-e831-455d-ba7c-75c4c63892b7",
    "165": "f4b07adf-2534-4764-9bbc-30fc8d8f2076",
    "166": "fc8a5d9a-a9e2-408e-bbe7-df7cdd5ab7dd",
    "167": "d8337117-4f95-49f2-827f-c24b980c3a89",
    "168": "0d9410c1-6d96-42d0-99ad-08abfec3f639",
    "169": "3f61bd3e-e90f-463a-8ec6-041c58f5223b",
    "170": "aca1f6db-a6e2-4ce1-8156-c2e363d594ae",
    "171": "dea39251-b7ca-4696-83d9-245b3f2e8d4d",
    "172": "fcdfa4e3-7ead-42b4-96bc-f4d2e944d2cc",
    "173": "3e574742-f4fb-4382-b7a2-a96fe2e54490",
    "174": "8d611b98-eed0-47f1-a0f4-1dc2cd9bd3a0",
    "175": "5cd16549-45af-4ed4-be66-e18563a63faf",
    "176": "0b7082f7-a464-4a46-b15e-ed9cf8c87635",
    "177": "2e950180-c873-4dee-9de2-17ad7f3f4df0",
    "178": "461f8ee3-5ad3-489f-bdc6-922fbb75ca0f",
    "179": "502b3080-d9a8-4055-b97b-93bfa9b47984",
    "180": "39344732-d4e5-431e-b8d8-2f57a71a52aa",
    "181": "1ab21c68-b385-45e0-88c1-b8be7317b54f",
    "182": "6e800875-4336-4d80-9b16-25616cee7165",
    "183": "aafb1a0f-51de-4cb3-9106-10c628ba54b7",
    "184": "cbfdb46f-8c3a-476b-adc3-d6e501a3df7b",
    "185": "e15a710b-c656-4f8f-950d-6ab1b036fc15",
    "186": "b2d04996-b8cc-48e2-8c45-f821e65db1dd",
    "187": "e0c1676a-3056-46a2-b6d1-b952a253ad59",
    "188": "ebb05db9-a3f0-412b-b5f0-6070a95f4490",
    "189": "4eb86201-a24d-4d51-8171-46806e10c02c",
    "190": "57369b24-fc75-42ee-a703-dca430c5f1d1",
    "191": "cde05795-124c-41be-88d7-bd1af349db94",
    "192": "71a66658-a2d6-4eac-8d66-930218393d62",
    "193": "e5a50027-cb98-4280-aaa4-2954f7e2d5cd",
    "194": "42360731-a1cd-46ca-b93c-e0e178ff9a16",
    "195": "31a50b0a-01c3-4320-b058-ea2896244d46",
    "196": "cd60c08b-6556-4b24-95bc-fde25dd36b18",
    "197": "7c925912-ca50-48cf-92f5-3cef0d321050",
    "198": "4ed49749-0006-497d-8a79-4b4409fd03a8",
    "199": "2d5e87fa-e3ae-4bbf-ac88-dd29911e81bf",
    "200": "83748935-0661-4e8e-a1d6-1253dcfc1d64",
    "201": "8ce5b2fe-a0b2-471f-aa26-c0ce1ea04c0b",
    "202": "2492b066-2e18-4533-b715-17e932fa83a8",
    "203": "9927cfd9-d165-4137-810c-7d8eaf0e57b0",
    "204": "a073a7cf-334d-49d1-a843-20b8ea3103f1",
    "205": "6d7e7d41-3bd7-4165-b408-81b4c64c4283",
    "206": "70f68574-4b52-4516-b75d-81b4bb6c0133",
    "207": "eb58d2ea-8ec2-44e7-9f57-3f5558733103",
    "208": "56b1e035-2685-4334-acd2-d9542d5429a0",
    "209": "eecc79da-44c2-4431-94cd-64233416caf2",
    "210": "748c729f-3ee0-458b-9616-a8bac9247cdf",
    "211": "ae3fee8e-62fd-4d0d-a68f-ee005b884b5d",
    "212": "a43e9bea-8d8f-4bc7-931e-abe81fc1ea43",
    "213": "f488065f-5357-425e-9eca-a678923c35af",
    "214": "74774d80-b0c5-4306-ad88-99667961cb53",
    "215": "33b216f3-adfe-4ea7-92f9-2c12bc4e7253",
    "216": "d9fd5cee-c2e5-430f-8005-d0a70ef633bc",
    "217": "9d704cee-7f77-4f89-8c4b-33ab9905ff39",
    "218": "0d4050e3-6cd9-4691-8ea4-f915320db694",
    "219": "950d5137-b12b-499c-bafd-1190264734f3",
    "220": "af27200b-ffff-4321-9c8c-0c2ebfff7bdb",
    "221": "efdea1b1-b1d3-47e6-b507-1dd5cded6496",
    "222": "ee329c38-807b-4896-93e2-d7e2fc40c0b7",
    "223": "354919f2-d4f8-4eed-a10c-d61564328413",
    "224": "d65346a8-d0f4-4ad1-b46b-71eff6d57324",
    "225": "890ef7b3-1c16-4e7f-b123-ef6fa5db29a1",
    "226": "c05a5a17-02af-4392-ab64-4b16c7c39b40",
    "227": "d7857a10-7842-46ed-bb4f-d5b032b0af3a",
    "228": "fc300417-4a14-4bd9-8dee-4728374cad5c",
    "229": "1710b787-5952-41a3-ba3b-ebf6aea2fba1",
    "230": "828d9043-7ad5-45a6-96fc-f6ab6e9bfb56",
    "231": "933a9601-91db-430c-bd03-91e08f2746c7",
    "232": "f408b390-8d7e-487f-a701-0cb7b3629b70",
    "233": "1d59526f-cf32-4b17-81bf-8f97fdfe60d8",
    "234": "96b4b6fb-6980-4917-ab0d-70f6b05ba678",
    "235": "9c144548-3611-4409-9531-4193ec07e46a",
    "236": "0edf94a9-add2-4d13-bcfe-1feb1dd0479c",
    "237": "95eba243-a02a-45ce-904c-f267f29c23f0",
    "238": "e716ce60-611a-4698-8762-bd004a21e60b",
    "239": "d75765a5-5002-49c7-b44b-dffce33f65ee",
    "240": "6e4cf5ea-55dd-4f3e-b2a8-e1be191945c6",
    "241": "e6565bab-e5de-4f83-b56a-83c16eae66bf",
    "242": "e05d9d28-9792-43f0-b0d7-72d3053dc0d2",
    "243": "d5dd45b1-af7f-4d8f-aafc-ab3a4ddc6c42",
    "244": "e94f2207-4fae-4d9f-a9ca-d944239865eb",
    "245": "20a512c1-08f9-4c7f-8f2d-bd2451d31be2",
    "246": "b9a3f3e6-518a-4276-94ae-9d83b9457709",
    "247": "cb3dd487-2b4e-4315-b7b6-164c514b3aa4",
    "248": "22cbca9a-8a79-48d4-9304-c85feed34acd",
    "249": "db2e1090-67aa-4b9c-96fe-a201f1ea9ad4",
    "250": "43feba62-4c85-4c81-8afd-aeaaea939421",
    "251": "32629d1a-6300-487a-9008-efd7f8075605",
    "252": "a18e4664-bdf7-43ae-913d-15c1c33b8c9c",
    "253": "fc164e47-503f-4192-8d4b-9d2f144b3010",
    "254": "65313ecf-a256-4b23-bd76-3bcf00f3b460",
    "255": "769383b7-81c8-4d7d-96e6-4721e7f58a7b",
    "256": "42895818-c26f-462f-8750-d4be70712b11",
    "257": "1d961ad3-77ec-4e3d-9b5e-ae2636f08d87",
    "258": "73fd5017-f3ed-49db-88ce-f00b81621c09",
    "259": "37cf8057-58a8-4e67-bc9b-d97e0e41a0fb",
    "260": "d0588656-a0e1-4a06-a845-3dd8e0280727",
    "261": "c003173b-5398-49e1-ac4d-4c4cdc8abe72",
    "262": "cb955866-40e0-4098-9858-ee1bdce0d36f",
    "263": "678bd2e9-17d4-4f2c-88d7-adf34807ba06",
    "264": "ffd535f5-27c1-452b-afb3-8564464007f3",
    "265": "87a9c1d7-9c2d-486f-9143-45350eb7dffa",
    "266": "d20666ca-1122-4cb3-b2dc-c00963141afc",
    "267": "0b8606b9-df1b-462b-9186-e6618d4957bf",
    "268": "8a358f0f-8a7f-4840-832c-c3e318bb7b8f",
    "269": "9a3524eb-0fb0-42ef-9826-2ea4e3be9c35",
    "270": "bf01e197-26dc-4fa1-847f-b709e615e4fb",
    "271": "b78ac3c2-d988-4967-8569-e955610b66f1",
    "272": "d73e2082-d637-4a77-bbc3-752080b5cc7b",
    "273": "0c1c6e7a-e813-4508-bf6b-1780b3e06b56",
    "274": "7a767504-c6ab-42ea-899c-aa75e758e7cb",
    "275": "99cd0e44-1e37-42b3-a790-1a73a13e2a72",
    "276": "60cc71f7-627f-4900-82f3-ccba7ebbc6b5",
    "277": "d6a77203-cf39-40ba-9dda-407a31ce1a87",
    "278": "b6eb1e0a-bdc6-4447-9c8e-379c0dfc5cee",
    "279": "dcdc90b6-ef17-4296-8d66-d30e736dec40",
    "280": "7d9137d0-c2cb-48ed-98d7-fd7375668f3e",
    "281": "d977ffa3-dfcf-4164-9dcc-2fc8a178ffb1",
    "282": "e6978e61-8660-48ee-ad79-af3d246a7024",
    "283": "3ba5f0ff-0266-49e1-af53-ebe1733fb30c",
    "284": "7bd4b26e-fa06-48e6-b635-fc05e85e13f3",
    "285": "8adbb147-ceca-4515-b266-8f5ee0af8ef3",
    "286": "83f4b9b0-2e2d-475b-b27b-251f8a4a4944",
    "287": "e93c829d-a1d6-4952-8d44-541ab65ba050",
    "288": "fd1663fa-90a6-4fe8-b09f-ac40620296e3",
    "289": "403c2b4c-aec4-4a51-8009-db62875f0672",
    "290": "9c4c933c-6396-4e20-a40f-ad180f6e2280",
    "291": "6ea6a771-2ebe-4920-9602-431125c7bc93",
    "292": "2382fa6f-fdfc-4629-bd4c-561616751878",
    "293": "4f848c3d-2593-4171-838b-47f0b3a67fe1",
    "294": "099a9253-81f6-409e-9dab-2d94de0c604f",
    "295": "48706377-58a5-4588-bd0c-a3ef9a527ae6",
    "296": "fe018da5-c696-4b39-947a-ecff85d15c18",
    "297": "49aa48b4-4320-4395-834c-adb1f43e2e20",
    "298": "8957ec09-a66f-4b76-b8fa-21fd43ffc9dd",
    "299": "83fa25f3-8b82-4ecb-a0ef-cd1736f0602c",
    "300": "2a767a40-4ca7-46d4-8562-595519072272",
    "301": "765027ce-bf04-4589-905f-9995203b305c",
    "302": "042787b9-f4ff-4ad5-8630-5bb3217ef106",
    "303": "131a0df2-5dfd-4fe2-8e83-adaed2196559",
    "304": "0a3eff66-bbc0-43b8-8a6d-5e32ef7b386b",
    "305": "616c5973-f182-4f10-86ce-08eaa0213885",
    "306": "67ddcfe6-5f55-4060-83be-e608768b3d5c",
    "307": "ef415d5d-aea7-41ae-a940-034d7420553e",
    "308": "a593a3ff-1bdf-40ee-a510-68fed152bee5",
    "309": "0b1730a9-4977-4cba-b6e5-e0a85bee58cc",
    "310": "f669f025-3c3a-43dc-9f30-cca8a61d97a6",
    "311": "396b312b-3bd8-42d4-b1ed-f29e5756c715",
    "312": "a9fdeeb4-2632-4390-a310-804e15278551",
    "313": "fe39503b-3b69-4c3f-b8b8-be21e662d8ec",
    "314": "faac10ca-cb2e-4742-a5d2-720b43e10a24",
    "315": "d642431f-476f-451a-b59b-8e1e209ccb34",
    "316": "9f8876d4-416d-4e63-a838-61010d4dd002",
    "317": "63802710-bba6-4057-863f-c28f1271c833",
    "318": "d89c286d-8e36-4fa0-bd47-9e06888de2fa",
    "319": "12993535-fdfa-4b1c-bcc7-9d7ae90f454c",
    "320": "192de12b-3877-42c1-85b1-ed13df00c53b",
    "321": "d0f5e3e9-74c5-4022-aebe-b5b601756f67",
    "322": "7f3f240b-a059-4e2f-96cc-a0952e264a0a",
    "323": "d976f37d-a460-4bdc-9a03-c85c2a230bcc",
    "324": "efb3f967-257c-4eeb-92fe-9824df2ee722",
    "325": "9eedbfb7-7784-4d09-8ea5-c3cc28f9c2c8",
    "326": "44cdb650-deb7-4bd1-b857-3eb17a0dad32",
    "327": "9ec82527-8c50-4132-b53d-7ee79dbfd7a5",
    "328": "4d708752-cbec-400b-b45e-fdcd92fa65db",
    "329": "e6f39ecd-9f41-49d4-b132-fb32963e88cb",
    "330": "646fc76f-2736-4e88-be3d-b39a3725cf84",
    "331": "220ddeb0-77d4-4cee-80f3-c6e1c8973e89",
    "332": "7e135c1e-c1c7-44c3-a9a5-fe1e91da7551",
    "333": "d662bc40-8e08-4bcd-8aee-94048a60df58",
    "334": "7c4d9eb3-747f-47c1-bd77-bd01044ff68d",
    "335": "01e38bd8-2c70-4cb9-b532-c67299428d32",
    "336": "6e5658d1-13db-422a-9760-8a0ea0ca096d",
    "337": "3da26ecb-5327-49a9-a9f4-45362f9485c1",
    "338": "7a5388bc-9757-45bf-a384-75aad52dd27b",
    "339": "1bea1802-a5f3-4c93-8afe-fb28f2aaec68",
    "340": "88a55208-ec26-40ba-8308-3a91ef5940f6",
    "341": "718b19ec-7337-414c-8661-4f8d26367f4d",
    "342": "aa7f500c-4e57-4e64-a169-7f490f64ae63",
    "343": "53cb308d-d30e-498b-91a3-82f9aa8ff835",
    "344": "56cf8bb8-5b1a-4442-807b-7b294e04031e",
    "345": "ff70d7a9-1ec6-4257-b979-de4a95cd212e",
    "346": "69bf455d-2017-40fa-9c51-b977453af25c",
    "347": "e3d751ae-57ca-44e1-96f3-8ddc117dc3c3",
    "348": "7c816094-63d8-4e63-8829-81095ef2755c",
    "349": "f81482a2-c8b0-4ad9-a541-30ecc002a225",
    "350": "5385221a-ac6c-4692-b790-b42b20919dcd",
    "351": "7bcffe2f-b504-4521-b45c-015339c4cf10",
    "352": "09c3956d-aa7d-4ebf-9a84-179169b4dd22",
    "353": "4c0bc657-faf1-401a-b34f-68a79d8fdfa7",
    "354": "161e22f2-3f84-4e93-92b7-ad8651e9ff61",
    "355": "d07f4242-d96d-4d36-8247-292dae58f934",
    "356": "c5eb1925-3153-4cd8-8050-8500166eaef6",
    "357": "b6569807-7b23-425a-9f6e-2f640aa6d96a",
    "358": "296c4a84-a6e0-4e21-8fc4-7f4740a6908d",
    "359": "742c7d25-8224-4c21-bedf-aa3866440ff0",
    "360": "63e380e9-3d55-4623-a12b-6c4b8a22f298",
    "361": "c50c5c20-b8b1-4d70-b45a-e4d9a873e88f",
    "362": "30f3a994-54a7-469c-8cdc-1a695008db62",
    "363": "4a7dd3a4-f4d8-4c32-b141-b1b627956f5a",
    "364": "0e2d889c-364e-4770-9950-da3c18d1b356",
    "365": "01e44977-1f48-4527-8747-b3441d2d81b0",
    "366": "6021a963-fdc9-4bbe-8c15-0432c8166188",
    "367": "656f948e-9d8d-4fc3-9aac-fdab828485af",
    "368": "71a730c0-9b85-4d37-b826-6f79170eee22",
    "369": "c2b985d2-359b-4b3d-bb7a-fdf481b489ba",
    "370": "7a431d1d-2c58-49c0-b74b-9dc0086e0081",
    "371": "c897f40b-78b3-4f1d-896c-f63493b729b8",
    "372": "0d058a32-9beb-42f8-b08e-a632a43824a5",
    "373": "e7bbc481-785f-4da3-af17-99717b6f2764",
    "374": "03b68e03-fd3a-4b2f-9f78-3ed1f1960ee7",
    "375": "86785bb5-6a9c-4e82-bdc7-cb9f9c740482",
    "376": "d50184e9-4ad9-4ffb-8459-01f72c498ba6",
    "377": "7e406a37-aa40-42f4-a261-def28066619b",
    "378": "5ca723bf-fe72-4a22-a403-50bc983ad861",
    "379": "425685f7-ff6f-42c3-b4c3-6d46a70e2d4e",
    "380": "1bb479d2-ea12-4716-bc13-ce830ed92402",
    "381": "90bb7449-f405-46c4-9c00-65aff34efaa5",
    "382": "0703383b-677e-4f2b-830b-946f2958cef9",
    "383": "28fbeb88-23a1-48db-9255-4baddab50cd3",
    "384": "d6482cda-d51e-4127-af53-82db29e6288f",
    "385": "d132669d-d78e-4694-b0ff-31278f42b76c",
    "386": "9ee6fb24-4671-4a75-a868-af699852096e",
    "387": "571cc07c-852a-4dea-b359-1d0e9856acd1",
    "388": "20989a47-88e0-4359-a5aa-e4a8d04e86ab",
    "389": "962f4add-49e8-4ade-9fea-0f44df5a2a92",
    "390": "b5d64d9a-0cca-4d40-b767-a811686266f5",
    "391": "309228b2-be27-45aa-83ac-14efb9a7eccf",
    "392": "4e8648cc-bb9f-4330-94a7-713ce4f36f15",
    "393": "e9e57af2-9ec9-40b4-a4ed-0ae550da08ef",
    "394": "af3e0cda-dd48-4759-8663-57e3d5d5fb79",
    "395": "78023edc-6e0e-49f2-9426-ee0511993cec",
    "396": "92c8bddd-8553-4080-86cc-934f3c08ad0a",
    "397": "c6233afa-7969-4780-8893-ceb02815ab0e",
    "398": "51240d9a-f5c1-4dcc-8566-e0c85db0ff2e",
    "399": "5bdc4e16-33e5-4fac-a3f9-659307513593",
    "400": "f9abc141-efe4-4c70-aa7d-cef79263fc5a",
    "401": "784de440-3c91-4fd3-b74f-ad185b69d069",
    "402": "1de3aac4-4985-4f84-8b90-35c9548b5fd5",
    "403": "dc88f569-9b93-424c-b5fb-4317cc79f524",
    "404": "27a4cf04-27be-468f-8c50-dd0b0c81fe8a",
    "405": "193905e7-980b-4d6b-93ba-67e08cd4831b",
    "406": "a5294e24-7696-4a74-bd2a-6a222e221d84",
    "407": "6fec4958-eef1-4794-8f91-ef619cc25e1b",
    "408": "d39396f1-e639-4ff0-a870-d9874d9e63a6",
    "409": "a8452f64-7c5b-4ac3-a7e6-f1159f22e07a",
    "410": "4b847da6-a748-41b2-adf5-1747b73281db",
    "411": "9067208b-71e3-4842-a9c0-64563b895fd8",
    "412": "04dce0d3-3e65-4f56-9f53-373053176a2a",
    "413": "67cc87c2-39d5-4322-86cf-45fd76bc98c2",
    "414": "e2421702-5fbd-42a5-aee0-8f6989acc37e",
    "415": "5a3c1ef8-ee6d-4488-9332-8fe8f647ce8b",
    "416": "d36b9596-b193-4916-8476-bd0885eb138a",
    "417": "ec42adc4-924c-4e3e-ac36-ed2faea04736",
    "418": "3399caf6-ba38-4b53-9d05-77500cda2a40",
    "419": "0a80a701-3714-46a2-ae6c-3413b9cc1d6c",
    "420": "59fc34e1-7225-4e1e-b308-a518ab45d681",
    "421": "7fe13b1e-c9b9-4edb-be1c-bacfe9dad9e4",
    "422": "6d8f44d7-6e67-40fc-a70d-8026a9b074a1",
    "423": "1350e7e0-9356-4f17-a018-eade3ebee1a5",
    "424": "33cab063-06ca-405f-9795-cfdd2c12a6bf",
    "425": "9ae57672-dd25-4b6e-9cb8-86fac095f79f",
    "426": "39790d04-2a5b-4c6a-b2cc-c8288033173e",
    "427": "1c6b8030-5100-4757-a276-93be8755fa86",
    "428": "b40b35b9-224d-4749-9124-9b6fe6de8dec",
    "429": "45529012-6aad-4eb7-b95d-519585f86345",
    "430": "4c997b57-cc51-42b2-ad80-f029f6228ce0",
    "431": "4a6f6a43-5910-45f1-9156-042d07059238",
    "432": "338e13b8-3cd2-4709-a95b-7727677937c6",
    "433": "3e5a729e-713d-40fd-9341-a5fe4b3cd561",
    "434": "2d3eafed-e055-4c16-9664-5e7e03b9f9e2",
    "435": "e27db139-e97e-4514-b84c-bfd5ef6092cd",
    "436": "5ebeeb99-3883-40a1-accd-4e3d19aa8c9d",
    "437": "14b9a33f-39c3-4ebc-a482-36d87023da61",
    "438": "f0fab389-daa6-4b66-92f4-dac9d375759d",
    "439": "6aa2508d-0141-495a-a237-bc6bcca2eae2",
    "440": "f4c73a35-0ed0-45ed-bcdb-ef2e5707c0bf",
    "441": "494a7c4c-44ed-4060-aebe-a53815abf0f9",
    "442": "af3d3ddf-6fa9-41e9-befc-ce6a8b9d4fcd",
    "443": "fa76325f-167c-4bc6-b69f-126548bbe681",
    "444": "7d397d75-a2ec-4404-91ea-4dd389e2e824",
    "445": "a418003b-caf9-44b7-b463-4b2ceb5cbe7c",
    "446": "fea7eaa7-864f-4c27-b5c1-e4a0c7935e83",
    "447": "d9652065-459d-47d9-8fc8-c81b56bb5c53",
    "448": "5663fb95-d0fa-4ed8-9b98-eef84a206791",
    "449": "28cb90bc-27c6-4004-828a-a50e22546642",
    "450": "e96715ed-f925-41f5-b19e-57ddcc274ed9",
    "451": "57153b02-0806-4898-97a0-12908b26b97f",
    "452": "386e961b-169f-43e2-b4bd-506e9ac01035",
    "453": "db364554-ebe5-4293-98f4-4c7c5399c51c",
    "454": "730595d6-a38a-44cd-ae8b-5e7e32a74d55",
    "455": "6376b759-5c4b-4719-a4a4-51284fcdc19a",
    "456": "fcf6d08e-c69f-427b-8c27-1eb32b10256c",
    "457": "ffda5c04-d25d-4625-8699-70bfe379467f",
    "458": "804b2536-a17d-44f9-a615-442b04f0d509",
    "459": "15070979-8333-497b-b1d0-e86bdd2e28a3",
    "460": "a90b9bb4-571d-4558-9659-4fb3d24842aa",
    "461": "ccf18cb2-6e07-428d-8825-41b58f164ede",
    "462": "a1490376-b52b-4ef0-9cdc-de9ae1cc2da1",
    "463": "962bfc42-3ae9-409c-a811-cd113bf38c68",
    "464": "4e6d18fe-21ed-47bd-929b-1cfadc730594",
    "465": "5d07ecd6-8ddb-4989-91aa-c1e84fa8fc7b",
    "466": "577364bd-1899-47d2-8152-d588777e060a",
    "467": "31884b88-9d53-49a1-b688-7a84398f3127",
    "468": "248e5566-d773-482e-b78c-d92b3eff9685",
    "469": "74cfe86e-ba00-4473-8e9b-9c560433079e",
    "470": "3f29345e-ad9f-4ab1-8af7-e6bf18864b4d",
    "471": "ea652152-1551-498a-85b0-fce7d58f9c25",
    "472": "aa89f391-ea33-4cf7-936d-eb9fdbe27bb4",
    "473": "884c3039-a43f-4fce-8a61-dbb2b78fe0e8",
    "474": "b7d1debc-a9b8-49e4-975b-60c26a9bb29b",
    "475": "e1d8d997-d1af-4fc7-a1a2-aeb1475d2f3e",
    "476": "9d1f88b0-217c-471a-a977-fbcfda56af93",
    "477": "6b5628c5-4429-4927-9a8d-42f488baf521",
    "478": "133c0e90-4ef1-40f1-826a-68a6d3b01f6a",
    "479": "df5d1be2-625c-4535-a6d4-b2deb07bd0cf",
    "480": "06d0b95b-63a6-43af-8f81-c4be01386b06",
    "481": "dc3febeb-f036-436d-a061-1e31a3997d9d",
    "482": "62ec8768-0d17-4965-b04e-b4299b1c0f4d",
    "483": "427f667e-ad4f-4ac5-af82-e170a1981c18",
    "484": "c7487a0e-4975-4534-a56f-7e3e114c4bf1",
    "485": "32271dfa-6ac4-4502-890c-7a6f65d92b16",
    "486": "e3355500-dac3-467f-96b6-01fa603738f8",
    "487": "31756540-6bd1-4d62-b403-1ae564879d24",
    "488": "d05dd01f-4889-4431-bcaa-1b7b6b07d017",
    "489": "e49e709e-c400-45b8-b51e-8486e533b3b5",
    "490": "dec28765-610d-4ec0-bbac-84fee254dd04",
    "491": "a7d2a8fc-031c-4816-9188-01335289028b",
    "492": "7a7e63c5-e961-432c-ba9e-ef77ea693f47",
    "493": "81930022-8b5a-45aa-8b20-3e473d7089bc",
    "494": "695580be-5e91-4f15-91a8-25baf73b4b08",
    "495": "c18cfb21-0372-488c-8900-b2a42d0a1e5d",
    "496": "ab233da8-1c53-4705-8609-10d416eb0c6f",
    "497": "7c2e5192-972a-410d-b295-1d5d0747ad3b",
    "498": "ad3ef8df-bdc1-4ae3-818b-1f1c7a8e2af0",
    "499": "a8fd14f4-fe3c-49b8-bdad-a0820a2570cb",
    "500": "f396bbae-1319-42ad-aec9-ebad176c45a3",
    "501": "eb217ea5-64f8-4ef4-87c9-8a4bc4fec1ca",
    "502": "4f69d96b-62f6-4f6d-8f99-8e35bd488f88",
    "503": "a6c7fcda-b92c-4976-a23a-94c6273a503b",
    "504": "57c94b50-463a-426a-98c7-a08595e4f81a",
    "505": "b08b9683-da75-4e4d-adce-cc8546b0062c",
    "506": "6915ef28-dbc5-4ef4-a350-d5a861f26712",
    "507": "9d69087d-c50b-488f-9dd4-8e5550343d09",
    "508": "9f1a386d-bcd4-416c-9eb8-2cf4d84d516a",
    "509": "3cb3a553-aa7e-4f3f-b200-e07d39d4ad0c",
    "510": "0afed779-2d5a-45e9-9305-09e014756804",
    "511": "364c28ba-a16c-4005-820d-de7fa274d7a7",
    "512": "6ba1d478-1922-4c8b-9e4b-3d01f02822f9",
    "513": "784f67fd-08f9-4fec-8b22-a7d9776db23f",
    "514": "5aec5c51-5297-460a-b709-49cb20c06eb1",
    "515": "96e738bc-dde1-4643-8c10-6980dd41672b",
    "516": "b9bf269a-0b9e-4fa3-ae15-4ccb2749e570",
    "517": "edb4d66f-8955-4abf-be91-04a59c649218",
    "518": "ff278324-91d6-4b85-a9c8-d4ebbf7cd54a",
    "519": "49b3e4b3-5dc6-46c3-b498-a1aac1f951a8",
    "520": "1112c83f-bef9-49aa-b5be-92a5302a3981",
    "521": "8b1934cc-81cf-4314-8028-1d5a6629a06c",
    "522": "2e8d7948-26ff-473e-a9f3-82c557951a21",
    "523": "c4e2e327-7806-4193-ac6c-206382ce7265",
    "524": "6d254753-d31d-414d-83f9-cacea385119d",
    "525": "beaa5b17-d7a0-4b3a-a1ae-3394c76ffea9",
    "526": "3ab47fcf-0e2b-48f5-b2aa-ba449b6ac445",
    "527": "8353bba9-9a79-4c93-bc81-406a587942bf",
    "528": "29893f80-117a-43c3-9118-9da59860a11d",
    "529": "91105055-d761-42f3-a210-ce3f96442340",
    "530": "1c7c3638-62f1-4643-bae4-c31c6a972ad5",
    "531": "979bec58-0377-4dbd-808d-569280ab5286",
    "532": "5d49f820-83b3-410c-b44b-387efd32428f",
    "533": "7283a32d-c52e-46ed-b433-cf4716e16b59",
    "534": "f95084a6-8ce0-4c2c-acd0-85a258e92bbf",
    "535": "7b17f92e-f04a-461a-a2a5-97b1091bfa24",
    "536": "1b7ff2cd-bc47-4de2-93eb-0d332bd1649a",
    "537": "3cc9539b-a69b-429c-8dca-0e463502a949",
    "538": "0fe8f833-633c-427d-a9ce-c0d49d53f3da",
    "539": "22f49af6-c368-4867-ba07-67d4d18b32a8",
    "540": "bbb5e225-1d1a-4b61-a133-35edc9f53378",
    "541": "063f43f3-b3b2-4b6c-90e6-5ed116009750",
    "542": "d288c890-e0c6-4f8e-920e-29690cab3fad",
    "543": "d5bb232a-e9f0-4f02-8bab-3ae2aae901fd",
    "544": "c10bc0d0-f382-4cad-abeb-ca16f4f4bbe7",
    "545": "ab3c57a4-521d-47c8-a7c0-395590038cd2",
    "546": "9d792198-1aea-41f6-9804-f5e854c843ea",
    "547": "5ec29092-7a73-4ceb-89f4-4cd9fd34192b",
    "548": "221cd163-e462-4897-8780-435fa5bafe7a",
    "549": "118cad97-8a81-4f82-a347-cf6b33c1b0f7",
    "550": "330e51f7-a0e3-4282-8283-dc03aa035e9d",
    "551": "2e63dd67-8367-400f-b24e-26eead15bcb5",
    "552": "8cbcf2fc-b66f-4a6e-8fff-190da3f2484d",
    "553": "d104f630-0be0-4dd5-a084-14c59b32bd63",
    "554": "8cffd405-d1cd-4ddd-ba92-1d1d136c538d",
    "555": "f4b34abb-dba5-44b7-9f47-6c9df2eed181",
    "556": "874b1230-aefc-42ae-bfab-170a3a4d2d9a",
    "557": "540ef3da-a303-4322-980e-8a791974d2f5",
    "558": "e8d78fd6-05fb-4bbd-a92f-8955e4883e44",
    "559": "5938f779-f386-45df-a3d7-6e61c67f71fe",
    "560": "b5bcd131-ba85-4e7d-a26a-a21642668f7f",
    "561": "cc8b8b76-dd37-4d7e-b3d7-902036b92114",
    "562": "8b00692a-2c0d-4501-a2e5-6fe20e0b36b5",
    "563": "1fb66104-fe6f-4ea8-a938-d8aea78ca4ca",
    "564": "33453637-fef4-4906-9e30-2798c90e40bb",
    "565": "8f0218ff-ea51-43e1-8d57-ca67f395611b",
    "566": "71d2fd53-cc07-484e-bb67-c798540f480e",
    "567": "147ea3cc-29e1-4523-b377-2d9319ec3ff8",
    "568": "10fd4b43-035e-4519-a5cd-6a3c46a89660",
    "569": "41a8ecc9-8994-496e-bad5-aa3f10af85cf",
    "570": "b4d690e1-e812-4fc7-bc48-d9a99faf1221",
    "571": "7599bd91-be4b-4588-9c0d-6da448dff023",
    "572": "68dcbdba-40ad-495e-8905-48f0f317e93a",
    "573": "c37f1f5c-54c3-4746-acc1-0a6d8a24f828",
    "574": "c6451b83-1fb6-4854-818c-37df97713b81",
    "575": "c1ac8402-04f8-46d1-afe8-1900a367879a",
    "576": "3ed6db8f-5853-42cb-8b99-dd6068659c14",
    "577": "49f64a25-a590-46c8-92e9-3d868bd34329",
    "578": "32741ed9-84b2-4c42-bfc8-a3d6d7a067e1",
    "579": "0e20b9a7-fa6d-47df-8df5-6542238487e6",
    "580": "f43689ea-9566-447b-a01f-35c2e32100b0",
    "581": "b355aafe-eab2-49d2-8327-60cc4ba62a87",
    "582": "4f5330c0-8f5f-4710-a306-b863358a0963",
    "583": "cbf72bda-8721-4169-8a09-d0d61edfacaf",
    "584": "b204d725-c40f-4bad-937b-dc60654fd26c",
    "585": "ed58f43e-d383-43ba-a0eb-203790373dad",
    "586": "8faeafb2-9d40-428a-aabc-231e1f68f040",
    "587": "232c3549-1f69-408e-865e-77b703843dc9",
    "588": "f930443d-df82-4535-9a97-4d80807ae677",
    "589": "9697d187-fb2b-4a1f-8c4f-9cbc4f4dec3a",
    "590": "910d23ea-b963-43fa-a86d-8fba9520ea0e",
    "591": "d963d21c-e36f-4a15-90a8-cb40683fb40e",
    "592": "afec8962-d440-4bb1-b92a-c2b4fc85fee1",
    "593": "c2140f4e-1621-4c65-b0a0-9211817ed43c",
    "594": "1a9e6c9a-d4b5-417c-b630-f5026731880e",
    "595": "41ce977f-73d2-4060-b37b-2933eb3bfa72",
    "596": "29b64381-78cd-48f4-963e-50d626f5b959",
    "597": "6ed964d4-b49d-4efa-a6c3-3d4f5ec56498",
    "598": "f9c19ac5-763d-4ec2-bb32-39813d8fd8ea",
    "599": "4b3928c6-bff6-476e-a031-6a2665d31834",
    "600": "345b8fab-2715-4474-bb3c-d26b31914cde",
    "601": "2f4f90da-0fd2-4da3-a823-7b71158d6f41",
    "602": "464777b9-b952-4d9a-bf0d-028ca907837c",
    "603": "6df6f53e-74f1-4f8d-a5c2-f0010a763fe4",
    "604": "a3e66ae3-7fd9-4a63-afcb-7687a60cd530",
    "605": "afa4c036-ae50-491f-9dec-5b550843bd52",
    "606": "12bbd976-3946-47ec-a34b-b3dd96803f2d",
    "607": "00a393d9-dff4-4d30-8273-d89414785305",
    "608": "2f13196e-887e-4ce6-a417-d06d9653e3f5",
    "609": "ff7e302f-242a-469f-b9a2-f18f5a66ea91",
    "610": "eccce9a1-c8eb-459d-a36f-10e0dc296895",
    "611": "268bf36d-f53f-4e49-87c3-11ffc01968a0",
    "612": "539857e2-75ab-400b-a854-505500a11da9",
    "613": "17b7b49d-6759-497f-a1ba-285e0c92dabe",
    "614": "003e7719-9fb8-4d14-a9fc-68ff4e19ffae",
    "615": "7551b481-1360-426a-9747-c9c7ab5285b5",
    "616": "5f2aacbd-2aab-4487-b46d-622278c665dc",
    "617": "6e7f86dc-c0d1-4e70-8510-9378e882a96d",
    "618": "aa233d4e-d821-4129-955c-05c0d8548fd8",
    "619": "81fae6a6-79a8-4118-8e1e-baa436d8d9e4",
    "620": "1311ca63-c9bf-4f75-9891-3b498d6c7b4e",
    "621": "c5e6c91a-260d-4fe7-a9f6-834309ee4cca",
    "622": "5fee7e89-cc62-4be6-b37e-d191a22fcaf0",
    "623": "e884034f-f912-4bfd-831b-7143f5ad2ead",
    "624": "c9268649-6c44-42ee-8f77-4ba1c2bf6ceb",
    "625": "5d7c423d-573f-4e35-84c1-71e1ada8d60c",
    "626": "6c309aa5-490c-4bb8-a275-ed1f449e8cde",
    "627": "e2e479b3-4554-4ecb-8b8a-cba5b402b6ee",
    "628": "0855ca36-1863-4b63-a5ef-79c465be9aee",
    "629": "e13c7871-6c7d-40df-80b3-f6f948f53f21",
    "630": "5c0bda74-136b-49f3-a587-54a066fcbb3d",
    "631": "cb350e4e-fc5c-4514-9e86-bf6a5e1beeb8",
    "632": "4a5eb3a0-a6d3-40df-bb21-ab7996ee667b",
    "633": "e118c13f-eea8-4ed0-b66c-5f066fe30fa7",
    "634": "43e8d615-96fe-49d7-9b48-a835bc9a776e",
    "635": "6f686e85-dd06-4eb6-826f-06860d4f4681",
    "636": "3f912cb8-2d37-43ec-862c-77a880f1e181",
    "637": "0cee748c-1fc7-43e5-96e1-2c2bcaa9a59b",
    "638": "138e34cc-73ae-4986-9eb9-092a827e016b",
    "639": "62359592-5903-46b0-a7e3-6be184d70fdf",
    "640": "48cf26dd-10af-4fb8-9cb6-46103310ed4e",
    "641": "1937c7d4-7955-4575-81f8-c9642aa5a4b6",
    "642": "c607e262-00e7-4234-964c-997491a22466",
    "643": "f5603c1a-926e-4dfd-b9ae-13af1e426bf6",
    "644": "baaec694-2fa0-411b-b52d-287ca491085e",
    "645": "93e7444b-feb2-4711-8163-712d8d42d230",
    "646": "c8bcd6cf-d2e3-45d7-bde7-3c454081b0c2",
    "647": "90898763-b410-40c5-a311-654b84a92a5f",
    "648": "b5dd3d00-128b-44d5-bbb5-5c02c6808b4e",
    "649": "603b1b63-708d-4f18-86e5-4e189b146626",
    "650": "81d0d8a7-e68a-46a9-9d63-afa811b88307",
    "651": "acfd8f37-93a7-4e0f-8d96-7c94890357f6",
    "652": "4223bc91-b8e9-4165-9bf0-f54e07d0ce77",
    "653": "0e2a00e9-9aa4-4a17-8333-68b4fd3d185d",
    "654": "a232582a-b354-4af2-8949-2d34004a1eb9",
    "655": "cf1adadd-fe33-4c3f-b6cd-ebf4448920b9",
    "656": "b7081a90-7173-4c1b-88e4-3b1efdc08cbe",
    "657": "5102cfd2-5c4e-42e3-9f59-0bf7e92198b1",
    "658": "2afbfa79-7c6c-471d-a342-3871e58165ad",
    "659": "d27e6acf-1bba-4766-ad3e-d06f1cba06fe",
    "660": "98883eff-e8f6-40a7-94a0-3dc5df279d18",
    "661": "53a094d8-4f8b-4857-bf52-b766dcf29dd6",
    "662": "532a85af-c8e4-4b02-8763-82ce3087841f",
    "663": "dac4348e-65be-4b21-ad4c-f5ffebc43f4c",
    "664": "425a0fc5-edbc-4b64-ace6-02c0d804511a",
    "665": "e5f89e77-0d68-417d-a589-c77f0f606029",
    "666": "11232733-bf65-4039-a6ec-35f739a8c899",
    "667": "51c377de-5393-4de6-8da2-37177df9e623",
    "668": "a6e3c8c0-5518-487d-85f3-d46ff77b3fdc",
    "669": "1c9dd3ce-56d0-4990-82dd-cad4107dba38",
    "670": "e9207604-b3e2-4a94-9041-43b2c0d223a9",
    "671": "fb4ca8ca-cf01-4fea-848f-eedb01ede1af",
    "672": "b6550fa7-7495-418e-8539-a158e76f4a6d",
    "673": "b08cd155-9893-4d97-bf19-5347a220a5f5",
    "674": "b3322c92-1ee9-4dc0-947e-811d93195802",
    "675": "650b3ce7-3c8d-4707-9b76-1523977d4358",
    "676": "f6fc2337-66ed-4477-808d-5a9ab6430c91",
    "677": "ace41fd1-7dcd-4aec-96f2-9d58c6dd9cea",
    "678": "06192b0d-5f7f-4a7c-bcd0-30c2746c9ce9",
    "679": "3d2c4a66-1132-47aa-8fae-8197f188e0ad",
    "680": "85363bd9-a00e-47fa-9ba8-1e65d13ecda7",
    "681": "f97e0534-80cc-42db-8b13-73fb2f316258",
    "682": "95d24f6a-6c8e-40dc-b159-f8fed75147a0",
    "683": "3f0500b0-6b31-4ea4-bd5b-3de20f87e4a8",
    "684": "e61db58d-1925-43f9-bf05-6d5d18688fc7",
    "685": "abec0c54-ec8c-47ea-b409-12d3e30587ca",
    "686": "e8ac5b4d-e74e-4c61-9e29-aad185916ba3",
    "687": "1f24c93a-e0b3-4cda-ad35-d3dc2ca11642",
    "688": "0f6564d6-fe00-413b-9093-d2c8c5f0dfc3",
    "689": "14131a34-7b52-4b5a-87ab-4d6ac70bab97",
    "690": "9c1c6cd6-624a-4871-a71f-f1e317af17ce",
    "691": "3bc4bca7-1bd9-40c7-b1de-1a04dd07cb18",
    "692": "54a93cba-ef60-4f26-9805-3018f1d1932c",
    "693": "601e5753-7a98-49e1-821e-931465ad7e2f",
    "694": "b7e000f3-e28d-4cda-9b4b-cb13aee4e6b4",
    "695": "66a22717-3ca1-4d49-b436-d9d9bfc9632f",
    "696": "efeb7487-c098-40e4-b16b-94b436ac8a89",
    "697": "9bfe9161-aab6-4503-8bfa-e5c9fe1eeff2",
    "698": "25153e95-6f3f-47ba-9baf-eca3741de334",
    "699": "3fc0e0a5-b900-49b7-8f08-2214893ce607",
    "700": "f869bae9-b168-447c-93b5-02772d9c97ce",
    "701": "9e6a1144-6204-4a6e-8260-30a083958348",
    "702": "5800f49b-b534-409b-b736-78f25c47b767",
    "703": "2440bf16-8156-4ecb-9cad-4cba169ea080",
    "704": "221cefbb-bdb8-48a5-b39d-b085c78c0775",
    "705": "5eb942bb-16b3-414f-9f91-bbe765af085d",
    "706": "3d61b0bc-a052-4d03-b646-66ee6eb005fd",
    "707": "839aee3a-94b9-4bd3-8c73-5a2057d4410a",
    "708": "ea5d76f6-c91d-433e-8c0f-ef9c1ba781eb",
    "709": "c7c98999-8013-4797-a818-0d09424d4eb3",
    "710": "6e14e827-828d-43c1-b891-1dbe9ff1f101",
    "711": "2a582899-a330-4041-9478-13008c0c63ed",
    "712": "e3915f61-da09-4df0-8969-a289a9fa1204",
    "713": "377c4c3d-ce05-4d19-9c46-0162fd9a6650",
    "714": "ac1699f8-ad16-4329-9634-b39d044ef077",
    "715": "771e0db5-ff18-4a7a-b0de-ae59d3f1bee6",
    "716": "65dfe058-0a74-4691-908f-1764e15adbf3",
    "717": "f77ed07e-ea17-4d05-9ad3-d708f7792313",
    "718": "2fe03008-8419-43e0-9e72-c61cd9d0435e",
    "719": "e936d195-6b42-47f6-9c1f-95accc4dc89b",
    "720": "cd983caa-4edc-4fd6-a21b-3d39a467e7d6",
    "721": "b5a6278c-91b1-481b-a367-622cb5144e0a",
    "722": "16eda758-f068-4db2-80cc-35817093b239",
    "723": "4eafc51a-2723-49a3-9341-37d9959be2f4",
    "724": "fa08a6bd-7731-440e-bbf6-11f2ce14acf1",
    "725": "a955578c-da4e-4b63-a5c9-0a2108e80c15",
    "726": "5c7ddcb3-24ff-4535-b54c-567237829bd9",
    "727": "9c5bbc81-fe08-4952-8fa0-c964065159a3",
    "728": "0be374e5-a6dc-4806-9fff-68af3e111d2a",
    "729": "9cc515dd-7c9f-4e24-89b4-6d6b21b90605",
    "730": "9a415d54-5c2a-4d1a-b0dd-2b64fa7cbeb7",
    "731": "fc242229-afca-4dfb-9cb4-2b9cc9512eac",
    "732": "b1276d8b-f933-45e0-b401-559681a13e94",
    "733": "16b05937-a892-4f9c-8480-2b4cd4f26244",
    "734": "6b134a4b-d6a7-459a-992e-1271d49a1fd3",
    "735": "73e5969c-80d3-4827-868e-71bb70bc56b5",
    "736": "248542bd-621b-45c9-834a-87681cb9a2ae",
    "737": "24249d6d-d058-476e-a434-939ec7d33b44",
    "738": "d3dcebd9-f338-4a92-896b-ccaa429e7b02",
    "739": "f755c3b2-603a-4014-86b0-46cb0037e59b",
    "740": "93e2170e-6f01-4c8f-b2b3-697c0a941eeb",
    "741": "0935abf9-7872-4ce8-8606-d1b8bfe1dad6",
    "742": "20c36e0a-fdf3-4b57-b202-e02ed49bc445",
    "743": "e6b8eb3e-9472-4745-b68d-dee94f5ad1c5",
    "744": "7a7d6022-541f-440f-9529-149ef9462194",
    "745": "0778f4f4-8884-44b5-bdb1-aa1c55ce56c7",
    "746": "dc9c2565-b199-460b-acfb-9d44356e48fb",
    "747": "a23e269c-2049-4cfc-b0d0-5a0e3c8b3655",
    "748": "2054cfbf-0669-40f0-8d62-8af4460bfd7c",
    "749": "cc08b0ab-ade0-40f9-865c-8ff9fb64ac0e",
    "750": "622e862a-8858-4bb8-a871-a4911e2245a3",
    "751": "606780ca-76a8-471e-8271-a0fae978c018",
    "752": "3ce8d056-7aa7-467b-b120-495d5eb38717",
    "753": "2098cb7d-c8f2-4640-a029-b0d83ec2707c",
    "754": "a11920aa-8297-4fdf-8469-faf70748ee86",
    "755": "64cdbab4-ea53-4d32-904f-c01a3546d177",
    "756": "8f2d8313-bfb7-4c16-8aa4-1849caa842ae",
    "757": "1b6c90d0-c839-42e3-9167-f0307085d099",
    "758": "cde074da-4520-458f-a72c-21244af2e550",
    "759": "31c04bb3-25c9-433a-8a49-dcd68dcf89f5",
    "760": "00af989f-83a9-47db-b328-10925d9839f3",
    "761": "521780bc-05c5-41d8-88ea-6696a228072e",
    "762": "e3d95aa5-4140-44d0-9d18-5ad82404da20",
    "763": "b7c77b89-ca33-4a3e-aacc-7759d8a9d2ca",
    "764": "6790da91-2a31-45ed-823e-0facb884ed08",
    "765": "29e07694-8fcf-428e-8af8-74fb468c7c82",
    "766": "c5214b90-0437-4383-aa88-85318ce595e6",
    "767": "20dc9639-45f9-44b6-947a-29a5a4a1915d",
    "768": "1a1b3f39-b810-4f86-bd10-770c7dfaab11",
    "769": "469172ad-a87c-4648-92d8-4131b3db5985",
    "770": "a9f0b228-5e09-484f-876e-1e3902950d7e",
    "771": "1f71a289-7f32-43a9-9921-4112bc7232c9",
    "772": "0a8ab8d3-babf-45e6-92a9-33461785404f",
    "773": "14324607-2a11-4fb0-a76c-0a70dec797d6",
    "774": "cf5276f8-b7ef-45ac-a611-1a488fa621d4",
    "775": "e108ffc7-9b96-4c63-b5d7-284c89ed5ea6",
    "776": "7fa77026-7a28-4294-849e-5f81b645950a",
    "777": "d7dccc09-cd97-49ef-92d6-5eed46e3a9fa",
    "778": "896d624b-5105-431b-aeea-2b0d13a4c494",
    "779": "7e7bb2a1-bc39-4651-926f-7a369d6d2bf3",
    "780": "08f1f5c0-c094-40e4-9740-5ce5884c558e",
    "781": "984be18d-c210-453c-80a4-dab6755afab2",
    "782": "6ca3ca9f-b7f4-4550-8d65-0dc6a9a15766",
    "783": "2b0b5056-1d97-43d4-a4ff-203495aac1f6",
    "784": "bd639d14-d08c-4e33-934b-e20ebf4c5ae2",
    "785": "47b43928-3e5e-41a5-803a-07ff4a64bfa6",
    "786": "f674256e-e66b-4b3f-a504-02af2738e458",
    "787": "1d789ab1-934e-43cb-a0ec-a10da3bd1e3c",
    "788": "4c9a173f-378d-4cf5-98f3-887de6685b1d",
    "789": "9bc85e76-a4f1-4138-8281-83c33e425db0",
    "790": "32711807-9431-4148-b81a-6d0f42a2a3c0",
    "791": "1d129c13-f7fa-4b8f-a0c5-02d08e206213",
    "792": "f9923f52-0b02-456f-9f69-e19fa90afe4b",
    "793": "b5eed568-58c2-4fe1-a11c-2e3e0070017c",
    "794": "839e3878-d9ba-4c45-9901-2ee0f94c0d18",
    "795": "53e5ef92-fb8f-4e9b-9c35-8ac2f486019a",
    "796": "6bc09097-531d-4186-8249-890ce6a36779",
    "797": "e861b4c6-b246-44e2-bd63-2e9b661ade60",
    "798": "6479aa38-1050-4d9c-b7bf-199b7a0393b6",
    "799": "d33cf142-33bf-4d43-a0ba-45fff84d7b68",
    "800": "780b7f79-3f92-45af-ba90-a28a8749a91f",
    "801": "1276ee9d-d1b5-41b7-82a9-09149fe5498a",
    "802": "f2d3ba03-98db-4cbb-9dd5-a1c8005f04ee",
    "803": "90f92e68-200e-4ceb-99fe-fbef78ac834f",
    "804": "4580d52f-c12f-4549-961b-77f0aacc03dd",
    "805": "610782f7-73e3-483f-a2ae-affd3fdbb5a0",
    "806": "e4a6d7bb-9fdc-4300-b872-f622f89b20d6",
    "807": "10d5f07f-d2e5-45db-8eb8-463b77340efd",
    "808": "9c6800ae-6d10-4634-b99a-5d6e622f464a",
    "809": "16032c7d-4743-4ff6-bd27-f2a0c1c0d92a",
    "810": "b3ea0b1e-e6b8-4018-9bfd-42d3b883294b",
    "811": "faf97351-da40-4f64-9a64-8219b101b4d4",
    "812": "03c2b98f-50a4-4cae-9427-6df195a581ea",
    "813": "6e4f5719-3bc6-42c8-8f02-4dbb4b0a7ecb",
    "814": "bbe64ae5-2d73-4b94-8854-ecf5dacf86fc",
    "815": "8d5494b5-c660-41db-bc2d-c44fad582eea",
    "816": "7754f077-397d-4164-9e82-ba81ddaab407",
    "817": "b242b17e-3708-46af-a65c-33f5b4741ce9",
    "818": "cac2172a-6ebb-4b9c-a8ec-75cd93942b73",
    "819": "f27f0ba9-6f61-4cf8-9ef7-0847e907902a",
    "820": "5ded9ed2-3fdc-4424-8a24-10526d752716",
    "821": "4a8edec7-0f75-44d7-9399-db3107643a84",
    "822": "9902201a-6f0f-4d12-85a4-972d564092b5",
    "823": "aedd9bf5-cd2c-4a04-beda-d86edf263792",
    "824": "67f991d0-3653-492a-bd37-97b9fc7d44c1",
    "825": "b610dc86-3ada-4be3-b259-45dda4a4f817",
    "826": "a1b8b6ea-5f9e-42c7-a42c-de1723a0c827",
    "827": "0de68388-d84d-474a-8d49-03b88cc31e88",
    "828": "894ee1b3-c046-4014-8232-afecbbf0d0ce",
    "829": "ee34d904-bae7-475e-804a-d0bb28f05524",
    "830": "04e50f53-2f7c-4153-b5ef-65ce7e302a94",
    "831": "5e1a5c37-d333-4d61-96d9-c334edbea08d",
    "832": "fb8c6f54-964f-497b-84b2-c9b7438fd6b4",
    "833": "beb97d81-3ed2-4d96-bb55-c68b05ddc164",
    "834": "3f7efb83-8488-49a1-928c-48f53316abc6",
    "835": "1643c959-214f-42a8-89fa-c6a0ce01c9ae",
    "836": "9c3feeba-680f-4be7-a295-9fec55b85f4e",
    "837": "c5b8be5a-4171-476c-bb08-cd94c70a3b1a",
    "838": "bb63ac54-3c98-4004-82e3-a12415721848",
    "839": "e8f98e8f-6e21-4c30-b785-06cc3fd174aa",
    "840": "4a477c80-0854-4ef4-8be2-97826cf5a635",
    "841": "e528d529-2dd5-4721-9f44-6fcaa9678719",
    "842": "7bc77c98-9e77-4f3f-83e6-488f57cd86d2",
    "843": "78c55bec-cc73-4976-824e-20b38f8f3a98",
    "844": "a2b29e88-fcb7-4fc9-b2a2-e83daceba305",
    "845": "648c87f1-be53-4cf4-a7d5-ede625b516a1",
    "846": "115b2ba2-14c3-4402-93eb-a14d5a147402",
    "847": "a869ad80-56fb-410e-81f9-cb3c9eb2375e",
    "848": "2cc83b8d-94b1-4278-a71f-10b26d111258",
    "849": "d52d568a-578e-4acb-8f6a-62be673cd29d",
    "850": "10e9cd7d-297f-45fa-b2f0-a7a21e069dad",
    "851": "e0bc4b4b-fbe7-4d01-8d31-47ec9c90bed6",
    "852": "7b7b9e5d-45f0-4261-8783-a7b3462f2980",
    "853": "24a8503e-773f-4326-8503-eb23899229c0",
    "854": "f8cbe1ff-6c6c-45a6-a99b-f33d7917c98f",
    "855": "3898b3d4-24cf-4eab-b422-f38caf3f7bb7",
    "856": "6d8fda24-5ab0-48ac-8048-fa761adfa054",
    "857": "c785104f-9a33-4540-b911-fd5b40cba461",
    "858": "8ea97c2f-1947-4eb0-91b8-87cd560a0b58",
    "859": "41e48049-ea9e-4c91-a5a7-6652d15d5614",
    "860": "810edaf0-e881-49a1-8aa1-fd7f2c2f8560",
    "861": "080cd9a0-9e74-4259-8893-9f8173987d03",
    "862": "69811961-efc2-4ef5-9013-63330b6de721",
    "863": "8fb1b14f-4d58-424b-a15b-a3ee5659e1b3",
    "864": "8c41c2a0-63bd-4090-835d-9f93e8f965bc",
    "865": "c4c1eefd-7d0c-4ca3-83eb-e69e4f4f124e",
    "866": "a70a2fa3-848c-4817-a7ad-51c7c68e48d5",
    "867": "d6132f44-ceec-450b-a5b2-a59d93c3fa21",
    "868": "f6337902-5605-47a5-b1ab-a0a136b2b3bb",
    "869": "fb14d11c-aa5f-4a52-8027-7a3f9835788f",
    "870": "50552177-d70a-41b0-9105-812e15b0bb97",
    "871": "0deafd48-0204-40d2-bc2f-e913d194a91b",
    "872": "604f1148-c038-4646-a25a-d02f64d63db4",
    "873": "cbc13d79-00a7-43b7-8194-3b8c15ded6c2",
    "874": "4a5fb8d6-d82f-4229-acd9-9bf7bff2ea40",
    "875": "9e88746b-ca68-4206-bf51-06b96a18b4a0",
    "876": "afd113b3-3251-45a0-8d3c-b7767ce99714",
    "877": "6e8872ed-171f-4f32-b1b6-b1bc0b6ee3a4",
    "878": "aa8974c7-e043-40ee-84ff-86548d860a07",
    "879": "ce03e381-62e6-4c9d-af69-5d75d9b4b679",
    "880": "5abb5bfe-de97-49c0-bc73-454d5299a8c7",
    "881": "de3cdf75-61c3-4a85-8362-27bd1564b583",
    "882": "fa37f4b2-ec2d-4366-888c-78a951b0e783",
    "883": "7dcdf19a-f72b-485a-a14c-859de3c5a23f",
    "884": "7560f22c-1f19-43b2-8cde-00a6d3bb137f",
    "885": "aff43ed7-797b-47ff-85d3-0201b11ed062",
    "886": "2538c32b-2ea9-45d1-a931-1a88eb542ad0",
    "887": "b52d7dce-8c4f-4634-8a58-cb7632b3befb",
    "888": "67456e6f-1ece-4722-88f7-69de3b568646",
    "889": "f84fe65b-df43-4203-9521-18a897e79153",
    "890": "788d1172-d4a4-4546-b47f-d0d9875bf46e",
    "891": "014e93ed-ed48-4065-aa1e-e2e5aee63369",
    "892": "74586850-d3b9-47f1-b496-107e6de9f4cb",
    "893": "525a2239-5518-4d9f-9f57-121e924c6cae",
    "894": "3f75de1c-1d39-47ab-8178-82fac1790d04",
    "895": "7452caf7-107c-472b-8e3a-fad8c0d5e743",
    "896": "4fad7a35-b3c4-48ab-bead-cd2a260fd5e1",
    "897": "f8638390-6a27-401f-a61e-1d0ca18dafbf",
    "898": "7c5d0576-561b-402d-a97f-efb452dba0e7",
    "899": "89704743-78d7-4e6a-9539-c67f4edd81aa",
    "900": "e5aafd0d-e463-44f8-b93b-de8711ab9562",
    "901": "aaf9701d-6432-4af6-bc32-29db7aedbb26",
    "902": "0e9e8c4f-5cc5-42d7-9942-d9943545c8ad",
    "903": "3a943ff2-0bdc-4b63-9306-5d9c46b79b84",
    "904": "59079494-be92-4450-bb45-51f4508d46f6",
    "905": "b0a1a85e-451a-4914-801e-98440d366e49",
    "906": "b7e72d64-12f1-4530-90b2-b193d96231cb",
    "907": "f9c97f2a-f80b-4fdf-9b88-5777ebfc2fd0",
    "908": "1f8d16b2-50d6-49cf-a055-523cc1b46181",
    "909": "fdf28be7-8268-4529-b4e8-c570b3fa44f4",
    "910": "6db064cd-509f-4d17-99b6-a234dc505443",
    "911": "4e615888-8278-4818-bd2f-cc84a009b034",
    "912": "062a703f-cf3d-4514-b65c-4bfa74779b2a",
    "913": "ff82fc69-4ef3-4d43-8aa1-f68c88d884bb",
    "914": "4934c5f0-06c1-4b54-b60a-c98fbeea535a",
    "915": "f89045a6-bae4-4738-8b4b-0d6b54dda9a2",
    "916": "084a3a4e-769f-4403-becb-37edf9f32ebf",
    "917": "ed8cfb52-8abf-485e-b0bd-8c6d5c61835f",
    "918": "9d2318f5-3373-46db-b0be-1ec87008285c",
    "919": "cb32e70f-1b7b-43a0-bbe4-f0eabea4e36e",
    "920": "c63147a5-058b-4aca-a535-fb3c2712c774",
    "921": "ab946dda-2cba-487d-b968-24c2afbe31f1",
    "922": "41c4e77b-0d9d-4c75-a216-4703236d3192",
    "923": "62339ae7-aed5-4bdd-b6c6-015951f2192f",
    "924": "2f3d029c-a744-4838-bca2-c0a8007d0e91",
    "925": "417444f4-f160-47e3-b09f-62de4ebcbe29",
    "926": "1f2e9d31-cc97-499e-b9d4-7de39500b831",
    "927": "b97fc8c7-0aea-4a35-999b-2536fbf56032",
    "928": "304dd9ca-b367-4d1c-b799-726147f94265",
    "929": "cf38f2a3-5055-455c-845b-b212801629d8",
    "930": "0d4d2f5b-50e4-4be1-a583-b65f688e4b38",
    "931": "3ce3eb86-9ec1-44b1-bce8-74f71123c61a",
    "932": "0e4721ac-78d1-45f4-a6e2-4e7bf48f8121",
    "933": "816873bf-7095-41af-a176-ebfcc4f2bab2",
    "934": "234a93ad-a822-4b25-b62e-b64c44711f40",
    "935": "6b0757ab-797b-44ef-a9d5-8a6f22cba201",
    "936": "4ea4bcc4-ee7e-40ba-97be-32264c47dc29",
    "937": "06e9d90d-445f-40fb-9c38-07f6b4a156d7",
    "938": "806bc0d6-f9b0-48b4-bd7b-6c5885121615",
    "939": "32bce573-01a1-47cf-ab71-2f164340d1d6",
    "940": "bf4e25a6-6b27-4f64-b1cb-28f95e7c1076",
    "941": "9c837e8b-22a9-434c-b897-38ab8e216f1b",
    "942": "656b8bfc-b26e-411c-a361-a6dfabd6fdeb",
    "943": "d7a1008f-028f-44e4-9325-911baa161640",
    "944": "47321170-85cf-41a4-97ba-1ca665c5ebda",
    "945": "c4e25d52-296f-4460-8ad5-5791ba544d90",
    "946": "ed221526-5ead-4beb-9d5b-45ced691d227",
    "947": "c0b719e3-7aa7-4fe5-a054-937b88c93b18",
    "948": "e62838b5-ccfe-4660-8e89-bc9d29663ac8",
    "949": "30ce0410-4a99-4642-9e9a-aae7f91fc865",
    "950": "af15a05a-a48f-4886-8e58-bc4f57bc6517",
    "951": "9453e0ee-4516-4be5-9a1d-246c6e237d43",
    "952": "e902086b-41a2-4b34-81a5-88e5228c0cbf",
    "953": "97a68608-eccd-4d75-bc23-14ed7e0b74f4",
    "954": "f2c039a6-67b1-4d8e-8396-ee1a5630b003",
    "955": "7c6be748-f373-4da2-9f88-4a7d68fd15c3",
    "956": "d8afa3ea-33e9-4a81-97b6-9a5b59710d0a",
    "957": "9d0c1669-f05d-4a28-97af-26838ee5670f",
    "958": "5d0b0afc-2afc-4a4b-a338-86d1d6852e27",
    "959": "25a9ed13-1ad0-4a1d-8ad8-369a77859b78",
    "960": "d1dfa7d8-362e-413a-a461-02028464a334",
    "961": "390fb445-9ccc-41da-8a10-2dfb40171820",
    "962": "385d7f36-613b-4c00-ba1f-b7f1c98339e4",
    "963": "ca9e5bfb-70a0-4fc3-8932-3031f0cd842f",
    "964": "1f1df76a-f00f-47a6-b7dc-b7dff944d056",
    "965": "89ad9b99-d365-4268-bc8b-5da4d3dd1b45",
    "966": "01af9377-4120-411d-911c-492110d811e4",
    "967": "100e54df-2c4b-4e11-acdb-f575c5d7a71e",
    "968": "f5017cdc-cb77-479f-b2f3-970451637a30",
    "969": "4ce0d311-3e80-4b6f-8648-1d9749b7e86f",
    "970": "62fa5551-a94d-4f10-a48f-502b65bcbce3",
    "971": "3b5a43bd-f7e0-45a1-bc93-1373062a205c",
    "972": "d2333e1e-7dda-48fa-adc7-c50d878e2fcc",
    "973": "ac5aeb0c-dbe5-438b-a52b-a6407f846d03",
    "974": "097fa441-1471-41f6-a0ff-ddf8fcedee03",
    "975": "a3df105b-fe00-4cfc-a734-93e45692df39",
    "976": "799a97e1-4cdf-4860-8d2b-cd668f63704c",
    "977": "0ed47421-71fd-4e63-a7fa-2d239f91f2e6",
    "978": "54e7c087-af66-48d3-8c45-8d0f23ccdbfd",
    "979": "a9238d5d-fc67-4089-992b-e1b10c7eb92f",
    "980": "34776497-0b78-470a-bcda-ed36f6e8ab2c",
    "981": "4c761b71-eb01-4414-be29-0b8f2ab0c7b3",
    "982": "a1cadca5-2966-4ecb-93f4-2fe529bbcbcf",
    "983": "7fb74f53-b129-4b91-86d0-33776b3afdbd",
    "984": "80ed3e13-e1e7-48f7-9b4c-81b0ec5fcf2b",
    "985": "509a879f-8992-4d53-9716-246425a4330f",
    "986": "f12a5779-b41d-4bbf-a4f7-d4fdbd0fe96d",
    "987": "525d04f9-fc9a-42d5-b535-e1e6d88585d5",
    "988": "d7db7c23-bb08-4e1d-b1d5-7d03527f3fc3",
    "989": "9817819a-4b31-4d84-8f66-cf2bc1882d61",
    "990": "0628463c-1c40-48b6-a3ec-6306a81f015b",
    "991": "efa0001e-b4d3-477f-926c-e026dcb8a371",
    "992": "1225935a-e133-4389-bb7b-9d6453c806d0",
    "993": "a8dfb090-8273-4cb0-b9aa-f81f08c10ed7",
    "994": "0cbfa04f-cda5-44ae-b918-5c920560733d",
    "995": "17b9e601-5d73-49d9-8abf-2d96d2119b6a",
    "996": "498f5cb5-15f5-4baa-9eda-7ae067f78088",
    "997": "9cc4ae1f-49a5-420e-a5a1-3b24fb8eb094",
    "998": "3037e8e0-07e6-4263-8d2c-b412c22748af",
    "999": "41cd67a5-42e7-4f2c-ae03-edc90734d9cf",
    "1000": "55ac4dcd-fd2b-4005-84fd-9e8e666b1130",
    "1001": "15a91376-6b3e-4274-a7bc-01c7a4f489e4",
    "1002": "03171b1e-ccac-4829-b192-373fdacd2606",
    "1003": "4dfcb8c6-c1d2-43e5-a2d2-605f42c867b1",
    "1004": "b715a806-69fc-4a61-ad3d-99e3333a224f",
    "1005": "5ca94c4b-c222-4398-8d84-27cf9d03e729",
    "1006": "f7b2fdee-d4f7-4729-bdbf-48bfea5c63cd",
    "1007": "561ea9bd-1043-457b-9ffb-ca51f28f732b",
    "1008": "c1200e70-37ce-4c05-83e9-ca87e73b90f8",
    "1009": "9910c159-20a3-4556-8dde-7f0175f45796",
    "1010": "6c6f77b0-639c-4638-9bef-5c5ab97df054",
    "1011": "9a27437d-c3b8-498f-9953-8eebf2f1df6e",
    "1012": "48a0fdb6-69b2-4eeb-9395-ed7ad1b7092d",
    "1013": "95b950c4-1f77-49e3-83f6-f1fe44491574",
    "1014": "518c978e-67d6-439b-a484-6aa8332d2353",
    "1015": "26b270b5-0f9d-4cb3-a2eb-e724f071487d",
    "1016": "88aaddf6-66ac-4ed1-8c73-f227538c0502",
    "1017": "f746bf0d-dc37-4989-8b6c-884a5fd80ae9",
    "1018": "48fe6216-6ece-47f2-b162-a04538356ff9",
    "1019": "741615ce-3047-4001-bc55-6cef7e06d3fa",
    "1020": "94a7b9ad-f349-44c6-9da2-eb101b4864b1",
    "1021": "3593f5ac-46c4-4a90-805b-32f21cbd34af",
    "1022": "e60f91e5-4abd-4abb-b9ea-010d8b3cf96c",
    "1023": "0efa55b9-5b71-43e4-a021-999061bc3c62",
    "1024": "197b4f2b-ef25-4381-a463-c762fce2996f",
    "1025": "2c109f81-1a94-456a-a890-3857c8f48b32",
    "1026": "49e5071a-d506-4374-9e56-9310147b57d1",
    "1027": "18cc3190-0298-46b1-a28b-ccf92c0d1872",
    "1028": "53dd5ed7-426e-4bd3-8389-1e66e1fd3e55",
    "1029": "2e92504e-76e6-451a-b45e-a15efdc15b54",
    "1030": "8ccea376-935d-4d4a-95a4-087c630b8fd1",
    "1031": "04f355e1-5a78-4c2f-8d1d-8a375d9dbe69",
    "1032": "5cfc1b15-84ea-4543-8b32-47d9c24a01f4",
    "1033": "982d708e-b385-4826-9c91-6525cc4fcc11",
    "1034": "6d10091f-f4e9-4293-a051-782bee8658dc",
    "1035": "69305cc9-54fe-440f-b531-1ffa8591d853",
    "1036": "633ed940-8282-4889-97d2-a4a82093d8da",
    "1037": "2d554977-b475-4c85-af67-0258c74cde7a",
    "1038": "31e25021-aa66-4847-b617-7fd59390d2e8",
    "1039": "6e3b91d4-1fae-458d-8a40-18c14f9ccdd7",
    "1040": "741f9906-2f3d-4e44-96cd-c29700d080c5",
    "1041": "15c336bc-98a7-452b-b1c9-6c2083229bd3",
    "1042": "c98dbe99-7dc4-4980-acd9-820be5b989ea",
    "1043": "f73356c2-a29e-48cd-85e7-21f30e449def",
    "1044": "c4e3a33f-b96c-4e3f-9396-2c15f4552d5d",
    "1045": "a925ec5a-be48-4228-b079-62faf0bc6eb9",
    "1046": "42e1e7d4-a263-4f98-839c-4b6ba1d00946",
    "1047": "6cbf51bb-e25c-4221-a2a1-7df90f5aba51",
    "1048": "4a71e9d9-f4e9-4632-80de-39c228b80b0a",
    "1049": "cd84b0a9-b1c4-4e79-a16f-92237b626188",
    "1050": "14fa035a-747c-46be-8636-4a73883c5429",
    "1051": "995d51db-7fb6-448b-baf9-d133198fde80",
    "1052": "007e754e-3c63-49e6-a542-865476a1f6a8",
    "1053": "394727c5-03ba-4774-9344-b7b3eb3e3f4e",
    "1054": "0770e0f6-65d7-4f3f-a01f-0be7b510f692",
    "1055": "81629f95-b7a6-40e1-a137-8793986cd6d4",
    "1056": "e95207cf-6a2e-4568-8d09-8ff8caa8b90c",
    "1057": "25e34cfb-266d-4c85-bea9-e6ac27b4584b",
    "1058": "7e59c083-72dd-4c93-ae0f-6b04ec78dd2a",
    "1059": "dd55bc7d-34ae-492d-81ba-84721676b9d0",
    "1060": "5a2ff4dc-ae50-44ec-a3c2-4d893596719e",
    "1061": "f9cc1e67-1f01-4de6-a026-f29f0380cc84",
    "1062": "bd816418-f5e2-40d9-af04-f4bdff303cba",
    "1063": "5b5e1b75-bc49-4e6b-880b-ac725509589e",
    "1064": "213edac4-a76f-4fd8-9ecb-4edbc0411d8a",
    "1065": "7fcd4b19-7e90-45d1-8335-687663495001",
    "1066": "149a8bb7-6ad0-42a7-8d43-e5ded50af704",
    "1067": "fc7f77a2-8bb1-4f56-948d-0b09dfbe86bd",
    "1068": "fe5da527-408d-49f2-ac37-f0fd34ac63b5",
    "1069": "5981201b-d483-4429-9816-fdf6085bc27a",
    "1070": "6cbf7532-e462-4453-9ed4-1e299d75961f",
    "1071": "560b27f4-67e1-454d-9bab-982303268633",
    "1072": "3673240b-73ef-4ea2-8d2b-03a2330b0341",
    "1073": "e2ea9873-7999-4ae8-a1bd-d4c4b3518e72",
    "1074": "369e3b03-d241-48c8-9cc9-ef13d0ce0723",
    "1075": "dad6bce5-5e2c-4dfb-8d41-4718d9c5fb4f",
    "1076": "ba975ae8-081d-49bc-89fc-7d781a91138f",
    "1077": "900590e4-718a-4636-9c91-65c8ce413491",
    "1078": "b67d7cb2-dc85-4311-b8b6-1c93e48de7cd",
    "1079": "d0c00d87-3e67-4567-8518-ae5d7f009e2e",
    "1080": "d46ad285-7e4c-4e9a-a03e-9a31f71c7422",
    "1081": "5cecfb4e-ac60-476b-a492-ac462ebda4d5",
    "1082": "efbdccb7-6396-479c-923c-c708f2a8bc74",
    "1083": "30c70770-3148-4b4e-a405-e0613391a753",
    "1084": "89ef63dc-813e-4dfc-9e6f-511d3facc094",
    "1085": "9931ea2c-aee9-4434-84c1-6f98536c0bdc",
    "1086": "0024b6a1-f63a-463b-8d7c-70cb5fc4af44",
    "1087": "b5fe1c6a-dfef-4de0-8382-31d4348aa026",
    "1088": "f057ecac-cc2a-49d2-8828-a0d44a914aa6",
    "1089": "c34cc3e1-2177-4762-8b9e-d8630993d057",
    "1090": "e8293c75-56db-4698-b0c3-aae77eb40382",
    "1091": "a233a562-a96e-48d6-a06d-fcb70b0a2e9e",
    "1092": "686e7857-c617-4877-b8e8-0767b987f744",
    "1093": "3af13eff-2ca5-4019-8808-004b7bb4a334",
    "1094": "99475f81-ec5f-4137-8ea1-b2f306357f5c",
    "1095": "9e64f107-bf85-4de5-b3ee-946836420363",
    "1096": "dac0a531-5418-4c24-895c-81eafb9a8f47",
    "1097": "10e9b9eb-c392-459a-bb38-43c7d1cf53fc",
    "1098": "7cd48054-28a8-4ebb-900a-4bbee1cee760",
    "1099": "7e7b64f7-e386-4f01-8615-47398bf7d6fe",
    "1100": "3b78d283-a8ba-44a1-a3e0-502cc7c82fe4",
    "1101": "11db5076-117f-462a-a507-2e3d2dec5694",
    "1102": "08a92d77-e154-4fd9-9e98-517acb2c5140",
    "1103": "64612f9d-4963-4ef9-b77e-b662eb3eedb9",
    "1104": "0509b02b-3686-4f21-9e56-3ac4339925ad",
    "1105": "911b60d9-09b8-425c-a24f-1c9f2c7b93ad",
    "1106": "c141666e-80be-4d52-a7d8-16a780abc7ad",
    "1107": "c6c9b3e7-4b19-4f24-8395-bcff52373669",
    "1108": "498f6855-a371-4883-b50b-94e9b706f563",
    "1109": "828b6fde-fd66-45bd-8154-f0ade7dc18b7",
    "1110": "2d8ac390-2164-486c-9f45-7debc2b27fa6",
    "1111": "f8eabda7-e36a-48f2-a423-b88b52c09816",
    "1112": "0e56e08b-be93-44a8-9193-d7473ac8a41a",
    "1113": "fa623e2c-b010-4cd0-b923-3650484b7c3c",
    "1114": "403645c6-b042-4c2b-ae48-fce3b27d6453",
    "1115": "3e3827c3-9c4a-4b8d-83f8-61183114562f",
    "1116": "28f90059-73e3-4c5c-ab08-ff821a99a33e",
    "1117": "d4715959-a49e-477e-952c-392c7569c543",
    "1118": "6bce13a6-31c9-4b18-968b-fa27c15cdbfa",
    "1119": "2ee4bf1d-4cb4-4c27-beb3-33a8d2befcda",
    "1120": "6ec5c2cc-2ae8-4db5-a39c-b1f4d9c5a7e7",
    "1121": "61cc4d9d-9441-4928-b119-014e5faa1492",
    "1122": "2e9194db-fe06-4df1-ab8f-dfce8ccbce7e",
    "1123": "aa23e352-b59e-4e56-bd51-e3ac954b0d5b",
    "1124": "30ff7ea2-8b3a-4dca-8386-100f902bc5fe",
    "1125": "45712273-9f2d-48de-aa92-8e760dfcba3b",
    "1126": "d5607978-e116-4384-8949-bd8f71ed59e9",
    "1127": "475b4590-0f68-434c-87bb-873d0e9ebaf7",
    "1128": "45bb4cae-34a8-4238-8fa5-909539dbcb79",
    "1129": "4c7cf246-7516-4d18-bb25-ca089ae59d69",
    "1130": "c0c689fa-ca6b-4417-a42b-8e3e8b3347f2",
    "1131": "ec13cc76-3095-4e71-a55e-9a63d5ed02a1",
    "1132": "cbf48f9a-fa39-41a9-9256-cb29239c7c59",
    "1133": "859a4708-dce0-4511-b90c-15c91df0f3e2",
    "1134": "ca9e79e4-b749-4d21-9bc4-92dba6e52223",
    "1135": "79de9e18-87eb-4dda-8d36-89e0f7c094c6",
    "1136": "a46f8448-156d-4034-a29a-38533f510a4a",
    "1137": "7002c574-42b3-4ef7-a807-1c191e35df17",
    "1138": "2a7d7bab-7c3a-4568-b80a-34d66f7c43cb",
    "1139": "5e28bd3d-d29f-4b4c-b395-bb864b3d2f20",
    "1140": "0eec9b91-0a5d-485d-b7b7-ae59e0d776c5",
    "1141": "36630706-c3db-4344-b8a4-de2e1b77dd45",
    "1142": "e126a7f6-5c4d-4bc9-a73d-1d77c9a7866a",
    "1143": "dbfbde93-ad7f-48e0-bc86-f1492386601a",
    "1144": "09b0eb3c-9037-4ea0-aed3-d22a854cbbe5",
    "1145": "8e272f0f-b5db-402f-9bb4-ca99ef63a242",
    "1146": "c24083db-0e92-4769-9eb1-5f87c3f21be3",
    "1147": "fb84fb7d-805d-4c79-9c85-1f0457ce2d6e",
    "1148": "53037742-d261-4791-9d09-fc70b4f3dc6e",
    "1149": "752852d9-6495-4508-9cac-49559e2c2d0f",
    "1150": "8e01680c-4f80-4ef7-8937-b0be39884d87",
    "1151": "aec6703a-b166-44cc-b890-697f5e02ebd7",
    "1152": "7653c9e8-b6a2-4499-87f1-8be504fe6ea2",
    "1153": "7829cfef-8c4c-41c8-8426-5685fc208e55",
    "1154": "2d1db522-21bb-4ab5-9728-547b17b65230",
    "1155": "35c4266e-347e-4dbc-8371-9fa721ca8cfb",
    "1156": "5697be08-b8df-4404-b42e-7273e04cafe4",
    "1157": "a336832b-1949-4be4-bf1a-ced832496c13",
    "1158": "9c20ae1f-0c0d-4e65-b0eb-b42bc1459f3e",
    "1159": "ed125d4f-a15c-4ae6-853f-3a9bcbea8f7d",
    "1160": "fe13a0b6-8d39-4cab-bc2f-336f5b5c163d",
    "1161": "6ec6971e-0fe3-47a7-aef1-7796ba3d0d4b",
    "1162": "43353a74-0aee-4ffb-87c1-8db0ea63c5ea",
    "1163": "93339dee-bc7f-43eb-84c2-a6d0f8da26d1",
    "1164": "d48bbfb8-a405-4814-9528-35106040b0e5",
    "1165": "d1d6d2af-be93-4bf0-bd12-f045bafb74d3",
    "1166": "e999e5f8-c557-4b20-90d6-055b6fafd55c",
    "1167": "7323acb3-0d2a-46ac-8d85-346c175dd728",
    "1168": "a49f20a4-e3dd-45f9-b213-fb85bf103ace",
    "1169": "75a71f58-2ed9-4d09-94e3-85ae4f1b2fd7",
    "1170": "491943f8-5437-4e2e-bdb2-ca600ab9407b",
    "1171": "5c7d79a1-c974-449a-baf6-da07836ad5ad",
    "1172": "3d1b1be6-105a-46b7-8ff4-00ff06f52123",
    "1173": "9a621834-91ee-4946-aa83-45a6157118cc",
    "1174": "b0bb1c47-7cf2-4e65-a181-3ad727750e21",
    "1175": "62f56b76-7df9-4a26-a5f4-43b89b719a59",
    "1176": "bb9dc6e4-db5d-473f-96fd-e26b2e631033",
    "1177": "a34b321d-5e31-4dad-a64a-8c9f64a15820",
    "1178": "f44a7f79-5435-40b2-97b9-ec4ebf458585",
    "1179": "795ce941-65a3-4e6f-a313-465eabd702de",
    "1180": "69318b89-55f3-412a-ba7b-59b60399acfd",
    "1181": "0c8572a4-cb5c-4866-ab61-f50b1144535f",
    "1182": "b655499f-3dff-48e9-b394-4b785dc57204",
    "1183": "233bf488-f284-4169-b513-c680a51b5e8e",
    "1184": "27e1b070-5da8-40af-8ddd-0697bcd752c9",
    "1185": "a77d39cd-1f46-4c38-99fd-c50c1aae1eb0",
    "1186": "614ba1a2-68e9-406a-a7e2-28a114403170",
    "1187": "7f63b4c7-434d-4b44-9a8e-cc6aed1e15a8",
    "1188": "c6311a51-46b5-4fb5-8865-ce1a9bbb5026",
    "1189": "060fcb37-9a7c-4042-96e0-2f542cd7a08a",
    "1190": "7bf513c2-8afa-4231-abf2-036cc88dbf7a",
    "1191": "6952705a-dee1-4d91-8aa9-c79e9a779f43",
    "1192": "2aaffbe1-106f-409f-913a-65ab8e1a11a6",
    "1193": "756aba3b-08e8-4657-905c-bf1a721d1cbc",
    "1194": "d0699707-0185-40b6-b480-80e40e1387f6",
    "1195": "2606ef13-5d8a-4e09-9476-ea780ca95500",
    "1196": "bc7ffab5-26d7-4bc7-89a4-ae3c84cdb1e6",
    "1197": "8af42c49-2b29-492d-9398-d7ecc0a5af5a",
    "1198": "b6564d06-7dd7-4a55-abba-676d48fda0e4",
    "1199": "ce809b56-ca2a-4e11-87e7-88a81bbf25c1",
    "1200": "cd8d87d2-d575-4830-b760-4137aba69621",
    "1201": "776aa6f9-f6e3-4e02-9efb-59c8aecdf65c",
    "1202": "c8f4ed0f-8030-49e3-a8e1-096a457c6a80",
    "1203": "68e024bb-963d-49e3-ab9b-3694fa77f7b8",
    "1204": "a741e11c-4f0e-4132-abfe-49996fa064ce",
    "1205": "34471f7d-6da3-433f-9c31-4dd96710f8f8",
    "1206": "3a15df2f-9c9c-4300-af4b-d37fabd961f5",
    "1207": "50215f8f-d31d-4b0b-b16f-ba2ce5a3ed6f",
    "1208": "0ca3ef76-968a-428f-8dd2-c486f37d1e31",
    "1209": "7720c816-8b4a-4e7f-81a7-57917a117e08",
    "1210": "4533c764-99f9-4eac-81fa-945f33a9fbb2",
    "1211": "ea5c263c-59ee-438f-85b6-d0fa7b6092fd",
    "1212": "f27e6063-fb74-4ca7-bf74-f47393c1e2cf",
    "1213": "a3a1981b-e2c4-44a7-ada7-94dcc5938271",
    "1214": "85020d7b-07d1-4184-a93b-1b9402dbbaf0",
    "1215": "3d25c510-0112-435a-9483-d48fe6ba2a69",
    "1216": "c85815a5-1e28-4258-9d9b-31798c3458e1",
    "1217": "ae62a662-1ebd-4e78-9864-018813bc4b90",
    "1218": "b22641c4-21ee-46a2-baaf-73daf1625bdf",
    "1219": "43c8a7c2-1cf8-41a1-be0f-6169c1954995",
    "1220": "4ea83e16-97af-47a1-840c-970514d24395",
    "1221": "67f0b9da-823f-4f22-b937-d8f8e2fdf23d",
    "1222": "e6dfe523-53a3-4640-9e68-3638ec6b3212",
    "1223": "c372b72e-840b-4041-8ad4-b22c2a58f5b6",
    "1224": "02d80349-ed07-481a-9f99-9ec61446334b",
    "1225": "4ff225b2-037d-4028-885f-f5e01a46f2a1",
    "1226": "072dad45-27d3-4f02-860a-ace15a900ec7",
    "1227": "caddd0f2-6230-46ea-8819-978a63a07494",
    "1228": "de220aea-baa4-4985-a920-5288518fdb0c",
    "1229": "7af31f15-a067-4811-a542-f8c6ada8d03a",
    "1230": "9539cd7f-aeab-4159-bd00-6b188664a89b",
    "1231": "14ff16e6-1a8e-4954-91d6-aa43f9755c15",
    "1232": "887cfbdb-495b-44b3-91a2-92317b5379e1",
    "1233": "80793a29-40ce-4aaa-a534-602ac59ad4e3",
    "1234": "359b97e7-4c47-4e58-a193-18b089280aea",
    "1235": "bf85f1ee-ff24-4dea-8900-d7f69b7014ea",
    "1236": "01525790-164c-4dcf-8677-0f817bca89f7",
    "1237": "7e6d32e4-2b9a-4787-bb05-33ffa8ef2afc",
    "1238": "73e0b5c6-0d49-45eb-8b82-19d172eef541",
    "1239": "79c5acb1-1256-4055-9ad6-4812aedb2364",
    "1240": "ad3d3534-2014-4184-8bd8-a3c028c38f8f",
    "1241": "47a3d91f-bd6e-4703-9835-d4d7c9e74fec",
    "1242": "edbcec5b-ea0e-4222-880c-bccaf954398a",
    "1243": "16804412-8053-405f-a4f2-47ef27ce708e",
    "1244": "6024e3f1-ba2f-4fbc-ab21-06e5302875b4",
    "1245": "028caaf7-52a8-40b3-af25-5f8fb900a42e",
    "1246": "5c09092f-e697-435e-869e-b5d91dd47c52",
    "1247": "31b6e365-fa7e-4455-97e6-ab4d14e25538",
    "1248": "998e075d-53fc-4bd8-a098-e99c4d81569e",
    "1249": "5ee012a5-0cec-42fe-98a1-8f52ae36012c",
    "1250": "39440ec2-abe2-4878-9a27-3e25c2144806",
    "1251": "23653ddb-3508-40c0-8803-9c5bf71b9aa1",
    "1252": "5330bda9-8995-4d83-88eb-ec8183a4fcee",
    "1253": "5e85a72f-575a-4d33-a936-6dae68bf919c",
    "1254": "0e090f07-e8b0-4619-a389-373324b778ab",
    "1255": "ff6b0e3d-aa0a-4eae-8ec7-4629fea3066d",
    "1256": "7735416b-8db7-415f-96ee-0f479ac5f3d1",
    "1257": "4a3c2846-c2d8-43c2-acf2-5b42f070fb7f",
    "1258": "f3914e44-ce4d-4782-a5ba-62effecde915",
    "1259": "9e7843de-05ad-437e-8143-f664f44fa5fb",
    "1260": "8712a2c1-a7c5-4711-a85b-8c85aaf31612",
    "1261": "97c3f645-55b7-418b-a950-a0c5e11c52a6",
    "1262": "5387140a-c2b9-4a3d-8885-bc5e14f42aca",
    "1263": "311a773b-539d-4ecd-b46e-6c797fa0c886",
    "1264": "83e9adda-3116-423c-af0e-a95f8d84445e",
    "1265": "66677b34-a549-4e42-9615-dfb805877f6e",
    "1266": "abcaa063-dccc-4e91-ab5d-1d2d3a42d006",
    "1267": "1b27b5b6-9e3e-4ab1-ac18-a311d993b806",
    "1268": "57168b9c-5828-41d1-9e55-4b32f162c634",
    "1269": "9543bdc6-1c74-4536-b930-f18d5f0db421",
    "1270": "cd1adf60-b6da-4881-8e2e-27d5c273d859",
    "1271": "43591b09-df93-4202-8045-3c9ae992b438",
    "1272": "95cba5e7-a558-4140-8516-ed3632aa84dd",
    "1273": "16eed20c-9951-4f29-ae05-c915f59b5501",
    "1274": "7a64ae88-5a80-49f3-90dc-69ff6e80e0a6",
    "1275": "679a1af7-1895-43cd-8938-11827ba869e6",
    "1276": "d073b4ed-6bfe-471f-8af0-4db89035783d",
    "1277": "e5e6854c-74a2-40ca-936d-cd4513e3b984",
    "1278": "3396953d-4ce4-460a-a419-eee13e5b52e9",
    "1279": "808422a8-7fb2-47a3-ade9-8ab7d80bcf5c",
    "1280": "c83210d5-ba5c-4051-82e4-29b444a547e3",
    "1281": "ded8c955-8fab-4c81-8527-cab902297367",
    "1282": "e35e52aa-0571-4712-a456-7314a7b60605",
    "1283": "68e9bd34-da01-4d15-a6ec-f4e408f36fd4",
    "1284": "96dd1334-d033-4ded-a2d6-3e703aa19110",
    "1285": "03493e7f-d70d-43c7-bd0d-abacadfe7482",
    "1286": "56217501-66fc-48dd-91cb-4c23b28948d6",
    "1287": "ec3faec7-3486-46eb-b230-bcac6c699ea2",
    "1288": "33d68f31-e412-4b3c-a64f-025db862deaf",
    "1289": "646e30fc-f74f-4703-bbd0-efa27a73cac5",
    "1290": "adcc4297-3b3f-4b9b-a76b-9abf6a7cd694",
    "1291": "8cc38a46-333e-422b-995b-d38898d24197",
    "1292": "7b061923-ea12-4082-9ffb-4f40c2794229",
    "1293": "8b71f43d-a089-4c5c-b041-5f0de6df2330",
    "1294": "b6d3dee1-7169-481f-9a64-dd2688b28531",
    "1295": "9f92f594-a60a-4543-96a2-0884dd7fb04a",
    "1296": "29dda794-7d2c-417a-bcf8-3f7caa518595",
    "1297": "a8c7047f-dbc1-4da4-adfc-ed517d176a3c",
    "1298": "f6a0204b-0244-47f0-b65e-1559051976d9",
    "1299": "535d95fa-6b29-4e9c-82af-4ea1d6536546",
    "1300": "c3480b2c-bf25-401e-92ae-4ed361e2b2f7",
    "1301": "56aa6862-0219-4a14-a8ad-0be12cc2390e",
    "1302": "04603ee7-c036-4271-bf39-e680835bc0f3",
    "1303": "b25a3bfb-990c-4c5d-9a5b-cede88662dcb",
    "1304": "cd11c691-579a-43a8-be1c-d0ae27dc9640",
    "1305": "c78ae469-33c1-4ed4-bc2d-8643914392e6",
    "1306": "e80c52b2-3a58-4189-afe8-605b1bc3eb34",
    "1307": "850eedc3-07f5-43cf-b4c7-6987fc577126",
    "1308": "f0590ee2-a0ff-4566-aa08-98676992332f",
    "1309": "0e3a41dd-2128-4c7a-bf6c-ceb49c7465ef",
    "1310": "52d7d650-d59e-4dcd-b7db-8a721e7c1ac0",
    "1311": "325f6b3a-f61c-4a17-a754-8508c27beb97",
    "1312": "a4f3e996-e8ea-4871-a27b-f6c67e6eaec6",
    "1313": "01d50a68-e062-4cb1-88fc-88456eb13711",
    "1314": "bb32d583-11dc-48bc-b230-13982e0121e4",
    "1315": "f3a70bde-9189-414b-9043-131548e822af",
    "1316": "30936d86-b41b-4fa0-b13b-67d00ae6bc0f",
    "1317": "fdf483e4-f21a-430b-9331-1beb28d762ed",
    "1318": "d0dd6b55-1489-4358-af29-57c58a94caad",
    "1319": "45910386-e8c4-4c7c-ba0e-91bb89e48341",
    "1320": "a2663aeb-38cd-45d0-adad-c123d0ee066c",
    "1321": "e7006210-975d-4fef-bbee-e89fc0a3eea5",
    "1322": "ae2962a3-934b-4a15-a854-ada9c2a631b7",
    "1323": "dc14ea1f-0ce2-4e37-a961-039bd4cebc5e",
    "1324": "4d9ef0e8-a0a7-492d-8ca0-b2e11d5d972f",
    "1325": "8b3e4b91-3c94-4498-938f-81b78f86ff78",
    "1326": "517f365d-d975-490e-a8f3-86859f15c011",
    "1327": "86cdecb9-ed4c-4c06-91e1-7f29d55be038",
    "1328": "b244c57c-904f-4fe4-a0e9-f5052db66498",
    "1329": "2afb7e6d-e7c3-4572-aae9-e03d28e381b7",
    "1330": "c508454a-a0b2-48cd-b312-898cee0e9a97",
    "1331": "dee4b9a5-afef-4669-ae5c-9d7a024006e2",
    "1332": "27e7ac4d-0e7f-4852-9523-3295c867a421",
    "1333": "b708c82d-fc3a-4c98-bf71-87f635a393d0",
    "1334": "8fa52e6e-686d-44bc-8e0b-a24254e60e36",
    "1335": "8032d0ee-0158-431c-b529-e836e8f983aa",
    "1336": "f10cdd04-ec68-4e8c-aea5-4125b17a82d0",
    "1337": "baaa3d44-1286-44eb-8f25-bbc93a5f2c7c",
    "1338": "dda3fa2b-82b9-46d2-936a-2eff5c0fb681",
    "1339": "170ad1c9-8833-44e1-bbf3-5ca0fc799fc6",
    "1340": "4281352c-3fb9-413d-bdb2-6b47e034fa2f",
    "1341": "0a651561-ba32-4a70-b662-98b19b6c4c28",
    "1342": "e46db2f7-843a-4e3d-871c-b925b6570bb9",
    "1343": "69405be3-2f9a-4e7b-9c43-a67d9f6a786a",
    "1344": "65e9fb0f-7137-4ecf-bf33-9c846aa32140",
    "1345": "4646c49a-7030-4306-a900-2e5b167bb99b",
    "1346": "5f63e141-a6d3-4533-9234-b03e22730b82",
    "1347": "99862fd2-607c-45de-909b-c4386ca154ab",
    "1348": "bf376f72-c840-4196-bb34-43c5779be2e9",
    "1349": "d31999ca-d2a7-481a-b3b7-695e8d5ff44f",
    "1350": "1a1d28cb-29bf-4b76-a00b-2619ee2fbcc2",
    "1351": "43c1ebd4-80cc-4456-886a-0766226ab2cf",
    "1352": "304f1954-e3bf-4e1b-abe9-8d8214eaa18f",
    "1353": "60e58dfc-d941-4417-a83d-42a6a7dce21f",
    "1354": "eac073a2-81b0-4ad5-ad8a-59833e0598db",
    "1355": "582a3d0c-52e1-47ef-9627-85cec75c2387",
    "1356": "178a2426-082c-443c-94b8-1ccc07336b7d",
    "1357": "1f7b7daa-6380-4164-81a9-425b34f123bf",
    "1358": "1b9dca35-7383-41fe-a689-1724f28d51b2",
    "1359": "10fe8d57-ccbc-4d4a-a2d6-41c7f5de2092",
    "1360": "bef3e04b-db39-44ef-9657-57cd55184d42",
    "1361": "b5202ab0-2328-4ad2-b50b-6cd9e7ea9eb1",
    "1362": "b44e4c0c-5f43-49a7-8e8d-3d8e66c0a03b",
    "1363": "0a0dcc19-d49b-426d-b389-ea2c592d5910",
    "1364": "72dfb44e-bd6a-4546-a734-e6951e597a0a",
    "1365": "78f50b39-b7b0-46aa-9753-b7a47f695691",
    "1366": "52b940d3-7ede-4880-8f40-6edf91ee3258",
    "1367": "fb6b3b58-e059-44e0-9ede-ffe855d60187",
    "1368": "b9ce5f0b-519a-4e28-ae20-1741c452ca2b",
    "1369": "4affd8dc-aa08-491b-aa0b-779d98122089",
    "1370": "e610acba-2526-4bd3-a7e4-a310a59baac5",
    "1371": "976232a5-d107-4c8b-9054-8ca1f9a739cd",
    "1372": "6a9be059-cd09-4d9a-93ee-511059d12fa4",
    "1373": "91360299-8bc5-4522-9b2d-cca200df36e1",
    "1374": "cd0adf15-ea3f-4b6a-885c-23587102acda",
    "1375": "cc698e6b-7fff-4031-b397-8a4172af916c",
    "1376": "edd16f3f-47ca-4fca-bac3-809986d255b0",
    "1377": "7d2fa808-2444-4338-a095-325818892988",
    "1378": "b185a179-bf61-4afd-8673-c0ebd91df53f",
    "1379": "c146506b-8698-4446-ae86-d770f4bae225",
    "1380": "d7faf3f6-d076-41ab-b27e-00f908ea1cec",
    "1381": "4e8daf53-ea3f-4d8a-a802-84984944e09c",
    "1382": "1b32116c-b668-4f2a-9740-e1849cf59dc2",
    "1383": "aeb15aff-8963-4e24-8a7f-6a74781ac553",
    "1384": "4c75eca6-0240-4082-b59e-7054f2a0d904",
    "1385": "bdf3c103-bd89-42ae-b0cb-457551b8b561",
    "1386": "74f7c346-438f-4277-8ac8-6d56ec54f368",
    "1387": "1ad9dde9-ed29-4296-8ecd-79630ee3b22a",
    "1388": "640fbf81-a876-40f7-a531-28e90f5d543b",
    "1389": "645f73a1-34c1-4b9d-a727-b37c9cef292f",
    "1390": "44ee3c76-0f15-4452-97fa-c3fa2fd169fa",
    "1391": "9da2b0f5-3fdd-4f66-b6bb-7c2d3d32c44a",
    "1392": "92006f6f-5970-4c9e-b689-3ba79d0e1545",
    "1393": "5a6dede6-48e8-4efe-ac0f-d57d189d3f74",
    "1394": "490e3f80-4b55-495b-8480-2c3662da74a6",
    "1395": "c8cf6bcd-ea5c-4a02-ab0d-4d1b273744c4",
    "1396": "8556038b-0981-49f8-968e-499a988cb414",
    "1397": "d0b512b0-1697-4359-b3f3-c24a9aa59eba",
    "1398": "e780528c-2fd9-4837-9cc4-446664f5c0db",
    "1399": "70a01181-dfe7-456c-ac70-a2639d13d639",
    "1400": "87924101-7324-4aeb-8df0-2c2319c7f613",
    "1401": "9cde9c3d-838f-4cf4-8fc6-5851e1fa5274",
    "1402": "d6bbb7f2-f36f-4914-944d-fcffd1eb1439",
    "1403": "76145e7a-87a2-474e-99bb-85d53b39b962",
    "1404": "2ee3bcab-9ea7-4cd2-affa-8aa90feba19f",
    "1405": "667da511-1b79-4a2c-826e-93c8f4ce74e5",
    "1406": "ff136aca-cc4b-4008-b511-e082ec0b29b5",
    "1407": "d6acd99a-3462-408f-9c4b-fd37e9d052b5",
    "1408": "c2100a1e-866d-4e95-a8ae-6bc2eb0f61ef",
    "1409": "88df82a0-af1f-4c5b-a1cc-3821ddbb662a",
    "1410": "9b9bcbac-344a-4038-96a5-8bfb1285b381",
    "1411": "b7d90716-159c-4eef-8fdf-82290c1c7149",
    "1412": "003a61e3-b6c9-4e9b-acd5-601e26cdf982",
    "1413": "2c22efc4-b46c-4fb2-910c-eff7f82215e3",
    "1414": "4e965224-f275-4871-a69c-f83c8f7c38a7",
    "1415": "3bdf5df7-8748-4824-b09f-1f49b553763b",
    "1416": "00ff8623-8006-49a9-8f3e-f8659f8b3d6c",
    "1417": "3ef4b744-fcc1-41b1-bfd0-9f95f1fa1b5b",
    "1418": "2b0ca040-29c0-4de5-96f6-6223b7dc5edb",
    "1419": "9481d1ea-64e1-4b47-86af-ab61645ec9fe",
    "1420": "0fe1168c-3f3d-4efb-9466-f0b66a0677d6",
    "1421": "52813a86-daca-4594-b2fd-b5834aae4604",
    "1422": "ef13c306-16f9-4e46-a93b-f19d16c9f2ae",
    "1423": "99b8c9de-fe5e-4236-a5a6-7cab8962e3ff",
    "1424": "3a8fe60b-d7cd-45b9-adc8-8cab6204ab9c",
    "1425": "cea36202-7202-406a-b866-2e890792c922",
    "1426": "db7cbe9c-893d-4017-8b23-07017b70317d",
    "1427": "ba078ed0-71ca-416e-bc27-bdc0da62a2d2",
    "1428": "55e88e5b-70c9-41fd-a907-add4b7ea5ef0",
    "1429": "29be3e31-9807-41ad-bf20-32f4ebbd9ddb",
    "1430": "70d3fed0-4773-4872-a783-54006526dfb2",
    "1431": "5bfd0289-1a6a-4017-bc16-976913603162",
    "1432": "b163b4e6-2002-4d2f-8125-6a2927ca40f9",
    "1433": "375fc39e-0050-4e4f-ad0f-57af0fa7c0fc",
    "1434": "0cdebdbe-d7e7-4d0a-a026-14da0011f30f",
    "1435": "0be1b49d-85de-43ad-afd3-c092545a075b",
    "1436": "75f11390-3080-4f80-8347-d7397951646e",
    "1437": "eba52f2a-3497-417e-b1e5-a128680e5f6e",
    "1438": "de1cf3b0-6a7b-4805-9154-6f0288d99bb0",
    "1439": "5b9317a5-dca0-45aa-877d-dbb17132d70e",
    "1440": "122479dd-fa4f-480d-9cce-fcfabf88dfed",
    "1441": "c3d7b2c3-5f54-4b46-94a9-b43013cb1c79",
    "1442": "0694ff2e-8201-401f-bd4e-7124b63a4771",
    "1443": "12114bbf-c655-4991-bc18-a65ec1e58a86",
    "1444": "b7f43d56-6e05-4402-8d10-63680ad66731",
    "1445": "32c300c9-d3cc-4fb7-91aa-6e30f2166e95",
    "1446": "48441524-9dfd-412a-8c41-fd8228991f36",
    "1447": "bca8d54c-7052-4276-83ab-3e4226dd59ec",
    "1448": "346680d9-6820-4da4-877d-8bf2b2ce61df",
    "1449": "623d8771-71eb-4da5-966b-5c6fe04de02c",
    "1450": "772f1673-d42d-4e91-9d02-ff68d26b97dd",
    "1451": "7272ea5e-f51e-41d9-bdd1-9e8bb3c0da70",
    "1452": "0d8384aa-6115-4f4d-b477-148c9b2a3719",
    "1453": "49204163-8732-4fc6-bb8c-f3cb39919886",
    "1454": "9424fd19-d654-43f6-8c41-435c2ec419b4",
    "1455": "51aafc63-9523-4a24-94c6-e5620debdecd",
    "1456": "12e2afa6-ce10-4592-8c82-3830aaad7bc1",
    "1457": "83325596-a0af-4977-a4aa-172317574550",
    "1458": "c466d4fe-19ab-49c1-9488-47c0f10d83ce",
    "1459": "62673172-472d-4f04-acc5-45df31ebdb15",
    "1460": "012d47ea-15fa-4acd-9832-7d4768bb96b6",
    "1461": "876cfca2-afd4-46fa-9516-6b2b1545d92f",
    "1462": "bc9831a9-1764-40ee-a81b-6852b3544be2",
    "1463": "dfe0cd1a-c535-4761-a3fa-c74d374c1b9d",
    "1464": "b0962f89-9243-45ec-a8ba-26afe107a568",
    "1465": "bfc72594-64c0-4d56-ac33-5ab985b1d90a",
    "1466": "a716c9e6-fac9-4ce6-8d56-357693306cd3",
    "1467": "87317bac-ac57-43e8-9aa4-dd19ea3204d0",
    "1468": "d05f9cb9-2016-4b6d-a878-48b18b67eb18",
    "1469": "ce443491-17fc-4de9-84e0-65688d973a90",
    "1470": "fd1837cf-92d0-47cb-8dcb-3bbd365dfdee",
    "1471": "80c8ee23-ea11-47f9-bfa0-dc57b31d932a",
    "1472": "79d93f52-cb14-434e-b921-71f243344fa9",
    "1473": "74f58b41-f391-4f6b-be2f-c9c511763519",
    "1474": "b0ba1e86-362a-4689-b337-c5b904aa20e1",
    "1475": "0258fb0f-cb05-4504-b2f0-ee2bd02c9a4f",
    "1476": "6cefe000-315d-4f38-a6aa-e47c5bfe9209",
    "1477": "160566b0-89f3-41b5-abd5-f045c6438c5d",
    "1478": "adfa2568-3609-4591-9d1b-7fac44cc8478",
    "1479": "5dcf4520-0c11-49e0-9b56-78cf4f00e379",
    "1480": "d502d9dd-7f01-45d5-aeef-59d8b0c8bfee",
    "1481": "7eb17989-a2de-4327-a055-cf1b6720f0ca",
    "1482": "25029e06-f6b9-459b-a3c4-d272772ed8e9",
    "1483": "e05a1caf-9b85-4ad9-a422-f5c07fd1f9e5",
    "1484": "9b041f64-c53d-4b7c-889a-dfc2ea9eb4ee",
    "1485": "ebd7fed0-6e9d-4e97-a288-d7ae47450eb6",
    "1486": "09b25edc-2924-49f9-ab9e-6879df7f25b3",
    "1487": "3704a645-7ae9-4f25-8b8e-38825c343160",
    "1488": "0c9c61c2-27bd-4387-bdf6-46dd456dd6bf",
    "1489": "64cac216-c7e7-4996-91a2-58edc345b8cd",
    "1490": "6281b9b4-9b82-41a7-ac9d-096a961db572",
    "1491": "a4381ff8-a5bf-4e3c-8edf-f8ed6db3033d",
    "1492": "ff30e4a2-4827-4807-964b-009b30f34db7",
    "1493": "934b5028-23e4-4c30-9485-d41649ac9c12",
    "1494": "30c5fa5a-d002-4ccd-a652-a1dca75ff74c",
    "1495": "73ff6faa-a752-4eae-9d7a-97e5b521a1cf",
    "1496": "07d7e449-a8c3-4cf6-9eae-928536fbbbb4",
    "1497": "2eae5497-ed5c-4ee6-9b8f-36109998c0e4",
    "1498": "f9ed5e3f-125f-42fa-b3b9-3d53860eca46",
    "1499": "07ca4d0c-e64b-4ada-bc58-86010de0bede",
    "1500": "f4dace1a-6445-447b-a38e-0092684b56ce",
    "1501": "6fc90f60-53b8-4db2-9075-a9e99f9a1dd7",
    "1502": "48c45d45-3103-427a-a0c1-bbc6d223aa3b",
    "1503": "67d25a29-5f56-494d-b878-2c8ab8b357a8",
    "1504": "c260478b-2b4d-44b6-87f3-adcaea808cab",
    "1505": "f04d7aaf-f611-405d-b7c6-ab093b156a79",
    "1506": "826da1f2-4c2d-4e3c-bc96-6dc28aed0855",
    "1507": "90f9cf74-ffcc-4c04-8d27-73f9707713dc",
    "1508": "670e8dca-2852-43d4-b02c-0ad382b97aa2",
    "1509": "0c3cab8c-31cf-471d-aa6e-34543f44bfaa",
    "1510": "8e9a703b-1ec6-433f-98a6-503dcd58ee1e",
    "1511": "e0c491ab-7c66-40af-b7fc-7ac4c12c908c",
    "1512": "6eceee6f-4e90-4af4-8f71-ca7886e84030",
    "1513": "7bc0908f-e637-448b-a297-78a74b412962",
    "1514": "a581921c-f99c-4a6a-9555-90c748bd1852",
    "1515": "64650929-6374-498e-8b11-0d9c7bf57a46",
    "1516": "022e0a0d-0ffb-4134-90b5-afb5abb51368",
    "1517": "ea28a737-438f-4066-a05d-542f77088ebf",
    "1518": "a3f2759f-e2a2-4703-a0ee-88be4d734a1b",
    "1519": "a53a2b43-5686-402a-9989-57c985edbe2a",
    "1520": "0fd0bf30-9ce2-4d80-a9bd-5493e3a3792d",
    "1521": "8485cb63-7f1b-48cb-9424-3c2288fa5e9a",
    "1522": "f8d47a35-ecca-47d7-ac54-1efd577ebe0a",
    "1523": "83458372-d6da-4498-9b47-3302365c13cd",
    "1524": "b2000993-b125-43b1-a19a-ae1f69424a92",
    "1525": "93bcbafc-aef1-4352-904d-d1628ca78edc",
    "1526": "6313a993-1214-483f-865c-306f566e8791",
    "1527": "f1b6ca3b-8fb0-4ca7-95ca-eacec22463ec",
    "1528": "d0a20c84-a272-4d1f-af42-7b4f0f28bf0b",
    "1529": "3268c98c-c118-4bb8-a924-78777a56feb7",
    "1530": "7b853e93-7f4e-4fd9-ada7-bcf3436bd8f4",
    "1531": "9752f2c5-59e8-42e1-a5cc-9dec6654a308",
    "1532": "35ed2690-b728-4581-940a-7b2888228a0c",
    "1533": "6cf0340f-7426-4c2c-b2a5-808338c072fb",
    "1534": "cce83b42-cd63-4e26-87c4-f55f8b3cfffe",
    "1535": "81abbdc1-442f-4513-9f42-b699a2d48508",
    "1536": "3ec7799d-be43-46b4-a4e3-871dd7c35c00",
    "1537": "0a466a16-3001-4ce2-8c1d-52d8cfc9f89e",
    "1538": "06cc399d-7aa7-43d9-90e6-0336892468e1",
    "1539": "f2a81503-7285-4474-9e3b-5f984fb89989",
    "1540": "462df384-4515-47d2-bcec-28de352b1e6d",
    "1541": "1f15c6d0-3896-4ae0-a7f5-fdbac3f7156c",
    "1542": "494966ff-3bdb-47f9-a56e-f0a188fdfd10",
    "1543": "2d90076a-0877-4b19-9e9b-1566e265a851",
    "1544": "17f89777-63db-4dc3-b73f-a335e846b2f8",
    "1545": "213ddc51-3fb7-4cf1-b4c7-9e72710ede16",
    "1546": "a119a7b7-4ca9-429a-bdde-a4b651ff239c",
    "1547": "ed59569a-0469-4804-a6e3-b9182647f1b0",
    "1548": "e6b4ddfc-d7ff-480b-881e-cb247ce14a7f",
    "1549": "c16992f5-5420-4379-9c02-83d9c2b0a9a5",
    "1550": "e893a910-f1a0-4c41-b196-118d0a3aaf3a",
    "1551": "a9e6fff5-5ade-4c73-be09-d84788f046e2",
    "1552": "3ea8eef0-5f8c-4bc4-a50f-258bab914e14",
    "1553": "9d675802-d3a6-4d5c-9e47-a1968381d343",
    "1554": "ca991cdb-c8cd-44b1-83cb-7e6d07906830",
    "1555": "8730530e-3d73-47fb-abf5-631c165b718b",
    "1556": "51b08e6f-52c4-441d-97b5-2ce14dc3d6ed",
    "1557": "94415bea-dbce-4fa3-8f55-9a77bf06bbfa",
    "1558": "64e49431-65d0-4844-aad7-16f5373a5b6f",
    "1559": "bf791fa6-c0a4-4d46-bb6c-9b66bb70de02",
    "1560": "d27346b8-863e-4036-8a6f-a1ec09cd83b1",
    "1561": "a930d59a-fc4c-4729-8cf2-f001768b07e6",
    "1562": "5817a6e2-9f7d-4d5f-ba1b-23923c0fa828",
    "1563": "efac2ffb-2bd6-4651-9c2d-8416dc24faa2",
    "1564": "e90333ef-0cf4-4760-bd41-40e0cd549f57",
    "1565": "96abdfc0-dc6e-4c4d-b838-2cc8183b354f",
    "1566": "811a5354-eec3-47fc-a73b-e9e02a8e81c1",
    "1567": "a95026c7-a0b3-4976-8c18-8c894b03dd66",
    "1568": "ff6e6831-ae3e-4198-938d-dd06bfaf2d0a",
    "1569": "f79a0c94-132b-4e46-9ded-32007a731bc1",
    "1570": "53ec1d24-6098-40b9-b446-6ee5c7b93b9e",
    "1571": "20d9ce15-6f0f-4c2f-be3f-e31bc638897e",
    "1572": "b1a01557-eb94-4d86-b0e7-c0705b8f5f50",
    "1573": "30d53375-abf8-4d2a-a3c8-ad42964dedd7",
    "1574": "b7a10726-889f-4342-adb4-88e4adf2e16c",
    "1575": "d76885c9-f8a7-4b58-aa54-33673c69d4e9",
    "1576": "ad81f461-b871-45fe-afcc-99c3033cb59b",
    "1577": "03b02b1d-2087-4eeb-9ee1-a20803a052ac",
    "1578": "960c3ed8-ed0f-4643-a29e-bd49f70db3ef",
    "1579": "f58a1a60-f981-4aae-8bed-895eefe9407c",
    "1580": "36210fb7-7be5-4636-b94d-b6f0a7da67c9",
    "1581": "2b76e265-a87a-47c0-8f7e-b67a9dfdb84e",
    "1582": "fc0e7555-0c13-455d-8071-02d804e33641",
    "1583": "0f068cb6-ab50-46fb-9f83-3825f3eeae52",
    "1584": "45090cd8-bdfa-444a-a835-d94f572f4c42",
    "1585": "475fc14f-fe2e-4f3c-865d-adbcab632a40",
    "1586": "65fb0265-b6e9-4691-909b-6f77154af882",
    "1587": "70533ab2-239c-4bb4-be5d-8cc0b35de0eb",
    "1588": "e0105064-f2c8-41eb-9ff0-44bd2982ec6d",
    "1589": "3e72c89e-cab2-4eae-959d-d987eb1dafc1",
    "1590": "b645fa2e-c0bc-4f37-b9a9-7a73e50dba77",
    "1591": "14beb424-c2b7-4d80-a3b9-23acf2ee8098",
    "1592": "6b799adc-40a3-4691-8c31-eb6458f7079b",
    "1593": "605e8ff5-b4af-4697-b72a-4ebbbc4e5808",
    "1594": "58a52d3c-a4a4-4867-8e45-2b45d7455df4",
    "1595": "afde5ca7-b9ab-44ff-8916-514fb0a92ab5",
    "1596": "9fc06c87-da42-4404-a346-009cac3efbaa",
    "1597": "0804f62c-1de3-4d8a-9be4-504c68cdc8ba",
    "1598": "5caeba55-1f49-4d6c-835d-82564c0d592d",
    "1599": "11138bac-c20b-400a-b0c5-9fb50f5e126b",
    "1600": "75b21139-d085-454e-9520-f096566dcab2",
    "1601": "131fbaf3-291a-4a6a-a6a8-9ac95a24e52b",
    "1602": "efd78160-b3ed-4273-be27-441a61ef0ff1",
    "1603": "f33b1578-ecb8-480e-b8f1-af861e8fd833",
    "1604": "2d9a8de2-3c27-45c6-8b87-19067c4c56f6",
    "1605": "948ca4fa-870b-46d9-988d-0a51f873a66b",
    "1606": "c7c36f8b-1483-4a92-86b7-6f64011957e2",
    "1607": "0f7eb5f4-8dc2-4656-9dae-09fb65b4f484",
    "1608": "237bb047-afe4-4913-9dc0-24225e8c6a9c",
    "1609": "8c187b0d-b89a-45ee-9d60-33a632b1565a",
    "1610": "502bfa29-6219-44a0-a964-1a6499437406",
    "1611": "b41a1d63-12bc-41c4-bb76-47e1459729e3",
    "1612": "fdeea48a-5aba-4280-8cf4-3ace5a23104c",
    "1613": "328dc9f8-28a8-4122-bdac-7f1ea7bae140",
    "1614": "8a748e8c-1844-441a-a6b3-a0f2896a08da",
    "1615": "c815259a-7025-438e-8efd-927f2ec64a44",
    "1616": "4cac8dac-89ef-40f6-85c8-5e3b871b4258",
    "1617": "2f360987-df18-4f55-9454-218f9b1cf572",
    "1618": "fc0b83a1-2d77-43fc-960e-9877824717aa",
    "1619": "408b36e6-6751-4152-9d42-4af18b608c22",
    "1620": "db193875-4679-47bf-aa48-96a7da10144d",
    "1621": "94cfcfd3-0a42-4f24-b229-e8f8cb2df5d1",
    "1622": "3914af51-a990-4705-a94f-f64e7cdba7eb",
    "1623": "b4491a54-38c5-4d0a-a69c-e7d069aab755",
    "1624": "d50f26ae-5c5f-4023-a8f5-ef8d2b7231e7",
    "1625": "e3e76d5d-6f04-4c45-93b0-8ae7bd006913",
    "1626": "930cecea-9f5e-4318-9e40-4a3080100a32",
    "1627": "78bf8f36-1d5e-4fc5-8506-be52cce2c7d5",
    "1628": "cce97d6b-90f4-456e-abd6-d12b0eb51c43",
    "1629": "f06c2f6b-7cf5-4020-984e-cac3f967ef43",
    "1630": "6b299399-3f1c-43ed-94a4-0219748bcbb3",
    "1631": "9f51ee5c-050d-45b7-a67a-1188f4db6b37",
    "1632": "d3e6d906-9338-4549-bda0-1b873a67c81e",
    "1633": "d073f444-bba7-4c2a-8214-4fedbf14769a",
    "1634": "aa203903-a9c6-42b6-85cb-946fafac731f",
    "1635": "ca15815c-fff8-4727-8d57-7fbf59051c72",
    "1636": "17d5a767-778f-43dc-9115-218872bc8009",
    "1637": "79bcbb75-8da7-412e-9d3c-2869f8f2eb0f",
    "1638": "f986bcda-bd69-462b-a7c3-86310d596457",
    "1639": "9211e11c-6f6d-4ac5-a8ec-b65a85ef7630",
    "1640": "81d61971-9772-4414-9aaf-f83652790fba",
    "1641": "8902385e-f1e7-40ff-8a6e-dc9eb3f0b69b",
    "1642": "184ffbc5-7873-47a8-a5fc-8fa6a512aa49",
    "1643": "3a857907-971f-4e9d-ad02-81b39fe5cf4a",
    "1644": "828fcc10-31a3-4680-8aa2-8dbf549ec980",
    "1645": "c92110d4-7ab7-4572-ab40-16e8bde6aff8",
    "1646": "aa9f6865-ca6c-4a5a-8d13-8eb7259ecf8e",
    "1647": "34afea9f-1679-4075-9fa7-edbb4520b391",
    "1648": "c293e173-8cac-43d0-ba8b-de0d1fba4b28",
    "1649": "b35a1ddb-29e9-49e0-9a9c-637853cbf99e",
    "1650": "8c86361f-2a7a-43b6-bc7e-d1386c077fa5",
    "1651": "209af7d9-e466-49e5-b329-ce0a86072e7a",
    "1652": "918eead2-8321-4c94-bec8-ba5c6bf437b5",
    "1653": "7c4a21b3-48fc-4ce1-841b-ffda78888239",
    "1654": "abf6e61e-4a44-471d-b673-6d74f8a5ae8b",
    "1655": "1d544952-cead-47ac-9571-478933ef11d7",
    "1656": "4aae690c-71e4-489b-b535-0e17a63bb0b4",
    "1657": "305668b6-0a64-4284-85fa-fc27528b70aa",
    "1658": "f863301e-1620-4f66-96be-8713d519cd4a",
    "1659": "7d5cc1f0-7afd-4e07-a2ec-52ac02ed37b4",
    "1660": "0e918b09-d569-4c84-925a-f437f0a502d1",
    "1661": "3eed96a9-58d1-4102-adf4-5c3c5b48cad5",
    "1662": "4a74c7dc-2270-4f27-9754-7de79424f85b",
    "1663": "e4d1e20a-e027-4557-9cae-e79bfbe619b3",
    "1664": "65946c2c-8e55-4201-bd39-de7fe6e20ac5",
    "1665": "eab57479-1108-49fa-827e-dc997e06c375",
    "1666": "968a1596-be39-4c6d-a745-fe39e1efd35b",
    "1667": "64e021c3-49e1-46fe-be9f-6ac2131d1ced",
    "1668": "95559ec0-e4ab-42da-97f7-e27d179b508b",
    "1669": "acfc5ca4-e6ee-4a55-bb4a-e4b7c866e1a6",
    "1670": "861ba7f7-7f69-4a15-8425-385260a67f42",
    "1671": "334fc1ac-3501-4b13-a392-79fb59be7d10",
    "1672": "2f7b231a-7c0b-4820-9a1d-df93a94b3a82",
    "1673": "47b87c96-eb4d-4e46-9a39-15fd53d4f6d9",
    "1674": "1677a248-d1fc-4092-b21a-8c28f675e739",
    "1675": "9479a668-617d-4b8f-ba86-898cd93573fd",
    "1676": "2787091d-2050-48f7-a8ca-f99399b0500e",
    "1677": "d03f9c5d-bb0d-40cb-8572-7020df4e8f23",
    "1678": "e9c95088-ffe5-45b7-9561-8460bb63b205",
    "1679": "69738e83-98b0-4176-a2ba-720d3d422aa0",
    "1680": "16df55d3-bd13-4ee0-b501-3289531816c1",
    "1681": "69d2ceeb-d7d7-49b3-91c8-ad637def58ed",
    "1682": "752dc7f9-a18f-4785-8b26-4d1922ccadef",
    "1683": "20b03b94-bd6d-47ff-b1cf-9b560a6a4a13",
    "1684": "06b8e345-77b1-42d0-b51f-3f6eee6582f8",
    "1685": "ad24ead1-71d2-448b-9854-a44a95276cad",
    "1686": "e76e2772-8ce0-4988-9fd4-e9e3a1766aa1",
    "1687": "16266f40-5c21-48a0-87d4-6fb350b17602",
    "1688": "74380f77-5909-4a14-baed-1449b39a0e6f",
    "1689": "d58b670f-5aa3-4ff8-a663-cc830aee0a7d",
    "1690": "03acdec1-ee6f-4874-aad0-9c3d06927fc2",
    "1691": "d7cca918-0785-48d0-a680-5a2f608ffd5d",
    "1692": "bd799182-0bda-455b-b25b-69252a1fef47",
    "1693": "434a30c9-e0bf-4964-ba33-49daa3b8ed53",
    "1694": "4017c3fa-eec5-4d88-87ce-0d3e00cbb95a",
    "1695": "cfc8b620-f565-47c7-89e6-06cc9b4b00ff",
    "1696": "e001b1ae-91e0-407c-88f2-db1d1ad5f2db",
    "1697": "fe994f43-f431-4af2-a7c6-70193715919e",
    "1698": "549bf70c-92cf-4986-bf59-ce054e3105c0",
    "1699": "e38fc2ac-eea2-4632-9979-7d411f591b0f",
    "1700": "c764aec3-d1c9-46b7-a70b-c7cba2a6b03c",
    "1701": "8c05e5cd-402a-4028-8f53-cd6a05b2fdbc",
    "1702": "a3ae19fa-ce6b-43cc-8b98-dd897fe6b6c3",
    "1703": "9dd9bce8-796f-4899-b0f5-c9c354109b98",
    "1704": "be0bf890-6554-4755-b990-3c8947cbe019",
    "1705": "6344ea75-dae1-4a23-8a4a-58a7fc45c97d",
    "1706": "96bf1d2f-2333-40ee-8f8a-2d990ec4790d",
    "1707": "67717e23-5e74-4c95-b6e8-482aec2b8fd2",
    "1708": "f309d93f-d569-46ba-97af-dc13a80d4996",
    "1709": "d600704e-02b3-4ff8-b9cc-34ef1297d3a3",
    "1710": "ad26ab7d-b416-4026-9c2e-c0165a9c9e73",
    "1711": "26255603-dd4a-4677-aff7-8054d9632b10",
    "1712": "61534afe-d22b-486e-8a1f-cecaa6b21502",
    "1713": "d870fa79-bfe9-4042-925e-252cccf4151c",
    "1714": "ea38883a-3186-4662-b727-7e761499a20a",
    "1715": "b7cc47f2-c189-4bc5-853a-f251d662f1e1",
    "1716": "66543ef3-6148-46af-b2e0-806b8bc0ec66",
    "1717": "cf83dc63-7db0-4c83-8b7e-da9dfe1ebd02",
    "1718": "449fb6d2-2d29-4da0-804b-e560bbab2e4e",
    "1719": "e9dd6877-e8f6-4560-9190-344df4b39a7a",
    "1720": "b81fa288-a23f-4e3b-836a-a484bfd31449",
    "1721": "f7a83fdd-5f86-43fe-9f23-ba5666647558",
    "1722": "365f68d9-c9aa-45fe-a2c8-ea9a4ab3b12f",
    "1723": "b917943b-c54b-465a-a0a9-223bf990ade5",
    "1724": "cee0e2df-10bf-405e-a579-f8d9ee5acd5c",
    "1725": "7411d984-17e4-440c-bac1-22065f5fbd8e",
    "1726": "13a86b10-76f3-4ee6-9427-71efafaa410e",
    "1727": "dd4da415-df1f-4d89-a1fb-56cdee77abfc",
    "1728": "5b72d939-c1d2-47ce-9238-7fc166e425dc",
    "1729": "4aa58f06-4547-4989-9bf4-00821863ee8e",
    "1730": "c04de782-cd3b-45ff-8a6f-6fedd8a46901",
    "1731": "fd431cfc-00d5-4cfd-b865-04527d6519ec",
    "1732": "45667d03-d3c3-46f9-b454-c8a740edd91c",
    "1733": "643cd32b-ba68-4b21-accc-7cbda17871ff",
    "1734": "b7c7295f-af8b-46b5-990f-4a03608cc921",
    "1735": "58a12723-0384-44a7-b9d8-5d629d83aa63",
    "1736": "ab85c6b7-f32f-43bd-90cb-576117b00cb8",
    "1737": "6aee18ac-5fb3-4a64-b14c-08d70de2e6b1",
    "1738": "546c7caa-8015-44a1-81aa-5d7355621736",
    "1739": "ca29caa1-c78c-4e9b-840a-46a70ef78a0e",
    "1740": "7d3fbede-8fe6-41a6-ad2e-16302e0ac47b",
    "1741": "b1f0e075-c46c-4048-827a-c97dc339aa56",
    "1742": "bedcad44-cfdd-4b8c-ad58-567c5876cfcf",
    "1743": "f118a5fc-8c68-4df8-bbbb-a15ffec75ec8",
    "1744": "921e85f9-10de-42db-b764-1648d9afeb93",
    "1745": "e748637b-dd82-48a1-8cec-100d220645d6",
    "1746": "53e95d14-85c4-40bc-a049-52d1433cd7d8",
    "1747": "1982d0de-8336-4160-b873-a0607bb80c34",
    "1748": "67ae858b-2041-4489-a318-440a5a0cd579",
    "1749": "f02d1b3b-cd22-4c73-9089-cc0bed4efa5c",
    "1750": "99d6e8dc-e6c6-4fb9-b15a-3636768a928b",
    "1751": "3de59a58-da42-4e9c-923a-eb7a3b37047e",
    "1752": "aba5b898-4250-497d-87fb-3fe5794291e9",
    "1753": "79bbdd2b-f626-425e-b0ae-a8c6713732cd",
    "1754": "4555b743-c946-4638-8a72-7ac8bff86a9c",
    "1755": "38d1b734-ce20-4d72-a6a8-b31aa4f3d6dd",
    "1756": "1b7a22a7-31f4-49e6-81ad-ee0ef3d7813a",
    "1757": "d0a66252-7db5-4edd-a43f-e1a0bbceefe6",
    "1758": "ac96e398-a298-455c-ba20-be1bc5a9502d",
    "1759": "f6f243bc-b3ee-489a-8707-5c7d3ee15b6d",
    "1760": "855e89d3-9038-45a7-ad3d-29916d708083",
    "1761": "ebb3f8fa-30fb-4212-b847-3e0abd0f0002",
    "1762": "6c6b3840-1b2e-41e1-9c77-4b2ed3584c01",
    "1763": "f7aa9887-2449-4b2c-8435-2148d8d38924",
    "1764": "d78f2a88-102d-4eeb-8001-00a1a241ccbe",
    "1765": "122c0fd2-4316-40ce-8d09-3a2ab5db24f7",
    "1766": "9fbc7916-d3fa-4ce9-9e82-dbea1cc54774",
    "1767": "593fd6a9-8ffe-4f64-9fc2-3dc1a24be862",
    "1768": "c75e52bf-b16b-41c1-acf9-e046d37310d8",
    "1769": "5289064f-51e6-42e8-9a73-913b7a17e266",
    "1770": "28cc6428-89ed-430d-a9e2-32255b42b68b",
    "1771": "40d29df5-01ef-43d6-a0d5-bf40ab94da7e",
    "1772": "ea9101bf-693d-4411-bd2f-ad597f6a5c64",
    "1773": "1634a774-ba3e-4e0b-8e44-b99bce8a0b54",
    "1774": "bcce2f51-d01c-4788-a149-f74f744c2b2d",
    "1775": "9b1da1d9-9951-4a77-9cd6-9c2e85d712b9",
    "1776": "2fe11891-1124-4769-93e9-46259a13a7f5",
    "1777": "72b15d7e-802c-4288-89fa-2b634fd812cc",
    "1778": "0d4cd233-fa73-4602-b346-32730d856a78",
    "1779": "c368928a-0ac0-41ad-b0ef-44c8c0aa9c86",
    "1780": "e70fefea-1623-41fc-bc78-d3fbb6684982",
    "1781": "24be663b-df6f-42db-9fea-46083383878c",
    "1782": "f6b9c6d4-495e-4c28-8c1e-a4554b699653",
    "1783": "99d1c18b-4c37-485d-953b-98a71e711c88",
    "1784": "52004186-2694-4984-aaa8-300a13b4f5ef",
    "1785": "5e9ee03e-2004-4ec3-b950-7d6a86cc1dc2",
    "1786": "a2fed63e-1d32-4765-a020-f908c6e688cd",
    "1787": "1d4cbb64-9abe-4c0c-863c-2584f5f95784",
    "1788": "a56671fc-1c72-4dc6-980a-4973eb4576fb",
    "1789": "ad9466a9-ca63-4611-9d08-fc335619389d",
    "1790": "d3b59c0d-2400-44a4-b77f-ac35960e4f03",
    "1791": "a5b53c09-4bac-417b-a6c8-5fa2ca277019",
    "1792": "f5d0a32b-75ff-4a25-93af-0bd7e9c643c7",
    "1793": "b66c935d-7653-4f93-9237-2092a174ca88",
    "1794": "33e564e1-07e4-402d-9ca3-18eab613e52c",
    "1795": "0bafcd3b-546b-4b2a-93f9-a53742ed058a",
    "1796": "e5b9af0f-2720-46c9-9a63-034d706c1242",
    "1797": "45993973-a6b0-430a-a07e-a78e14407fbd",
    "1798": "69b830b9-1488-42e0-9358-7fea9c9ccd9a",
    "1799": "9dffe15e-ea48-4f72-a03e-74d95c21a3b3",
    "1800": "75883e2f-2ce7-41b2-ab8a-4d10ecf0f42e",
    "1801": "887dae62-0186-447f-8228-6bcdafd38404",
    "1802": "1c0a03e9-c8df-4230-aa55-1571c4821297",
    "1803": "b0ca734e-5398-485a-8fa2-78933fddabf6",
    "1804": "9686d847-c8db-4d28-8013-3bd97ffcad0d",
    "1805": "c19007e1-aefd-4911-acd3-2a6cba4c053b",
    "1806": "9529e13b-e3dd-40dd-99e0-f115f9ef1d0f",
    "1807": "b19353c3-79cd-4612-a701-6d3679c995bf",
    "1808": "34de2b65-003e-48ee-ab1e-d5ad1f0fb934",
    "1809": "a2ddd760-10f4-479d-85ee-4e93cba357b5",
    "1810": "8b608d65-a133-4fd8-ae45-a2545830a095",
    "1811": "7ba1de95-df3a-4545-842e-deea5d7c6ae2",
    "1812": "7c64129a-af0f-49c3-b7d3-b0c7b6502de4",
    "1813": "52e27131-4f60-4cfb-b020-7829158560df",
    "1814": "e1c07ca9-3eda-4570-bd04-608bcecba718",
    "1815": "283cb362-9c23-4188-b4ac-dffa4c0ba428",
    "1816": "81a1af48-3d32-4404-84ff-097006248f07",
    "1817": "783f34f1-adb9-4305-b2ae-8801d94dbf5d",
    "1818": "1ed69d04-eef8-42e3-a7e2-d95faf586a49",
    "1819": "663230a2-03c3-42ee-8141-4692b5094166",
    "1820": "57601f1b-a1ea-4e8d-a893-48490772ca93",
    "1821": "e73ae326-fc42-4ecc-8ca8-cb80fb8b0f0a",
    "1822": "1976d65e-95af-45ad-823d-ce42d1fcf93c",
    "1823": "dcb5e588-20ba-4255-8da8-45457dcf7b6d",
    "1824": "8b9ad5a3-53a7-4237-9f3b-36cc6dfb34e0",
    "1825": "9b448c85-a144-44d5-8084-e197122bac21",
    "1826": "72931b00-66e7-4acf-8f2c-d576e4c6135e",
    "1827": "0392572d-6333-4dcc-aef9-340bb8b8dbe6",
    "1828": "dfab6734-86f1-4427-a39f-029efd8e96ca",
    "1829": "07071c3e-726b-4463-bb89-1fcb6a0eeb20",
    "1830": "2aeff5a4-6f33-48f3-a66d-ed63d9922c29",
    "1831": "866f5def-44a1-4bb6-a321-89be7f2ef666",
    "1832": "b954778c-a994-4139-a966-31301d11c85c",
    "1833": "a13c62b1-4d33-40fd-97b1-bd245fd8a766",
    "1834": "d505507c-5dc1-4d48-9948-20be1e09e1ed",
    "1835": "3c032e07-6adc-478a-bee1-30166db38837",
    "1836": "b0d0429b-4c36-4315-8776-beab97c79676",
    "1837": "11cd21d5-4548-4176-be03-9666bd754e40",
    "1838": "2fb54615-6340-4fa2-b01f-4e7d6db90a4e",
    "1839": "373132cc-01de-4cb7-905c-47e75a19abc6",
    "1840": "337d72ec-3e68-4470-902a-5f5482cce560",
    "1841": "67cd9720-26e9-46c5-b740-bc0379791573",
    "1842": "c47c1291-7c3d-492d-a0a8-6dc4b12b6ac8",
    "1843": "5b1b4940-5c0c-4c4c-b4f4-c3eff136f782",
    "1844": "75d6e78f-974b-474b-b264-1c4377729274",
    "1845": "0cb44a87-63a2-4969-b974-aac8341b38ac",
    "1846": "005434fc-ba9e-44b2-b983-0e7221dc8aff",
    "1847": "afa787b9-0e11-446a-8e1e-2f2c560198de",
    "1848": "39a7cc92-e7d6-4866-bda3-a4a14d87313a",
    "1849": "39ae09da-98ba-47fc-9275-81d863864664",
    "1850": "21a4e2bd-b000-48db-a7e5-93765a073ecd",
    "1851": "bd386e0b-f9da-4a6a-a424-aeae4d1128e9",
    "1852": "e510d86f-972f-4389-9cb5-d873bf4da114",
    "1853": "12b9a5af-faae-4f5e-acc8-469b2a3e4e2f",
    "1854": "207bef24-090a-4581-aaf2-0d127517ea42",
    "1855": "de9e434f-6ebb-47e1-9025-3d2230e8d9fa",
    "1856": "7bc9d850-a3a0-43fb-8adc-dc1053b9dec2",
    "1857": "1decfcdc-9abf-45f8-9643-8199513d3a16",
    "1858": "47d5c899-44cd-428d-ba48-8a904613f68b",
    "1859": "ec38b531-345c-4a58-8e14-5e3be7a6b77f",
    "1860": "cd398c27-ff59-4580-8cbe-22ebeb19301c",
    "1861": "ce09592c-d60a-466f-9b7c-cec8d997b18c",
    "1862": "8c73e6d0-3ecc-4940-803d-2e85248bbe0c",
    "1863": "3b97d534-770a-44ef-955f-4f405c468160",
    "1864": "2326a055-0dfd-42fe-be43-a51401df72ee",
    "1865": "1f1842f3-3a48-4beb-a3de-29aad3539336",
    "1866": "9dafc5cc-1794-4044-ada4-670f86cd3b76",
    "1867": "4657d2a0-891e-4f76-bbff-38305309b83a",
    "1868": "b6ba6b51-3906-4989-b834-9b54a835972f",
    "1869": "cae80536-fdb2-439e-bcf2-e1bef94e2e88",
    "1870": "a3bb83d9-a3ae-41be-ad02-7190018af9cc",
    "1871": "004c228b-d4e9-4708-8cb4-967784d19665",
    "1872": "2744cd23-c4a8-4fb9-bec3-9738e87ee8a9",
    "1873": "68770e70-bbbd-4ec9-be62-82f46c4889e4",
    "1874": "3fdac329-e320-4e03-a9fe-765c08adc7f9",
    "1875": "e593eee8-450e-4f8e-92b3-47cbda1b952f",
    "1876": "27f23580-431e-44d4-9e37-b915188da35b",
    "1877": "a1203b6c-0d28-4054-bf37-23659d678e57",
    "1878": "d9737e16-0413-48c1-bf51-443eb5c95986",
    "1879": "edcfac02-5faf-4a10-84db-e6c1b3d60109",
    "1880": "52150296-c8e4-44dd-a279-25a3f933a444",
    "1881": "0b422832-c274-45c7-9e92-9c876137a25c",
    "1882": "34ef3aab-f1bf-44b4-8dc9-3789abbbb842",
    "1883": "079d2a81-ce04-4224-baf9-850bb057abeb",
    "1884": "938df466-c801-4083-846c-64f3572a3abb",
    "1885": "7d1d6e04-26c0-4f3a-aa24-9d2f38d9f83b",
    "1886": "c7eb8bad-c9e0-493a-ab1c-5a12de09b948",
    "1887": "af4e0801-be9a-4149-a801-e5478eb3cce5",
    "1888": "0fe6bf10-9bec-4d5d-b660-ab8c52a5ba1a",
    "1889": "db08d748-0776-44c6-a92d-957a49fded34",
    "1890": "81fff7cb-6b42-48e3-a222-ffa2015e1f48",
    "1891": "51161478-543e-409e-ba79-397afcb438bb",
    "1892": "6fc2213f-4c38-42f6-9b33-625b7a722131",
    "1893": "8410c507-a47a-43ff-a78d-dee04ce14d61",
    "1894": "8c80f776-719d-4eb9-aeef-fdf04ede49ad",
    "1895": "1c0e0a3f-4461-4757-ad7a-3cccce8f0fcb",
    "1896": "e462022c-9776-4c4e-aee7-fe3b1d209a6a",
    "1897": "48d52fb0-52ac-4e37-a57b-93602bec6899",
    "1898": "011ced69-bf16-4a82-8c90-c861f1192f7c",
    "1899": "c7564e93-a375-448a-b3d2-e9bcf4534029",
    "1900": "f544e7cb-4937-486f-8dcf-cfafbaad01d2",
    "1901": "20939ccc-7d96-4390-974c-6461b8011597",
    "1902": "a95716dd-18a7-4cba-bf6d-09b27b037a9e",
    "1903": "dd010d6e-0074-4143-9ac2-60a7b3fc790f",
    "1904": "44ad491c-69ee-4d25-aa0e-7de7a60db5c5",
    "1905": "4889a3d7-9a02-4be4-8e65-8ebb334575e3",
    "1906": "4198f6a6-9bea-4d7f-a10d-3b23ac7bb691",
    "1907": "65e34e64-fbb6-4bad-b570-6aff93760a8b",
    "1908": "893b264c-142e-4762-a8cd-f27c62b7ac65",
    "1909": "cf70ebcd-483b-4e57-a2b0-8abed729e4a0",
    "1910": "146d11a8-56fb-4f27-a76f-f11227e121ee",
    "1911": "fad796da-df47-44d1-abd7-fa174777438a",
    "1912": "6f997ca5-99d6-4587-beed-cf230b18d649",
    "1913": "3231f47d-487e-4926-8ee3-0ebc28e885ff",
    "1914": "1ed81aff-cdb7-4bdc-83bc-c423349054b4",
    "1915": "ed0a7cc7-a8a4-4ab1-9bd0-14c479bb2f9c",
    "1916": "00f907be-84ac-4545-a5df-e021c76cdd6b",
    "1917": "b79075cd-d499-4bb4-be75-ae38b991f462",
    "1918": "4594c3f3-2e22-4c72-b917-d26b85f0e1ea",
    "1919": "a8ec46ae-a1c4-4809-b329-83713f5f8300",
    "1920": "31e1bc6a-e50a-44b2-86e2-ac9d1fbd7336",
    "1921": "1bd72f02-5744-4a3b-b2ba-89f96683bf1f",
    "1922": "c0282a24-b731-4794-970e-67fccc87e92c",
    "1923": "c2f9973e-d8ff-495c-a55b-0dfdd0f309b7",
    "1924": "ee5ad023-61e5-4d41-ae9b-c190dd4340f0",
    "1925": "f2306483-9a69-41b4-b601-490ef21f4afb",
    "1926": "2faabd8d-9ed9-4b65-9a46-0a86c1eeff30",
    "1927": "31c65cba-7629-450c-80b9-8c9f2281944b",
    "1928": "c0f8b28c-64b0-496c-a4cf-44b4a458ba7f",
    "1929": "822ebfe3-44de-4da7-87b3-2a7fe417180f",
    "1930": "b7015390-9c6c-424c-813b-df876c018a7f",
    "1931": "34363a6e-faaa-4414-9b7e-834422ad511e",
    "1932": "0697d2e9-b146-473f-a84d-05194b35916f",
    "1933": "3721f15d-52f1-422b-a91f-3fe1cea6d1e1",
    "1934": "c546ac0a-7487-468a-a279-38053e5b0796",
    "1935": "13eed0fc-f57b-4f26-8af3-f85d11dc42ff",
    "1936": "4d2f0553-2734-4ef4-a95c-a4b1f35161f5",
    "1937": "3c417f6f-eb08-4974-9999-4387431c43c7",
    "1938": "1b226a28-679e-47e8-a030-a7596b527043",
    "1939": "31ae8a4e-891e-4276-b058-6b605ef4c466",
    "1940": "18874481-0682-46b5-bfc7-762daafae5d7",
    "1941": "509fe9a7-5329-4a47-be51-f24185466d8c",
    "1942": "ad164188-7054-426a-a8f9-b7db9dd75f3b",
    "1943": "7c6d2a83-1aba-41b5-b3d1-710f4bcc3f8f",
    "1944": "9352ec68-d3bb-4ebe-bf5d-29a00c0b8cb6",
    "1945": "38fa16ef-efab-41de-8658-eac514846aba",
    "1946": "a4438705-28de-4523-b49d-73cb317e3c27",
    "1947": "d7293baf-0b08-4ab5-8a6e-33271d827d94",
    "1948": "095cd7b7-7fb4-4cb6-a13c-8d1c139ec00b",
    "1949": "c3a83b49-ae3c-407c-b6f0-02f381d51dd7",
    "1950": "e54fd59f-c47a-4c06-954e-449ba6a8fa87",
    "1951": "6edf2b88-1c97-4188-a520-10f7805247ae",
    "1952": "6d13d760-c1b4-4cfe-87dd-ee494dce176d",
    "1953": "a17cf482-82f5-4daf-9813-b6138cb91d77",
    "1954": "b21bd58c-543f-4546-b2e3-cf09d451bfa7",
    "1955": "8d9988e2-c786-40a4-acb9-bba95dad0074",
    "1956": "e1de6c90-7832-46e7-9282-790e168f33ef",
    "1957": "6128c407-83bc-4eba-a31d-7fb48b91f590",
    "1958": "cd5cc49f-66d5-4792-b3b1-7e5a858dc0c6",
    "1959": "9683dd3b-1e4d-4d9e-9b73-e5844e0839fb",
    "1960": "4056cbb2-a7f6-4383-bd9d-959d0a08b9e3",
    "1961": "027f1d5e-6b09-4e32-9b8a-6bb2d36ba1fa",
    "1962": "d37275fc-e118-4471-9fc5-5da47bdde3ec",
    "1963": "aec1f2ab-04d7-41fc-89ed-55ed873051a5",
    "1964": "8f374392-1f69-4d28-ba0e-2dd38debc9ba",
    "1965": "43f39aed-ebe2-4d6e-85af-37db17c07e53",
    "1966": "630d6784-ff06-4d5d-b3d5-31b9d4e2af76",
    "1967": "fdb7cdd6-0cff-4f99-8ed8-554a196b9e77",
    "1968": "fbc1a539-4701-4b65-89ed-88a87e25d70c",
    "1969": "a4f68a99-dfe4-4b17-9308-42f2ac6a8fad",
    "1970": "0d3af138-837a-434e-b569-d9122e19ca68",
    "1971": "71dc77bb-46eb-49b7-9e12-7e99b6bb829c",
    "1972": "7139ee32-fde2-4721-bc13-8d720a98c8bc",
    "1973": "df284a30-ca90-4f2a-b5fe-9050fae8825f",
    "1974": "2953aaf3-1ed3-4b59-8d79-d78e76b683f7",
    "1975": "162077b9-5faa-423c-ab36-40a06dfa8353",
    "1976": "94c6a2de-748f-4aa1-b70d-1354fa197c99",
    "1977": "21281fcf-1fbd-4951-99c1-34bdabb1483d",
    "1978": "1a40523d-86c9-4296-acad-0aa4bf5578ca",
    "1979": "38c7ed0f-9e0c-4c11-ade6-340f1e28d253",
    "1980": "6601fae5-78b6-48c7-a9f8-ccf073bdf9ed",
    "1981": "6a9dc1e0-6c4a-448b-976a-1468f42b2f4a",
    "1982": "3100fd0b-22e6-42a3-b893-21f69bb864d7",
    "1983": "396d8339-6312-40fc-a659-8bcc4bd2b278",
    "1984": "a53ea3a0-724a-4dbc-a5da-01fe6c6d1682",
    "1985": "c4b53a72-0d60-4d2f-b7ac-537885d8c399",
    "1986": "ff869b1b-8249-43d1-b8c5-60662db06f42",
    "1987": "4b70f757-2969-42d5-ae56-365c7eb818e8",
    "1988": "1fddd65e-2d7f-4848-8bd9-72684b1be406",
    "1989": "5c2691fa-83df-4663-9f86-5e1a7b3854ac",
    "1990": "1a91d18f-f7dc-438c-9a5d-7b4f1b7ec1ee",
    "1991": "3fc35148-d3b8-47a3-8c56-c4f2c37a2787",
    "1992": "805dcaf2-a35e-4cca-a070-4c52bd7dd79d",
    "1993": "fbdf8c72-9160-4163-b93c-d6d8b998b36d",
    "1994": "1e3fa52a-08c0-4f70-b795-116cdf2e8ae0",
    "1995": "7f09e33d-f8f0-4739-950c-e53f60cca350",
    "1996": "c293ca01-d99b-4261-bb81-27ec7633459c",
    "1997": "bd62f1b4-6b98-4395-9916-3031e0e9b2ef",
    "1998": "b29d8e8a-2f00-4050-a11b-02b808e3afcd",
    "1999": "6d368db2-36c0-4e0c-8fa9-ee343a81d483",
    "2000": "ec2d32d5-b273-4d58-ae9d-8d7e2674fcf5",
    "2001": "c364eeec-a5cb-4ba2-bd09-66e9bc5a5d86",
    "2002": "18aa03bf-4d4d-4a05-973b-4d1dc492f7b4",
    "2003": "5f12d820-59c0-4893-a81c-c16b3938fd57",
    "2004": "1e4d20a8-f446-4866-9092-8fd36ffae0d2",
    "2005": "f3676edf-18a2-47a9-8074-9527d37c9ca8",
    "2006": "0990d930-f4f1-4d2b-92b2-1db6cc7a9296",
    "2007": "1382e440-cf80-4c35-b0f5-4ac544cbaa7a",
    "2008": "de30aa0f-2183-49b7-aa75-c2d794995850",
    "2009": "46c5ffb1-6f7e-433f-8773-de9b0804a35b",
    "2010": "964ab70d-5f5d-4b00-8673-118092288636",
    "2011": "987d7fbf-3f5c-48de-98e9-dd83969d5a2e",
    "2012": "6886eb6f-ca7a-4439-962d-0f4957798465",
    "2013": "9745069d-f15a-40ae-9c17-4077265b584c",
    "2014": "613a6d8f-bffa-4325-a886-705a73ddfa36",
    "2015": "133f84ca-fca0-4140-bf62-5f6190bef747",
    "2016": "f2d3921c-2f60-4837-87e9-89b83ee146a2",
    "2017": "c0dc97cb-2168-4045-aab0-a0af8fad07d2",
    "2018": "a65adcd4-1d00-4b06-bbad-6f1eaeb9165e",
    "2019": "bfb5dc03-ec3b-4fe9-af10-7cd36700e800",
    "2020": "4cec0bce-c24b-4e8e-9773-23becb5d4b5c",
    "2021": "818b12da-d8f6-476f-97c5-48dbe9314624",
    "2022": "8630d6a2-477c-4300-b474-44c1a9f94f19",
    "2023": "84e175a4-29b7-4144-8d9a-6d99e481b1a7",
    "2024": "a6ce1603-1b25-48e1-9414-0272f169d4fd",
    "2025": "dbf89e21-7153-453e-bfca-1a1c31e66ca3",
    "2026": "cbc2a874-cd33-45c1-82be-d7de55c2803f",
    "2027": "ff0eab32-3e9c-4d02-ad55-b725d0a35f23",
    "2028": "cec99f3b-49c5-432f-adbb-bcc7436aad76",
    "2029": "893402ab-34c8-44a9-be83-dd7fef43b203",
    "2030": "e95bd55c-1eab-4db4-8e76-ae856bd2e930",
    "2031": "a0773d69-39b3-40d6-acff-3abda5e34af4",
    "2032": "c5ed835b-3b9d-4153-8b5a-8c72fe8e1f8c",
    "2033": "d961d1fd-f81a-4e0e-aaf8-675c0a45824c",
    "2034": "dc6656b0-e967-4f42-94f8-6b8425a5ea81",
    "2035": "fefa0bf9-159e-4703-83c6-5ca0b976e927",
    "2036": "197defc0-2933-4242-bd9c-c7ad8ba3a2e0",
    "2037": "f8d3b461-3a61-4df4-a809-91913fa73420",
    "2038": "c86ced95-c758-4049-90b4-5c747da207f2",
    "2039": "d2cdb021-842c-4e88-a8e1-cd62dc6a37b3",
    "2040": "feaf3f1c-573f-4361-8486-ad16cc4c3981",
    "2041": "3cb1473e-cdac-43a9-ae4b-5d36266283be",
    "2042": "a6b77907-8ed6-4875-b448-ac1a26c6c7ee",
    "2043": "3f2dd784-387e-40ca-90d7-4c507fe87133",
    "2044": "fa861223-0d42-4f8c-b2d1-acb2936505fa",
    "2045": "b4028192-c9fc-476f-86fa-2b391af8c126",
    "2046": "dfd03787-3be7-4ae2-afea-d3130cb9daca",
    "2047": "e612a5b4-898b-461b-bd96-35ad249d4297",
    "2048": "4a4a3e2d-5475-40e1-bc88-ffa24a6e1c58",
    "2049": "0381877e-79fe-4d31-825a-4b240faa8487",
    "2050": "0dd7a46b-3371-4180-ae2b-63276ee7df79",
    "2051": "b12cfea5-8c34-44c2-93e9-035ec5b4f365",
    "2052": "2032c4f0-02c0-4559-86c4-8611ab9c000a",
    "2053": "0e8410b2-8f22-469c-9312-0d86dad09655",
    "2054": "1756c98c-d386-4844-ac74-40e851470a08",
    "2055": "ebecb98b-251b-4c4a-8f50-a90512ef7eba",
    "2056": "45a69f26-749d-4cc7-b2c5-21b9dc4ca7dd",
    "2057": "6271430a-f1b4-4ebf-8b35-d58989ae00ab",
    "2058": "05497136-90e8-4b66-bf26-01c51be274bc",
    "2059": "e0911fc9-7c43-409a-bfd3-4d82bfc4079c",
    "2060": "73e31a8a-f641-40f7-95cc-201216b939af",
    "2061": "af90a81a-80e2-4e51-be0b-3ffe953f8f82",
    "2062": "5fe74e7d-19b2-442a-b84e-658034c477f6",
    "2063": "76897b6d-d893-4c05-80a4-9145e3cdd124",
    "2064": "ea2e53d9-b567-4461-9312-90c8a8169ba4",
    "2065": "081640f2-883f-4b6a-bc4b-3160b0e965c6",
    "2066": "73fa0688-68e8-4401-bded-2269f42c4848",
    "2067": "dbe4fc4e-e29d-423f-9238-300127c3c42c",
    "2068": "ff79642a-cd79-4045-a1eb-49dd8ab918d7",
    "2069": "3b4b07be-3a53-4f04-a8d5-23a142b4b4f5",
    "2070": "9b69d10c-6caf-4e6d-8637-bd316ad295bc",
    "2071": "ddb18635-e4a1-4881-becc-ca6dd974b448",
    "2072": "dc457ae0-3454-42d0-91f9-24974eebc05b",
    "2073": "a16cd6da-168a-486d-835a-cf7a687b389b",
    "2074": "dc73fd71-c771-41af-9efa-ba72bbc3de41",
    "2075": "3aa3530f-abc5-43ed-8091-c11af616da84",
    "2076": "2cfd213c-6f9d-4d5c-8853-d1d5be0d7a05",
    "2077": "cbbcfb2f-0bef-44bc-92da-6dc24fbaa175",
    "2078": "5ee0c275-d537-4bbc-9ff9-d6454fb11162",
    "2079": "7de318ef-18aa-4f98-8e91-5b49d1fb022a",
    "2080": "93ee69d6-8bb3-4772-ab36-9288451fb229",
    "2081": "9b5f55ca-8047-4a99-9c2d-92b336d69381",
    "2082": "65a8358a-1ace-4905-889a-f1f9de4ac396",
    "2083": "1c55f747-7f60-4003-abdd-13d615c4f88f",
    "2084": "fefac1ea-0e10-43d4-bea9-7e9119303002",
    "2085": "b49b81dc-8655-42a7-af87-7d423fd42f4e",
    "2086": "e24c3505-9e47-4987-9dbc-0bac2a4b8ccd",
    "2087": "eb53f681-75a3-4bfd-8567-2725d8116bd7",
    "2088": "6e900f16-92ed-4de1-8389-949ccea2d202",
    "2089": "5b7399ec-396a-4b33-8f66-5bc2a3b85390",
    "2090": "a95772c6-36e2-46ba-aa8c-433208f6fb98",
    "2091": "73eb26c3-1ecd-4600-a897-9ae00af67914",
    "2092": "1474dc07-fcd6-4b15-a2c2-b6983c8c04a3",
    "2093": "91961fc3-17b9-4556-adf6-196795a9408c",
    "2094": "a6c739d7-b2c0-4b2c-be7a-1e6a57c5e002",
    "2095": "a2e4abb1-093f-483f-aeb6-e723c8bddf6f",
    "2096": "db60ab03-bef8-4ea5-8e48-c2ccdafd4996",
    "2097": "9fb87bc9-a31d-4e93-b550-1d3174ac3e19",
    "2098": "84fa02b2-a29a-4522-970f-85d7c72ad637",
    "2099": "d0d3f67f-b636-4648-9fc6-58916d1ea3cf",
    "2100": "960d5a0c-dae7-4d21-a169-2abcca803916",
    "2101": "2d678c79-037f-4891-9f09-aed4dd4acc9d",
    "2102": "d901df4b-a318-47ef-9a5b-b22d5280b25c",
    "2103": "5f0b5230-882d-42ed-bbf8-cf8a571632dd",
    "2104": "67c3effb-99d1-4475-9808-c9ebb95ecf0d",
    "2105": "1002b87f-a42f-4404-a67f-bc4df7a40e24",
    "2106": "6f9e429d-fe0c-44cb-98c0-80bd49891047",
    "2107": "b37b98b7-b1a5-49de-9434-dd583782b07f",
    "2108": "2c48d520-0f27-4acc-a135-7227e1ec6399",
    "2109": "015150e9-d4ca-47f2-9bf2-74e57ea76fdd",
    "2110": "3c921acb-0aa7-493f-b2d9-958b8998eddb",
    "2111": "55aa8b0f-a794-4810-b8e4-62cda41f2fde",
    "2112": "3075ca56-6f0b-482b-b3d3-c02057505ee7",
    "2113": "9ba0e3c4-a543-4a37-85ae-98a6b86c6ff0",
    "2114": "ece6bafb-ccea-43e2-be9d-eac4e6b3d610",
    "2115": "1c6bf113-eafc-4784-a26d-9c709feb490d",
    "2116": "abd82bf9-4e16-4b34-8b9a-a32a2d69a071",
    "2117": "1393ccba-377a-447a-80e0-f7aca70cc3fb",
    "2118": "395bb624-304e-4ca7-ae74-3650629575a9",
    "2119": "a144f165-9571-4b62-8ded-9dd61cf2c0fc",
    "2120": "a43f2cc6-a2c2-4318-9bf9-e96ae2d13aba",
    "2121": "a6128cd7-af11-4c02-9bae-c61bb69860a4",
    "2122": "b503cb74-f7f9-41d4-9f9e-d4333844aefe",
    "2123": "a5888462-05ea-4a09-8a65-500cd8808f6c",
    "2124": "6bd0f4ff-8060-4955-bace-8c43ea260cf5",
    "2125": "8c21eb86-4a9e-404f-aa96-0f23898a528c",
    "2126": "d18916c2-34b0-48c6-b619-364b497f477f",
    "2127": "42d5eb75-a28b-401d-b0b8-9975917b3f02",
    "2128": "276966bf-68e1-43a3-b20a-f647688d0e2f",
    "2129": "dcfaf8bd-2400-4593-a368-79b86d66f72e",
    "2130": "8eb52a03-0cc0-478f-ba6b-a8d7bf7f85d7",
    "2131": "508aa5ce-a4d6-4e94-9127-21ccdfe0a39a",
    "2132": "9d4d04a1-3d1a-4004-b1e0-116fef32d2ab",
    "2133": "da5d80b8-044e-47be-84b2-7209bf36c0ef",
    "2134": "e690ac49-843f-49a1-a897-c050767d2ec4",
    "2135": "48566044-b611-43cb-b2d7-0fa0827f303c",
    "2136": "6ab8e659-764a-43fb-8ff6-c8feea1bdd51",
    "2137": "e739d89b-44d9-45c2-937a-0182acf0a277",
    "2138": "1e69f7b0-1635-4214-ae53-6338277fc0a4",
    "2139": "91e0677e-51e8-424a-95dc-cfbf06776a68",
    "2140": "9ff432a0-8297-4a11-8320-785bd562c86c",
    "2141": "e231fc7f-ea1b-49d2-9243-71fc4175c73e",
    "2142": "4f106c70-aee6-4136-ae48-cd23812412de",
    "2143": "024d52e9-1d5d-4c07-a420-9224c9b6024f",
    "2144": "b8f5eb0c-d00a-4662-810c-2607a64f849f",
    "2145": "9b74908f-b82d-4b5b-9fd6-345b9bcd5419",
    "2146": "df4fb12c-ae41-42ee-9d8d-e95c163eb1f5",
    "2147": "14013017-9e40-4ee9-82cc-d7574ac7bec8",
    "2148": "fded4a7d-ecae-4a1c-aac0-d72191637ba5",
    "2149": "a53a4b4c-6ed0-4e03-a10c-26a2e6f59f04",
    "2150": "ae6906dc-8a8e-48fc-81b4-c90a07d09dd6",
    "2151": "6fecade6-d66a-41a5-8237-5923e6c7812f",
    "2152": "18f65b54-d636-47b0-b557-9e7792536471",
    "2153": "4cbac85d-e81e-4072-b651-503d53fe7b40",
    "2154": "fc0d2e5e-8260-4e36-a4b4-ff039c4f6620",
    "2155": "4eab2b7c-42bf-4ca1-b8f7-6b551cffe9b3",
    "2156": "5787e52a-045e-403d-a0a4-acea37e79394",
    "2157": "5895ba00-43ad-4801-a02c-b1101165b9c2",
    "2158": "5e7e12e5-4065-47fd-af69-a77b285da203",
    "2159": "a69cb371-74b6-47aa-ae7c-d3199e09edc0",
    "2160": "507f6718-cd9d-4d72-8898-ddc266f24fed",
    "2161": "5b296f76-6d23-4233-b4c5-1f3d8eccc033",
    "2162": "713dd6f9-7e78-46c3-b5eb-1bfcb0134cde",
    "2163": "e6127005-5c60-4efb-84ef-108cf140acf4",
    "2164": "eb0856c4-6d37-4948-8a6a-93aaaa79f94a",
    "2165": "314caaa3-1dc9-401c-a55e-a32ef478baf5",
    "2166": "6c54db75-1b1b-4c20-9618-13a37b647418",
    "2167": "8de19a04-0c4d-445a-8b9e-33ce2ac88290",
    "2168": "7abf7cac-211e-44ae-8c8d-04903eb483a7",
    "2169": "7d2c6b09-9f3e-46c1-91da-89508481077b",
    "2170": "775ae04d-9bbc-4b02-947f-34cc7b24accb",
    "2171": "5121142e-2b04-4811-9074-f15197af8a14",
    "2172": "c347cf7b-d478-449a-97c3-c3dc7aac8a78",
    "2173": "35da3bd2-2150-46b0-9108-d15b0b4822e9",
    "2174": "d2f19577-f7dd-4928-8a95-199a7df6dd04",
    "2175": "1d8147ad-bd60-44e6-827a-d2a19c91d4b1",
    "2176": "5526af5e-f310-48a4-8d4a-41b3e77f3356",
    "2177": "2737452b-c7f1-4272-87f1-55335f358a51",
    "2178": "acefcbbe-a3d6-465f-9cec-c3b36716b25c",
    "2179": "38300fcb-f733-42f5-ac60-949250fb04d9",
    "2180": "b843f045-8cd5-441c-adfb-c8ddd018f35e",
    "2181": "a84aad3f-690f-44f9-be92-5be1f721302e",
    "2182": "ddc50465-aca4-4329-89fa-29d686e0cd21",
    "2183": "c1f49fd0-f49e-4d6a-bd8a-0ea91d2e1f2b",
    "2184": "0a79940d-96ae-41f2-93f9-b57e069d8d57",
    "2185": "fe20e7d3-8ce6-4f82-a3d4-3a0f382c5b76",
    "2186": "8667d0d6-e301-4995-8824-5cffbff0778c",
    "2187": "29d7870c-cd94-4b8a-8027-7f74a86670e7",
    "2188": "af9784a6-3c0c-4a3f-90d4-c5a56f075904",
    "2189": "9b948b93-f8ab-4c01-ab7e-2301545d1ef9",
    "2190": "8c612399-5d17-4600-8a40-481258e5953b",
    "2191": "4a046eef-a3a6-4d5a-9be0-098714f3c141",
    "2192": "7a609a76-537e-4481-8d73-8b2aa072bf4d",
    "2193": "b00ae1f3-90bb-48cb-93ee-9ed199969eaf",
    "2194": "f59b7d55-31aa-4002-8fb3-aab9115c7264",
    "2195": "a4b175dd-99be-4dd4-be9b-ede95a0c920c",
    "2196": "32cd4775-1d82-4c9e-b7b5-5dbc1ca57cbe",
    "2197": "b4f07b71-ecf0-4288-ba93-f070c2002c53",
    "2198": "f203346e-2084-45eb-9fe0-b5c2cec822cb",
    "2199": "1141c7d7-196e-478a-9ce6-90c3b16bf602",
    "2200": "6e794023-c980-44d2-b201-a82fef0ba0a2",
    "2201": "1e12d7f0-35d3-422a-91ea-745324c367fd",
    "2202": "944270aa-03f2-45c2-8358-44560a2f5c7b",
    "2203": "d3e39ced-caff-4d8d-8824-39f3213e02fe",
    "2204": "0ceae0cf-3af4-4228-9995-4b5c73d3665a",
    "2205": "f7b89719-1915-4967-99af-8ae5ad1ae08e",
    "2206": "4272730e-2f38-491b-9a16-14e6b4965c58",
    "2207": "08c914b4-0b05-46d2-9927-84cc86cbb5db",
    "2208": "ad1c3bac-bce3-4c21-be84-e8f560ede01a",
    "2209": "d7e46108-a2f3-4575-9577-9614434a7090",
    "2210": "681d3a39-112d-4f6c-8570-99cfa55f42cd",
    "2211": "0a977552-8684-4ba8-9c23-1c9693bbfb2e",
    "2212": "fd1a044a-4f02-482e-81ce-28eecf7eba20",
    "2213": "1b172810-f48b-4805-a717-22fb9f64e8f5",
    "2214": "3510c973-2d5d-445e-96de-53495f314a9e",
    "2215": "8ed1c1a9-4adf-44f2-b3c3-5eeff13e4362",
    "2216": "1b26dd36-81e5-423a-9b58-7e83a70cf7c9",
    "2217": "9f122194-fbaa-4672-9d34-69cc1b97f62f",
    "2218": "2b40fae4-c4db-4188-ad52-20d31789e668",
    "2219": "5ff0022d-e046-4504-85ef-3ff18fc9d3a7",
    "2220": "f35a409d-7221-4f8b-9d60-00ef6f70dcaa",
    "2221": "42433806-d857-4d41-b3aa-3bf6714f91ef",
    "2222": "584cc539-90d9-40f4-b1e3-fa8b4f6f7b16",
    "2223": "9ba7c563-ce64-41e7-8437-8651cddaaf88",
    "2224": "8d25fb5b-e94f-4247-8688-534cccdc007a",
    "2225": "6a23e2f7-7e9b-41f3-9d77-ce2deab1d2e6",
    "2226": "5dcd565b-6b6c-4a20-9b72-7fa935ce7414",
    "2227": "933d37e0-6e61-4652-b372-783a8e00d47c",
    "2228": "c999ba44-eed6-4042-9468-d31cff6c96f5",
    "2229": "7e970019-3ff0-4544-af2e-b7db3f34c219",
    "2230": "ecaf4c58-65cc-4b0c-aa80-b829628a767b",
    "2231": "012de6d8-646d-4965-bd47-d24fb5e835eb",
    "2232": "ffd35228-c17c-4333-a0f8-b102ade6ed99",
    "2233": "230247f2-86a7-4d67-9911-0fea552a2a02",
    "2234": "41c62840-5a18-45e5-8383-65d33a272bb1",
    "2235": "bb5a28ea-1892-48e5-a412-f4811fecdcb7",
    "2236": "2ae25fce-ec68-4213-bea7-39f3daaab1c1",
    "2237": "cc2fbda5-54df-4899-ae0a-92fa2d6648ce",
    "2238": "c781be41-2c17-4578-82b6-300c52f175ef",
    "2239": "fe16dec0-a262-4b1b-b9fb-50b241b6ea24",
    "2240": "364a6666-7943-4b50-a7ea-66a45fe75130",
    "2241": "782cb8b9-3cf1-40fa-9ac6-6229aa5789d6",
    "2242": "7b3ad1a2-0a9c-4074-9c3e-7c84ea5174f2",
    "2243": "83c21332-565f-474a-a991-762e94363b28",
    "2244": "b62c09e0-dfbc-4149-83d6-c0fe40b43788",
    "2245": "619717bd-45ca-42b0-9eb3-99b2a4e624bf",
    "2246": "559fb927-45c6-4eeb-a5fe-3b2a54a758c9",
    "2247": "70315011-3d35-4e0c-b51a-81a113ee0be5",
    "2248": "5f153807-d49d-4c77-937f-e978f2225d7b",
    "2249": "ca522484-0e50-4c49-997d-eeabec6b96c1",
    "2250": "b3fdef05-2ba9-442e-9ff6-1c016d1d5bad",
    "2251": "34f3568a-d348-4fc7-bda0-5d06b7f427fe",
    "2252": "713152b3-f0c1-46b2-aad6-f933737f5c1d",
    "2253": "6488f20f-32d2-4d4a-909b-c9c63db01d9f",
    "2254": "6cf1a8ce-ace2-49fb-839b-30615f2eb2aa",
    "2255": "72436fc7-1b32-4e6c-b931-a4a57e9e762a",
    "2256": "668b4d31-c38e-49c8-aab0-6aa515a91a14",
    "2257": "2a054579-6805-4bf4-804e-09e945056a65",
    "2258": "5e1e2331-9ceb-4fe4-9c3a-65a5eba3377f",
    "2259": "1bbebbaa-0226-4333-8919-426cdba487bd",
    "2260": "0b526bba-9cbb-40c4-a7b1-7676f65becb0",
    "2261": "5ab06956-a943-4a1e-9736-27574ebd1c51",
    "2262": "65168b8a-45de-4116-9458-69f8302d6334",
    "2263": "59167fec-c69c-4ecf-afe7-943046994209",
    "2264": "051938f5-4447-48a8-be9a-6b76e6678b3c",
    "2265": "154054f0-b2fe-42a1-b541-1d4fae874f9b",
    "2266": "fa84d80f-429d-48d9-8125-4d1ddfe401e8",
    "2267": "3d01884c-c256-4655-8dab-38c6d6b09c16",
    "2268": "b28ad95c-4007-4310-925a-ee863a22f141",
    "2269": "9b8cd445-b838-41cb-9c8a-4f919d464b5e",
    "2270": "cdc5e56a-a0d5-497a-9393-b3629a1755fe",
    "2271": "4599fe2f-4023-43cf-9c5a-d2dd05fba68e",
    "2272": "f73819fb-4635-4b86-9220-38392d638068",
    "2273": "aa4e58bb-19c5-4736-a860-cd4c3524dfc7",
    "2274": "813d9598-f5ee-48c8-822c-030cbc8362ac",
    "2275": "deb8fea2-23e7-49a2-868c-147d33ab3bc5",
    "2276": "7ee4a0ed-5cb4-4c0a-b081-22119818a9e3",
    "2277": "51091b7c-a176-4a79-9e01-df41f8761dc8",
    "2278": "cd7e857b-8d4b-4549-b53a-8d947d80741c",
    "2279": "de71c748-e1a5-4796-86c0-f8abded1723c",
    "2280": "5d2ed061-f256-44e6-83b1-75da7a14587b",
    "2281": "0a25e95b-85d3-489f-84d7-6275aa8b629a",
    "2282": "f78fa64d-8565-4a1f-abf9-76667ac5318e",
    "2283": "15b8e7fd-9e19-43bd-9f8a-1b342503a7f5",
    "2284": "bb21f7d8-83ce-45b8-a36c-de3d4b705e27",
    "2285": "b12a16f3-b086-4948-9c11-cf0f746d8f4d",
    "2286": "a906a99a-320d-487e-afeb-f4b060816bc1",
    "2287": "7bf6eacd-1981-47e4-978d-674dc74b409c",
    "2288": "cbcb806f-8d33-42bd-9b8b-fb6d2354d555",
    "2289": "de1ed898-3611-4185-a3f8-b4202efeb1d7",
    "2290": "a73c889c-476c-42bd-aefb-60280cac2219",
    "2291": "0aabd98b-8beb-403f-9f0d-1b5638d13b7c",
    "2292": "e675df14-8340-425a-b79e-c96503deace0",
    "2293": "c65a990a-58e0-45d5-8628-5a7beb7719f9",
    "2294": "7fe7a1d5-33d7-4949-af58-2e46b1801eb3",
    "2295": "2127ceaa-13bc-4c96-9180-fe9cdd1de6d1",
    "2296": "88341e02-7aef-4bf6-9f3a-b437e8f0a1f5",
    "2297": "85b47148-d67c-436b-9d2a-4b2a16b50893",
    "2298": "4798bc3b-9733-4047-a548-63b3a742c2ae",
    "2299": "59b4220d-7dda-484a-84f3-b60b3e9b4be9",
    "2300": "9108c475-3fc1-4f18-a15d-ce67382e58b9",
    "2301": "5e4ba37f-682d-453f-93ba-af3d622d060b",
    "2302": "d7c6bacd-e92d-4758-9ec8-7f4aeb536b0c",
    "2303": "eaa4a6fb-5e62-40d1-92b7-84202b29799c",
    "2304": "75f1a818-89a3-4096-9f83-9607ece62393",
    "2305": "1c43ad49-d206-438c-bd95-f1014b3e76a3",
    "2306": "4f126fa8-2ab2-47a6-898a-51ca8db88f54",
    "2307": "8d10302e-f792-44d6-836b-e4c2cc2368f2",
    "2308": "f16a5313-ecd4-441f-8f6d-a30059705c5a",
    "2309": "9260df3d-adcb-430f-ba01-bf64680f7866",
    "2310": "8b00e318-cc2f-4a15-92e1-c3997fbfef49",
    "2311": "660fe200-735d-4ce2-83e7-bf1b89e97baa",
    "2312": "48d8af20-2afb-47fa-8e9e-5cbb12b65471",
    "2313": "81dcf4a1-b375-4405-b109-b9e82b4dfe37",
    "2314": "268918d7-791f-4c8c-9cc1-161f688c3f56",
    "2315": "e93bd087-435f-4b81-8b8a-c2022dab1209",
    "2316": "4e3e86d4-3a01-410b-bb0f-574c5616d31e",
    "2317": "1d622a88-49cb-4ce3-912d-76a3d94e8d64",
    "2318": "96915a85-9a77-44ba-afc9-31b62bac967b",
    "2319": "9c2767f3-5da5-4761-884f-be424129fd7c",
    "2320": "0e5d89da-de6e-4cce-b06c-0fba95ef250f",
    "2321": "3b631482-bb5b-4a2b-8983-c8517607c803",
    "2322": "f6823dd9-bc45-407f-850e-3ee392d2a560",
    "2323": "f3bc2246-f294-4bc6-b0e6-2e83e657857d",
    "2324": "6106b982-dfb8-4c16-b691-52628f1174b1",
    "2325": "56536445-59aa-42ae-b5e5-b7031a2bf630",
    "2326": "2533c338-47e2-4c19-9b33-852a154e5fcd",
    "2327": "c9f8de47-d4d8-483d-8f2b-d703b4b9a604",
    "2328": "79396c80-6197-4493-9929-63ed66d62226",
    "2329": "7d9d40cf-65ba-4eed-b635-0e76cc0a8f3e",
    "2330": "99981710-b34a-4a82-9ea9-285833ad6227",
    "2331": "86283261-f6d1-4283-b9a1-eca0f820d1c7",
    "2332": "debc30d8-a49b-457a-89c0-539e74a164ca",
    "2333": "7a9ee06b-d5c1-4358-bb1e-a8b1598a703a",
    "2334": "f4e99cdd-ba2b-4baf-bcaa-8ba84f2db2c7",
    "2335": "e5477696-6602-4f43-b5b8-8bc127db9b48",
    "2336": "28d081eb-1ae2-45d2-bae6-057e8c53b29c",
    "2337": "d068d094-e812-4ff7-b99d-757b28d147e6",
    "2338": "1dcb94d2-fdc3-4329-8f81-66817302d135",
    "2339": "2ddbc502-b40e-4ff5-bba3-015af81ee4e3",
    "2340": "238e3822-acf6-4024-80fa-2180aa57f864",
    "2341": "bcd961c3-1a48-46da-bf34-fa40a69ba8be",
    "2342": "657ccdd4-76a4-43e6-ae7c-fcb210d32b3d",
    "2343": "d898baa0-0c4f-40fe-bc44-ce92e51d06f9",
    "2344": "347eee03-4b2b-410f-bb1f-e9be89fad4ed",
    "2345": "8913d580-7ff8-4b6b-8db5-1987ee2e10e9",
    "2346": "9d88e981-9005-4e30-bc72-c94fd94984a7",
    "2347": "5cda8357-1446-4fbf-9697-cfbecd93f954",
    "2348": "28a66236-f16c-4cff-89d2-81632cbc1de3",
    "2349": "ef06c42a-801e-4177-8727-3f87a7a7a089",
    "2350": "a161feb9-2485-49af-a19d-8f47f450fa92",
    "2351": "6e2aa97f-b2b3-443b-a952-32eaf92f6472",
    "2352": "ad3a87ac-5190-40f5-8404-922059578aec",
    "2353": "8cc188d4-f44a-4bae-a8d2-9ba2ccce125c",
    "2354": "79470aba-1f37-415e-9cb6-018386fd10f5",
    "2355": "246995a4-dd00-4195-bfbc-057f037517db",
    "2356": "7270943e-ed1b-42a7-b5ec-083b78048190",
    "2357": "4f96330e-2393-414c-87ee-a9466dddae8e",
    "2358": "17eedc4d-e098-475c-a98d-299d757d9e9a",
    "2359": "71cf0448-24b9-489e-8dea-6b6d488965a7",
    "2360": "1667b180-7a6e-47a2-b25e-1eab3fa0da5a",
    "2361": "8879f5a2-d2b3-403e-ad64-1844cd339b57",
    "2362": "c4cd7d67-fbf4-4f8f-a7c6-a08e4c442da7",
    "2363": "031d6e50-8af3-4b49-9235-3b683cad3d9b",
    "2364": "c16935c1-1c47-4dc4-a3cb-c8401be7a0c5",
    "2365": "d20ee7ee-8908-4dc2-b4b4-1ea4e1a04860",
    "2366": "bcce585e-9348-4558-9cdf-828ab1bc6f2c",
    "2367": "0b389abf-685d-43f3-8c83-a2fd9ebb6ff0",
    "2368": "b94ce016-78ab-47ef-957f-f4e2430c1b84",
    "2369": "f1cbdee3-d093-4b01-b70a-35fc956e2af7",
    "2370": "99df30d9-d919-4693-84ba-8f7374b66071",
    "2371": "4a1b85fc-72cf-4eb6-aeae-1a5dd51e02d1",
    "2372": "a2d4ffb8-aa87-4bdf-bcd0-29dcf407e254",
    "2373": "ef053b2e-9ed8-47a8-b54e-61823ecb590e",
    "2374": "f2a11016-c583-4c9e-8f19-13a5f15afa8b",
    "2375": "a5b2cf4a-cab1-432c-83be-5163b5dd91f6",
    "2376": "8775e8ef-7e29-43dd-8eff-f3735572ec01",
    "2377": "73fca30f-d6f5-4d3d-9c80-410f3d0ce68d",
    "2378": "13dab9bb-d44a-4f14-956e-fb413c5ba31f",
    "2379": "ff3a2829-4588-4b48-a14b-c9cfc4b2113b",
    "2380": "4a6cd160-6490-4279-9219-8ea9da3f1c45",
    "2381": "db0e7134-3292-476b-9753-6ccc45425894",
    "2382": "af661ee0-5497-44f1-9b4c-738f66152780",
    "2383": "b7efd676-b9ad-497c-a8ac-f86f23cef509",
    "2384": "57800fda-64c5-43b3-bd9a-830818a00869",
    "2385": "8828fa89-3fc6-41b7-a94a-8cad6d054e1d",
    "2386": "55dcf105-5baf-4e55-aa01-f9caeeb4c7d7",
    "2387": "4a997fd9-3708-4bbf-8f3a-74e778bde715",
    "2388": "a66b18e0-41e1-44d9-b28d-c77bf80cbecf",
    "2389": "58411942-2384-4cb1-ba86-2cf330602658",
    "2390": "fafa7895-f58b-4608-ac20-d2df8eab003f",
    "2391": "03fb560e-7170-48f5-84e1-570904c6cd0b",
    "2392": "7c34fe77-d1fd-4ad0-ba92-440824dde989",
    "2393": "b3d52baa-562c-43ae-bebd-cd19548c96f9",
    "2394": "20a8af08-f6d4-4438-9b7e-f7239ce64234",
    "2395": "160c9b98-d74a-43ae-8805-e254877b1f3b",
    "2396": "a26bbecc-9714-473d-8556-850d863ad029",
    "2397": "b318d110-d339-44a6-837d-00721a52770c",
    "2398": "c9d3af3c-1352-4d38-b02a-d57284426ed9",
    "2399": "0f949c83-a7f9-418d-a6c7-fc5e3c2a1846",
    "2400": "52268de5-e6ae-4d96-9a2a-ce2e51912e99",
    "2401": "3f001ceb-f7d6-4bc4-bbff-b7e2ccd2d680",
    "2402": "b8a4f21b-2a79-4590-b9d5-bb9a7d648cd0",
    "2403": "08065646-c891-4e90-97de-95ed04125d34",
    "2404": "9ce44950-e1f6-4b4e-92c6-3d9931a11597",
    "2405": "edc09426-9e77-4187-b7e1-b235752f4f81",
    "2406": "4b6d46c8-3ae1-442f-a12f-1068b7d1594b",
    "2407": "cc8f19d6-6b68-4253-b63b-321edae13e09",
    "2408": "8499e5ff-30a2-46dd-80ab-13a9d298895c",
    "2409": "0616ccc8-a28d-4d93-9ddc-7ea433482134",
    "2410": "76d3e895-1f3a-49a5-bed5-f7dbce61967e",
    "2411": "39cc4d32-a447-4d33-90bc-b9022a4adb07",
    "2412": "08587bb7-dfc7-4a9d-a7cf-920144b0c7e8",
    "2413": "9894d47b-fc46-4b60-b061-8c5c04af2018",
    "2414": "29fe4594-1f8e-41f1-9b5e-9b75c1d420e2",
    "2415": "58c58a3d-c296-4aed-9420-1663ac374e45",
    "2416": "2cb1ee4a-b8fd-4871-8be6-4f1360d99835",
    "2417": "4008afd8-5369-4272-923e-38e03962b4e9",
    "2418": "ef506504-2e34-45a9-be5a-d7e9ceebadd4",
    "2419": "215f042c-b8e2-4d35-afee-3b006c084f87",
    "2420": "b52e364a-a927-4744-a067-f7c27100d338",
    "2421": "2ae1d68b-bfe7-4bd7-aaad-093ab38aeef7",
    "2422": "22a1afc1-625a-483d-9e17-eafb3598bf25",
    "2423": "fca26f2a-4ac1-46c3-a1e4-2384d814aa67",
    "2424": "1bbcf8de-e8da-41ff-9649-75d5c620f019",
    "2425": "3411cb40-773a-4107-ac8a-5efd2740a4ca",
    "2426": "d494deca-7c96-40d3-8dfa-832f18792456",
    "2427": "78138795-a2ee-4391-aec6-f12bca37ba72",
    "2428": "96eb1fba-09f5-4577-b485-2ac2fef2ad98",
    "2429": "b74a65fe-3117-4e09-b5fd-8325f032e85b",
    "2430": "3b617783-69e5-4eaf-94cb-3901b0ad1060",
    "2431": "87372cc0-7278-4bb3-85d2-d12cdc25b5a5",
    "2432": "39bb8228-2d68-428a-ad57-2e8604670232",
    "2433": "c1298afa-b9f0-4ce2-9744-43ca49f4d68b",
    "2434": "a337b8d6-87d1-4554-af65-48d8d8240bc9",
    "2435": "ffe92081-5d7a-4221-8dd9-b1307f121d3c",
    "2436": "21958f14-fdb0-4520-a12e-e6c5904d43c8",
    "2437": "0a4bfc3f-cfe0-4f14-9aad-8642c963c2bd",
    "2438": "bbf0e638-f850-4d29-8133-8b386ca4fdaf",
    "2439": "ead8549c-8d21-4b89-9aa1-5ef169e5d54f",
    "2440": "ee08be1a-edbd-447d-9d18-b6fa28501957",
    "2441": "f12c07e9-332b-45c1-a6a6-0740a7e85007",
    "2442": "7f138024-5ad2-4963-ad49-9d63f79c6f8a",
    "2443": "366c95a3-108a-4d4b-a859-79f72dad2893",
    "2444": "3b51fbee-b542-46a7-985d-eb1fb3343072",
    "2445": "50e0a8c7-a2c3-4a6d-8031-732f07943b1e",
    "2446": "c86cf5f8-6aef-44d6-955c-4a02b037eda5",
    "2447": "a29914f7-5705-4dd1-bf89-d00830889822",
    "2448": "0e803206-4e14-4eab-bcd4-cbde29b8a0ba",
    "2449": "88e4cd98-9e6a-4f63-9613-839fc4d37632",
    "2450": "4bc2c728-82d4-4370-9175-a373516ed610",
    "2451": "ca4eb777-553a-4e1e-8dae-602ed9b22cad",
    "2452": "6bc3c790-2f70-4df8-a16f-aca615761d21",
    "2453": "8b24de8f-3555-4443-b4a6-bcee28877457",
    "2454": "2a684c71-ad95-4955-9848-761bc10d2dcd",
    "2455": "c557a10c-3b92-4185-a1e4-4d70cd53adb2",
    "2456": "f093e8bc-bba9-40c9-bf85-2b5a05620c46",
    "2457": "41f3d8b2-2a52-40cb-8fac-6612d175e27e",
    "2458": "3d5eb66c-99f2-4f83-b34d-53b96238332b",
    "2459": "be0c2b04-bdae-4082-a726-079685141598",
    "2460": "7706027a-7a06-4820-9e79-da223df985c1",
    "2461": "d308f61d-482c-4476-9bb9-48697d968ec3",
    "2462": "b3726538-75c0-4906-a86a-06bb1081c910",
    "2463": "8c1eb4fb-8b7e-4e9f-b7fc-f268ecc56000",
    "2464": "f344b067-95ae-4a1a-9b34-57dced6457ec",
    "2465": "e4111d0f-f8ef-4c3b-82c8-c6fb1f376a07",
    "2466": "61c53828-460d-4c89-9567-35db73c122a0",
    "2467": "a0b053be-c1be-4fc1-aaa7-2248a253a704",
    "2468": "9f3533a4-dbc2-41a3-9a8d-e33d396ef588",
    "2469": "e8fceb09-e36f-4880-8ed7-110cb253fa32",
    "2470": "199b6d5b-fe40-414b-8561-f417435ef66a",
    "2471": "d83d9040-dd36-48c7-a87b-0776b83ed889",
    "2472": "8dabe0df-8aaf-4033-9fd9-5e0396f03206",
    "2473": "9793211b-7b4e-4567-92fa-c484d73f99c9",
    "2474": "f24905a1-b9d0-4104-81c1-4fb7aec7faff",
    "2475": "1c08d3b6-21d4-4d10-b446-0998a0231499",
    "2476": "fa2dc0e4-01ec-44db-8345-4554988f531b",
    "2477": "b369d601-5ebd-43b1-abea-90fc1d29d868",
    "2478": "8a7c1f5a-1ae0-484d-9677-e73f3823285c",
    "2479": "11883c1a-fad6-40db-bbaf-b0487fb19e59",
    "2480": "edfefb47-9462-49a4-b17b-f3d242c8fa13",
    "2481": "e26d1dda-231b-46f1-af46-6c4ae6cafbb6",
    "2482": "a7bb7cf0-b162-4c3f-8cf6-e20de9ff6d55",
    "2483": "6bf20f63-2e44-4aba-9b8e-377100982595",
    "2484": "937f1d56-d597-4fe4-8bbd-fd31d689ea0d",
    "2485": "f5578101-373c-4a5a-90fd-c1eb0947a21d",
    "2486": "e1244327-42ad-4e9c-bc5f-652efcf6d3af",
    "2487": "318a8e4f-41c1-4b99-9ad0-dad71e22d5a7",
    "2488": "ec0b6797-bc5a-4fbd-b24a-b43df2f56b58",
    "2489": "28895c1b-c0c0-42c6-a45b-de0408571196",
    "2490": "53b425cb-e333-48e1-b8c3-cabdf40f1e00",
    "2491": "4b248bd0-d511-4d55-9e39-b07208282202",
    "2492": "5fef4132-6322-4758-8179-529f744587be",
    "2493": "9aeb125e-5dba-4ad0-a6ec-228c12a2c867",
    "2494": "1fa17701-daef-4465-9783-5df2cadfb19f",
    "2495": "6ae49ff6-92d8-4f7e-bee5-ec2a4350d753",
    "2496": "bc52d192-1498-4912-8d07-8e3ccc1e0c8a",
    "2497": "8f9d68ba-8142-42ce-8ea7-72b80c0328df",
    "2498": "5e385a04-9eb1-4dc7-b0c0-beba038bd92d",
    "2499": "2a1bc63a-cb4a-4c14-b1c6-1579c674fcb8",
    "2500": "c3bc68d1-79e8-4764-8ea1-1198acd2bdb5",
    "2501": "8f5fdefb-70ab-4333-9290-cf7bd7047713",
    "2502": "b2cc1fd0-6963-4573-b9a3-d9f0fb846511",
    "2503": "37abfeef-eb45-4549-a4d4-510e57a2049f",
    "2504": "cec495d7-58da-4aaa-bfbd-e3f84543e581",
    "2505": "f736c717-1658-4a03-abad-1d83a9d11e72",
    "2506": "984cac5a-791c-4430-945a-17b835d4859b",
    "2507": "970f9623-4ab2-403b-9584-b11a8913173f",
    "2508": "f6e0bed3-b6fb-426b-998a-2f4316cb717e",
    "2509": "e38ba657-6f84-48d9-92bd-0c7aa0efc5f5",
    "2510": "b5e54e60-b279-465e-9e1f-1aae99258b3e",
    "2511": "5fd6ba71-8026-4ee1-b06d-0117339be670",
    "2512": "cb871786-67d0-48dd-a9d3-0c2ca51bd3ba",
    "2513": "6cd7d4a3-9d87-4e74-b6e0-4626e760a330",
    "2514": "4fc1f35a-356b-44f9-a6e8-790863295f41",
    "2515": "0fad9170-8082-4897-93b8-6df603bba20b",
    "2516": "8beadf65-0b9b-42f8-9ddd-e5267f42daf7",
    "2517": "a408b867-d2a0-4e07-b993-bb6b1fb9500c",
    "2518": "a40fd39e-4d4f-42ab-bdcd-a32fbb41dd11",
    "2519": "87f14d23-9762-40d5-9b10-66bf93b6b53e",
    "2520": "d76042f0-de2a-4fce-85c1-04bfc6b23fe5",
    "2521": "10b42d48-6e1e-49b6-b407-6f3f96c9140d",
    "2522": "3ac75f8e-7cfd-47ad-a577-122eb104abc5",
    "2523": "f0c09792-8275-45f6-ba70-ce45cbb5be0b",
    "2524": "1401af43-5b41-40c9-b5ab-1d6f1bd74047",
    "2525": "3a0956d6-e78d-43eb-811d-8d72dda48634",
    "2526": "0d85002d-2a37-4e7a-b73f-78a3b043917b",
    "2527": "dc8eb7de-7266-4868-aac8-ff5f74fe56a0",
    "2528": "664a5370-c8f8-4ca6-9baf-e0be1470bdc3",
    "2529": "0db11e80-d4bf-4ad5-afc1-83eaf3cbc924",
    "2530": "082fd5fd-029b-4b65-a6bb-f1b1b5a05ae2",
    "2531": "e43ccff8-ea63-44d6-9946-a041a7ab471c",
    "2532": "5373a728-da3f-48a3-8f3a-ab8cf099051a",
    "2533": "7ab7d777-ba08-4561-a383-829db5bc3bcc",
    "2534": "d12b830c-6f9f-4ab3-a37f-12e7643bdca6",
    "2535": "f87dbae9-bb38-43e3-b05e-7e90fe29ec3c",
    "2536": "ef960302-bd50-479c-bf06-a8ff74b1e989",
    "2537": "132a919d-73df-44b4-82f2-565ecc67adba",
    "2538": "238a3703-7213-47bc-86cd-f928a61999e6",
    "2539": "37298106-0329-4a11-91f7-a12648b84c07",
    "2540": "4f4d4476-b21a-45e6-8094-cbd965af1568",
    "2541": "fe9537c2-c6cd-4ea3-bea8-c573919d095d",
    "2542": "4caf7873-3e12-4ef2-a62b-e653d510c947",
    "2543": "d3369760-f92c-45ef-bee2-bfd1fbf6092b",
    "2544": "329b45ab-75b9-4dcd-a3d2-bd66cad9dbbb",
    "2545": "e485c7b6-a2ad-4338-930d-a8efe838338d",
    "2546": "51237f42-e6d0-4fbc-a437-8ebe9689686e",
    "2547": "73d11726-1afc-43c8-88e1-5bcd9f7c53f7",
    "2548": "231f258c-693d-43a1-862c-1f627299ac22",
    "2549": "ae3d4f55-e6f2-425c-9c1b-1cad3ba1c3d6",
    "2550": "0ae09438-cd3c-42b0-bfc6-c49d873cb50f",
    "2551": "6e31eecd-2621-47ba-8b9e-3aedb91ae95c",
    "2552": "29570413-811a-4b55-a282-e4eff24bf468",
    "2553": "b17b6b03-e22b-489f-91be-1cd4d134810d",
    "2554": "cb30d258-a559-4a03-86a3-b8cdf8abeb3d",
    "2555": "bac91d46-97ac-4c38-bd6c-773b28ee9010",
    "2556": "074c5cef-bc14-4576-bac2-5a54be893d70",
    "2557": "0e89fa18-32cb-40b4-bb15-3ee501f59c5b",
    "2558": "089c5490-2044-4624-8d41-9c47c1ffc3f6",
    "2559": "5952bff9-3571-4ea5-84d1-12a9ca3f43fb",
    "2560": "58ec4171-3a0c-4a11-a86d-2dfa3e332704",
    "2561": "96407179-4cb9-4faa-a3d7-1d9a17268777",
    "2562": "c5b18fa6-7d50-487d-a3a2-857aa276036a",
    "2563": "c1384ae1-9cbd-46d6-920d-e3a8281392b1",
    "2564": "3d18f5d1-a198-41dc-83ad-8b427270a205",
    "2565": "a2ca4c97-d248-4227-82d0-8441f5d9a835",
    "2566": "74ceb3b3-8c5f-4c81-8d3c-6ca241c0910d",
    "2567": "7718a295-8063-4cb4-aef0-92e463ebb663",
    "2568": "71f69cf3-0f7c-426b-8910-0e95c07426f8",
    "2569": "f1e7ab0a-8345-4c91-8673-954c978f25ac",
    "2570": "fdb4d3c1-67d3-4310-8aa0-4807c0210545",
    "2571": "5cd19d66-9a55-4f20-a0f2-e9e553ca2d6e",
    "2572": "ebdb11c5-4aed-4034-9fa3-47c725426d49",
    "2573": "126b1e69-04fe-4215-ba2c-4d32d6a94d49",
    "2574": "9ef15336-3273-41d8-938b-bd8a43c73536",
    "2575": "6b4e2120-5006-46f5-9324-b529098f6b06",
    "2576": "d03e3852-c474-411e-ab9b-dbc9b672df3a",
    "2577": "4d9e15f0-cf60-4f83-8c86-06c3aa0c861e",
    "2578": "57857c47-2522-496e-9cb9-6b5920c165bf",
    "2579": "9bcfd6d5-d3f8-46eb-a5b2-e96565319ddb",
    "2580": "151c4dc8-0d38-4362-874a-b2a2ba92b4bb",
    "2581": "009fcf98-3898-4cab-bcc7-1cc46dffee06",
    "2582": "f33001db-3702-4a75-a566-90bfd87f0ac9",
    "2583": "c088741d-e376-4a83-827a-0f81b3ffb1e7",
    "2584": "d89edab3-363f-45fe-840b-9d5f6cb86831",
    "2585": "ab6211d1-a74d-43eb-aa54-47bb72cc64a0",
    "2586": "7d8b5ccb-b522-48c1-9848-17ae511110b1",
    "2587": "10665c2b-a465-4721-9f6a-e4e559c74937",
    "2588": "720fea32-83ce-44bb-9a52-f0841620fe72",
    "2589": "82104aa1-1f2d-4b69-9c34-e4cf8ee5f58d",
    "2590": "63e57fdb-4b85-44e0-aed3-47c9786c19ad",
    "2591": "ff0e5665-6bb2-47ae-ba70-1b4db6a3d0ed",
    "2592": "4aa64db7-80e5-47c7-a78d-f98f4213f13a",
    "2593": "67141726-da6f-4d55-b00d-69bf008618a0",
    "2594": "2f88a8e5-9542-43c4-b818-1917a4f164df",
    "2595": "235b9e73-6893-4963-9aee-86cd50a0b7a3",
    "2596": "aeac1bbd-6d81-4a98-bc4f-b5183efe8f38",
    "2597": "94f19458-2a67-48bf-8cb1-31d4f268c25c",
    "2598": "a0a488be-ff5a-48e8-9b70-70a75a3554d8",
    "2599": "9278d287-6648-471b-89be-df3af17df8e4",
    "2600": "f2473a23-7f3d-4baa-8c14-e46860a6b0ff",
    "2601": "d95698eb-8f26-46c9-9e23-9ecd5513d282",
    "2602": "c2515ef7-440e-4fe3-9b67-c40137239cd7",
    "2603": "bbb89487-0098-44ba-88f2-c22f28c140f5",
    "2604": "a057c02a-c93c-44e2-8e93-5e571eaf33ad",
    "2605": "98b678de-ca50-4c92-b014-5ec4ba48ca70",
    "2606": "ee8ff539-464c-41c5-9db0-0ba72a40bd28",
    "2607": "9c07d945-c4db-4599-be31-625000b63bfb",
    "2608": "1047c070-5e0d-48de-b7e2-f5faae5ef333",
    "2609": "cc6a5e06-9bff-4096-96be-7a96840bd8ad",
    "2610": "5824699c-5251-4378-8147-8c8728a506e3",
    "2611": "0f1e0078-471f-477e-8619-f5da79c1a97b",
    "2612": "52761eca-7f4f-4f4e-b673-b6a6b14fc0c8",
    "2613": "e075d4f1-b8d0-432a-9a31-065cb051cede",
    "2614": "9fa60d5f-cb87-48d3-9315-eeb46fff1c8a",
    "2615": "d716ffc7-ad37-4b22-b3a7-37b0f4d1810d",
    "2616": "0b507a7c-c48a-41f3-b4da-4eb93624c73c",
    "2617": "11f2b5b5-d0f9-4604-85dd-ba28185b3c52",
    "2618": "cecf53b7-5f65-4593-9b29-c23569de97e2",
    "2619": "0ca155ca-1917-4654-aa36-ba3320f825f4",
    "2620": "db497b38-7dfe-475b-bb31-2aba1662e3de",
    "2621": "0f527569-37c4-4844-a477-70ae08e38650",
    "2622": "1f1c4332-3590-44b5-9a8f-542fdd111032",
    "2623": "a478339b-71b0-45d3-a575-a4dd319154d2",
    "2624": "43f00ad1-5e73-47e0-9a93-04383143f0c2",
    "2625": "c8a8a1d5-a652-4763-a66e-06fc4339c6cb",
    "2626": "f8a0b0f7-8d18-4b54-a378-0c741beb34db",
    "2627": "98b7563e-fa7a-4a90-9b5c-b8aef0738036",
    "2628": "f7bf882f-a0dc-4aaa-ac33-59d8f024dcf2",
    "2629": "32abf5a5-e79d-417e-8376-8a5781dc0915",
    "2630": "2d421b3b-ad80-4273-af72-ac9788dd204f",
    "2631": "65d755bb-bc1b-4e42-807f-a1ce27281cc7",
    "2632": "656d3704-1a7b-4137-a985-a9e22b5b66c4",
    "2633": "a852df4f-b191-4a0f-a20d-3a7866684c48",
    "2634": "1ac4a3b4-5350-4de9-8f13-29bc8c4f6e97",
    "2635": "a8e0d4ee-3870-41e9-98d7-3afc8bb17cde",
    "2636": "44f232c4-0362-4376-afef-28aecb22060e",
    "2637": "426154c0-9ddc-46e9-a095-ce2b54a4c0fa",
    "2638": "eba46933-1634-44a7-a30f-2b2713249030",
    "2639": "47adf7bc-0bdb-4e49-82e2-fa7eefcac769",
    "2640": "8cc10c7d-0ae5-4351-ab51-494b49a35477",
    "2641": "fa5bcfec-d7cd-4931-93aa-7bb340569de0",
    "2642": "46408e05-4832-49ff-b589-3fc29af1de50",
    "2643": "f1f3f8e9-c910-4a66-99aa-7f5295deaf21",
    "2644": "0027c008-1926-4e93-babf-683e7bfa9ee6",
    "2645": "99fdcfec-9338-4cc7-a9f6-11b9b95046d6",
    "2646": "73699aa2-c64c-4eea-baeb-b7381b23e6a3",
    "2647": "8ad5307d-312f-4f73-92ba-1e6659ead6d6",
    "2648": "bbb07efb-37c1-4535-a254-195b7eb91b79",
    "2649": "33f8f3c2-9670-47ad-8045-77c46c43108b",
    "2650": "8db42b44-8377-41ed-8392-39c26fdba872",
    "2651": "5b4ca305-7ffe-4468-ae0e-2be21d3e576c",
    "2652": "31af3153-1058-4402-b991-4c68db3d8301",
    "2653": "f913866e-6b5a-46a4-b3c3-eaff06d7f388",
    "2654": "3a7b5e00-9638-4dca-8ce1-984ee2b07175",
    "2655": "6878cf36-0b77-452e-b90f-52fdad48d6ae",
    "2656": "b3cc9fa8-e489-49c2-8d61-192050e18f57",
    "2657": "eaa83507-8877-4d78-808d-41a7c57a6ee7",
    "2658": "8d4e1efc-6e4a-4537-bb64-94bf276d4877",
    "2659": "13e5ec4f-78be-40a7-b3fa-0fe2e433c4fa",
    "2660": "ddb07f4b-572e-4494-a73f-79ebefbe9363",
    "2661": "5021fb19-dbcb-49fa-9826-db22cefb4664",
    "2662": "fb00beeb-7ab0-4fa8-857c-4700a4cc6eab",
    "2663": "39ae2b5c-c772-4604-89f9-4e3879689d9b",
    "2664": "2899b7be-cf55-41b2-b351-23b5b85f35fc",
    "2665": "feb07422-ce13-4b88-a076-45abd18474dd",
    "2666": "47acd2dd-de3a-431e-894c-32e95ebe2f18",
    "2667": "3f98bc67-3bb3-45f2-8e3f-ce4e6282beac",
    "2668": "3b0e1b12-fd1f-44b4-8e6c-e8d8afa31782",
    "2669": "7ef425ff-0186-4c27-8a14-cff257f22c27",
    "2670": "a85c11ff-6435-483d-aba1-0c9447b4c460",
    "2671": "ead9f2df-c1e9-4880-930a-9a3e383bc878",
    "2672": "9d313070-943d-4f6b-a76a-3b24cc1454cd",
    "2673": "6edbab95-d8da-44fa-b507-5d51e65df5b4",
    "2674": "c99e6922-91b8-49cd-97a8-60e45f268d55",
    "2675": "e208ed03-447c-4bd5-a541-a903a2a0ce3b",
    "2676": "4a8a803c-abf5-4ee6-869b-14df2be19e88",
    "2677": "41296b09-ed4c-4d08-8473-92fafe57d5b6",
    "2678": "26daa3d2-8b45-4fff-a53f-b16352c05665",
    "2679": "0a49c3e8-9012-49dd-a2ac-37483a1f0915",
    "2680": "9c5402f9-fa40-49df-a477-7af38b89c785",
    "2681": "58c7a503-1cf6-40cd-a7ee-d69dead8ed85",
    "2682": "172a372b-fc01-4636-9a54-7f9a87c3b85d",
    "2683": "8951d474-2c94-46e7-883b-32c0e1f75df2",
    "2684": "355eeae9-3820-4680-b273-0512ab06bf6f",
    "2685": "c547961a-8169-47c9-8a67-41e07e24c279",
    "2686": "f3fb2618-93c9-435b-b902-9e35325139f9",
    "2687": "b5f98180-5126-4db6-acb7-97aa05406f34",
    "2688": "88c6c84a-0883-4121-8a51-0126269e9023",
    "2689": "d60ada0e-1383-4d6d-8611-8f8d25c0a6d9",
    "2690": "15b1e85b-210f-4ec0-8544-b929aa5ee676",
    "2691": "1d4f981e-74e0-496b-a3a3-2390b43ed1c4",
    "2692": "f27b29af-82fd-44de-84c1-4c487ce6d9ae",
    "2693": "748df699-ca60-4728-89c0-ccbe77788615",
    "2694": "dfbe80a6-92e2-4f8b-a5a8-a02aafd01092",
    "2695": "a7b1ae05-0557-4e1e-83a8-623631ec2aea",
    "2696": "4ec80071-0c2f-48cb-9e0d-f93628a1db48",
    "2697": "8776fab1-ba99-4ca1-a143-0f98dd36ac0e",
    "2698": "9e626618-9766-4d64-af80-092ebbf6d6d2",
    "2699": "68ae2438-013e-4937-9413-9d733ef98767",
    "2700": "2d3ed963-013a-481a-a435-972359542b1b",
    "2701": "6f5d4ae0-3612-486d-a9e0-51e12a4fe206",
    "2702": "ff4d867b-3a8e-4779-9124-7a6d89931dfd",
    "2703": "e6cf7166-a95a-45e0-bd04-0bd3fe546411",
    "2704": "18eeb3f3-448b-4c5d-a260-0cf99132d315",
    "2705": "4889e076-2360-4f31-8a3f-1c4ec5adc88f",
    "2706": "1d30a2b2-1f95-47a4-bccd-aca3f2320252",
    "2707": "16ad513e-b7d9-4205-bcbb-de10a9bba3a3",
    "2708": "639adbf0-6255-46ab-8861-23b680aed88c",
    "2709": "94deadc3-5b26-4571-8055-52957df937c0",
    "2710": "6ad656b3-6e95-4020-8024-78aabc28c591",
    "2711": "6eccd76d-d367-465f-aafd-f9648b96edb8",
    "2712": "0945f0e9-4906-44b8-b4a1-ceea5e4f9989",
    "2713": "8fb5f580-b661-4ffd-943a-b5114b8b149c",
    "2714": "d019d311-27bf-4f73-bf28-48c3186af955",
    "2715": "24f58320-6267-4889-8c84-04b3f89a4480",
    "2716": "a0482411-ce24-4b6e-9ee5-994445feceeb",
    "2717": "be3f2ebc-9437-4b39-bd30-57b1066ee810",
    "2718": "a3b2dd5b-3bb6-40b0-95c8-8e97b13c1cc1",
    "2719": "ff2bd03a-c155-4354-8b58-749e64cbcb41",
    "2720": "10176615-5376-4a75-89ca-c2dbf417ad23",
    "2721": "3bd8e8f4-c3cf-4ac3-b65f-cdf0db05a352",
    "2722": "3fa7fdca-ecd1-4576-8e74-c2472d421003",
    "2723": "63155ed0-c937-4da0-bdbd-6955debe6bbb",
    "2724": "5dc8cceb-77b8-4fc5-a8c4-2eaa8a97908e",
    "2725": "ce89ed3c-c6f8-443b-af12-94dc98d79ddb",
    "2726": "965c4fbf-a246-4ea1-9233-433e34ff789b",
    "2727": "c09b379a-8347-43ca-aaa9-f6c069e1408e",
    "2728": "2d2497af-6cc5-4ab8-ada3-313bd1b3fcd4",
    "2729": "2ac71e19-1f4f-4ded-9a79-bb314133ec1c",
    "2730": "d0d26651-be32-42f8-a96d-d0cf7727ebc7",
    "2731": "3d34bfce-48e3-4b82-bad0-8ebbd5780c82",
    "2732": "eb9ffe43-a30d-4479-b98c-11845548c79e",
    "2733": "cf123a2c-31dc-4019-a15b-6f003d3ef95e",
    "2734": "d55ff4b5-22ad-4d91-9a8f-4866ecc7d7f3",
    "2735": "c6db2f2d-3422-4d95-b4c0-d42517a265ff",
    "2736": "3f784cf8-41df-4e21-8fd0-f4dc85c7ce4d",
    "2737": "d2c73981-aefd-463a-957c-f377d561143c",
    "2738": "5c517368-1e2d-44e3-9d1d-f3f447c9d2e6",
    "2739": "dc14abb3-e3ba-4acd-afb5-1d1302d3328b",
    "2740": "e4aa923d-fb40-43f5-9abd-d710f6c58495",
    "2741": "41f69cc6-1824-4383-9461-8b4ebffd3184",
    "2742": "83972473-45ac-4518-91ed-f7b7de20026d",
    "2743": "cb578db4-b417-4e73-9c99-a554c75b3c73",
    "2744": "b9e1561f-fe56-4cc5-9657-fe163a90200e",
    "2745": "e994ac27-e939-472e-ac66-fe572882dffe",
    "2746": "acb50d67-cb56-4901-9071-ed9a78b4c805",
    "2747": "eb0958e6-7ec9-48fc-81bb-38c0d6315a2c",
    "2748": "2cded2f1-9630-4dc5-84e0-36da20ee880c",
    "2749": "89abc8fd-ac7b-45f1-8f0c-c147ce4e3662",
    "2750": "707893df-a314-41ba-8ea4-decf84f3a4ec",
    "2751": "8b2f36a6-046c-4a1e-a995-4a5aace800a0",
    "2752": "b49891b4-b3aa-48ad-8600-38f4519eb6ac",
    "2753": "a350cbbf-6a17-4e1c-8598-e89aeaf41b0d",
    "2754": "7da0d25b-4adb-4c6e-93b2-26312d228ef5",
    "2755": "c1b2dc84-8702-44ac-9470-34a88b9fcebf",
    "2756": "6d4089af-4cc1-4b7e-b093-4ad39371f4ed",
    "2757": "2e710167-f49a-42f3-99a5-6c1131ed5660",
    "2758": "bd1dcbde-3b27-4a74-a1ab-3c49ffbfa07f",
    "2759": "2b81d031-d19c-45ee-bd69-cf56d10a75a5",
    "2760": "c227581f-4743-4f54-aa88-aae8176adbbb",
    "2761": "69344ff4-ffc8-4020-9530-9ba991d43310",
    "2762": "acf785f4-8c03-4812-87a8-362233b21054",
    "2763": "ab3f84f5-7932-47ad-b927-f07bb1c27fef",
    "2764": "53b63f70-cc99-4972-b94e-6c0cbb293929",
    "2765": "86946193-af65-4e2a-b816-8908e4bc07ba",
    "2766": "8d94c216-55f0-47e8-b6c2-fd065dfb8d9f",
    "2767": "69c3d585-31f9-4e7f-92c9-603f325173ce",
    "2768": "05fcc02b-e5df-4fa1-a801-8c8bd6c2034c",
    "2769": "cda2d1a0-70f1-41b7-8d29-206854ae3ff1",
    "2770": "8a166f36-95b1-4689-ad26-0221a7fc5f95"
  }
]
